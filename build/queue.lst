ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"queue.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvIsQueueFull,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	prvIsQueueFull:
  25              	.LFB28:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    Help yourself get started quickly while simultaneously helping     *
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** header files above, but not in this file, in order to generate the correct
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** privileged Vs unprivileged linkage and placement. */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** alternative implementation would be to use a union, but use of a union is
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** against the coding standard (although an exception to the standard has been
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** permitted where the dual use also significantly changes the type of the
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure member). */
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define pxMutexHolder					pcTail
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static void prvUnlockQueue( Queue_t * const pxQueue );
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue );
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static BaseType_t prvIsQueueFull( const Queue_t *pxQueue );
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvIt
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffe
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_FUNCTION static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, c
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBase
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_FUNCTION static void prvInitialiseMutex( Queue_t *pxNewQueue );
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xTicksToWait, pdFALSE );
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible	that interrupts occurring now
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event	list again - but as the
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWa
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position in case the queue is only being
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				peeked. */
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xJustPeeking == pdFALSE )
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Actually removing data, not just peeking. */
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Record the information required to implement
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							priority inheritance should it become necessary. */
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is 
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK( pxQueue );
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The data is not being removed, so reset the read
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pointer. */
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The data is being left in the queue, so see if there are
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					any other tasks waiting for the data. */
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority than this task. */
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t *pxQueue;
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 31


1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 32


1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 33


1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 34


1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 35


1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  27              		.loc 1 1954 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 0446     		mov	r4, r0
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  38              		.loc 1 1957 0
  39 0004 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 36


  40              	.LVL1:
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  41              		.loc 1 1959 0
  42 0008 A26B     		ldr	r2, [r4, #56]
  43 000a E36B     		ldr	r3, [r4, #60]
  44 000c 9A42     		cmp	r2, r3
  45 000e 04D0     		beq	.L5
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  46              		.loc 1 1965 0
  47 0010 0024     		movs	r4, #0
  48              	.LVL2:
  49              	.L2:
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  50              		.loc 1 1968 0
  51 0012 FFF7FEFF 		bl	vPortExitCritical
  52              	.LVL3:
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  53              		.loc 1 1971 0
  54 0016 2046     		mov	r0, r4
  55 0018 10BD     		pop	{r4, pc}
  56              	.LVL4:
  57              	.L5:
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  58              		.loc 1 1961 0
  59 001a 0124     		movs	r4, #1
  60              	.LVL5:
  61 001c F9E7     		b	.L2
  62              		.cfi_endproc
  63              	.LFE28:
  65              		.section	.text.prvIsQueueEmpty,"ax",%progbits
  66              		.align	1
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv5-sp-d16
  72              	prvIsQueueEmpty:
  73              	.LFB26:
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
  74              		.loc 1 1915 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL6:
  79 0000 10B5     		push	{r4, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 4, -8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 37


  83              		.cfi_offset 14, -4
  84 0002 0446     		mov	r4, r0
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  85              		.loc 1 1918 0
  86 0004 FFF7FEFF 		bl	vPortEnterCritical
  87              	.LVL7:
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
  88              		.loc 1 1920 0
  89 0008 A36B     		ldr	r3, [r4, #56]
  90 000a 23B1     		cbz	r3, .L10
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  91              		.loc 1 1926 0
  92 000c 0024     		movs	r4, #0
  93              	.LVL8:
  94              	.L7:
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  95              		.loc 1 1929 0
  96 000e FFF7FEFF 		bl	vPortExitCritical
  97              	.LVL9:
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
  98              		.loc 1 1932 0
  99 0012 2046     		mov	r0, r4
 100 0014 10BD     		pop	{r4, pc}
 101              	.LVL10:
 102              	.L10:
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 103              		.loc 1 1922 0
 104 0016 0124     		movs	r4, #1
 105              	.LVL11:
 106 0018 F9E7     		b	.L7
 107              		.cfi_endproc
 108              	.LFE26:
 110              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 111              		.align	1
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu fpv5-sp-d16
 117              	prvCopyDataToQueue:
 118              	.LFB23:
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 119              		.loc 1 1698 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              	.LVL12:
 124 0000 70B5     		push	{r4, r5, r6, lr}
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 16
 127              		.cfi_offset 4, -16
 128              		.cfi_offset 5, -12
 129              		.cfi_offset 6, -8
 130              		.cfi_offset 14, -4
 131 0002 0446     		mov	r4, r0
 132 0004 1646     		mov	r6, r2
 133              	.LVL13:
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 38


 134              		.loc 1 1704 0
 135 0006 856B     		ldr	r5, [r0, #56]
 136              	.LVL14:
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 137              		.loc 1 1706 0
 138 0008 026C     		ldr	r2, [r0, #64]
 139              	.LVL15:
 140 000a 4AB9     		cbnz	r2, .L12
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 141              		.loc 1 1710 0
 142 000c 0368     		ldr	r3, [r0]
 143 000e 53BB     		cbnz	r3, .L16
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 144              		.loc 1 1713 0
 145 0010 4068     		ldr	r0, [r0, #4]
 146              	.LVL16:
 147 0012 FFF7FEFF 		bl	xTaskPriorityDisinherit
 148              	.LVL17:
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 149              		.loc 1 1714 0
 150 0016 0023     		movs	r3, #0
 151 0018 6360     		str	r3, [r4, #4]
 152              	.LVL18:
 153              	.L13:
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 154              		.loc 1 1770 0
 155 001a 0135     		adds	r5, r5, #1
 156              	.LVL19:
 157 001c A563     		str	r5, [r4, #56]
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 158              		.loc 1 1773 0
 159 001e 70BD     		pop	{r4, r5, r6, pc}
 160              	.LVL20:
 161              	.L12:
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 162              		.loc 1 1723 0
 163 0020 6EB9     		cbnz	r6, .L14
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 164              		.loc 1 1725 0
 165 0022 8068     		ldr	r0, [r0, #8]
 166              	.LVL21:
 167 0024 FFF7FEFF 		bl	memcpy
 168              	.LVL22:
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 169              		.loc 1 1726 0
 170 0028 226C     		ldr	r2, [r4, #64]
 171 002a A368     		ldr	r3, [r4, #8]
 172 002c 1344     		add	r3, r3, r2
 173 002e A360     		str	r3, [r4, #8]
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 174              		.loc 1 1727 0
 175 0030 6268     		ldr	r2, [r4, #4]
 176 0032 9342     		cmp	r3, r2
 177 0034 19D3     		bcc	.L17
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 178              		.loc 1 1729 0
 179 0036 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 39


 180 0038 A360     		str	r3, [r4, #8]
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 181              		.loc 1 1699 0
 182 003a 0020     		movs	r0, #0
 183 003c EDE7     		b	.L13
 184              	.LVL23:
 185              	.L14:
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 186              		.loc 1 1738 0
 187 003e C068     		ldr	r0, [r0, #12]
 188              	.LVL24:
 189 0040 FFF7FEFF 		bl	memcpy
 190              	.LVL25:
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 191              		.loc 1 1739 0
 192 0044 236C     		ldr	r3, [r4, #64]
 193 0046 5B42     		negs	r3, r3
 194 0048 E268     		ldr	r2, [r4, #12]
 195 004a 1A44     		add	r2, r2, r3
 196 004c E260     		str	r2, [r4, #12]
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 197              		.loc 1 1740 0
 198 004e 2168     		ldr	r1, [r4]
 199 0050 8A42     		cmp	r2, r1
 200 0052 02D2     		bcs	.L15
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 201              		.loc 1 1742 0
 202 0054 6268     		ldr	r2, [r4, #4]
 203 0056 1344     		add	r3, r3, r2
 204 0058 E360     		str	r3, [r4, #12]
 205              	.L15:
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 206              		.loc 1 1749 0
 207 005a 022E     		cmp	r6, #2
 208 005c 07D1     		bne	.L18
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 209              		.loc 1 1751 0
 210 005e 45B1     		cbz	r5, .L19
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 211              		.loc 1 1757 0
 212 0060 013D     		subs	r5, r5, #1
 213              	.LVL26:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 214              		.loc 1 1699 0
 215 0062 0020     		movs	r0, #0
 216 0064 D9E7     		b	.L13
 217              	.LVL27:
 218              	.L16:
 219 0066 0020     		movs	r0, #0
 220              	.LVL28:
 221 0068 D7E7     		b	.L13
 222              	.LVL29:
 223              	.L17:
 224 006a 0020     		movs	r0, #0
 225 006c D5E7     		b	.L13
 226              	.L18:
 227 006e 0020     		movs	r0, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 40


 228 0070 D3E7     		b	.L13
 229              	.L19:
 230 0072 0020     		movs	r0, #0
 231 0074 D1E7     		b	.L13
 232              		.cfi_endproc
 233              	.LFE23:
 235              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 236              		.align	1
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-sp-d16
 242              	prvCopyDataFromQueue:
 243              	.LFB24:
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 244              		.loc 1 1777 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              	.LVL30:
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 249              		.loc 1 1778 0
 250 0000 026C     		ldr	r2, [r0, #64]
 251 0002 72B1     		cbz	r2, .L25
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 252              		.loc 1 1777 0
 253 0004 10B5     		push	{r4, lr}
 254              	.LCFI3:
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 4, -8
 257              		.cfi_offset 14, -4
 258 0006 0346     		mov	r3, r0
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 259              		.loc 1 1780 0
 260 0008 C468     		ldr	r4, [r0, #12]
 261 000a 1444     		add	r4, r4, r2
 262 000c C460     		str	r4, [r0, #12]
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 263              		.loc 1 1781 0
 264 000e 4068     		ldr	r0, [r0, #4]
 265              	.LVL31:
 266 0010 8442     		cmp	r4, r0
 267 0012 01D3     		bcc	.L23
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 268              		.loc 1 1783 0
 269 0014 1868     		ldr	r0, [r3]
 270 0016 D860     		str	r0, [r3, #12]
 271              	.L23:
 272 0018 0846     		mov	r0, r1
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 273              		.loc 1 1789 0
 274 001a D968     		ldr	r1, [r3, #12]
 275              	.LVL32:
 276 001c FFF7FEFF 		bl	memcpy
 277              	.LVL33:
 278 0020 10BD     		pop	{r4, pc}
 279              	.LVL34:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 41


 280              	.L25:
 281              	.LCFI4:
 282              		.cfi_def_cfa_offset 0
 283              		.cfi_restore 4
 284              		.cfi_restore 14
 285 0022 7047     		bx	lr
 286              		.cfi_endproc
 287              	.LFE24:
 289              		.section	.text.prvUnlockQueue,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv5-sp-d16
 296              	prvUnlockQueue:
 297              	.LFB25:
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 298              		.loc 1 1795 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              	.LVL35:
 303 0000 38B5     		push	{r3, r4, r5, lr}
 304              	.LCFI5:
 305              		.cfi_def_cfa_offset 16
 306              		.cfi_offset 3, -16
 307              		.cfi_offset 4, -12
 308              		.cfi_offset 5, -8
 309              		.cfi_offset 14, -4
 310 0002 0546     		mov	r5, r0
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 311              		.loc 1 1802 0
 312 0004 FFF7FEFF 		bl	vPortEnterCritical
 313              	.LVL36:
 314              	.LBB84:
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 315              		.loc 1 1804 0
 316 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 317 000c 64B2     		sxtb	r4, r4
 318              	.LVL37:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 319              		.loc 1 1807 0
 320 000e 01E0     		b	.L29
 321              	.L31:
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 322              		.loc 1 1875 0
 323 0010 013C     		subs	r4, r4, #1
 324              	.LVL38:
 325 0012 64B2     		sxtb	r4, r4
 326              	.LVL39:
 327              	.L29:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 328              		.loc 1 1807 0
 329 0014 002C     		cmp	r4, #0
 330 0016 0ADD     		ble	.L30
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 331              		.loc 1 1855 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 42


 332 0018 6B6A     		ldr	r3, [r5, #36]
 333 001a 43B1     		cbz	r3, .L30
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 334              		.loc 1 1857 0
 335 001c 05F12400 		add	r0, r5, #36
 336 0020 FFF7FEFF 		bl	xTaskRemoveFromEventList
 337              	.LVL40:
 338 0024 0028     		cmp	r0, #0
 339 0026 F3D0     		beq	.L31
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 340              		.loc 1 1861 0
 341 0028 FFF7FEFF 		bl	vTaskMissedYield
 342              	.LVL41:
 343 002c F0E7     		b	.L31
 344              	.L30:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 345              		.loc 1 1878 0
 346 002e FF23     		movs	r3, #255
 347 0030 85F84530 		strb	r3, [r5, #69]
 348              	.LBE84:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 349              		.loc 1 1880 0
 350 0034 FFF7FEFF 		bl	vPortExitCritical
 351              	.LVL42:
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 352              		.loc 1 1883 0
 353 0038 FFF7FEFF 		bl	vPortEnterCritical
 354              	.LVL43:
 355              	.LBB85:
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 356              		.loc 1 1885 0
 357 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 358              	.LVL44:
 359 0040 64B2     		sxtb	r4, r4
 360              	.LVL45:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 361              		.loc 1 1887 0
 362 0042 01E0     		b	.L33
 363              	.L35:
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 364              		.loc 1 1900 0
 365 0044 013C     		subs	r4, r4, #1
 366              	.LVL46:
 367 0046 64B2     		sxtb	r4, r4
 368              	.LVL47:
 369              	.L33:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 370              		.loc 1 1887 0
 371 0048 002C     		cmp	r4, #0
 372 004a 0ADD     		ble	.L34
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 373              		.loc 1 1889 0
 374 004c 2B69     		ldr	r3, [r5, #16]
 375 004e 43B1     		cbz	r3, .L34
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 376              		.loc 1 1891 0
 377 0050 05F11000 		add	r0, r5, #16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 43


 378 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 379              	.LVL48:
 380 0058 0028     		cmp	r0, #0
 381 005a F3D0     		beq	.L35
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 382              		.loc 1 1893 0
 383 005c FFF7FEFF 		bl	vTaskMissedYield
 384              	.LVL49:
 385 0060 F0E7     		b	.L35
 386              	.L34:
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 387              		.loc 1 1908 0
 388 0062 FF23     		movs	r3, #255
 389 0064 85F84430 		strb	r3, [r5, #68]
 390              	.LBE85:
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 391              		.loc 1 1910 0
 392 0068 FFF7FEFF 		bl	vPortExitCritical
 393              	.LVL50:
 394 006c 38BD     		pop	{r3, r4, r5, pc}
 395              		.cfi_endproc
 396              	.LFE25:
 398              		.section	.text.xQueueGenericReset,"ax",%progbits
 399              		.align	1
 400              		.global	xQueueGenericReset
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 404              		.fpu fpv5-sp-d16
 406              	xQueueGenericReset:
 407              	.LFB5:
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 408              		.loc 1 280 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              	.LVL51:
 413 0000 38B5     		push	{r3, r4, r5, lr}
 414              	.LCFI6:
 415              		.cfi_def_cfa_offset 16
 416              		.cfi_offset 3, -16
 417              		.cfi_offset 4, -12
 418              		.cfi_offset 5, -8
 419              		.cfi_offset 14, -4
 420              	.LVL52:
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 421              		.loc 1 283 0
 422 0002 30B3     		cbz	r0, .L44
 423 0004 0446     		mov	r4, r0
 424 0006 0D46     		mov	r5, r1
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 425              		.loc 1 285 0
 426 0008 FFF7FEFF 		bl	vPortEnterCritical
 427              	.LVL53:
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 428              		.loc 1 287 0
 429 000c 2168     		ldr	r1, [r4]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 44


 430 000e E26B     		ldr	r2, [r4, #60]
 431 0010 236C     		ldr	r3, [r4, #64]
 432 0012 03FB0210 		mla	r0, r3, r2, r1
 433 0016 6060     		str	r0, [r4, #4]
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 434              		.loc 1 288 0
 435 0018 0020     		movs	r0, #0
 436 001a A063     		str	r0, [r4, #56]
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 437              		.loc 1 289 0
 438 001c A160     		str	r1, [r4, #8]
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 439              		.loc 1 290 0
 440 001e 013A     		subs	r2, r2, #1
 441 0020 02FB0313 		mla	r3, r2, r3, r1
 442 0024 E360     		str	r3, [r4, #12]
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 443              		.loc 1 291 0
 444 0026 FF23     		movs	r3, #255
 445 0028 84F84430 		strb	r3, [r4, #68]
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 446              		.loc 1 292 0
 447 002c 84F84530 		strb	r3, [r4, #69]
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 448              		.loc 1 294 0
 449 0030 D5B9     		cbnz	r5, .L41
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 450              		.loc 1 301 0
 451 0032 2369     		ldr	r3, [r4, #16]
 452 0034 03B3     		cbz	r3, .L42
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 453              		.loc 1 303 0
 454 0036 04F11000 		add	r0, r4, #16
 455 003a FFF7FEFF 		bl	xTaskRemoveFromEventList
 456              	.LVL54:
 457 003e D8B1     		cbz	r0, .L42
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 458              		.loc 1 305 0
 459 0040 4FF08052 		mov	r2, #268435456
 460 0044 0E4B     		ldr	r3, .L45
 461 0046 1A60     		str	r2, [r3]
 462              		.syntax unified
 463              	@ 305 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 464 0048 BFF34F8F 		dsb
 465              	@ 0 "" 2
 466              	@ 305 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 467 004c BFF36F8F 		isb
 468              	@ 0 "" 2
 469              		.thumb
 470              		.syntax unified
 471 0050 12E0     		b	.L42
 472              	.LVL55:
 473              	.L44:
 474              	.LBB86:
 475              	.LBB87:
 476              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 45


   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 46


  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef PORTMACRO_H
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define PORTMACRO_H
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef __cplusplus
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern "C" {
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Port specific definitions.
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * given hardware and compiler.
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * These settings should not be altered.
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *-----------------------------------------------------------
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Type definitions. */
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCHAR		char
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portFLOAT		float
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDOUBLE		double
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portLONG		long
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSHORT		short
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBASE_TYPE	long
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef long BaseType_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint16_t TickType_t;
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #else
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint32_t TickType_t;
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	not need to be guarded with a critical section. */
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specifics. */
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_GROWTH			( -1 )
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 47


 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Scheduler utilities. */
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD() 															\
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {																				\
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 																				\
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "isb" );													\
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Critical section management. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortEnterCritical( void );
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortExitCritical( void );
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** (which build with all the ports) will build. */
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Tickless idle/low power functionality. */
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specific optimisations. */
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Generic helper function. */
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 48


 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	uint8_t ucReturn;
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		return ucReturn;
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Check the configuration. */
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#endif
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef configASSERT
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* portNOP() is not required by this port. */
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNOP()
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portINLINE	__inline
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portFORCE_INLINE
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** BaseType_t xReturn;
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdFALSE;
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	else
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdTRUE;
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	return xReturn;
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 49


 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulNewBASEPRI;
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 477              		.loc 2 237 0
 478              		.syntax unified
 479              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 480 0052 4FF05003 			mov r3, #80												
 481 0056 72B6     		cpsid i													
 482 0058 83F31188 		msr basepri, r3											
 483 005c BFF36F8F 		isb														
 484 0060 BFF34F8F 		dsb														
 485 0064 62B6     		cpsie i													
 486              	
 487              	@ 0 "" 2
 488              	.LVL56:
 489              		.thumb
 490              		.syntax unified
 491              	.L40:
 492 0066 FEE7     		b	.L40
 493              	.LVL57:
 494              	.L41:
 495              	.LBE87:
 496              	.LBE86:
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 497              		.loc 1 320 0
 498 0068 04F11000 		add	r0, r4, #16
 499 006c FFF7FEFF 		bl	vListInitialise
 500              	.LVL58:
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 501              		.loc 1 321 0
 502 0070 04F12400 		add	r0, r4, #36
 503 0074 FFF7FEFF 		bl	vListInitialise
 504              	.LVL59:
 505              	.L42:
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 506              		.loc 1 324 0
 507 0078 FFF7FEFF 		bl	vPortExitCritical
 508              	.LVL60:
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 509              		.loc 1 329 0
 510 007c 0120     		movs	r0, #1
 511 007e 38BD     		pop	{r3, r4, r5, pc}
 512              	.LVL61:
 513              	.L46:
 514              		.align	2
 515              	.L45:
 516 0080 04ED00E0 		.word	-536810236
 517              		.cfi_endproc
 518              	.LFE5:
 520              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 521              		.align	1
 522              		.syntax unified
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 50


 523              		.thumb
 524              		.thumb_func
 525              		.fpu fpv5-sp-d16
 527              	prvInitialiseNewQueue:
 528              	.LFB7:
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 529              		.loc 1 433 0
 530              		.cfi_startproc
 531              		@ args = 4, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              	.LVL62:
 534 0000 10B5     		push	{r4, lr}
 535              	.LCFI7:
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 4, -8
 538              		.cfi_offset 14, -4
 539 0002 029B     		ldr	r3, [sp, #8]
 540              	.LVL63:
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 541              		.loc 1 438 0
 542 0004 0C46     		mov	r4, r1
 543 0006 39B1     		cbz	r1, .L51
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 544              		.loc 1 449 0
 545 0008 1A60     		str	r2, [r3]
 546              	.L49:
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 547              		.loc 1 454 0
 548 000a D863     		str	r0, [r3, #60]
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 549              		.loc 1 455 0
 550 000c 1C64     		str	r4, [r3, #64]
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 551              		.loc 1 456 0
 552 000e 0121     		movs	r1, #1
 553              	.LVL64:
 554 0010 1846     		mov	r0, r3
 555              	.LVL65:
 556 0012 FFF7FEFF 		bl	xQueueGenericReset
 557              	.LVL66:
 558 0016 10BD     		pop	{r4, pc}
 559              	.LVL67:
 560              	.L51:
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 561              		.loc 1 444 0
 562 0018 1B60     		str	r3, [r3]
 563 001a F6E7     		b	.L49
 564              		.cfi_endproc
 565              	.LFE7:
 567              		.section	.text.xQueueGenericCreate,"ax",%progbits
 568              		.align	1
 569              		.global	xQueueGenericCreate
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu fpv5-sp-d16
 575              	xQueueGenericCreate:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 51


 576              	.LFB6:
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 577              		.loc 1 387 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              	.LVL68:
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 582              		.loc 1 392 0
 583 0000 50B9     		cbnz	r0, .L53
 584              	.LBB88:
 585              	.LBB89:
 586              		.loc 2 237 0
 587              		.syntax unified
 588              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 589 0002 4FF05003 			mov r3, #80												
 590 0006 72B6     		cpsid i													
 591 0008 83F31188 		msr basepri, r3											
 592 000c BFF36F8F 		isb														
 593 0010 BFF34F8F 		dsb														
 594 0014 62B6     		cpsie i													
 595              	
 596              	@ 0 "" 2
 597              	.LVL69:
 598              		.thumb
 599              		.syntax unified
 600              	.L54:
 601 0016 FEE7     		b	.L54
 602              	.L53:
 603              	.LBE89:
 604              	.LBE88:
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 605              		.loc 1 387 0
 606 0018 F0B5     		push	{r4, r5, r6, r7, lr}
 607              	.LCFI8:
 608              		.cfi_def_cfa_offset 20
 609              		.cfi_offset 4, -20
 610              		.cfi_offset 5, -16
 611              		.cfi_offset 6, -12
 612              		.cfi_offset 7, -8
 613              		.cfi_offset 14, -4
 614 001a 83B0     		sub	sp, sp, #12
 615              	.LCFI9:
 616              		.cfi_def_cfa_offset 32
 617 001c 0546     		mov	r5, r0
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 618              		.loc 1 394 0
 619 001e 11B1     		cbz	r1, .L57
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 620              		.loc 1 403 0
 621 0020 01FB00F0 		mul	r0, r1, r0
 622              	.LVL70:
 623 0024 00E0     		b	.L55
 624              	.LVL71:
 625              	.L57:
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 626              		.loc 1 397 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 52


 627 0026 0020     		movs	r0, #0
 628              	.LVL72:
 629              	.L55:
 630 0028 1746     		mov	r7, r2
 631 002a 0C46     		mov	r4, r1
 632              	.LVL73:
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 633              		.loc 1 406 0
 634 002c 4830     		adds	r0, r0, #72
 635              	.LVL74:
 636 002e FFF7FEFF 		bl	pvPortMalloc
 637              	.LVL75:
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 638              		.loc 1 408 0
 639 0032 0646     		mov	r6, r0
 640 0034 38B1     		cbz	r0, .L56
 641              	.LVL76:
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 642              		.loc 1 423 0
 643 0036 0090     		str	r0, [sp]
 644 0038 3B46     		mov	r3, r7
 645 003a 00F14802 		add	r2, r0, #72
 646              	.LVL77:
 647 003e 2146     		mov	r1, r4
 648 0040 2846     		mov	r0, r5
 649              	.LVL78:
 650 0042 FFF7FEFF 		bl	prvInitialiseNewQueue
 651              	.LVL79:
 652              	.L56:
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 653              		.loc 1 427 0
 654 0046 3046     		mov	r0, r6
 655 0048 03B0     		add	sp, sp, #12
 656              	.LCFI10:
 657              		.cfi_def_cfa_offset 20
 658              		@ sp needed
 659 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 660              		.cfi_endproc
 661              	.LFE6:
 663              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 664              		.align	1
 665              		.global	xQueueCreateCountingSemaphore
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 669              		.fpu fpv5-sp-d16
 671              	xQueueCreateCountingSemaphore:
 672              	.LFB12:
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 673              		.loc 1 698 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              	.LVL80:
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 678              		.loc 1 701 0
 679 0000 50B9     		cbnz	r0, .L61
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 53


 680              	.LBB90:
 681              	.LBB91:
 682              		.loc 2 237 0
 683              		.syntax unified
 684              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 685 0002 4FF05003 			mov r3, #80												
 686 0006 72B6     		cpsid i													
 687 0008 83F31188 		msr basepri, r3											
 688 000c BFF36F8F 		isb														
 689 0010 BFF34F8F 		dsb														
 690 0014 62B6     		cpsie i													
 691              	
 692              	@ 0 "" 2
 693              	.LVL81:
 694              		.thumb
 695              		.syntax unified
 696              	.L62:
 697 0016 FEE7     		b	.L62
 698              	.L61:
 699              	.LBE91:
 700              	.LBE90:
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 701              		.loc 1 702 0
 702 0018 8842     		cmp	r0, r1
 703 001a 0AD2     		bcs	.L63
 704              	.LBB92:
 705              	.LBB93:
 706              		.loc 2 237 0
 707              		.syntax unified
 708              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 709 001c 4FF05003 			mov r3, #80												
 710 0020 72B6     		cpsid i													
 711 0022 83F31188 		msr basepri, r3											
 712 0026 BFF36F8F 		isb														
 713 002a BFF34F8F 		dsb														
 714 002e 62B6     		cpsie i													
 715              	
 716              	@ 0 "" 2
 717              	.LVL82:
 718              		.thumb
 719              		.syntax unified
 720              	.L64:
 721 0030 FEE7     		b	.L64
 722              	.L63:
 723              	.LBE93:
 724              	.LBE92:
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 725              		.loc 1 698 0
 726 0032 10B5     		push	{r4, lr}
 727              	.LCFI11:
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 4, -8
 730              		.cfi_offset 14, -4
 731 0034 0C46     		mov	r4, r1
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 732              		.loc 1 704 0
 733 0036 0222     		movs	r2, #2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 54


 734 0038 0021     		movs	r1, #0
 735              	.LVL83:
 736 003a FFF7FEFF 		bl	xQueueGenericCreate
 737              	.LVL84:
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 738              		.loc 1 706 0
 739 003e 0346     		mov	r3, r0
 740 0040 00B1     		cbz	r0, .L60
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 741              		.loc 1 708 0
 742 0042 8463     		str	r4, [r0, #56]
 743              	.L60:
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 744              		.loc 1 718 0
 745 0044 1846     		mov	r0, r3
 746              	.LVL85:
 747 0046 10BD     		pop	{r4, pc}
 748              		.cfi_endproc
 749              	.LFE12:
 751              		.section	.text.xQueueGenericSend,"ax",%progbits
 752              		.align	1
 753              		.global	xQueueGenericSend
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 757              		.fpu fpv5-sp-d16
 759              	xQueueGenericSend:
 760              	.LFB13:
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 761              		.loc 1 724 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 16
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              	.LVL86:
 766 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 767              	.LCFI12:
 768              		.cfi_def_cfa_offset 20
 769              		.cfi_offset 4, -20
 770              		.cfi_offset 5, -16
 771              		.cfi_offset 6, -12
 772              		.cfi_offset 7, -8
 773              		.cfi_offset 14, -4
 774 0002 85B0     		sub	sp, sp, #20
 775              	.LCFI13:
 776              		.cfi_def_cfa_offset 40
 777 0004 0192     		str	r2, [sp, #4]
 778              	.LVL87:
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 779              		.loc 1 729 0
 780 0006 70B1     		cbz	r0, .L98
 781 0008 0446     		mov	r4, r0
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 782              		.loc 1 730 0
 783 000a B9B1     		cbz	r1, .L99
 784 000c 0125     		movs	r5, #1
 785              	.LVL88:
 786              	.L71:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 55


 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 787              		.loc 1 730 0 is_stmt 0 discriminator 6
 788 000e DDB9     		cbnz	r5, .L72
 789              	.LBB94:
 790              	.LBB95:
 791              		.loc 2 237 0 is_stmt 1
 792              		.syntax unified
 793              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 794 0010 4FF05003 			mov r3, #80												
 795 0014 72B6     		cpsid i													
 796 0016 83F31188 		msr basepri, r3											
 797 001a BFF36F8F 		isb														
 798 001e BFF34F8F 		dsb														
 799 0022 62B6     		cpsie i													
 800              	
 801              	@ 0 "" 2
 802              	.LVL89:
 803              		.thumb
 804              		.syntax unified
 805              	.L73:
 806 0024 FEE7     		b	.L73
 807              	.LVL90:
 808              	.L98:
 809              	.LBE95:
 810              	.LBE94:
 811              	.LBB96:
 812              	.LBB97:
 813              		.syntax unified
 814              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 815 0026 4FF05003 			mov r3, #80												
 816 002a 72B6     		cpsid i													
 817 002c 83F31188 		msr basepri, r3											
 818 0030 BFF36F8F 		isb														
 819 0034 BFF34F8F 		dsb														
 820 0038 62B6     		cpsie i													
 821              	
 822              	@ 0 "" 2
 823              	.LVL91:
 824              		.thumb
 825              		.syntax unified
 826              	.L70:
 827 003a FEE7     		b	.L70
 828              	.LVL92:
 829              	.L99:
 830              	.LBE97:
 831              	.LBE96:
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 832              		.loc 1 730 0 discriminator 2
 833 003c 026C     		ldr	r2, [r0, #64]
 834              	.LVL93:
 835 003e 0AB9     		cbnz	r2, .L93
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 836              		.loc 1 730 0 is_stmt 0
 837 0040 0125     		movs	r5, #1
 838 0042 E4E7     		b	.L71
 839              	.L93:
 840 0044 0025     		movs	r5, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 56


 841 0046 E2E7     		b	.L71
 842              	.L72:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 843              		.loc 1 731 0 is_stmt 1
 844 0048 022B     		cmp	r3, #2
 845 004a 0BD0     		beq	.L100
 846              	.L74:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 847              		.loc 1 731 0 is_stmt 0 discriminator 6
 848 004c 7DB9     		cbnz	r5, .L75
 849              	.LBB98:
 850              	.LBB99:
 851              		.loc 2 237 0 is_stmt 1
 852              		.syntax unified
 853              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 854 004e 4FF05003 			mov r3, #80												
 855 0052 72B6     		cpsid i													
 856 0054 83F31188 		msr basepri, r3											
 857 0058 BFF36F8F 		isb														
 858 005c BFF34F8F 		dsb														
 859 0060 62B6     		cpsie i													
 860              	
 861              	@ 0 "" 2
 862              	.LVL94:
 863              		.thumb
 864              		.syntax unified
 865              	.L76:
 866 0062 FEE7     		b	.L76
 867              	.LVL95:
 868              	.L100:
 869              	.LBE99:
 870              	.LBE98:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 871              		.loc 1 731 0 discriminator 2
 872 0064 E26B     		ldr	r2, [r4, #60]
 873 0066 012A     		cmp	r2, #1
 874 0068 F0D0     		beq	.L74
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 875              		.loc 1 731 0 is_stmt 0
 876 006a 0025     		movs	r5, #0
 877 006c EEE7     		b	.L74
 878              	.L75:
 879 006e 1E46     		mov	r6, r3
 880 0070 0F46     		mov	r7, r1
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 881              		.loc 1 734 0 is_stmt 1
 882 0072 FFF7FEFF 		bl	xTaskGetSchedulerState
 883              	.LVL96:
 884 0076 10B9     		cbnz	r0, .L77
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 885              		.loc 1 734 0 is_stmt 0 discriminator 2
 886 0078 019B     		ldr	r3, [sp, #4]
 887 007a 03B1     		cbz	r3, .L77
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 888              		.loc 1 734 0
 889 007c 0025     		movs	r5, #0
 890              	.L77:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 57


 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 891              		.loc 1 734 0 discriminator 6
 892 007e 55B9     		cbnz	r5, .L96
 893              	.LBB100:
 894              	.LBB101:
 895              		.loc 2 237 0 is_stmt 1
 896              		.syntax unified
 897              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 898 0080 4FF05003 			mov r3, #80												
 899 0084 72B6     		cpsid i													
 900 0086 83F31188 		msr basepri, r3											
 901 008a BFF36F8F 		isb														
 902 008e BFF34F8F 		dsb														
 903 0092 62B6     		cpsie i													
 904              	
 905              	@ 0 "" 2
 906              	.LVL97:
 907              		.thumb
 908              		.syntax unified
 909              	.L79:
 910 0094 FEE7     		b	.L79
 911              	.L96:
 912              	.LBE101:
 913              	.LBE100:
 914 0096 0025     		movs	r5, #0
 915 0098 2CE0     		b	.L78
 916              	.LVL98:
 917              	.L80:
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 918              		.loc 1 753 0
 919 009a 3246     		mov	r2, r6
 920 009c 3946     		mov	r1, r7
 921 009e 2046     		mov	r0, r4
 922 00a0 FFF7FEFF 		bl	prvCopyDataToQueue
 923              	.LVL99:
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 924              		.loc 1 808 0
 925 00a4 636A     		ldr	r3, [r4, #36]
 926 00a6 8BB1     		cbz	r3, .L82
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 927              		.loc 1 810 0
 928 00a8 04F12400 		add	r0, r4, #36
 929              	.LVL100:
 930 00ac FFF7FEFF 		bl	xTaskRemoveFromEventList
 931              	.LVL101:
 932 00b0 38B1     		cbz	r0, .L83
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 933              		.loc 1 816 0
 934 00b2 4FF08052 		mov	r2, #268435456
 935 00b6 374B     		ldr	r3, .L102
 936 00b8 1A60     		str	r2, [r3]
 937              		.syntax unified
 938              	@ 816 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 939 00ba BFF34F8F 		dsb
 940              	@ 0 "" 2
 941              	@ 816 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 942 00be BFF36F8F 		isb
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 58


 943              	@ 0 "" 2
 944              		.thumb
 945              		.syntax unified
 946              	.L83:
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 947              		.loc 1 838 0
 948 00c2 FFF7FEFF 		bl	vPortExitCritical
 949              	.LVL102:
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 950              		.loc 1 839 0
 951 00c6 0120     		movs	r0, #1
 952              	.L68:
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 953              		.loc 1 918 0
 954 00c8 05B0     		add	sp, sp, #20
 955              	.LCFI14:
 956              		.cfi_remember_state
 957              		.cfi_def_cfa_offset 20
 958              		@ sp needed
 959 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 960              	.LVL103:
 961              	.L82:
 962              	.LCFI15:
 963              		.cfi_restore_state
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 964              		.loc 1 823 0
 965 00cc 0028     		cmp	r0, #0
 966 00ce F8D0     		beq	.L83
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 967              		.loc 1 829 0
 968 00d0 4FF08052 		mov	r2, #268435456
 969 00d4 2F4B     		ldr	r3, .L102
 970 00d6 1A60     		str	r2, [r3]
 971              		.syntax unified
 972              	@ 829 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 973 00d8 BFF34F8F 		dsb
 974              	@ 0 "" 2
 975              	@ 829 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 976 00dc BFF36F8F 		isb
 977              	@ 0 "" 2
 978              		.thumb
 979              		.syntax unified
 980 00e0 EFE7     		b	.L83
 981              	.LVL104:
 982              	.L101:
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 983              		.loc 1 847 0
 984 00e2 FFF7FEFF 		bl	vPortExitCritical
 985              	.LVL105:
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 986              		.loc 1 852 0
 987 00e6 0020     		movs	r0, #0
 988 00e8 EEE7     		b	.L68
 989              	.L90:
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 990              		.loc 1 904 0
 991 00ea 2046     		mov	r0, r4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 59


 992 00ec FFF7FEFF 		bl	prvUnlockQueue
 993              	.LVL106:
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 994              		.loc 1 905 0
 995 00f0 FFF7FEFF 		bl	xTaskResumeAll
 996              	.LVL107:
 997              	.L78:
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 998              		.loc 1 744 0
 999 00f4 FFF7FEFF 		bl	vPortEnterCritical
 1000              	.LVL108:
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1001              		.loc 1 750 0
 1002 00f8 A26B     		ldr	r2, [r4, #56]
 1003 00fa E36B     		ldr	r3, [r4, #60]
 1004 00fc 9A42     		cmp	r2, r3
 1005 00fe CCD3     		bcc	.L80
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1006              		.loc 1 750 0 is_stmt 0 discriminator 1
 1007 0100 022E     		cmp	r6, #2
 1008 0102 CAD0     		beq	.L80
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1009              		.loc 1 843 0 is_stmt 1
 1010 0104 019B     		ldr	r3, [sp, #4]
 1011 0106 002B     		cmp	r3, #0
 1012 0108 EBD0     		beq	.L101
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1013              		.loc 1 854 0
 1014 010a 1DB9     		cbnz	r5, .L86
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1015              		.loc 1 858 0
 1016 010c 02A8     		add	r0, sp, #8
 1017 010e FFF7FEFF 		bl	vTaskSetTimeOutState
 1018              	.LVL109:
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1019              		.loc 1 859 0
 1020 0112 0125     		movs	r5, #1
 1021              	.LVL110:
 1022              	.L86:
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1023              		.loc 1 868 0
 1024 0114 FFF7FEFF 		bl	vPortExitCritical
 1025              	.LVL111:
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1026              		.loc 1 873 0
 1027 0118 FFF7FEFF 		bl	vTaskSuspendAll
 1028              	.LVL112:
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1029              		.loc 1 874 0
 1030 011c FFF7FEFF 		bl	vPortEnterCritical
 1031              	.LVL113:
 1032 0120 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1033 0124 5BB2     		sxtb	r3, r3
 1034 0126 B3F1FF3F 		cmp	r3, #-1
 1035 012a 02D1     		bne	.L87
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1036              		.loc 1 874 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 60


 1037 012c 0023     		movs	r3, #0
 1038 012e 84F84430 		strb	r3, [r4, #68]
 1039              	.L87:
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1040              		.loc 1 874 0 discriminator 3
 1041 0132 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1042 0136 5BB2     		sxtb	r3, r3
 1043 0138 B3F1FF3F 		cmp	r3, #-1
 1044 013c 02D1     		bne	.L88
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1045              		.loc 1 874 0 discriminator 4
 1046 013e 0023     		movs	r3, #0
 1047 0140 84F84530 		strb	r3, [r4, #69]
 1048              	.L88:
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1049              		.loc 1 874 0 discriminator 6
 1050 0144 FFF7FEFF 		bl	vPortExitCritical
 1051              	.LVL114:
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1052              		.loc 1 877 0 is_stmt 1 discriminator 6
 1053 0148 01A9     		add	r1, sp, #4
 1054 014a 02A8     		add	r0, sp, #8
 1055 014c FFF7FEFF 		bl	xTaskCheckForTimeOut
 1056              	.LVL115:
 1057 0150 C8B9     		cbnz	r0, .L89
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1058              		.loc 1 879 0
 1059 0152 2046     		mov	r0, r4
 1060 0154 FFF7FEFF 		bl	prvIsQueueFull
 1061              	.LVL116:
 1062 0158 0028     		cmp	r0, #0
 1063 015a C6D0     		beq	.L90
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1064              		.loc 1 882 0
 1065 015c 0199     		ldr	r1, [sp, #4]
 1066 015e 04F11000 		add	r0, r4, #16
 1067 0162 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1068              	.LVL117:
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1069              		.loc 1 889 0
 1070 0166 2046     		mov	r0, r4
 1071 0168 FFF7FEFF 		bl	prvUnlockQueue
 1072              	.LVL118:
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1073              		.loc 1 896 0
 1074 016c FFF7FEFF 		bl	xTaskResumeAll
 1075              	.LVL119:
 1076 0170 0028     		cmp	r0, #0
 1077 0172 BFD1     		bne	.L78
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1078              		.loc 1 898 0
 1079 0174 4FF08052 		mov	r2, #268435456
 1080 0178 064B     		ldr	r3, .L102
 1081 017a 1A60     		str	r2, [r3]
 1082              		.syntax unified
 1083              	@ 898 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1084 017c BFF34F8F 		dsb
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 61


 1085              	@ 0 "" 2
 1086              	@ 898 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1087 0180 BFF36F8F 		isb
 1088              	@ 0 "" 2
 1089              		.thumb
 1090              		.syntax unified
 1091 0184 B6E7     		b	.L78
 1092              	.L89:
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1093              		.loc 1 911 0
 1094 0186 2046     		mov	r0, r4
 1095 0188 FFF7FEFF 		bl	prvUnlockQueue
 1096              	.LVL120:
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1097              		.loc 1 912 0
 1098 018c FFF7FEFF 		bl	xTaskResumeAll
 1099              	.LVL121:
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1100              		.loc 1 915 0
 1101 0190 0020     		movs	r0, #0
 1102 0192 99E7     		b	.L68
 1103              	.L103:
 1104              		.align	2
 1105              	.L102:
 1106 0194 04ED00E0 		.word	-536810236
 1107              		.cfi_endproc
 1108              	.LFE13:
 1110              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1111              		.align	1
 1112              		.syntax unified
 1113              		.thumb
 1114              		.thumb_func
 1115              		.fpu fpv5-sp-d16
 1117              	prvInitialiseMutex:
 1118              	.LFB8:
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1119              		.loc 1 477 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 0
 1122              		@ frame_needed = 0, uses_anonymous_args = 0
 1123              	.LVL122:
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1124              		.loc 1 478 0
 1125 0000 48B1     		cbz	r0, .L107
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1126              		.loc 1 477 0
 1127 0002 08B5     		push	{r3, lr}
 1128              	.LCFI16:
 1129              		.cfi_def_cfa_offset 8
 1130              		.cfi_offset 3, -8
 1131              		.cfi_offset 14, -4
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1132              		.loc 1 484 0
 1133 0004 0021     		movs	r1, #0
 1134 0006 4160     		str	r1, [r0, #4]
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1135              		.loc 1 485 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 62


 1136 0008 0160     		str	r1, [r0]
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1137              		.loc 1 488 0
 1138 000a C160     		str	r1, [r0, #12]
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1139              		.loc 1 493 0
 1140 000c 0B46     		mov	r3, r1
 1141 000e 0A46     		mov	r2, r1
 1142 0010 FFF7FEFF 		bl	xQueueGenericSend
 1143              	.LVL123:
 1144 0014 08BD     		pop	{r3, pc}
 1145              	.LVL124:
 1146              	.L107:
 1147              	.LCFI17:
 1148              		.cfi_def_cfa_offset 0
 1149              		.cfi_restore 3
 1150              		.cfi_restore 14
 1151 0016 7047     		bx	lr
 1152              		.cfi_endproc
 1153              	.LFE8:
 1155              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1156              		.align	1
 1157              		.global	xQueueCreateMutex
 1158              		.syntax unified
 1159              		.thumb
 1160              		.thumb_func
 1161              		.fpu fpv5-sp-d16
 1163              	xQueueCreateMutex:
 1164              	.LFB9:
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1165              		.loc 1 507 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 1169              	.LVL125:
 1170 0000 10B5     		push	{r4, lr}
 1171              	.LCFI18:
 1172              		.cfi_def_cfa_offset 8
 1173              		.cfi_offset 4, -8
 1174              		.cfi_offset 14, -4
 1175              	.LVL126:
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1176              		.loc 1 511 0
 1177 0002 0246     		mov	r2, r0
 1178 0004 0021     		movs	r1, #0
 1179 0006 0120     		movs	r0, #1
 1180              	.LVL127:
 1181 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1182              	.LVL128:
 1183 000c 0446     		mov	r4, r0
 1184              	.LVL129:
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1185              		.loc 1 512 0
 1186 000e FFF7FEFF 		bl	prvInitialiseMutex
 1187              	.LVL130:
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1188              		.loc 1 515 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 63


 1189 0012 2046     		mov	r0, r4
 1190 0014 10BD     		pop	{r4, pc}
 1191              		.cfi_endproc
 1192              	.LFE9:
 1194              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 1195              		.align	1
 1196              		.global	xQueueGiveMutexRecursive
 1197              		.syntax unified
 1198              		.thumb
 1199              		.thumb_func
 1200              		.fpu fpv5-sp-d16
 1202              	xQueueGiveMutexRecursive:
 1203              	.LFB10:
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 1204              		.loc 1 573 0
 1205              		.cfi_startproc
 1206              		@ args = 0, pretend = 0, frame = 0
 1207              		@ frame_needed = 0, uses_anonymous_args = 0
 1208              	.LVL131:
 1209 0000 38B5     		push	{r3, r4, r5, lr}
 1210              	.LCFI19:
 1211              		.cfi_def_cfa_offset 16
 1212              		.cfi_offset 3, -16
 1213              		.cfi_offset 4, -12
 1214              		.cfi_offset 5, -8
 1215              		.cfi_offset 14, -4
 1216              	.LVL132:
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1217              		.loc 1 577 0
 1218 0002 38B1     		cbz	r0, .L119
 1219 0004 0446     		mov	r4, r0
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1220              		.loc 1 585 0
 1221 0006 4568     		ldr	r5, [r0, #4]
 1222 0008 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1223              	.LVL133:
 1224 000c 8542     		cmp	r5, r0
 1225 000e 0CD0     		beq	.L120
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1226              		.loc 1 614 0
 1227 0010 0020     		movs	r0, #0
 1228 0012 38BD     		pop	{r3, r4, r5, pc}
 1229              	.LVL134:
 1230              	.L119:
 1231              	.LBB102:
 1232              	.LBB103:
 1233              		.loc 2 237 0
 1234              		.syntax unified
 1235              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1236 0014 4FF05003 			mov r3, #80												
 1237 0018 72B6     		cpsid i													
 1238 001a 83F31188 		msr basepri, r3											
 1239 001e BFF36F8F 		isb														
 1240 0022 BFF34F8F 		dsb														
 1241 0026 62B6     		cpsie i													
 1242              	
 1243              	@ 0 "" 2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 64


 1244              	.LVL135:
 1245              		.thumb
 1246              		.syntax unified
 1247              	.L114:
 1248 0028 FEE7     		b	.L114
 1249              	.LVL136:
 1250              	.L120:
 1251              	.LBE103:
 1252              	.LBE102:
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1253              		.loc 1 594 0
 1254 002a E368     		ldr	r3, [r4, #12]
 1255 002c 013B     		subs	r3, r3, #1
 1256 002e E360     		str	r3, [r4, #12]
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1257              		.loc 1 597 0
 1258 0030 0BB1     		cbz	r3, .L121
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1259              		.loc 1 608 0
 1260 0032 0120     		movs	r0, #1
 1261              	.LVL137:
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1262              		.loc 1 620 0
 1263 0034 38BD     		pop	{r3, r4, r5, pc}
 1264              	.LVL138:
 1265              	.L121:
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1266              		.loc 1 601 0
 1267 0036 1A46     		mov	r2, r3
 1268 0038 1946     		mov	r1, r3
 1269 003a 2046     		mov	r0, r4
 1270 003c FFF7FEFF 		bl	xQueueGenericSend
 1271              	.LVL139:
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1272              		.loc 1 608 0
 1273 0040 0120     		movs	r0, #1
 1274 0042 38BD     		pop	{r3, r4, r5, pc}
 1275              		.cfi_endproc
 1276              	.LFE10:
 1278              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1279              		.align	1
 1280              		.global	xQueueGenericSendFromISR
 1281              		.syntax unified
 1282              		.thumb
 1283              		.thumb_func
 1284              		.fpu fpv5-sp-d16
 1286              	xQueueGenericSendFromISR:
 1287              	.LFB14:
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1288              		.loc 1 922 0
 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 0
 1291              		@ frame_needed = 0, uses_anonymous_args = 0
 1292              	.LVL140:
 1293 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1294              	.LCFI20:
 1295              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 65


 1296              		.cfi_offset 3, -32
 1297              		.cfi_offset 4, -28
 1298              		.cfi_offset 5, -24
 1299              		.cfi_offset 6, -20
 1300              		.cfi_offset 7, -16
 1301              		.cfi_offset 8, -12
 1302              		.cfi_offset 9, -8
 1303              		.cfi_offset 14, -4
 1304              	.LVL141:
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1305              		.loc 1 927 0
 1306 0004 70B1     		cbz	r0, .L142
 1307 0006 0446     		mov	r4, r0
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1308              		.loc 1 928 0
 1309 0008 B9B1     		cbz	r1, .L143
 1310 000a 0120     		movs	r0, #1
 1311              	.LVL142:
 1312              	.L125:
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1313              		.loc 1 928 0 is_stmt 0 discriminator 6
 1314 000c D8B9     		cbnz	r0, .L126
 1315              	.LBB104:
 1316              	.LBB105:
 1317              		.loc 2 237 0 is_stmt 1
 1318              		.syntax unified
 1319              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1320 000e 4FF05003 			mov r3, #80												
 1321 0012 72B6     		cpsid i													
 1322 0014 83F31188 		msr basepri, r3											
 1323 0018 BFF36F8F 		isb														
 1324 001c BFF34F8F 		dsb														
 1325 0020 62B6     		cpsie i													
 1326              	
 1327              	@ 0 "" 2
 1328              	.LVL143:
 1329              		.thumb
 1330              		.syntax unified
 1331              	.L127:
 1332 0022 FEE7     		b	.L127
 1333              	.LVL144:
 1334              	.L142:
 1335              	.LBE105:
 1336              	.LBE104:
 1337              	.LBB106:
 1338              	.LBB107:
 1339              		.syntax unified
 1340              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1341 0024 4FF05003 			mov r3, #80												
 1342 0028 72B6     		cpsid i													
 1343 002a 83F31188 		msr basepri, r3											
 1344 002e BFF36F8F 		isb														
 1345 0032 BFF34F8F 		dsb														
 1346 0036 62B6     		cpsie i													
 1347              	
 1348              	@ 0 "" 2
 1349              	.LVL145:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 66


 1350              		.thumb
 1351              		.syntax unified
 1352              	.L124:
 1353 0038 FEE7     		b	.L124
 1354              	.LVL146:
 1355              	.L143:
 1356              	.LBE107:
 1357              	.LBE106:
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1358              		.loc 1 928 0 discriminator 2
 1359 003a 006C     		ldr	r0, [r0, #64]
 1360              	.LVL147:
 1361 003c 08B9     		cbnz	r0, .L135
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1362              		.loc 1 928 0 is_stmt 0
 1363 003e 0120     		movs	r0, #1
 1364 0040 E4E7     		b	.L125
 1365              	.L135:
 1366 0042 0020     		movs	r0, #0
 1367 0044 E2E7     		b	.L125
 1368              	.L126:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1369              		.loc 1 929 0 is_stmt 1
 1370 0046 022B     		cmp	r3, #2
 1371 0048 0BD0     		beq	.L144
 1372              	.L128:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1373              		.loc 1 929 0 is_stmt 0 discriminator 6
 1374 004a 78B9     		cbnz	r0, .L129
 1375              	.LBB108:
 1376              	.LBB109:
 1377              		.loc 2 237 0 is_stmt 1
 1378              		.syntax unified
 1379              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1380 004c 4FF05003 			mov r3, #80												
 1381 0050 72B6     		cpsid i													
 1382 0052 83F31188 		msr basepri, r3											
 1383 0056 BFF36F8F 		isb														
 1384 005a BFF34F8F 		dsb														
 1385 005e 62B6     		cpsie i													
 1386              	
 1387              	@ 0 "" 2
 1388              	.LVL148:
 1389              		.thumb
 1390              		.syntax unified
 1391              	.L130:
 1392 0060 FEE7     		b	.L130
 1393              	.LVL149:
 1394              	.L144:
 1395              	.LBE109:
 1396              	.LBE108:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1397              		.loc 1 929 0 discriminator 2
 1398 0062 E56B     		ldr	r5, [r4, #60]
 1399 0064 012D     		cmp	r5, #1
 1400 0066 F0D0     		beq	.L128
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 67


 1401              		.loc 1 929 0 is_stmt 0
 1402 0068 0020     		movs	r0, #0
 1403 006a EEE7     		b	.L128
 1404              	.L129:
 1405 006c 1F46     		mov	r7, r3
 1406 006e 9046     		mov	r8, r2
 1407 0070 8946     		mov	r9, r1
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1408              		.loc 1 945 0 is_stmt 1
 1409 0072 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1410              	.LVL150:
 1411              	.LBB110:
 1412              	.LBB111:
 238:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 239:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mov %0, %1												\n"	\
 240:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsid i													\n" \
 241:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	msr basepri, %0											\n" \
 242:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	isb														\n" \
 243:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	dsb														\n" \
 244:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsie i													\n" \
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 246:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	);
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 250:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 254:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 1413              		.loc 2 255 0
 1414              		.syntax unified
 1415              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1416 0076 EFF31186 			mrs r6, basepri											
 1417 007a 4FF05003 		mov r3, #80												
 1418 007e 72B6     		cpsid i													
 1419 0080 83F31188 		msr basepri, r3											
 1420 0084 BFF36F8F 		isb														
 1421 0088 BFF34F8F 		dsb														
 1422 008c 62B6     		cpsie i													
 1423              	
 1424              	@ 0 "" 2
 1425              		.thumb
 1426              		.syntax unified
 1427              	.LBE111:
 1428              	.LBE110:
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1429              		.loc 1 954 0
 1430 008e A26B     		ldr	r2, [r4, #56]
 1431 0090 E36B     		ldr	r3, [r4, #60]
 1432 0092 9A42     		cmp	r2, r3
 1433 0094 01D3     		bcc	.L131
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1434              		.loc 1 954 0 is_stmt 0 discriminator 1
 1435 0096 022F     		cmp	r7, #2
 1436 0098 21D1     		bne	.L137
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 68


 1437              	.L131:
 1438              	.LBB112:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1439              		.loc 1 956 0 is_stmt 1
 1440 009a 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1441 009e 6DB2     		sxtb	r5, r5
 1442              	.LVL151:
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1443              		.loc 1 965 0
 1444 00a0 3A46     		mov	r2, r7
 1445 00a2 4946     		mov	r1, r9
 1446 00a4 2046     		mov	r0, r4
 1447 00a6 FFF7FEFF 		bl	prvCopyDataToQueue
 1448              	.LVL152:
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1449              		.loc 1 969 0
 1450 00aa B5F1FF3F 		cmp	r5, #-1
 1451 00ae 10D1     		bne	.L133
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1452              		.loc 1 1024 0
 1453 00b0 636A     		ldr	r3, [r4, #36]
 1454 00b2 B3B1     		cbz	r3, .L138
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1455              		.loc 1 1026 0
 1456 00b4 04F12400 		add	r0, r4, #36
 1457 00b8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1458              	.LVL153:
 1459 00bc 98B1     		cbz	r0, .L139
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1460              		.loc 1 1030 0
 1461 00be B8F1000F 		cmp	r8, #0
 1462 00c2 12D0     		beq	.L140
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1463              		.loc 1 1032 0
 1464 00c4 0120     		movs	r0, #1
 1465 00c6 C8F80000 		str	r0, [r8]
 1466              	.LVL154:
 1467              	.L132:
 1468              	.LBE112:
 1469              	.LBB113:
 1470              	.LBB114:
 256:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 257:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mrs %0, basepri											\n" \
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mov %1, %2												\n"	\
 259:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsid i													\n" \
 260:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	msr basepri, %1											\n" \
 261:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	isb														\n" \
 262:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	dsb														\n" \
 263:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsie i													\n" \
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	);
 266:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 267:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 268:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	warnings. */
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	return ulOriginalBASEPRI;
 270:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 69


 272:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 273:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 274:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 275:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 1471              		.loc 2 275 0
 1472              		.syntax unified
 1473              	@ 275 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1474 00ca 86F31188 			msr basepri, r6	
 1475              	@ 0 "" 2
 1476              	.LVL155:
 1477              		.thumb
 1478              		.syntax unified
 1479              	.LBE114:
 1480              	.LBE113:
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1481              		.loc 1 1069 0
 1482 00ce BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1483              	.LVL156:
 1484              	.L133:
 1485              	.LBB115:
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1486              		.loc 1 1055 0
 1487 00d2 6B1C     		adds	r3, r5, #1
 1488 00d4 5BB2     		sxtb	r3, r3
 1489 00d6 84F84530 		strb	r3, [r4, #69]
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1490              		.loc 1 1058 0
 1491 00da 0120     		movs	r0, #1
 1492 00dc F5E7     		b	.L132
 1493              	.LVL157:
 1494              	.L137:
 1495              	.LBE115:
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1496              		.loc 1 1063 0
 1497 00de 0020     		movs	r0, #0
 1498 00e0 F3E7     		b	.L132
 1499              	.LVL158:
 1500              	.L138:
 1501              	.LBB116:
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1502              		.loc 1 1058 0
 1503 00e2 0120     		movs	r0, #1
 1504 00e4 F1E7     		b	.L132
 1505              	.L139:
 1506 00e6 0120     		movs	r0, #1
 1507 00e8 EFE7     		b	.L132
 1508              	.L140:
 1509 00ea 0120     		movs	r0, #1
 1510 00ec EDE7     		b	.L132
 1511              	.LBE116:
 1512              		.cfi_endproc
 1513              	.LFE14:
 1515              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1516              		.align	1
 1517              		.global	xQueueGiveFromISR
 1518              		.syntax unified
 1519              		.thumb
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 70


 1520              		.thumb_func
 1521              		.fpu fpv5-sp-d16
 1523              	xQueueGiveFromISR:
 1524              	.LFB15:
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1525              		.loc 1 1073 0
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 0
 1528              		@ frame_needed = 0, uses_anonymous_args = 0
 1529              	.LVL159:
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1530              		.loc 1 1084 0
 1531 0000 70B1     		cbz	r0, .L163
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1532              		.loc 1 1073 0
 1533 0002 70B5     		push	{r4, r5, r6, lr}
 1534              	.LCFI21:
 1535              		.cfi_def_cfa_offset 16
 1536              		.cfi_offset 4, -16
 1537              		.cfi_offset 5, -12
 1538              		.cfi_offset 6, -8
 1539              		.cfi_offset 14, -4
 1540 0004 0446     		mov	r4, r0
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1541              		.loc 1 1088 0
 1542 0006 036C     		ldr	r3, [r0, #64]
 1543 0008 ABB1     		cbz	r3, .L148
 1544              	.LBB117:
 1545              	.LBB118:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1546              		.loc 2 237 0
 1547              		.syntax unified
 1548              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1549 000a 4FF05003 			mov r3, #80												
 1550 000e 72B6     		cpsid i													
 1551 0010 83F31188 		msr basepri, r3											
 1552 0014 BFF36F8F 		isb														
 1553 0018 BFF34F8F 		dsb														
 1554 001c 62B6     		cpsie i													
 1555              	
 1556              	@ 0 "" 2
 1557              	.LVL160:
 1558              		.thumb
 1559              		.syntax unified
 1560              	.L149:
 1561 001e FEE7     		b	.L149
 1562              	.L163:
 1563              	.LCFI22:
 1564              		.cfi_def_cfa_offset 0
 1565              		.cfi_restore 4
 1566              		.cfi_restore 5
 1567              		.cfi_restore 6
 1568              		.cfi_restore 14
 1569              	.LBE118:
 1570              	.LBE117:
 1571              	.LBB119:
 1572              	.LBB120:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 71


 1573              		.syntax unified
 1574              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1575 0020 4FF05003 			mov r3, #80												
 1576 0024 72B6     		cpsid i													
 1577 0026 83F31188 		msr basepri, r3											
 1578 002a BFF36F8F 		isb														
 1579 002e BFF34F8F 		dsb														
 1580 0032 62B6     		cpsie i													
 1581              	
 1582              	@ 0 "" 2
 1583              	.LVL161:
 1584              		.thumb
 1585              		.syntax unified
 1586              	.L147:
 1587 0034 FEE7     		b	.L147
 1588              	.L148:
 1589              	.LCFI23:
 1590              		.cfi_def_cfa_offset 16
 1591              		.cfi_offset 4, -16
 1592              		.cfi_offset 5, -12
 1593              		.cfi_offset 6, -8
 1594              		.cfi_offset 14, -4
 1595              	.LBE120:
 1596              	.LBE119:
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1597              		.loc 1 1093 0
 1598 0036 0368     		ldr	r3, [r0]
 1599 0038 63B1     		cbz	r3, .L164
 1600 003a 0123     		movs	r3, #1
 1601              	.L150:
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1602              		.loc 1 1093 0 is_stmt 0 discriminator 6
 1603 003c 83B9     		cbnz	r3, .L151
 1604              	.LBB121:
 1605              	.LBB122:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1606              		.loc 2 237 0 is_stmt 1
 1607              		.syntax unified
 1608              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1609 003e 4FF05003 			mov r3, #80												
 1610 0042 72B6     		cpsid i													
 1611 0044 83F31188 		msr basepri, r3											
 1612 0048 BFF36F8F 		isb														
 1613 004c BFF34F8F 		dsb														
 1614 0050 62B6     		cpsie i													
 1615              	
 1616              	@ 0 "" 2
 1617              	.LVL162:
 1618              		.thumb
 1619              		.syntax unified
 1620              	.L152:
 1621 0052 FEE7     		b	.L152
 1622              	.L164:
 1623              	.LBE122:
 1624              	.LBE121:
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1625              		.loc 1 1093 0 discriminator 2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 72


 1626 0054 4368     		ldr	r3, [r0, #4]
 1627 0056 0BB9     		cbnz	r3, .L156
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1628              		.loc 1 1093 0 is_stmt 0
 1629 0058 0123     		movs	r3, #1
 1630 005a EFE7     		b	.L150
 1631              	.L156:
 1632 005c 0023     		movs	r3, #0
 1633 005e EDE7     		b	.L150
 1634              	.L151:
 1635 0060 0E46     		mov	r6, r1
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1636              		.loc 1 1109 0 is_stmt 1
 1637 0062 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1638              	.LVL163:
 1639              	.LBB123:
 1640              	.LBB124:
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1641              		.loc 2 255 0
 1642              		.syntax unified
 1643              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1644 0066 EFF31185 			mrs r5, basepri											
 1645 006a 4FF05003 		mov r3, #80												
 1646 006e 72B6     		cpsid i													
 1647 0070 83F31188 		msr basepri, r3											
 1648 0074 BFF36F8F 		isb														
 1649 0078 BFF34F8F 		dsb														
 1650 007c 62B6     		cpsie i													
 1651              	
 1652              	@ 0 "" 2
 1653              		.thumb
 1654              		.syntax unified
 1655              	.LBE124:
 1656              	.LBE123:
 1657              	.LBB125:
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1658              		.loc 1 1113 0
 1659 007e A26B     		ldr	r2, [r4, #56]
 1660              	.LVL164:
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1661              		.loc 1 1118 0
 1662 0080 E36B     		ldr	r3, [r4, #60]
 1663 0082 9A42     		cmp	r2, r3
 1664 0084 1AD2     		bcs	.L157
 1665              	.LBB126:
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1666              		.loc 1 1120 0
 1667 0086 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1668 008a 5BB2     		sxtb	r3, r3
 1669              	.LVL165:
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1670              		.loc 1 1130 0
 1671 008c 0132     		adds	r2, r2, #1
 1672              	.LVL166:
 1673 008e A263     		str	r2, [r4, #56]
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1674              		.loc 1 1134 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 73


 1675 0090 B3F1FF3F 		cmp	r3, #-1
 1676 0094 0CD1     		bne	.L154
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1677              		.loc 1 1189 0
 1678 0096 636A     		ldr	r3, [r4, #36]
 1679              	.LVL167:
 1680 0098 93B1     		cbz	r3, .L158
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1681              		.loc 1 1191 0
 1682 009a 04F12400 		add	r0, r4, #36
 1683 009e FFF7FEFF 		bl	xTaskRemoveFromEventList
 1684              	.LVL168:
 1685 00a2 78B1     		cbz	r0, .L159
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1686              		.loc 1 1195 0
 1687 00a4 86B1     		cbz	r6, .L160
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1688              		.loc 1 1197 0
 1689 00a6 0120     		movs	r0, #1
 1690 00a8 3060     		str	r0, [r6]
 1691              	.L153:
 1692              	.LVL169:
 1693              	.LBE126:
 1694              	.LBE125:
 1695              	.LBB129:
 1696              	.LBB130:
 1697              		.loc 2 275 0
 1698              		.syntax unified
 1699              	@ 275 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1700 00aa 85F31188 			msr basepri, r5	
 1701              	@ 0 "" 2
 1702              	.LVL170:
 1703              		.thumb
 1704              		.syntax unified
 1705              	.LBE130:
 1706              	.LBE129:
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1707              		.loc 1 1234 0
 1708 00ae 70BD     		pop	{r4, r5, r6, pc}
 1709              	.LVL171:
 1710              	.L154:
 1711              	.LBB131:
 1712              	.LBB127:
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1713              		.loc 1 1220 0
 1714 00b0 0133     		adds	r3, r3, #1
 1715              	.LVL172:
 1716 00b2 5BB2     		sxtb	r3, r3
 1717              	.LVL173:
 1718 00b4 84F84530 		strb	r3, [r4, #69]
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1719              		.loc 1 1223 0
 1720 00b8 0120     		movs	r0, #1
 1721 00ba F6E7     		b	.L153
 1722              	.LVL174:
 1723              	.L157:
 1724              	.LBE127:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 74


1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1725              		.loc 1 1228 0
 1726 00bc 0020     		movs	r0, #0
 1727 00be F4E7     		b	.L153
 1728              	.LVL175:
 1729              	.L158:
 1730              	.LBB128:
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1731              		.loc 1 1223 0
 1732 00c0 0120     		movs	r0, #1
 1733 00c2 F2E7     		b	.L153
 1734              	.LVL176:
 1735              	.L159:
 1736 00c4 0120     		movs	r0, #1
 1737 00c6 F0E7     		b	.L153
 1738              	.L160:
 1739 00c8 0120     		movs	r0, #1
 1740 00ca EEE7     		b	.L153
 1741              	.LBE128:
 1742              	.LBE131:
 1743              		.cfi_endproc
 1744              	.LFE15:
 1746              		.section	.text.xQueueGenericReceive,"ax",%progbits
 1747              		.align	1
 1748              		.global	xQueueGenericReceive
 1749              		.syntax unified
 1750              		.thumb
 1751              		.thumb_func
 1752              		.fpu fpv5-sp-d16
 1754              	xQueueGenericReceive:
 1755              	.LFB16:
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1756              		.loc 1 1238 0
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 16
 1759              		@ frame_needed = 0, uses_anonymous_args = 0
 1760              	.LVL177:
 1761 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1762              	.LCFI24:
 1763              		.cfi_def_cfa_offset 24
 1764              		.cfi_offset 4, -24
 1765              		.cfi_offset 5, -20
 1766              		.cfi_offset 6, -16
 1767              		.cfi_offset 7, -12
 1768              		.cfi_offset 8, -8
 1769              		.cfi_offset 14, -4
 1770 0004 84B0     		sub	sp, sp, #16
 1771              	.LCFI25:
 1772              		.cfi_def_cfa_offset 40
 1773 0006 0192     		str	r2, [sp, #4]
 1774              	.LVL178:
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1775              		.loc 1 1244 0
 1776 0008 70B1     		cbz	r0, .L192
 1777 000a 0446     		mov	r4, r0
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1778              		.loc 1 1245 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 75


 1779 000c B9B1     		cbz	r1, .L193
 1780 000e 0125     		movs	r5, #1
 1781              	.LVL179:
 1782              	.L168:
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1783              		.loc 1 1245 0 is_stmt 0 discriminator 6
 1784 0010 DDB9     		cbnz	r5, .L169
 1785              	.LBB132:
 1786              	.LBB133:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1787              		.loc 2 237 0 is_stmt 1
 1788              		.syntax unified
 1789              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1790 0012 4FF05003 			mov r3, #80												
 1791 0016 72B6     		cpsid i													
 1792 0018 83F31188 		msr basepri, r3											
 1793 001c BFF36F8F 		isb														
 1794 0020 BFF34F8F 		dsb														
 1795 0024 62B6     		cpsie i													
 1796              	
 1797              	@ 0 "" 2
 1798              	.LVL180:
 1799              		.thumb
 1800              		.syntax unified
 1801              	.L170:
 1802 0026 FEE7     		b	.L170
 1803              	.LVL181:
 1804              	.L192:
 1805              	.LBE133:
 1806              	.LBE132:
 1807              	.LBB134:
 1808              	.LBB135:
 1809              		.syntax unified
 1810              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1811 0028 4FF05003 			mov r3, #80												
 1812 002c 72B6     		cpsid i													
 1813 002e 83F31188 		msr basepri, r3											
 1814 0032 BFF36F8F 		isb														
 1815 0036 BFF34F8F 		dsb														
 1816 003a 62B6     		cpsie i													
 1817              	
 1818              	@ 0 "" 2
 1819              	.LVL182:
 1820              		.thumb
 1821              		.syntax unified
 1822              	.L167:
 1823 003c FEE7     		b	.L167
 1824              	.LVL183:
 1825              	.L193:
 1826              	.LBE135:
 1827              	.LBE134:
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1828              		.loc 1 1245 0 discriminator 2
 1829 003e 026C     		ldr	r2, [r0, #64]
 1830              	.LVL184:
 1831 0040 0AB9     		cbnz	r2, .L188
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 76


 1832              		.loc 1 1245 0 is_stmt 0
 1833 0042 0125     		movs	r5, #1
 1834 0044 E4E7     		b	.L168
 1835              	.L188:
 1836 0046 0025     		movs	r5, #0
 1837 0048 E2E7     		b	.L168
 1838              	.L169:
 1839 004a 1F46     		mov	r7, r3
 1840 004c 8846     		mov	r8, r1
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1841              		.loc 1 1248 0 is_stmt 1
 1842 004e FFF7FEFF 		bl	xTaskGetSchedulerState
 1843              	.LVL185:
 1844 0052 10B9     		cbnz	r0, .L171
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1845              		.loc 1 1248 0 is_stmt 0 discriminator 2
 1846 0054 019B     		ldr	r3, [sp, #4]
 1847 0056 03B1     		cbz	r3, .L171
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1848              		.loc 1 1248 0
 1849 0058 0025     		movs	r5, #0
 1850              	.L171:
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1851              		.loc 1 1248 0 discriminator 6
 1852 005a 55B9     		cbnz	r5, .L190
 1853              	.LBB136:
 1854              	.LBB137:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1855              		.loc 2 237 0 is_stmt 1
 1856              		.syntax unified
 1857              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1858 005c 4FF05003 			mov r3, #80												
 1859 0060 72B6     		cpsid i													
 1860 0062 83F31188 		msr basepri, r3											
 1861 0066 BFF36F8F 		isb														
 1862 006a BFF34F8F 		dsb														
 1863 006e 62B6     		cpsie i													
 1864              	
 1865              	@ 0 "" 2
 1866              	.LVL186:
 1867              		.thumb
 1868              		.syntax unified
 1869              	.L173:
 1870 0070 FEE7     		b	.L173
 1871              	.L190:
 1872              	.LBE137:
 1873              	.LBE136:
 1874 0072 0026     		movs	r6, #0
 1875 0074 5DE0     		b	.L172
 1876              	.LVL187:
 1877              	.L195:
 1878              	.LBB138:
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1879              		.loc 1 1268 0
 1880 0076 E668     		ldr	r6, [r4, #12]
 1881              	.LVL188:
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 77


 1882              		.loc 1 1270 0
 1883 0078 4146     		mov	r1, r8
 1884 007a 2046     		mov	r0, r4
 1885 007c FFF7FEFF 		bl	prvCopyDataFromQueue
 1886              	.LVL189:
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1887              		.loc 1 1272 0
 1888 0080 DFB9     		cbnz	r7, .L175
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1889              		.loc 1 1277 0
 1890 0082 013D     		subs	r5, r5, #1
 1891              	.LVL190:
 1892 0084 A563     		str	r5, [r4, #56]
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1893              		.loc 1 1281 0
 1894 0086 2368     		ldr	r3, [r4]
 1895 0088 13B9     		cbnz	r3, .L176
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1896              		.loc 1 1285 0
 1897 008a FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 1898              	.LVL191:
 1899 008e 6060     		str	r0, [r4, #4]
 1900              	.L176:
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1901              		.loc 1 1294 0
 1902 0090 2369     		ldr	r3, [r4, #16]
 1903 0092 63B1     		cbz	r3, .L177
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1904              		.loc 1 1296 0
 1905 0094 04F11000 		add	r0, r4, #16
 1906 0098 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1907              	.LVL192:
 1908 009c 38B1     		cbz	r0, .L177
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1909              		.loc 1 1298 0
 1910 009e 4FF08052 		mov	r2, #268435456
 1911 00a2 454B     		ldr	r3, .L201
 1912 00a4 1A60     		str	r2, [r3]
 1913              		.syntax unified
 1914              	@ 1298 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1915 00a6 BFF34F8F 		dsb
 1916              	@ 0 "" 2
 1917              	@ 1298 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1918 00aa BFF36F8F 		isb
 1919              	@ 0 "" 2
 1920              	.LVL193:
 1921              		.thumb
 1922              		.syntax unified
 1923              	.L177:
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1924              		.loc 1 1338 0
 1925 00ae FFF7FEFF 		bl	vPortExitCritical
 1926              	.LVL194:
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1927              		.loc 1 1339 0
 1928 00b2 0120     		movs	r0, #1
 1929              	.LVL195:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 78


 1930              	.L165:
 1931              	.LBE138:
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1932              		.loc 1 1431 0
 1933 00b4 04B0     		add	sp, sp, #16
 1934              	.LCFI26:
 1935              		.cfi_remember_state
 1936              		.cfi_def_cfa_offset 24
 1937              		@ sp needed
 1938 00b6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1939              	.LVL196:
 1940              	.L175:
 1941              	.LCFI27:
 1942              		.cfi_restore_state
 1943              	.LBB139:
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1944              		.loc 1 1316 0
 1945 00ba E660     		str	r6, [r4, #12]
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1946              		.loc 1 1320 0
 1947 00bc 636A     		ldr	r3, [r4, #36]
 1948 00be 002B     		cmp	r3, #0
 1949 00c0 F5D0     		beq	.L177
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1950              		.loc 1 1322 0
 1951 00c2 04F12400 		add	r0, r4, #36
 1952 00c6 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1953              	.LVL197:
 1954 00ca 0028     		cmp	r0, #0
 1955 00cc EFD0     		beq	.L177
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1956              		.loc 1 1325 0
 1957 00ce 4FF08052 		mov	r2, #268435456
 1958 00d2 394B     		ldr	r3, .L201
 1959 00d4 1A60     		str	r2, [r3]
 1960              		.syntax unified
 1961              	@ 1325 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1962 00d6 BFF34F8F 		dsb
 1963              	@ 0 "" 2
 1964              	@ 1325 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1965 00da BFF36F8F 		isb
 1966              	@ 0 "" 2
 1967              		.thumb
 1968              		.syntax unified
 1969 00de E6E7     		b	.L177
 1970              	.LVL198:
 1971              	.L196:
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1972              		.loc 1 1347 0
 1973 00e0 FFF7FEFF 		bl	vPortExitCritical
 1974              	.LVL199:
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1975              		.loc 1 1349 0
 1976 00e4 0020     		movs	r0, #0
 1977 00e6 E5E7     		b	.L165
 1978              	.L197:
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 79


 1979              		.loc 1 1355 0
 1980 00e8 02A8     		add	r0, sp, #8
 1981 00ea FFF7FEFF 		bl	vTaskSetTimeOutState
 1982              	.LVL200:
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1983              		.loc 1 1356 0
 1984 00ee 0126     		movs	r6, #1
 1985 00f0 29E0     		b	.L180
 1986              	.LVL201:
 1987              	.L198:
 1988              	.LBE139:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1989              		.loc 1 1371 0 discriminator 1
 1990 00f2 0023     		movs	r3, #0
 1991 00f4 84F84430 		strb	r3, [r4, #68]
 1992 00f8 31E0     		b	.L181
 1993              	.L199:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1994              		.loc 1 1371 0 is_stmt 0 discriminator 4
 1995 00fa 0023     		movs	r3, #0
 1996 00fc 84F84530 		strb	r3, [r4, #69]
 1997 0100 33E0     		b	.L182
 1998              	.L200:
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1999              		.loc 1 1384 0 is_stmt 1
 2000 0102 FFF7FEFF 		bl	vPortEnterCritical
 2001              	.LVL202:
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2002              		.loc 1 1386 0
 2003 0106 6068     		ldr	r0, [r4, #4]
 2004 0108 FFF7FEFF 		bl	vTaskPriorityInherit
 2005              	.LVL203:
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2006              		.loc 1 1388 0
 2007 010c FFF7FEFF 		bl	vPortExitCritical
 2008              	.LVL204:
 2009 0110 3BE0     		b	.L185
 2010              	.L184:
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2011              		.loc 1 1411 0
 2012 0112 2046     		mov	r0, r4
 2013 0114 FFF7FEFF 		bl	prvUnlockQueue
 2014              	.LVL205:
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2015              		.loc 1 1412 0
 2016 0118 FFF7FEFF 		bl	xTaskResumeAll
 2017              	.LVL206:
 2018 011c 09E0     		b	.L172
 2019              	.L183:
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2020              		.loc 1 1417 0
 2021 011e 2046     		mov	r0, r4
 2022 0120 FFF7FEFF 		bl	prvUnlockQueue
 2023              	.LVL207:
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2024              		.loc 1 1418 0
 2025 0124 FFF7FEFF 		bl	xTaskResumeAll
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 80


 2026              	.LVL208:
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2027              		.loc 1 1420 0
 2028 0128 2046     		mov	r0, r4
 2029 012a FFF7FEFF 		bl	prvIsQueueEmpty
 2030              	.LVL209:
 2031 012e 0028     		cmp	r0, #0
 2032 0130 40D1     		bne	.L194
 2033              	.LVL210:
 2034              	.L172:
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2035              		.loc 1 1258 0
 2036 0132 FFF7FEFF 		bl	vPortEnterCritical
 2037              	.LVL211:
 2038              	.LBB140:
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2039              		.loc 1 1260 0
 2040 0136 A56B     		ldr	r5, [r4, #56]
 2041              	.LVL212:
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2042              		.loc 1 1264 0
 2043 0138 002D     		cmp	r5, #0
 2044 013a 9CD1     		bne	.L195
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2045              		.loc 1 1343 0
 2046 013c 019B     		ldr	r3, [sp, #4]
 2047 013e 002B     		cmp	r3, #0
 2048 0140 CED0     		beq	.L196
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2049              		.loc 1 1351 0
 2050 0142 002E     		cmp	r6, #0
 2051 0144 D0D0     		beq	.L197
 2052              	.LVL213:
 2053              	.L180:
 2054              	.LBE140:
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2055              		.loc 1 1365 0
 2056 0146 FFF7FEFF 		bl	vPortExitCritical
 2057              	.LVL214:
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2058              		.loc 1 1370 0
 2059 014a FFF7FEFF 		bl	vTaskSuspendAll
 2060              	.LVL215:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2061              		.loc 1 1371 0
 2062 014e FFF7FEFF 		bl	vPortEnterCritical
 2063              	.LVL216:
 2064 0152 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2065 0156 5BB2     		sxtb	r3, r3
 2066 0158 B3F1FF3F 		cmp	r3, #-1
 2067 015c C9D0     		beq	.L198
 2068              	.L181:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2069              		.loc 1 1371 0 is_stmt 0 discriminator 3
 2070 015e 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2071 0162 5BB2     		sxtb	r3, r3
 2072 0164 B3F1FF3F 		cmp	r3, #-1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 81


 2073 0168 C7D0     		beq	.L199
 2074              	.L182:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2075              		.loc 1 1371 0 discriminator 6
 2076 016a FFF7FEFF 		bl	vPortExitCritical
 2077              	.LVL217:
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2078              		.loc 1 1374 0 is_stmt 1 discriminator 6
 2079 016e 01A9     		add	r1, sp, #4
 2080 0170 02A8     		add	r0, sp, #8
 2081 0172 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2082              	.LVL218:
 2083 0176 0028     		cmp	r0, #0
 2084 0178 D1D1     		bne	.L183
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2085              		.loc 1 1376 0
 2086 017a 2046     		mov	r0, r4
 2087 017c FFF7FEFF 		bl	prvIsQueueEmpty
 2088              	.LVL219:
 2089 0180 0028     		cmp	r0, #0
 2090 0182 C6D0     		beq	.L184
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2091              		.loc 1 1382 0
 2092 0184 2368     		ldr	r3, [r4]
 2093 0186 002B     		cmp	r3, #0
 2094 0188 BBD0     		beq	.L200
 2095              	.L185:
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2096              		.loc 1 1397 0
 2097 018a 0199     		ldr	r1, [sp, #4]
 2098 018c 04F12400 		add	r0, r4, #36
 2099 0190 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2100              	.LVL220:
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2101              		.loc 1 1398 0
 2102 0194 2046     		mov	r0, r4
 2103 0196 FFF7FEFF 		bl	prvUnlockQueue
 2104              	.LVL221:
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2105              		.loc 1 1399 0
 2106 019a FFF7FEFF 		bl	xTaskResumeAll
 2107              	.LVL222:
 2108 019e 0028     		cmp	r0, #0
 2109 01a0 C7D1     		bne	.L172
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2110              		.loc 1 1401 0
 2111 01a2 4FF08052 		mov	r2, #268435456
 2112 01a6 044B     		ldr	r3, .L201
 2113 01a8 1A60     		str	r2, [r3]
 2114              		.syntax unified
 2115              	@ 1401 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2116 01aa BFF34F8F 		dsb
 2117              	@ 0 "" 2
 2118              	@ 1401 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2119 01ae BFF36F8F 		isb
 2120              	@ 0 "" 2
 2121              		.thumb
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 82


 2122              		.syntax unified
 2123 01b2 BEE7     		b	.L172
 2124              	.L194:
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2125              		.loc 1 1423 0
 2126 01b4 0020     		movs	r0, #0
 2127 01b6 7DE7     		b	.L165
 2128              	.L202:
 2129              		.align	2
 2130              	.L201:
 2131 01b8 04ED00E0 		.word	-536810236
 2132              		.cfi_endproc
 2133              	.LFE16:
 2135              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 2136              		.align	1
 2137              		.global	xQueueTakeMutexRecursive
 2138              		.syntax unified
 2139              		.thumb
 2140              		.thumb_func
 2141              		.fpu fpv5-sp-d16
 2143              	xQueueTakeMutexRecursive:
 2144              	.LFB11:
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2145              		.loc 1 628 0
 2146              		.cfi_startproc
 2147              		@ args = 0, pretend = 0, frame = 0
 2148              		@ frame_needed = 0, uses_anonymous_args = 0
 2149              	.LVL223:
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2150              		.loc 1 632 0
 2151 0000 98B1     		cbz	r0, .L210
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2152              		.loc 1 628 0
 2153 0002 70B5     		push	{r4, r5, r6, lr}
 2154              	.LCFI28:
 2155              		.cfi_def_cfa_offset 16
 2156              		.cfi_offset 4, -16
 2157              		.cfi_offset 5, -12
 2158              		.cfi_offset 6, -8
 2159              		.cfi_offset 14, -4
 2160 0004 0446     		mov	r4, r0
 2161 0006 0D46     		mov	r5, r1
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2162              		.loc 1 639 0
 2163 0008 4668     		ldr	r6, [r0, #4]
 2164 000a FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 2165              	.LVL224:
 2166 000e 8642     		cmp	r6, r0
 2167 0010 16D0     		beq	.L211
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2168              		.loc 1 646 0
 2169 0012 0023     		movs	r3, #0
 2170 0014 2A46     		mov	r2, r5
 2171 0016 1946     		mov	r1, r3
 2172 0018 2046     		mov	r0, r4
 2173 001a FFF7FEFF 		bl	xQueueGenericReceive
 2174              	.LVL225:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 83


 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2175              		.loc 1 651 0
 2176 001e 0246     		mov	r2, r0
 2177 0020 90B1     		cbz	r0, .L203
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2178              		.loc 1 653 0
 2179 0022 E368     		ldr	r3, [r4, #12]
 2180 0024 0133     		adds	r3, r3, #1
 2181 0026 E360     		str	r3, [r4, #12]
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2182              		.loc 1 661 0
 2183 0028 0EE0     		b	.L203
 2184              	.LVL226:
 2185              	.L210:
 2186              	.LCFI29:
 2187              		.cfi_def_cfa_offset 0
 2188              		.cfi_restore 4
 2189              		.cfi_restore 5
 2190              		.cfi_restore 6
 2191              		.cfi_restore 14
 2192              	.LBB141:
 2193              	.LBB142:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2194              		.loc 2 237 0
 2195              		.syntax unified
 2196              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2197 002a 4FF05003 			mov r3, #80												
 2198 002e 72B6     		cpsid i													
 2199 0030 83F31188 		msr basepri, r3											
 2200 0034 BFF36F8F 		isb														
 2201 0038 BFF34F8F 		dsb														
 2202 003c 62B6     		cpsie i													
 2203              	
 2204              	@ 0 "" 2
 2205              	.LVL227:
 2206              		.thumb
 2207              		.syntax unified
 2208              	.L205:
 2209 003e FEE7     		b	.L205
 2210              	.LVL228:
 2211              	.L211:
 2212              	.LCFI30:
 2213              		.cfi_def_cfa_offset 16
 2214              		.cfi_offset 4, -16
 2215              		.cfi_offset 5, -12
 2216              		.cfi_offset 6, -8
 2217              		.cfi_offset 14, -4
 2218              	.LBE142:
 2219              	.LBE141:
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 2220              		.loc 1 641 0
 2221 0040 E368     		ldr	r3, [r4, #12]
 2222 0042 0133     		adds	r3, r3, #1
 2223 0044 E360     		str	r3, [r4, #12]
 2224              	.LVL229:
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2225              		.loc 1 642 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 84


 2226 0046 0122     		movs	r2, #1
 2227              	.LVL230:
 2228              	.L203:
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2229              		.loc 1 662 0
 2230 0048 1046     		mov	r0, r2
 2231 004a 70BD     		pop	{r4, r5, r6, pc}
 2232              		.cfi_endproc
 2233              	.LFE11:
 2235              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 2236              		.align	1
 2237              		.global	xQueueReceiveFromISR
 2238              		.syntax unified
 2239              		.thumb
 2240              		.thumb_func
 2241              		.fpu fpv5-sp-d16
 2243              	xQueueReceiveFromISR:
 2244              	.LFB17:
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2245              		.loc 1 1435 0
 2246              		.cfi_startproc
 2247              		@ args = 0, pretend = 0, frame = 0
 2248              		@ frame_needed = 0, uses_anonymous_args = 0
 2249              	.LVL231:
 2250 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2251              	.LCFI31:
 2252              		.cfi_def_cfa_offset 32
 2253              		.cfi_offset 3, -32
 2254              		.cfi_offset 4, -28
 2255              		.cfi_offset 5, -24
 2256              		.cfi_offset 6, -20
 2257              		.cfi_offset 7, -16
 2258              		.cfi_offset 8, -12
 2259              		.cfi_offset 9, -8
 2260              		.cfi_offset 14, -4
 2261              	.LVL232:
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2262              		.loc 1 1440 0
 2263 0004 70B1     		cbz	r0, .L227
 2264 0006 0446     		mov	r4, r0
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2265              		.loc 1 1441 0
 2266 0008 B9B1     		cbz	r1, .L228
 2267 000a 0123     		movs	r3, #1
 2268              	.L215:
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2269              		.loc 1 1441 0 is_stmt 0 discriminator 6
 2270 000c DBB9     		cbnz	r3, .L216
 2271              	.LBB143:
 2272              	.LBB144:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2273              		.loc 2 237 0 is_stmt 1
 2274              		.syntax unified
 2275              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2276 000e 4FF05003 			mov r3, #80												
 2277 0012 72B6     		cpsid i													
 2278 0014 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 85


 2279 0018 BFF36F8F 		isb														
 2280 001c BFF34F8F 		dsb														
 2281 0020 62B6     		cpsie i													
 2282              	
 2283              	@ 0 "" 2
 2284              	.LVL233:
 2285              		.thumb
 2286              		.syntax unified
 2287              	.L217:
 2288 0022 FEE7     		b	.L217
 2289              	.L227:
 2290              	.LBE144:
 2291              	.LBE143:
 2292              	.LBB145:
 2293              	.LBB146:
 2294              		.syntax unified
 2295              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2296 0024 4FF05003 			mov r3, #80												
 2297 0028 72B6     		cpsid i													
 2298 002a 83F31188 		msr basepri, r3											
 2299 002e BFF36F8F 		isb														
 2300 0032 BFF34F8F 		dsb														
 2301 0036 62B6     		cpsie i													
 2302              	
 2303              	@ 0 "" 2
 2304              	.LVL234:
 2305              		.thumb
 2306              		.syntax unified
 2307              	.L214:
 2308 0038 FEE7     		b	.L214
 2309              	.L228:
 2310              	.LBE146:
 2311              	.LBE145:
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2312              		.loc 1 1441 0 discriminator 2
 2313 003a 036C     		ldr	r3, [r0, #64]
 2314 003c 0BB9     		cbnz	r3, .L221
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2315              		.loc 1 1441 0 is_stmt 0
 2316 003e 0123     		movs	r3, #1
 2317 0040 E4E7     		b	.L215
 2318              	.L221:
 2319 0042 0023     		movs	r3, #0
 2320 0044 E2E7     		b	.L215
 2321              	.L216:
 2322 0046 1746     		mov	r7, r2
 2323 0048 8946     		mov	r9, r1
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2324              		.loc 1 1457 0 is_stmt 1
 2325 004a FFF7FEFF 		bl	vPortValidateInterruptPriority
 2326              	.LVL235:
 2327              	.LBB147:
 2328              	.LBB148:
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2329              		.loc 2 255 0
 2330              		.syntax unified
 2331              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 86


 2332 004e EFF31186 			mrs r6, basepri											
 2333 0052 4FF05003 		mov r3, #80												
 2334 0056 72B6     		cpsid i													
 2335 0058 83F31188 		msr basepri, r3											
 2336 005c BFF36F8F 		isb														
 2337 0060 BFF34F8F 		dsb														
 2338 0064 62B6     		cpsie i													
 2339              	
 2340              	@ 0 "" 2
 2341              		.thumb
 2342              		.syntax unified
 2343              	.LBE148:
 2344              	.LBE147:
 2345              	.LBB149:
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2346              		.loc 1 1461 0
 2347 0066 D4F83880 		ldr	r8, [r4, #56]
 2348              	.LVL236:
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2349              		.loc 1 1464 0
 2350 006a B8F1000F 		cmp	r8, #0
 2351 006e 20D0     		beq	.L222
 2352              	.LBB150:
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2353              		.loc 1 1466 0
 2354 0070 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 2355 0074 6DB2     		sxtb	r5, r5
 2356              	.LVL237:
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
 2357              		.loc 1 1470 0
 2358 0076 4946     		mov	r1, r9
 2359 0078 2046     		mov	r0, r4
 2360 007a FFF7FEFF 		bl	prvCopyDataFromQueue
 2361              	.LVL238:
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2362              		.loc 1 1471 0
 2363 007e 08F1FF33 		add	r3, r8, #-1
 2364 0082 A363     		str	r3, [r4, #56]
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2365              		.loc 1 1477 0
 2366 0084 B5F1FF3F 		cmp	r5, #-1
 2367 0088 0DD1     		bne	.L219
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2368              		.loc 1 1479 0
 2369 008a 2369     		ldr	r3, [r4, #16]
 2370 008c 9BB1     		cbz	r3, .L223
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2371              		.loc 1 1481 0
 2372 008e 04F11000 		add	r0, r4, #16
 2373 0092 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2374              	.LVL239:
 2375 0096 80B1     		cbz	r0, .L224
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2376              		.loc 1 1485 0
 2377 0098 8FB1     		cbz	r7, .L225
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2378              		.loc 1 1487 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 87


 2379 009a 0120     		movs	r0, #1
 2380 009c 3860     		str	r0, [r7]
 2381              	.LVL240:
 2382              	.L218:
 2383              	.LBE150:
 2384              	.LBE149:
 2385              	.LBB153:
 2386              	.LBB154:
 2387              		.loc 2 275 0
 2388              		.syntax unified
 2389              	@ 275 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2390 009e 86F31188 			msr basepri, r6	
 2391              	@ 0 "" 2
 2392              	.LVL241:
 2393              		.thumb
 2394              		.syntax unified
 2395              	.LBE154:
 2396              	.LBE153:
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2397              		.loc 1 1522 0
 2398 00a2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2399              	.LVL242:
 2400              	.L219:
 2401              	.LBB155:
 2402              	.LBB151:
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2403              		.loc 1 1508 0
 2404 00a6 6B1C     		adds	r3, r5, #1
 2405 00a8 5BB2     		sxtb	r3, r3
 2406 00aa 84F84430 		strb	r3, [r4, #68]
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2407              		.loc 1 1511 0
 2408 00ae 0120     		movs	r0, #1
 2409 00b0 F5E7     		b	.L218
 2410              	.LVL243:
 2411              	.L222:
 2412              	.LBE151:
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 2413              		.loc 1 1515 0
 2414 00b2 0020     		movs	r0, #0
 2415 00b4 F3E7     		b	.L218
 2416              	.LVL244:
 2417              	.L223:
 2418              	.LBB152:
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2419              		.loc 1 1511 0
 2420 00b6 0120     		movs	r0, #1
 2421 00b8 F1E7     		b	.L218
 2422              	.L224:
 2423 00ba 0120     		movs	r0, #1
 2424 00bc EFE7     		b	.L218
 2425              	.L225:
 2426 00be 0120     		movs	r0, #1
 2427 00c0 EDE7     		b	.L218
 2428              	.LBE152:
 2429              	.LBE155:
 2430              		.cfi_endproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 88


 2431              	.LFE17:
 2433              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2434              		.align	1
 2435              		.global	xQueuePeekFromISR
 2436              		.syntax unified
 2437              		.thumb
 2438              		.thumb_func
 2439              		.fpu fpv5-sp-d16
 2441              	xQueuePeekFromISR:
 2442              	.LFB18:
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2443              		.loc 1 1526 0
 2444              		.cfi_startproc
 2445              		@ args = 0, pretend = 0, frame = 0
 2446              		@ frame_needed = 0, uses_anonymous_args = 0
 2447              	.LVL245:
 2448 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2449              	.LCFI32:
 2450              		.cfi_def_cfa_offset 24
 2451              		.cfi_offset 3, -24
 2452              		.cfi_offset 4, -20
 2453              		.cfi_offset 5, -16
 2454              		.cfi_offset 6, -12
 2455              		.cfi_offset 7, -8
 2456              		.cfi_offset 14, -4
 2457              	.LVL246:
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2458              		.loc 1 1532 0
 2459 0002 70B1     		cbz	r0, .L242
 2460 0004 0446     		mov	r4, r0
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2461              		.loc 1 1533 0
 2462 0006 B9B1     		cbz	r1, .L243
 2463 0008 0123     		movs	r3, #1
 2464              	.L232:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2465              		.loc 1 1533 0 is_stmt 0 discriminator 6
 2466 000a DBB9     		cbnz	r3, .L233
 2467              	.LBB156:
 2468              	.LBB157:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2469              		.loc 2 237 0 is_stmt 1
 2470              		.syntax unified
 2471              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2472 000c 4FF05003 			mov r3, #80												
 2473 0010 72B6     		cpsid i													
 2474 0012 83F31188 		msr basepri, r3											
 2475 0016 BFF36F8F 		isb														
 2476 001a BFF34F8F 		dsb														
 2477 001e 62B6     		cpsie i													
 2478              	
 2479              	@ 0 "" 2
 2480              	.LVL247:
 2481              		.thumb
 2482              		.syntax unified
 2483              	.L234:
 2484 0020 FEE7     		b	.L234
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 89


 2485              	.L242:
 2486              	.LBE157:
 2487              	.LBE156:
 2488              	.LBB158:
 2489              	.LBB159:
 2490              		.syntax unified
 2491              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2492 0022 4FF05003 			mov r3, #80												
 2493 0026 72B6     		cpsid i													
 2494 0028 83F31188 		msr basepri, r3											
 2495 002c BFF36F8F 		isb														
 2496 0030 BFF34F8F 		dsb														
 2497 0034 62B6     		cpsie i													
 2498              	
 2499              	@ 0 "" 2
 2500              	.LVL248:
 2501              		.thumb
 2502              		.syntax unified
 2503              	.L231:
 2504 0036 FEE7     		b	.L231
 2505              	.L243:
 2506              	.LBE159:
 2507              	.LBE158:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2508              		.loc 1 1533 0 discriminator 2
 2509 0038 036C     		ldr	r3, [r0, #64]
 2510 003a 0BB9     		cbnz	r3, .L239
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2511              		.loc 1 1533 0 is_stmt 0
 2512 003c 0123     		movs	r3, #1
 2513 003e E4E7     		b	.L232
 2514              	.L239:
 2515 0040 0023     		movs	r3, #0
 2516 0042 E2E7     		b	.L232
 2517              	.L233:
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2518              		.loc 1 1534 0 is_stmt 1
 2519 0044 236C     		ldr	r3, [r4, #64]
 2520 0046 53B9     		cbnz	r3, .L235
 2521              	.LBB160:
 2522              	.LBB161:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2523              		.loc 2 237 0
 2524              		.syntax unified
 2525              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2526 0048 4FF05003 			mov r3, #80												
 2527 004c 72B6     		cpsid i													
 2528 004e 83F31188 		msr basepri, r3											
 2529 0052 BFF36F8F 		isb														
 2530 0056 BFF34F8F 		dsb														
 2531 005a 62B6     		cpsie i													
 2532              	
 2533              	@ 0 "" 2
 2534              	.LVL249:
 2535              		.thumb
 2536              		.syntax unified
 2537              	.L236:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 90


 2538 005c FEE7     		b	.L236
 2539              	.L235:
 2540 005e 0D46     		mov	r5, r1
 2541              	.LBE161:
 2542              	.LBE160:
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2543              		.loc 1 1550 0
 2544 0060 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2545              	.LVL250:
 2546              	.LBB162:
 2547              	.LBB163:
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2548              		.loc 2 255 0
 2549              		.syntax unified
 2550              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2551 0064 EFF31186 			mrs r6, basepri											
 2552 0068 4FF05003 		mov r3, #80												
 2553 006c 72B6     		cpsid i													
 2554 006e 83F31188 		msr basepri, r3											
 2555 0072 BFF36F8F 		isb														
 2556 0076 BFF34F8F 		dsb														
 2557 007a 62B6     		cpsie i													
 2558              	
 2559              	@ 0 "" 2
 2560              		.thumb
 2561              		.syntax unified
 2562              	.LBE163:
 2563              	.LBE162:
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2564              		.loc 1 1555 0
 2565 007c A36B     		ldr	r3, [r4, #56]
 2566 007e 4BB1     		cbz	r3, .L240
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2567              		.loc 1 1561 0
 2568 0080 E768     		ldr	r7, [r4, #12]
 2569              	.LVL251:
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 2570              		.loc 1 1562 0
 2571 0082 2946     		mov	r1, r5
 2572 0084 2046     		mov	r0, r4
 2573 0086 FFF7FEFF 		bl	prvCopyDataFromQueue
 2574              	.LVL252:
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2575              		.loc 1 1563 0
 2576 008a E760     		str	r7, [r4, #12]
 2577              	.LVL253:
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2578              		.loc 1 1565 0
 2579 008c 0120     		movs	r0, #1
 2580              	.LVL254:
 2581              	.L237:
 2582              	.LBB164:
 2583              	.LBB165:
 2584              		.loc 2 275 0
 2585              		.syntax unified
 2586              	@ 275 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2587 008e 86F31188 			msr basepri, r6	
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 91


 2588              	@ 0 "" 2
 2589              	.LVL255:
 2590              		.thumb
 2591              		.syntax unified
 2592              	.LBE165:
 2593              	.LBE164:
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2594              		.loc 1 1576 0
 2595 0092 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2596              	.LVL256:
 2597              	.L240:
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 2598              		.loc 1 1569 0
 2599 0094 0020     		movs	r0, #0
 2600 0096 FAE7     		b	.L237
 2601              		.cfi_endproc
 2602              	.LFE18:
 2604              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2605              		.align	1
 2606              		.global	uxQueueMessagesWaiting
 2607              		.syntax unified
 2608              		.thumb
 2609              		.thumb_func
 2610              		.fpu fpv5-sp-d16
 2612              	uxQueueMessagesWaiting:
 2613              	.LFB19:
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2614              		.loc 1 1580 0
 2615              		.cfi_startproc
 2616              		@ args = 0, pretend = 0, frame = 0
 2617              		@ frame_needed = 0, uses_anonymous_args = 0
 2618              	.LVL257:
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2619              		.loc 1 1583 0
 2620 0000 50B9     		cbnz	r0, .L245
 2621              	.LBB166:
 2622              	.LBB167:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2623              		.loc 2 237 0
 2624              		.syntax unified
 2625              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2626 0002 4FF05003 			mov r3, #80												
 2627 0006 72B6     		cpsid i													
 2628 0008 83F31188 		msr basepri, r3											
 2629 000c BFF36F8F 		isb														
 2630 0010 BFF34F8F 		dsb														
 2631 0014 62B6     		cpsie i													
 2632              	
 2633              	@ 0 "" 2
 2634              	.LVL258:
 2635              		.thumb
 2636              		.syntax unified
 2637              	.L246:
 2638 0016 FEE7     		b	.L246
 2639              	.L245:
 2640              	.LBE167:
 2641              	.LBE166:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 92


1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2642              		.loc 1 1580 0
 2643 0018 10B5     		push	{r4, lr}
 2644              	.LCFI33:
 2645              		.cfi_def_cfa_offset 8
 2646              		.cfi_offset 4, -8
 2647              		.cfi_offset 14, -4
 2648 001a 0446     		mov	r4, r0
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2649              		.loc 1 1585 0
 2650 001c FFF7FEFF 		bl	vPortEnterCritical
 2651              	.LVL259:
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2652              		.loc 1 1587 0
 2653 0020 A46B     		ldr	r4, [r4, #56]
 2654              	.LVL260:
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2655              		.loc 1 1589 0
 2656 0022 FFF7FEFF 		bl	vPortExitCritical
 2657              	.LVL261:
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2658              		.loc 1 1592 0
 2659 0026 2046     		mov	r0, r4
 2660 0028 10BD     		pop	{r4, pc}
 2661              		.cfi_endproc
 2662              	.LFE19:
 2664              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2665              		.align	1
 2666              		.global	uxQueueSpacesAvailable
 2667              		.syntax unified
 2668              		.thumb
 2669              		.thumb_func
 2670              		.fpu fpv5-sp-d16
 2672              	uxQueueSpacesAvailable:
 2673              	.LFB20:
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2674              		.loc 1 1596 0
 2675              		.cfi_startproc
 2676              		@ args = 0, pretend = 0, frame = 0
 2677              		@ frame_needed = 0, uses_anonymous_args = 0
 2678              	.LVL262:
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2679              		.loc 1 1601 0
 2680 0000 50B9     		cbnz	r0, .L250
 2681              	.LBB168:
 2682              	.LBB169:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2683              		.loc 2 237 0
 2684              		.syntax unified
 2685              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2686 0002 4FF05003 			mov r3, #80												
 2687 0006 72B6     		cpsid i													
 2688 0008 83F31188 		msr basepri, r3											
 2689 000c BFF36F8F 		isb														
 2690 0010 BFF34F8F 		dsb														
 2691 0014 62B6     		cpsie i													
 2692              	
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 93


 2693              	@ 0 "" 2
 2694              	.LVL263:
 2695              		.thumb
 2696              		.syntax unified
 2697              	.L251:
 2698 0016 FEE7     		b	.L251
 2699              	.L250:
 2700              	.LBE169:
 2701              	.LBE168:
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2702              		.loc 1 1596 0
 2703 0018 10B5     		push	{r4, lr}
 2704              	.LCFI34:
 2705              		.cfi_def_cfa_offset 8
 2706              		.cfi_offset 4, -8
 2707              		.cfi_offset 14, -4
 2708 001a 0446     		mov	r4, r0
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2709              		.loc 1 1603 0
 2710 001c FFF7FEFF 		bl	vPortEnterCritical
 2711              	.LVL264:
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2712              		.loc 1 1605 0
 2713 0020 E36B     		ldr	r3, [r4, #60]
 2714 0022 A46B     		ldr	r4, [r4, #56]
 2715              	.LVL265:
 2716 0024 1C1B     		subs	r4, r3, r4
 2717              	.LVL266:
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2718              		.loc 1 1607 0
 2719 0026 FFF7FEFF 		bl	vPortExitCritical
 2720              	.LVL267:
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2721              		.loc 1 1610 0
 2722 002a 2046     		mov	r0, r4
 2723 002c 10BD     		pop	{r4, pc}
 2724              		.cfi_endproc
 2725              	.LFE20:
 2727              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2728              		.align	1
 2729              		.global	uxQueueMessagesWaitingFromISR
 2730              		.syntax unified
 2731              		.thumb
 2732              		.thumb_func
 2733              		.fpu fpv5-sp-d16
 2735              	uxQueueMessagesWaitingFromISR:
 2736              	.LFB21:
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2737              		.loc 1 1614 0
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 0
 2740              		@ frame_needed = 0, uses_anonymous_args = 0
 2741              		@ link register save eliminated.
 2742              	.LVL268:
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2743              		.loc 1 1617 0
 2744 0000 08B1     		cbz	r0, .L257
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 94


1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2745              		.loc 1 1619 0
 2746 0002 806B     		ldr	r0, [r0, #56]
 2747              	.LVL269:
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2748              		.loc 1 1622 0
 2749 0004 7047     		bx	lr
 2750              	.LVL270:
 2751              	.L257:
 2752              	.LBB170:
 2753              	.LBB171:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2754              		.loc 2 237 0
 2755              		.syntax unified
 2756              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2757 0006 4FF05003 			mov r3, #80												
 2758 000a 72B6     		cpsid i													
 2759 000c 83F31188 		msr basepri, r3											
 2760 0010 BFF36F8F 		isb														
 2761 0014 BFF34F8F 		dsb														
 2762 0018 62B6     		cpsie i													
 2763              	
 2764              	@ 0 "" 2
 2765              	.LVL271:
 2766              		.thumb
 2767              		.syntax unified
 2768              	.L256:
 2769 001a FEE7     		b	.L256
 2770              	.LBE171:
 2771              	.LBE170:
 2772              		.cfi_endproc
 2773              	.LFE21:
 2775              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2776              		.align	1
 2777              		.global	xQueueIsQueueEmptyFromISR
 2778              		.syntax unified
 2779              		.thumb
 2780              		.thumb_func
 2781              		.fpu fpv5-sp-d16
 2783              	xQueueIsQueueEmptyFromISR:
 2784              	.LFB27:
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2785              		.loc 1 1936 0
 2786              		.cfi_startproc
 2787              		@ args = 0, pretend = 0, frame = 0
 2788              		@ frame_needed = 0, uses_anonymous_args = 0
 2789              		@ link register save eliminated.
 2790              	.LVL272:
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 2791              		.loc 1 1939 0
 2792 0000 18B1     		cbz	r0, .L263
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2793              		.loc 1 1940 0
 2794 0002 836B     		ldr	r3, [r0, #56]
 2795 0004 63B1     		cbz	r3, .L264
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2796              		.loc 1 1946 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 95


 2797 0006 0020     		movs	r0, #0
 2798              	.LVL273:
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2799              		.loc 1 1950 0
 2800 0008 7047     		bx	lr
 2801              	.LVL274:
 2802              	.L263:
 2803              	.LBB172:
 2804              	.LBB173:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2805              		.loc 2 237 0
 2806              		.syntax unified
 2807              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2808 000a 4FF05003 			mov r3, #80												
 2809 000e 72B6     		cpsid i													
 2810 0010 83F31188 		msr basepri, r3											
 2811 0014 BFF36F8F 		isb														
 2812 0018 BFF34F8F 		dsb														
 2813 001c 62B6     		cpsie i													
 2814              	
 2815              	@ 0 "" 2
 2816              	.LVL275:
 2817              		.thumb
 2818              		.syntax unified
 2819              	.L260:
 2820 001e FEE7     		b	.L260
 2821              	.L264:
 2822              	.LBE173:
 2823              	.LBE172:
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2824              		.loc 1 1942 0
 2825 0020 0120     		movs	r0, #1
 2826              	.LVL276:
 2827 0022 7047     		bx	lr
 2828              		.cfi_endproc
 2829              	.LFE27:
 2831              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2832              		.align	1
 2833              		.global	xQueueIsQueueFullFromISR
 2834              		.syntax unified
 2835              		.thumb
 2836              		.thumb_func
 2837              		.fpu fpv5-sp-d16
 2839              	xQueueIsQueueFullFromISR:
 2840              	.LFB29:
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2841              		.loc 1 1975 0
 2842              		.cfi_startproc
 2843              		@ args = 0, pretend = 0, frame = 0
 2844              		@ frame_needed = 0, uses_anonymous_args = 0
 2845              		@ link register save eliminated.
 2846              	.LVL277:
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 96


1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 2847              		.loc 1 1978 0
 2848 0000 28B1     		cbz	r0, .L270
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 2849              		.loc 1 1979 0
 2850 0002 826B     		ldr	r2, [r0, #56]
 2851 0004 C36B     		ldr	r3, [r0, #60]
 2852 0006 9A42     		cmp	r2, r3
 2853 0008 0CD0     		beq	.L271
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 2854              		.loc 1 1985 0
 2855 000a 0020     		movs	r0, #0
 2856              	.LVL278:
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2857              		.loc 1 1989 0
 2858 000c 7047     		bx	lr
 2859              	.LVL279:
 2860              	.L270:
 2861              	.LBB174:
 2862              	.LBB175:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2863              		.loc 2 237 0
 2864              		.syntax unified
 2865              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2866 000e 4FF05003 			mov r3, #80												
 2867 0012 72B6     		cpsid i													
 2868 0014 83F31188 		msr basepri, r3											
 2869 0018 BFF36F8F 		isb														
 2870 001c BFF34F8F 		dsb														
 2871 0020 62B6     		cpsie i													
 2872              	
 2873              	@ 0 "" 2
 2874              	.LVL280:
 2875              		.thumb
 2876              		.syntax unified
 2877              	.L267:
 2878 0022 FEE7     		b	.L267
 2879              	.L271:
 2880              	.LBE175:
 2881              	.LBE174:
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2882              		.loc 1 1981 0
 2883 0024 0120     		movs	r0, #1
 2884              	.LVL281:
 2885 0026 7047     		bx	lr
 2886              		.cfi_endproc
 2887              	.LFE29:
 2889              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2890              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 97


 2891              		.global	vQueueAddToRegistry
 2892              		.syntax unified
 2893              		.thumb
 2894              		.thumb_func
 2895              		.fpu fpv5-sp-d16
 2897              	vQueueAddToRegistry:
 2898              	.LFB30:
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 98


2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 99


2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 100


2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 101


2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 102


2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2899              		.loc 1 2270 0
 2900              		.cfi_startproc
 2901              		@ args = 0, pretend = 0, frame = 0
 2902              		@ frame_needed = 0, uses_anonymous_args = 0
 2903              		@ link register save eliminated.
 2904              	.LVL282:
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2905              		.loc 1 2275 0
 2906 0000 0023     		movs	r3, #0
 2907              	.LVL283:
 2908              	.L273:
 2909              		.loc 1 2275 0 is_stmt 0 discriminator 1
 2910 0002 072B     		cmp	r3, #7
 2911 0004 0CD8     		bhi	.L277
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 2912              		.loc 1 2277 0 is_stmt 1
 2913 0006 074A     		ldr	r2, .L279
 2914 0008 52F83320 		ldr	r2, [r2, r3, lsl #3]
 2915 000c 0AB1     		cbz	r2, .L278
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2916              		.loc 1 2275 0 discriminator 2
 2917 000e 0133     		adds	r3, r3, #1
 2918              	.LVL284:
 2919 0010 F7E7     		b	.L273
 2920              	.L278:
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 2921              		.loc 1 2280 0
 2922 0012 044A     		ldr	r2, .L279
 2923 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2924              		.loc 1 2281 0
 2925 0018 02EBC303 		add	r3, r2, r3, lsl #3
 2926              	.LVL285:
 2927 001c 5860     		str	r0, [r3, #4]
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 2928              		.loc 1 2284 0
 2929 001e 7047     		bx	lr
 2930              	.LVL286:
 2931              	.L277:
 2932 0020 7047     		bx	lr
 2933              	.L280:
 2934 0022 00BF     		.align	2
 2935              	.L279:
 2936 0024 00000000 		.word	xQueueRegistry
 2937              		.cfi_endproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 103


 2938              	.LFE30:
 2940              		.section	.text.pcQueueGetName,"ax",%progbits
 2941              		.align	1
 2942              		.global	pcQueueGetName
 2943              		.syntax unified
 2944              		.thumb
 2945              		.thumb_func
 2946              		.fpu fpv5-sp-d16
 2948              	pcQueueGetName:
 2949              	.LFB31:
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2950              		.loc 1 2299 0
 2951              		.cfi_startproc
 2952              		@ args = 0, pretend = 0, frame = 0
 2953              		@ frame_needed = 0, uses_anonymous_args = 0
 2954              		@ link register save eliminated.
 2955              	.LVL287:
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2956              		.loc 1 2305 0
 2957 0000 0023     		movs	r3, #0
 2958              	.LVL288:
 2959              	.L282:
 2960              		.loc 1 2305 0 is_stmt 0 discriminator 1
 2961 0002 072B     		cmp	r3, #7
 2962 0004 0BD8     		bhi	.L286
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2963              		.loc 1 2307 0 is_stmt 1
 2964 0006 074A     		ldr	r2, .L288
 2965 0008 02EBC302 		add	r2, r2, r3, lsl #3
 2966 000c 5268     		ldr	r2, [r2, #4]
 2967 000e 8242     		cmp	r2, r0
 2968 0010 01D0     		beq	.L287
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2969              		.loc 1 2305 0 discriminator 2
 2970 0012 0133     		adds	r3, r3, #1
 2971              	.LVL289:
 2972 0014 F5E7     		b	.L282
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 104


 2973              	.L287:
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 2974              		.loc 1 2309 0
 2975 0016 034A     		ldr	r2, .L288
 2976 0018 52F83300 		ldr	r0, [r2, r3, lsl #3]
 2977              	.LVL290:
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 2978              		.loc 1 2310 0
 2979 001c 7047     		bx	lr
 2980              	.LVL291:
 2981              	.L286:
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2982              		.loc 1 2301 0
 2983 001e 0020     		movs	r0, #0
 2984              	.LVL292:
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2985              		.loc 1 2319 0
 2986 0020 7047     		bx	lr
 2987              	.L289:
 2988 0022 00BF     		.align	2
 2989              	.L288:
 2990 0024 00000000 		.word	xQueueRegistry
 2991              		.cfi_endproc
 2992              	.LFE31:
 2994              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2995              		.align	1
 2996              		.global	vQueueUnregisterQueue
 2997              		.syntax unified
 2998              		.thumb
 2999              		.thumb_func
 3000              		.fpu fpv5-sp-d16
 3002              	vQueueUnregisterQueue:
 3003              	.LFB32:
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3004              		.loc 1 2327 0
 3005              		.cfi_startproc
 3006              		@ args = 0, pretend = 0, frame = 0
 3007              		@ frame_needed = 0, uses_anonymous_args = 0
 3008              		@ link register save eliminated.
 3009              	.LVL293:
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 105


2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3010              		.loc 1 2332 0
 3011 0000 0023     		movs	r3, #0
 3012              	.LVL294:
 3013              	.L291:
 3014              		.loc 1 2332 0 is_stmt 0 discriminator 1
 3015 0002 072B     		cmp	r3, #7
 3016 0004 0FD8     		bhi	.L295
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3017              		.loc 1 2334 0 is_stmt 1
 3018 0006 084A     		ldr	r2, .L297
 3019 0008 02EBC302 		add	r2, r2, r3, lsl #3
 3020 000c 5268     		ldr	r2, [r2, #4]
 3021 000e 8242     		cmp	r2, r0
 3022 0010 01D0     		beq	.L296
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3023              		.loc 1 2332 0 discriminator 2
 3024 0012 0133     		adds	r3, r3, #1
 3025              	.LVL295:
 3026 0014 F5E7     		b	.L291
 3027              	.L296:
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 3028              		.loc 1 2337 0
 3029 0016 044A     		ldr	r2, .L297
 3030 0018 0021     		movs	r1, #0
 3031 001a 42F83310 		str	r1, [r2, r3, lsl #3]
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 3032              		.loc 1 2342 0
 3033 001e 02EBC303 		add	r3, r2, r3, lsl #3
 3034              	.LVL296:
 3035 0022 5960     		str	r1, [r3, #4]
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3036              		.loc 1 2343 0
 3037 0024 7047     		bx	lr
 3038              	.LVL297:
 3039              	.L295:
 3040 0026 7047     		bx	lr
 3041              	.L298:
 3042              		.align	2
 3043              	.L297:
 3044 0028 00000000 		.word	xQueueRegistry
 3045              		.cfi_endproc
 3046              	.LFE32:
 3048              		.section	.text.vQueueDelete,"ax",%progbits
 3049              		.align	1
 3050              		.global	vQueueDelete
 3051              		.syntax unified
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 106


 3052              		.thumb
 3053              		.thumb_func
 3054              		.fpu fpv5-sp-d16
 3056              	vQueueDelete:
 3057              	.LFB22:
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 3058              		.loc 1 1626 0
 3059              		.cfi_startproc
 3060              		@ args = 0, pretend = 0, frame = 0
 3061              		@ frame_needed = 0, uses_anonymous_args = 0
 3062              	.LVL298:
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 3063              		.loc 1 1629 0
 3064 0000 50B9     		cbnz	r0, .L300
 3065              	.LBB176:
 3066              	.LBB177:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3067              		.loc 2 237 0
 3068              		.syntax unified
 3069              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3070 0002 4FF05003 			mov r3, #80												
 3071 0006 72B6     		cpsid i													
 3072 0008 83F31188 		msr basepri, r3											
 3073 000c BFF36F8F 		isb														
 3074 0010 BFF34F8F 		dsb														
 3075 0014 62B6     		cpsie i													
 3076              	
 3077              	@ 0 "" 2
 3078              	.LVL299:
 3079              		.thumb
 3080              		.syntax unified
 3081              	.L301:
 3082 0016 FEE7     		b	.L301
 3083              	.L300:
 3084              	.LBE177:
 3085              	.LBE176:
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 3086              		.loc 1 1626 0
 3087 0018 10B5     		push	{r4, lr}
 3088              	.LCFI35:
 3089              		.cfi_def_cfa_offset 8
 3090              		.cfi_offset 4, -8
 3091              		.cfi_offset 14, -4
 3092 001a 0446     		mov	r4, r0
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3093              		.loc 1 1634 0
 3094 001c FFF7FEFF 		bl	vQueueUnregisterQueue
 3095              	.LVL300:
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3096              		.loc 1 1642 0
 3097 0020 2046     		mov	r0, r4
 3098 0022 FFF7FEFF 		bl	vPortFree
 3099              	.LVL301:
 3100 0026 10BD     		pop	{r4, pc}
 3101              		.cfi_endproc
 3102              	.LFE22:
 3104              		.comm	xQueueRegistry,64,4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 107


 3105              		.text
 3106              	.Letext0:
 3107              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 3108              		.file 4 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 3109              		.file 5 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 3110              		.file 6 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 3111              		.file 7 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 3112              		.file 8 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdlib.h"
 3113              		.file 9 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 3114              		.file 10 "Inc/FreeRTOSConfig.h"
 3115              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 3116              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3117              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 3118              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 108


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:18     .text.prvIsQueueFull:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:24     .text.prvIsQueueFull:00000000 prvIsQueueFull
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:66     .text.prvIsQueueEmpty:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:72     .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:111    .text.prvCopyDataToQueue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:117    .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:236    .text.prvCopyDataFromQueue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:242    .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:290    .text.prvUnlockQueue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:296    .text.prvUnlockQueue:00000000 prvUnlockQueue
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:399    .text.xQueueGenericReset:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:406    .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:516    .text.xQueueGenericReset:00000080 $d
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:521    .text.prvInitialiseNewQueue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:527    .text.prvInitialiseNewQueue:00000000 prvInitialiseNewQueue
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:568    .text.xQueueGenericCreate:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:575    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:664    .text.xQueueCreateCountingSemaphore:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:671    .text.xQueueCreateCountingSemaphore:00000000 xQueueCreateCountingSemaphore
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:752    .text.xQueueGenericSend:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:759    .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:1106   .text.xQueueGenericSend:00000194 $d
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:1111   .text.prvInitialiseMutex:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:1117   .text.prvInitialiseMutex:00000000 prvInitialiseMutex
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:1156   .text.xQueueCreateMutex:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:1163   .text.xQueueCreateMutex:00000000 xQueueCreateMutex
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:1195   .text.xQueueGiveMutexRecursive:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:1202   .text.xQueueGiveMutexRecursive:00000000 xQueueGiveMutexRecursive
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:1279   .text.xQueueGenericSendFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:1286   .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:1516   .text.xQueueGiveFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:1523   .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:1747   .text.xQueueGenericReceive:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:1754   .text.xQueueGenericReceive:00000000 xQueueGenericReceive
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2131   .text.xQueueGenericReceive:000001b8 $d
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2136   .text.xQueueTakeMutexRecursive:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2143   .text.xQueueTakeMutexRecursive:00000000 xQueueTakeMutexRecursive
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2236   .text.xQueueReceiveFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2243   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2434   .text.xQueuePeekFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2441   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2605   .text.uxQueueMessagesWaiting:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2612   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2665   .text.uxQueueSpacesAvailable:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2672   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2728   .text.uxQueueMessagesWaitingFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2735   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2776   .text.xQueueIsQueueEmptyFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2783   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2832   .text.xQueueIsQueueFullFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2839   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2890   .text.vQueueAddToRegistry:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2897   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2936   .text.vQueueAddToRegistry:00000024 $d
                            *COM*:00000040 xQueueRegistry
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s 			page 109


C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2941   .text.pcQueueGetName:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2948   .text.pcQueueGetName:00000000 pcQueueGetName
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2990   .text.pcQueueGetName:00000024 $d
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:2995   .text.vQueueUnregisterQueue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:3002   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:3044   .text.vQueueUnregisterQueue:00000028 $d
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:3049   .text.vQueueDelete:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbQIBtI.s:3056   .text.vQueueDelete:00000000 vQueueDelete
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
xTaskResumeAll
vTaskSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskGetCurrentTaskHandle
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
vTaskPriorityInherit
vPortFree
