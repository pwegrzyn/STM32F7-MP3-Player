ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"syscalls.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._sbrk,"ax",%progbits
  18              		.align	1
  19              		.global	_sbrk
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	_sbrk:
  26              	.LFB154:
  27              		.file 1 "Src/syscalls.c"
   1:Src/syscalls.c **** /**
   2:Src/syscalls.c ****  ******************************************************************************
   3:Src/syscalls.c ****   * File Name          : syscalls.c
   4:Src/syscalls.c ****   * Description        : Support files for GNU libc. Files in the system
   5:Src/syscalls.c ****   *                      namespace go here. Files in the C namespace (ie those
   6:Src/syscalls.c ****   *                      that do not start with an underscore) go in .c.
   7:Src/syscalls.c ****   ******************************************************************************
   8:Src/syscalls.c ****   * This notice applies to any and all portions of this file
   9:Src/syscalls.c ****   * that are not between comment pairs USER CODE BEGIN and
  10:Src/syscalls.c ****   * USER CODE END. Other portions of this file, whether 
  11:Src/syscalls.c ****   * inserted by the user or by software development tools
  12:Src/syscalls.c ****   * are owned by their respective copyright owners.
  13:Src/syscalls.c ****   *
  14:Src/syscalls.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  15:Src/syscalls.c ****   * All rights reserved.
  16:Src/syscalls.c ****   *
  17:Src/syscalls.c ****   * Redistribution and use in source and binary forms, with or without 
  18:Src/syscalls.c ****   * modification, are permitted, provided that the following conditions are met:
  19:Src/syscalls.c ****   *
  20:Src/syscalls.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  21:Src/syscalls.c ****   *    this list of conditions and the following disclaimer.
  22:Src/syscalls.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/syscalls.c ****   *    this list of conditions and the following disclaimer in the documentation
  24:Src/syscalls.c ****   *    and/or other materials provided with the distribution.
  25:Src/syscalls.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  26:Src/syscalls.c ****   *    contributors to this software may be used to endorse or promote products 
  27:Src/syscalls.c ****   *    derived from this software without specific written permission.
  28:Src/syscalls.c ****   * 4. This software, including modifications and/or derivative works of this 
  29:Src/syscalls.c ****   *    software, must execute solely and exclusively on microcontroller or
  30:Src/syscalls.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  31:Src/syscalls.c ****   * 5. Redistribution and use of this software other than as permitted under 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 2


  32:Src/syscalls.c ****   *    this license is void and will automatically terminate your rights under 
  33:Src/syscalls.c ****   *    this license. 
  34:Src/syscalls.c ****   *
  35:Src/syscalls.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  36:Src/syscalls.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  37:Src/syscalls.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  38:Src/syscalls.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  39:Src/syscalls.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  40:Src/syscalls.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  41:Src/syscalls.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  42:Src/syscalls.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  43:Src/syscalls.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  44:Src/syscalls.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  45:Src/syscalls.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  46:Src/syscalls.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Src/syscalls.c ****   *
  48:Src/syscalls.c ****   ******************************************************************************
  49:Src/syscalls.c ****   */
  50:Src/syscalls.c ****   
  51:Src/syscalls.c ****  /******************************************************************************
  52:Src/syscalls.c ****  * If LWIP_SOCKET option is enabled:
  53:Src/syscalls.c ****  *  - include this syscalls.c file
  54:Src/syscalls.c ****  ******************************************************************************/
  55:Src/syscalls.c **** 
  56:Src/syscalls.c **** #ifdef __cplusplus
  57:Src/syscalls.c ****  extern "C" {
  58:Src/syscalls.c **** #endif
  59:Src/syscalls.c **** 
  60:Src/syscalls.c **** /* USER CODE BEGIN 0 */
  61:Src/syscalls.c **** 
  62:Src/syscalls.c **** /* USER CODE END 0 */
  63:Src/syscalls.c **** 
  64:Src/syscalls.c **** /* Support files for GNU libc.  Files in the system namespace go here.
  65:Src/syscalls.c ****    Files in the C namespace (ie those that do not start with an
  66:Src/syscalls.c ****    underscore) go in .c.  */
  67:Src/syscalls.c **** 
  68:Src/syscalls.c **** #include <_ansi.h>
  69:Src/syscalls.c **** #include <sys/types.h>
  70:Src/syscalls.c **** #include <sys/stat.h>
  71:Src/syscalls.c **** #include <sys/fcntl.h>
  72:Src/syscalls.c **** #include <stdio.h>
  73:Src/syscalls.c **** #include <string.h>
  74:Src/syscalls.c **** #include <time.h>
  75:Src/syscalls.c **** #include <sys/time.h>
  76:Src/syscalls.c **** #include <sys/times.h>
  77:Src/syscalls.c **** #include <errno.h>
  78:Src/syscalls.c **** #include <reent.h>
  79:Src/syscalls.c **** #include <unistd.h>
  80:Src/syscalls.c **** #include <sys/wait.h>
  81:Src/syscalls.c **** 
  82:Src/syscalls.c **** /* USER CODE BEGIN 1 */
  83:Src/syscalls.c **** 
  84:Src/syscalls.c **** /* USER CODE END 1 */
  85:Src/syscalls.c **** 
  86:Src/syscalls.c **** #define MAX_STACK_SIZE 0x2000
  87:Src/syscalls.c **** 
  88:Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 3


  89:Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  90:Src/syscalls.c **** 
  91:Src/syscalls.c **** /* USER CODE BEGIN 2 */
  92:Src/syscalls.c **** 
  93:Src/syscalls.c **** /* USER CODE END 2 */
  94:Src/syscalls.c **** 
  95:Src/syscalls.c **** /* USER CODE BEGIN 3 */
  96:Src/syscalls.c **** caddr_t _sbrk(int incr)
  97:Src/syscalls.c **** {
  28              		.loc 1 97 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 0346     		mov	r3, r0
  98:Src/syscalls.c **** 	extern char end asm("end");
  99:Src/syscalls.c **** 	static char *heap_end;
 100:Src/syscalls.c **** 	char *prev_heap_end,*min_stack_ptr;
 101:Src/syscalls.c **** 
 102:Src/syscalls.c **** 	if (heap_end == 0)
  35              		.loc 1 102 0
  36 0002 0D4A     		ldr	r2, .L7
  37 0004 1268     		ldr	r2, [r2]
  38 0006 62B1     		cbz	r2, .L5
  39              	.L2:
 103:Src/syscalls.c **** 		heap_end = &end;
 104:Src/syscalls.c **** 
 105:Src/syscalls.c **** 	prev_heap_end = heap_end;
  40              		.loc 1 105 0
  41 0008 0B4A     		ldr	r2, .L7
  42 000a 1068     		ldr	r0, [r2]
  43              	.LVL1:
 106:Src/syscalls.c **** 
 107:Src/syscalls.c **** 	/* Use the NVIC offset register to locate the main stack pointer. */
 108:Src/syscalls.c **** 	min_stack_ptr = (char*)(*(unsigned int *)*(unsigned int *)0xE000ED08);
  44              		.loc 1 108 0
  45 000c 0B4A     		ldr	r2, .L7+4
  46 000e 1268     		ldr	r2, [r2]
  47 0010 1268     		ldr	r2, [r2]
  48              	.LVL2:
 109:Src/syscalls.c **** 	/* Locate the STACK bottom address */
 110:Src/syscalls.c **** 	min_stack_ptr -= MAX_STACK_SIZE;
  49              		.loc 1 110 0
  50 0012 A2F50052 		sub	r2, r2, #8192
  51              	.LVL3:
 111:Src/syscalls.c **** 
 112:Src/syscalls.c **** 	if (heap_end + incr > min_stack_ptr)
  52              		.loc 1 112 0
  53 0016 0344     		add	r3, r3, r0
  54              	.LVL4:
  55 0018 9342     		cmp	r3, r2
  56 001a 06D8     		bhi	.L6
 113:Src/syscalls.c **** 	{
 114:Src/syscalls.c **** 		errno = ENOMEM;
 115:Src/syscalls.c **** 		return (caddr_t) -1;
 116:Src/syscalls.c **** 	}
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 4


 117:Src/syscalls.c **** 
 118:Src/syscalls.c **** 	heap_end += incr;
  57              		.loc 1 118 0
  58 001c 064A     		ldr	r2, .L7
  59              	.LVL5:
  60 001e 1360     		str	r3, [r2]
  61              	.LVL6:
 119:Src/syscalls.c **** 
 120:Src/syscalls.c **** 	return (caddr_t) prev_heap_end;
 121:Src/syscalls.c **** }
  62              		.loc 1 121 0
  63 0020 7047     		bx	lr
  64              	.LVL7:
  65              	.L5:
 103:Src/syscalls.c **** 
  66              		.loc 1 103 0
  67 0022 054A     		ldr	r2, .L7
  68 0024 0649     		ldr	r1, .L7+8
  69 0026 1160     		str	r1, [r2]
  70 0028 EEE7     		b	.L2
  71              	.LVL8:
  72              	.L6:
 114:Src/syscalls.c **** 		return (caddr_t) -1;
  73              		.loc 1 114 0
  74 002a 064B     		ldr	r3, .L7+12
  75 002c 0C22     		movs	r2, #12
  76              	.LVL9:
  77 002e 1A60     		str	r2, [r3]
  78              	.LVL10:
 115:Src/syscalls.c **** 	}
  79              		.loc 1 115 0
  80 0030 4FF0FF30 		mov	r0, #-1
  81              	.LVL11:
  82 0034 7047     		bx	lr
  83              	.L8:
  84 0036 00BF     		.align	2
  85              	.L7:
  86 0038 00000000 		.word	.LANCHOR0
  87 003c 08ED00E0 		.word	-536810232
  88 0040 00000000 		.word	end
  89 0044 00000000 		.word	errno
  90              		.cfi_endproc
  91              	.LFE154:
  93              		.section	.text._gettimeofday,"ax",%progbits
  94              		.align	1
  95              		.global	_gettimeofday
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv5-sp-d16
 101              	_gettimeofday:
 102              	.LFB155:
 122:Src/syscalls.c **** /* USER CODE END 3 */
 123:Src/syscalls.c **** 
 124:Src/syscalls.c **** /* USER CODE BEGIN 4 */
 125:Src/syscalls.c **** /*
 126:Src/syscalls.c ****  * _gettimeofday primitive (Stub function)
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 5


 127:Src/syscalls.c ****  * */
 128:Src/syscalls.c **** 
 129:Src/syscalls.c **** int _gettimeofday (struct timeval * tp, struct timezone * tzp)
 130:Src/syscalls.c **** {
 103              		.loc 1 130 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.LVL12:
 131:Src/syscalls.c ****   /* Return fixed data for the timezone.  */
 132:Src/syscalls.c ****   if (tzp)
 109              		.loc 1 132 0
 110 0000 11B1     		cbz	r1, .L10
 133:Src/syscalls.c ****     {
 134:Src/syscalls.c ****       tzp->tz_minuteswest = 0;
 111              		.loc 1 134 0
 112 0002 0022     		movs	r2, #0
 113 0004 0A60     		str	r2, [r1]
 135:Src/syscalls.c ****       tzp->tz_dsttime = 0;
 114              		.loc 1 135 0
 115 0006 4A60     		str	r2, [r1, #4]
 116              	.L10:
 136:Src/syscalls.c ****     }
 137:Src/syscalls.c **** 
 138:Src/syscalls.c ****   return 0;
 139:Src/syscalls.c **** }
 117              		.loc 1 139 0
 118 0008 0020     		movs	r0, #0
 119              	.LVL13:
 120 000a 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE155:
 124              		.section	.text.initialise_monitor_handles,"ax",%progbits
 125              		.align	1
 126              		.global	initialise_monitor_handles
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv5-sp-d16
 132              	initialise_monitor_handles:
 133              	.LFB156:
 140:Src/syscalls.c **** /* USER CODE END 4 */
 141:Src/syscalls.c **** 
 142:Src/syscalls.c **** /* USER CODE BEGIN 5 */
 143:Src/syscalls.c **** void initialise_monitor_handles()
 144:Src/syscalls.c **** {
 134              		.loc 1 144 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 145:Src/syscalls.c **** }
 139              		.loc 1 145 0
 140 0000 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE156:
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 6


 144              		.section	.text._getpid,"ax",%progbits
 145              		.align	1
 146              		.global	_getpid
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv5-sp-d16
 152              	_getpid:
 153              	.LFB157:
 146:Src/syscalls.c **** 
 147:Src/syscalls.c **** int _getpid(void)
 148:Src/syscalls.c **** {
 154              		.loc 1 148 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 149:Src/syscalls.c **** 	return 1;
 150:Src/syscalls.c **** }
 159              		.loc 1 150 0
 160 0000 0120     		movs	r0, #1
 161 0002 7047     		bx	lr
 162              		.cfi_endproc
 163              	.LFE157:
 165              		.section	.text._kill,"ax",%progbits
 166              		.align	1
 167              		.global	_kill
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu fpv5-sp-d16
 173              	_kill:
 174              	.LFB158:
 151:Src/syscalls.c **** 
 152:Src/syscalls.c **** int _kill(int pid, int sig)
 153:Src/syscalls.c **** {
 175              		.loc 1 153 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL14:
 154:Src/syscalls.c **** 	errno = EINVAL;
 181              		.loc 1 154 0
 182 0000 024B     		ldr	r3, .L14
 183 0002 1622     		movs	r2, #22
 184 0004 1A60     		str	r2, [r3]
 155:Src/syscalls.c **** 	return -1;
 156:Src/syscalls.c **** }
 185              		.loc 1 156 0
 186 0006 4FF0FF30 		mov	r0, #-1
 187              	.LVL15:
 188 000a 7047     		bx	lr
 189              	.L15:
 190              		.align	2
 191              	.L14:
 192 000c 00000000 		.word	errno
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 7


 193              		.cfi_endproc
 194              	.LFE158:
 196              		.section	.text._exit,"ax",%progbits
 197              		.align	1
 198              		.global	_exit
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu fpv5-sp-d16
 204              	_exit:
 205              	.LFB159:
 157:Src/syscalls.c **** 
 158:Src/syscalls.c **** void _exit (int status)
 159:Src/syscalls.c **** {
 206              		.loc 1 159 0
 207              		.cfi_startproc
 208              		@ Volatile: function does not return.
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              	.LVL16:
 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI0:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 160:Src/syscalls.c **** 	_kill(status, -1);
 217              		.loc 1 160 0
 218 0002 4FF0FF31 		mov	r1, #-1
 219 0006 FFF7FEFF 		bl	_kill
 220              	.LVL17:
 221              	.L17:
 222 000a FEE7     		b	.L17
 223              		.cfi_endproc
 224              	.LFE159:
 226              		.section	.text._write,"ax",%progbits
 227              		.align	1
 228              		.global	_write
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv5-sp-d16
 234              	_write:
 235              	.LFB160:
 161:Src/syscalls.c **** 	while (1) {}
 162:Src/syscalls.c **** }
 163:Src/syscalls.c **** 
 164:Src/syscalls.c **** int _write(int file, char *ptr, int len)
 165:Src/syscalls.c **** {
 236              		.loc 1 165 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              	.LVL18:
 241 0000 70B5     		push	{r4, r5, r6, lr}
 242              	.LCFI1:
 243              		.cfi_def_cfa_offset 16
 244              		.cfi_offset 4, -16
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 8


 245              		.cfi_offset 5, -12
 246              		.cfi_offset 6, -8
 247              		.cfi_offset 14, -4
 248 0002 1646     		mov	r6, r2
 249              	.LVL19:
 166:Src/syscalls.c **** 	int DataIdx;
 167:Src/syscalls.c **** 
 168:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 250              		.loc 1 168 0
 251 0004 0024     		movs	r4, #0
 252 0006 05E0     		b	.L20
 253              	.LVL20:
 254              	.L21:
 169:Src/syscalls.c **** 	{
 170:Src/syscalls.c **** 	   __io_putchar( *ptr++ );
 255              		.loc 1 170 0 discriminator 3
 256 0008 4D1C     		adds	r5, r1, #1
 257              	.LVL21:
 258 000a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 259 000c FFF7FEFF 		bl	__io_putchar
 260              	.LVL22:
 168:Src/syscalls.c **** 	{
 261              		.loc 1 168 0 discriminator 3
 262 0010 0134     		adds	r4, r4, #1
 263              	.LVL23:
 264              		.loc 1 170 0 discriminator 3
 265 0012 2946     		mov	r1, r5
 266              	.LVL24:
 267              	.L20:
 168:Src/syscalls.c **** 	{
 268              		.loc 1 168 0 discriminator 1
 269 0014 B442     		cmp	r4, r6
 270 0016 F7DB     		blt	.L21
 171:Src/syscalls.c **** 	}
 172:Src/syscalls.c **** 	return len;
 173:Src/syscalls.c **** }
 271              		.loc 1 173 0
 272 0018 3046     		mov	r0, r6
 273 001a 70BD     		pop	{r4, r5, r6, pc}
 274              		.cfi_endproc
 275              	.LFE160:
 277              		.section	.text._close,"ax",%progbits
 278              		.align	1
 279              		.global	_close
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv5-sp-d16
 285              	_close:
 286              	.LFB161:
 174:Src/syscalls.c **** 
 175:Src/syscalls.c **** int _close(int file)
 176:Src/syscalls.c **** {
 287              		.loc 1 176 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 9


 291              		@ link register save eliminated.
 292              	.LVL25:
 177:Src/syscalls.c **** 	return -1;
 178:Src/syscalls.c **** }
 293              		.loc 1 178 0
 294 0000 4FF0FF30 		mov	r0, #-1
 295              	.LVL26:
 296 0004 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE161:
 300              		.section	.text._fstat,"ax",%progbits
 301              		.align	1
 302              		.global	_fstat
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv5-sp-d16
 308              	_fstat:
 309              	.LFB162:
 179:Src/syscalls.c **** 
 180:Src/syscalls.c **** int _fstat(int file, struct stat *st)
 181:Src/syscalls.c **** {
 310              		.loc 1 181 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL27:
 182:Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 316              		.loc 1 182 0
 317 0000 4FF40053 		mov	r3, #8192
 318 0004 4B60     		str	r3, [r1, #4]
 183:Src/syscalls.c **** 	return 0;
 184:Src/syscalls.c **** }
 319              		.loc 1 184 0
 320 0006 0020     		movs	r0, #0
 321              	.LVL28:
 322 0008 7047     		bx	lr
 323              		.cfi_endproc
 324              	.LFE162:
 326              		.section	.text._isatty,"ax",%progbits
 327              		.align	1
 328              		.global	_isatty
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu fpv5-sp-d16
 334              	_isatty:
 335              	.LFB163:
 185:Src/syscalls.c **** 
 186:Src/syscalls.c **** int _isatty(int file)
 187:Src/syscalls.c **** {
 336              		.loc 1 187 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 10


 341              	.LVL29:
 188:Src/syscalls.c **** 	return 1;
 189:Src/syscalls.c **** }
 342              		.loc 1 189 0
 343 0000 0120     		movs	r0, #1
 344              	.LVL30:
 345 0002 7047     		bx	lr
 346              		.cfi_endproc
 347              	.LFE163:
 349              		.section	.text._lseek,"ax",%progbits
 350              		.align	1
 351              		.global	_lseek
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu fpv5-sp-d16
 357              	_lseek:
 358              	.LFB164:
 190:Src/syscalls.c **** 
 191:Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 192:Src/syscalls.c **** {
 359              		.loc 1 192 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 364              	.LVL31:
 193:Src/syscalls.c **** 	return 0;
 194:Src/syscalls.c **** }
 365              		.loc 1 194 0
 366 0000 0020     		movs	r0, #0
 367              	.LVL32:
 368 0002 7047     		bx	lr
 369              		.cfi_endproc
 370              	.LFE164:
 372              		.section	.text._read,"ax",%progbits
 373              		.align	1
 374              		.global	_read
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv5-sp-d16
 380              	_read:
 381              	.LFB165:
 195:Src/syscalls.c **** 
 196:Src/syscalls.c **** int _read(int file, char *ptr, int len)
 197:Src/syscalls.c **** {
 382              		.loc 1 197 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              	.LVL33:
 387 0000 70B5     		push	{r4, r5, r6, lr}
 388              	.LCFI2:
 389              		.cfi_def_cfa_offset 16
 390              		.cfi_offset 4, -16
 391              		.cfi_offset 5, -12
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 11


 392              		.cfi_offset 6, -8
 393              		.cfi_offset 14, -4
 394 0002 0D46     		mov	r5, r1
 395 0004 1646     		mov	r6, r2
 396              	.LVL34:
 198:Src/syscalls.c **** 	int DataIdx;
 199:Src/syscalls.c **** 
 200:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 397              		.loc 1 200 0
 398 0006 0024     		movs	r4, #0
 399 0008 04E0     		b	.L28
 400              	.LVL35:
 401              	.L29:
 201:Src/syscalls.c **** 	{
 202:Src/syscalls.c **** 	  *ptr++ = __io_getchar();
 402              		.loc 1 202 0 discriminator 3
 403 000a FFF7FEFF 		bl	__io_getchar
 404              	.LVL36:
 405 000e 2870     		strb	r0, [r5]
 200:Src/syscalls.c **** 	{
 406              		.loc 1 200 0 discriminator 3
 407 0010 0134     		adds	r4, r4, #1
 408              	.LVL37:
 409              		.loc 1 202 0 discriminator 3
 410 0012 0135     		adds	r5, r5, #1
 411              	.LVL38:
 412              	.L28:
 200:Src/syscalls.c **** 	{
 413              		.loc 1 200 0 discriminator 1
 414 0014 B442     		cmp	r4, r6
 415 0016 F8DB     		blt	.L29
 203:Src/syscalls.c **** 	}
 204:Src/syscalls.c **** 
 205:Src/syscalls.c ****    return len;
 206:Src/syscalls.c **** }
 416              		.loc 1 206 0
 417 0018 3046     		mov	r0, r6
 418 001a 70BD     		pop	{r4, r5, r6, pc}
 419              		.cfi_endproc
 420              	.LFE165:
 422              		.section	.text._open,"ax",%progbits
 423              		.align	1
 424              		.global	_open
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 428              		.fpu fpv5-sp-d16
 430              	_open:
 431              	.LFB166:
 207:Src/syscalls.c **** 
 208:Src/syscalls.c **** int _open(char *path, int flags, ...)
 209:Src/syscalls.c **** {
 432              		.loc 1 209 0
 433              		.cfi_startproc
 434              		@ args = 4, pretend = 12, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 1
 436              		@ link register save eliminated.
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 12


 437              	.LVL39:
 438 0000 0EB4     		push	{r1, r2, r3}
 439              	.LCFI3:
 440              		.cfi_def_cfa_offset 12
 441              		.cfi_offset 1, -12
 442              		.cfi_offset 2, -8
 443              		.cfi_offset 3, -4
 210:Src/syscalls.c **** 	/* Pretend like we always fail */
 211:Src/syscalls.c **** 	return -1;
 212:Src/syscalls.c **** }
 444              		.loc 1 212 0
 445 0002 4FF0FF30 		mov	r0, #-1
 446              	.LVL40:
 447 0006 03B0     		add	sp, sp, #12
 448              	.LCFI4:
 449              		.cfi_restore 3
 450              		.cfi_restore 2
 451              		.cfi_restore 1
 452              		.cfi_def_cfa_offset 0
 453 0008 7047     		bx	lr
 454              		.cfi_endproc
 455              	.LFE166:
 457              		.section	.text._wait,"ax",%progbits
 458              		.align	1
 459              		.global	_wait
 460              		.syntax unified
 461              		.thumb
 462              		.thumb_func
 463              		.fpu fpv5-sp-d16
 465              	_wait:
 466              	.LFB167:
 213:Src/syscalls.c **** 
 214:Src/syscalls.c **** int _wait(int *status)
 215:Src/syscalls.c **** {
 467              		.loc 1 215 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472              	.LVL41:
 216:Src/syscalls.c **** 	errno = ECHILD;
 473              		.loc 1 216 0
 474 0000 024B     		ldr	r3, .L34
 475 0002 0A22     		movs	r2, #10
 476 0004 1A60     		str	r2, [r3]
 217:Src/syscalls.c **** 	return -1;
 218:Src/syscalls.c **** }
 477              		.loc 1 218 0
 478 0006 4FF0FF30 		mov	r0, #-1
 479              	.LVL42:
 480 000a 7047     		bx	lr
 481              	.L35:
 482              		.align	2
 483              	.L34:
 484 000c 00000000 		.word	errno
 485              		.cfi_endproc
 486              	.LFE167:
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 13


 488              		.section	.text._unlink,"ax",%progbits
 489              		.align	1
 490              		.global	_unlink
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv5-sp-d16
 496              	_unlink:
 497              	.LFB168:
 219:Src/syscalls.c **** 
 220:Src/syscalls.c **** int _unlink(char *name)
 221:Src/syscalls.c **** {
 498              		.loc 1 221 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503              	.LVL43:
 222:Src/syscalls.c **** 	errno = ENOENT;
 504              		.loc 1 222 0
 505 0000 024B     		ldr	r3, .L37
 506 0002 0222     		movs	r2, #2
 507 0004 1A60     		str	r2, [r3]
 223:Src/syscalls.c **** 	return -1;
 224:Src/syscalls.c **** }
 508              		.loc 1 224 0
 509 0006 4FF0FF30 		mov	r0, #-1
 510              	.LVL44:
 511 000a 7047     		bx	lr
 512              	.L38:
 513              		.align	2
 514              	.L37:
 515 000c 00000000 		.word	errno
 516              		.cfi_endproc
 517              	.LFE168:
 519              		.section	.text._times,"ax",%progbits
 520              		.align	1
 521              		.global	_times
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 525              		.fpu fpv5-sp-d16
 527              	_times:
 528              	.LFB169:
 225:Src/syscalls.c **** 
 226:Src/syscalls.c **** int _times(struct tms *buf)
 227:Src/syscalls.c **** {
 529              		.loc 1 227 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		@ link register save eliminated.
 534              	.LVL45:
 228:Src/syscalls.c **** 	return -1;
 229:Src/syscalls.c **** }
 535              		.loc 1 229 0
 536 0000 4FF0FF30 		mov	r0, #-1
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 14


 537              	.LVL46:
 538 0004 7047     		bx	lr
 539              		.cfi_endproc
 540              	.LFE169:
 542              		.section	.text._stat,"ax",%progbits
 543              		.align	1
 544              		.global	_stat
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu fpv5-sp-d16
 550              	_stat:
 551              	.LFB170:
 230:Src/syscalls.c **** 
 231:Src/syscalls.c **** int _stat(char *file, struct stat *st)
 232:Src/syscalls.c **** {
 552              		.loc 1 232 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557              	.LVL47:
 233:Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 558              		.loc 1 233 0
 559 0000 4FF40053 		mov	r3, #8192
 560 0004 4B60     		str	r3, [r1, #4]
 234:Src/syscalls.c **** 	return 0;
 235:Src/syscalls.c **** }
 561              		.loc 1 235 0
 562 0006 0020     		movs	r0, #0
 563              	.LVL48:
 564 0008 7047     		bx	lr
 565              		.cfi_endproc
 566              	.LFE170:
 568              		.section	.text._link,"ax",%progbits
 569              		.align	1
 570              		.global	_link
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 574              		.fpu fpv5-sp-d16
 576              	_link:
 577              	.LFB171:
 236:Src/syscalls.c **** 
 237:Src/syscalls.c **** int _link(char *old, char *new)
 238:Src/syscalls.c **** {
 578              		.loc 1 238 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 583              	.LVL49:
 239:Src/syscalls.c **** 	errno = EMLINK;
 584              		.loc 1 239 0
 585 0000 024B     		ldr	r3, .L42
 586 0002 1F22     		movs	r2, #31
 587 0004 1A60     		str	r2, [r3]
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 15


 240:Src/syscalls.c **** 	return -1;
 241:Src/syscalls.c **** }
 588              		.loc 1 241 0
 589 0006 4FF0FF30 		mov	r0, #-1
 590              	.LVL50:
 591 000a 7047     		bx	lr
 592              	.L43:
 593              		.align	2
 594              	.L42:
 595 000c 00000000 		.word	errno
 596              		.cfi_endproc
 597              	.LFE171:
 599              		.section	.text._fork,"ax",%progbits
 600              		.align	1
 601              		.global	_fork
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 605              		.fpu fpv5-sp-d16
 607              	_fork:
 608              	.LFB172:
 242:Src/syscalls.c **** 
 243:Src/syscalls.c **** int _fork(void)
 244:Src/syscalls.c **** {
 609              		.loc 1 244 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 245:Src/syscalls.c **** 	errno = EAGAIN;
 614              		.loc 1 245 0
 615 0000 024B     		ldr	r3, .L45
 616 0002 0B22     		movs	r2, #11
 617 0004 1A60     		str	r2, [r3]
 246:Src/syscalls.c **** 	return -1;
 247:Src/syscalls.c **** }
 618              		.loc 1 247 0
 619 0006 4FF0FF30 		mov	r0, #-1
 620 000a 7047     		bx	lr
 621              	.L46:
 622              		.align	2
 623              	.L45:
 624 000c 00000000 		.word	errno
 625              		.cfi_endproc
 626              	.LFE172:
 628              		.section	.text._execve,"ax",%progbits
 629              		.align	1
 630              		.global	_execve
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 634              		.fpu fpv5-sp-d16
 636              	_execve:
 637              	.LFB173:
 248:Src/syscalls.c **** 
 249:Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 250:Src/syscalls.c **** {
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 16


 638              		.loc 1 250 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 643              	.LVL51:
 251:Src/syscalls.c **** 	errno = ENOMEM;
 644              		.loc 1 251 0
 645 0000 024B     		ldr	r3, .L48
 646 0002 0C22     		movs	r2, #12
 647              	.LVL52:
 648 0004 1A60     		str	r2, [r3]
 252:Src/syscalls.c **** 	return -1;
 253:Src/syscalls.c **** }
 649              		.loc 1 253 0
 650 0006 4FF0FF30 		mov	r0, #-1
 651              	.LVL53:
 652 000a 7047     		bx	lr
 653              	.L49:
 654              		.align	2
 655              	.L48:
 656 000c 00000000 		.word	errno
 657              		.cfi_endproc
 658              	.LFE173:
 660              		.section	.bss.heap_end.13193,"aw",%nobits
 661              		.align	2
 662              		.set	.LANCHOR0,. + 0
 665              	heap_end.13193:
 666 0000 00000000 		.space	4
 667              		.weak	__io_getchar
 668              		.weak	__io_putchar
 669              		.text
 670              	.Letext0:
 671              		.file 2 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\machine\\_default
 672              		.file 3 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 673              		.file 4 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 674              		.file 5 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\
 675              		.file 6 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 676              		.file 7 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_timeval.h"
 677              		.file 8 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\types.h"
 678              		.file 9 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 679              		.file 10 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\time.h"
 680              		.file 11 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\stat.h"
 681              		.file 12 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\time.h"
 682              		.file 13 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\times.h"
 683              		.file 14 "Drivers/CMSIS/Include/core_cm7.h"
 684              		.file 15 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 685              		.file 16 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\stdlib.h"
 686              		.file 17 "Middlewares/Third_Party/LwIP/src/include/lwip/errno.h"
 687              		.file 18 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\unistd.h"
 688              		.file 19 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\wait.h"
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:18     .text._sbrk:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:25     .text._sbrk:00000000 _sbrk
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:86     .text._sbrk:00000038 $d
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:94     .text._gettimeofday:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:101    .text._gettimeofday:00000000 _gettimeofday
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:125    .text.initialise_monitor_handles:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:132    .text.initialise_monitor_handles:00000000 initialise_monitor_handles
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:145    .text._getpid:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:152    .text._getpid:00000000 _getpid
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:166    .text._kill:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:173    .text._kill:00000000 _kill
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:192    .text._kill:0000000c $d
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:197    .text._exit:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:204    .text._exit:00000000 _exit
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:227    .text._write:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:234    .text._write:00000000 _write
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:278    .text._close:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:285    .text._close:00000000 _close
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:301    .text._fstat:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:308    .text._fstat:00000000 _fstat
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:327    .text._isatty:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:334    .text._isatty:00000000 _isatty
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:350    .text._lseek:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:357    .text._lseek:00000000 _lseek
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:373    .text._read:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:380    .text._read:00000000 _read
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:423    .text._open:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:430    .text._open:00000000 _open
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:458    .text._wait:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:465    .text._wait:00000000 _wait
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:484    .text._wait:0000000c $d
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:489    .text._unlink:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:496    .text._unlink:00000000 _unlink
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:515    .text._unlink:0000000c $d
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:520    .text._times:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:527    .text._times:00000000 _times
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:543    .text._stat:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:550    .text._stat:00000000 _stat
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:569    .text._link:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:576    .text._link:00000000 _link
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:595    .text._link:0000000c $d
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:600    .text._fork:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:607    .text._fork:00000000 _fork
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:624    .text._fork:0000000c $d
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:629    .text._execve:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:636    .text._execve:00000000 _execve
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:656    .text._execve:0000000c $d
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:661    .bss.heap_end.13193:00000000 $d
C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s:665    .bss.heap_end.13193:00000000 heap_end.13193

UNDEFINED SYMBOLS
end
errno
__io_putchar
__io_getchar
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccNkX4lt.s 			page 18


