ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_Transmit_IT,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	UART_Transmit_IT:
  25              	.LFB168:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @file    stm32f7xx_hal_uart.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) UART pins configuration:
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                   Tx/Rx parameters.
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         Three operation modes are available within this driver :
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      =================================
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      ===================================
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** DMA mode IO operation ***
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      ==============================
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** UART HAL driver macros list ***
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      =============================================
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_IT : Clears the specified UART ISR flag
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @endverbatim
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @attention
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      without specific prior written permission.
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #include "stm32f7xx_hal.h"
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup STM32F7xx_HAL_Driver
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART UART
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief HAL UART module driver
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8))
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 5


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** ===============================================================================
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in asynchronous mode.
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Baud Rate
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Word Length
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Stop Bit
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Hardware flow control
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Receiver/transmitter modes
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Over Sampling Method
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initializes the UART mode according to the specified
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 6


 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initializes the half-duplex mode according to the specified
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 7


 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param BreakDetectLength specifies the LIN break detection length.
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 8


 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_LIN_WORD_LENGTH(huart->Init.WordLength));
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 9


 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the wake up method parameter */
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 10


 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the RS485 Driver enable feature according to the specified
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Polarity select the driver enable polarity.
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_DE_POLARITY_HIGH DE signal is active high
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_DE_POLARITY_LOW  DE signal is active low
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param AssertionTime Driver Enable assertion time:
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         5-bit value defining the time between the activation of the DE (Driver 
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         signal and the beginning of the start bit. It is expressed in sample ti
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         units (1/8 or 1/16 bit time, depending on the oversampling rate)
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param DeassertionTime Driver Enable deassertion time:
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         5-bit value defining the time between the end of the last stop bit, in 
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         transmitted message, and the de-activation of the DE (Driver Enable) si
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         It is expressed in sample time units (1/8 or 1/16 bit time, depending o
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         oversampling rate).
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_RS485Ex_Init(UART_HandleTypeDef *huart, uint32_t Polarity, uint32_t Assertion
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp = 0x0;
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable UART instance */
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DRIVER_ENABLE_INSTANCE(huart->Instance));
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable polarity */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DE_POLARITY(Polarity));
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable assertion time */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ASSERTIONTIME(AssertionTime));
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable deassertion time */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DEASSERTIONTIME(DeassertionTime));
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX */
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 11


 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Driver Enable mode by setting the DEM bit in the CR3 register */
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DEM);
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the Driver Enable polarity */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_DEP, Polarity);
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the Driver Enable assertion and deassertion times */
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp = (AssertionTime << UART_CR1_DEAT_ADDRESS_LSB_POS);
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT|USART_CR1_DEAT), temp);
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DeInitializes the UART peripheral
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 12


 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DeInit the low level hardware */
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlock */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART MSP Init
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART MSP DeInit
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### IO operation functions #####
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 13


 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     and Half duplex data transfers.
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) There are two mode of transfer:
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            after finishing transfer.
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The end of the data processing will be indicated through the
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            using DMA mode.
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Blocking mode API's are :
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive()
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) UART_Transmit_IT()
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) UART_Receive_IT()
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 14


 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData += 2;
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 15


 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask;
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* as long as data have to be received */
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxXferCount--;
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData +=2U;
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 16


 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be sent.
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 17


 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be sent.
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 18


 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA error callback */
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA abort callback */
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->TDR, Size);
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_FLAG_TC);
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 19


1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         the parity bit (MSB position).
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA error callback */
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA abort callback */
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA channel */
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, *(uint32_t*)tmp, Size);
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in the UART CR3 register */
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 20


1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 21


1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If the UART peripheral is still not enabled, enable it */
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_UE) == 0U)
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable UART peripheral */
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_ENABLE(huart);
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 22


1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief This function handles UART interrupt request.
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t errorflags;
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If no error occurs */
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (errorflags == RESET)
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       UART_Receive_IT(huart);
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If some errors occur */
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(   (errorflags != RESET)
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 23


1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         UART_Receive_IT(huart);
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          consider error as blocking */
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Abort DMA RX */
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             {
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             }
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           else
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 24


1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Call user error callback */
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         else
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Call user error callback */
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Error is notified to user through user error callback */
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   } /* End if some error occurs */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_Transmit_IT(huart);
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Tickstart Tick start value
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Timeout Timeout duration
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Wait until flag is set */
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check for the Timeout */
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick()-Tickstart) >=  Timeout))
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 25


1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Process Unlocked */
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode*/
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = 0U;
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Circular mode */
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma  DMA handle
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 26


1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process complete callback
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode */
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = 0U;
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in the UART CR3 register */
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 	/* At end of Rx process, restore huart->RxState to Ready */
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma  DMA handle
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART communication error callback
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 27


1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->ErrorCode, HAL_UART_ERROR_DMA);
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART communication abort callback, when call by HAL services on Error
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        (To be called at end of DMA Abort procedure following error occurrence).
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle.
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Tx Transfer completed callbacks
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Rx Transfer completed callbacks
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 28


1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART error callbacks
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Function called under interruption only, once
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT()
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
  27              		.loc 1 1566 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 29


  32              	.LVL0:
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  33              		.loc 1 1570 0
  34 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
  35 0004 DBB2     		uxtb	r3, r3
  36 0006 212B     		cmp	r3, #33
  37 0008 2ED1     		bne	.L6
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
  38              		.loc 1 1573 0
  39 000a B0F85230 		ldrh	r3, [r0, #82]
  40 000e 9BB2     		uxth	r3, r3
  41 0010 8BB1     		cbz	r3, .L7
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
  42              		.loc 1 1585 0
  43 0012 8368     		ldr	r3, [r0, #8]
  44 0014 B3F5805F 		cmp	r3, #4096
  45 0018 19D0     		beq	.L8
  46              	.L4:
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
  47              		.loc 1 1593 0
  48 001a C36C     		ldr	r3, [r0, #76]
  49 001c 5A1C     		adds	r2, r3, #1
  50 001e C264     		str	r2, [r0, #76]
  51 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  52 0022 0368     		ldr	r3, [r0]
  53 0024 9A62     		str	r2, [r3, #40]
  54              	.L5:
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
  55              		.loc 1 1596 0
  56 0026 B0F85230 		ldrh	r3, [r0, #82]
  57 002a 013B     		subs	r3, r3, #1
  58 002c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 30


  59 002e A0F85230 		strh	r3, [r0, #82]	@ movhi
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
  60              		.loc 1 1598 0
  61 0032 0020     		movs	r0, #0
  62              	.LVL1:
  63 0034 7047     		bx	lr
  64              	.LVL2:
  65              	.L7:
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  66              		.loc 1 1576 0
  67 0036 0268     		ldr	r2, [r0]
  68 0038 1368     		ldr	r3, [r2]
  69 003a 23F08003 		bic	r3, r3, #128
  70 003e 1360     		str	r3, [r2]
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  71              		.loc 1 1579 0
  72 0040 0268     		ldr	r2, [r0]
  73 0042 1368     		ldr	r3, [r2]
  74 0044 43F04003 		orr	r3, r3, #64
  75 0048 1360     		str	r3, [r2]
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
  76              		.loc 1 1581 0
  77 004a 0020     		movs	r0, #0
  78              	.LVL3:
  79 004c 7047     		bx	lr
  80              	.LVL4:
  81              	.L8:
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
  82              		.loc 1 1585 0 discriminator 1
  83 004e 0369     		ldr	r3, [r0, #16]
  84 0050 002B     		cmp	r3, #0
  85 0052 E2D1     		bne	.L4
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
  86              		.loc 1 1587 0
  87 0054 C36C     		ldr	r3, [r0, #76]
  88              	.LVL5:
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
  89              		.loc 1 1588 0
  90 0056 1B88     		ldrh	r3, [r3]
  91              	.LVL6:
  92 0058 0268     		ldr	r2, [r0]
  93 005a C3F30803 		ubfx	r3, r3, #0, #9
  94 005e 9362     		str	r3, [r2, #40]
  95              	.LVL7:
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
  96              		.loc 1 1589 0
  97 0060 C36C     		ldr	r3, [r0, #76]
  98 0062 0233     		adds	r3, r3, #2
  99 0064 C364     		str	r3, [r0, #76]
 100 0066 DEE7     		b	.L5
 101              	.L6:
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 31


 102              		.loc 1 1603 0
 103 0068 0220     		movs	r0, #2
 104              	.LVL8:
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 105              		.loc 1 1605 0
 106 006a 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE168:
 110              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 111              		.align	1
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu fpv5-sp-d16
 117              	UART_EndTxTransfer:
 118              	.LFB171:
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Function called under interruption only, once
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 32


1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 119              		.loc 1 1686 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124              	.LVL9:
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 125              		.loc 1 1688 0
 126 0000 0268     		ldr	r2, [r0]
 127 0002 1368     		ldr	r3, [r2]
 128 0004 23F0C003 		bic	r3, r3, #192
 129 0008 1360     		str	r3, [r2]
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 33


 130              		.loc 1 1691 0
 131 000a 2023     		movs	r3, #32
 132 000c 80F86930 		strb	r3, [r0, #105]
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 133              		.loc 1 1692 0
 134 0010 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE171:
 138              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv5-sp-d16
 145              	UART_EndRxTransfer:
 146              	.LFB172:
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 147              		.loc 1 1701 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152              	.LVL10:
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 153              		.loc 1 1703 0
 154 0000 0268     		ldr	r2, [r0]
 155 0002 1368     		ldr	r3, [r2]
 156 0004 23F49073 		bic	r3, r3, #288
 157 0008 1360     		str	r3, [r2]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 158              		.loc 1 1704 0
 159 000a 0268     		ldr	r2, [r0]
 160 000c 9368     		ldr	r3, [r2, #8]
 161 000e 23F00103 		bic	r3, r3, #1
 162 0012 9360     		str	r3, [r2, #8]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 163              		.loc 1 1707 0
 164 0014 2023     		movs	r3, #32
 165 0016 80F86A30 		strb	r3, [r0, #106]
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 166              		.loc 1 1708 0
 167 001a 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE172:
 171              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 172              		.align	1
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 34


 173              		.weak	HAL_UART_MspInit
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv5-sp-d16
 179              	HAL_UART_MspInit:
 180              	.LFB144:
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 181              		.loc 1 624 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 186              	.LVL11:
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 187              		.loc 1 631 0
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE144:
 192              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 193              		.align	1
 194              		.weak	HAL_UART_MspDeInit
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-sp-d16
 200              	HAL_UART_MspDeInit:
 201              	.LFB145:
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 202              		.loc 1 639 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207              	.LVL12:
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 208              		.loc 1 646 0
 209 0000 7047     		bx	lr
 210              		.cfi_endproc
 211              	.LFE145:
 213              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 214              		.align	1
 215              		.global	HAL_UART_DeInit
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu fpv5-sp-d16
 221              	HAL_UART_DeInit:
 222              	.LFB143:
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 223              		.loc 1 586 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              	.LVL13:
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 228              		.loc 1 588 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 35


 229 0000 D8B1     		cbz	r0, .L15
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 230              		.loc 1 586 0
 231 0002 38B5     		push	{r3, r4, r5, lr}
 232              	.LCFI0:
 233              		.cfi_def_cfa_offset 16
 234              		.cfi_offset 3, -16
 235              		.cfi_offset 4, -12
 236              		.cfi_offset 5, -8
 237              		.cfi_offset 14, -4
 238 0004 0446     		mov	r4, r0
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 239              		.loc 1 596 0
 240 0006 2423     		movs	r3, #36
 241 0008 80F86930 		strb	r3, [r0, #105]
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 242              		.loc 1 599 0
 243 000c 0268     		ldr	r2, [r0]
 244 000e 1368     		ldr	r3, [r2]
 245 0010 23F00103 		bic	r3, r3, #1
 246 0014 1360     		str	r3, [r2]
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 247              		.loc 1 601 0
 248 0016 0368     		ldr	r3, [r0]
 249 0018 0025     		movs	r5, #0
 250 001a 1D60     		str	r5, [r3]
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 251              		.loc 1 602 0
 252 001c 0368     		ldr	r3, [r0]
 253 001e 5D60     		str	r5, [r3, #4]
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 254              		.loc 1 603 0
 255 0020 0368     		ldr	r3, [r0]
 256 0022 9D60     		str	r5, [r3, #8]
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 257              		.loc 1 606 0
 258 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 259              	.LVL14:
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 260              		.loc 1 608 0
 261 0028 E566     		str	r5, [r4, #108]
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 262              		.loc 1 609 0
 263 002a 84F86950 		strb	r5, [r4, #105]
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 264              		.loc 1 610 0
 265 002e 84F86A50 		strb	r5, [r4, #106]
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 266              		.loc 1 613 0
 267 0032 84F86850 		strb	r5, [r4, #104]
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 268              		.loc 1 615 0
 269 0036 2846     		mov	r0, r5
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 270              		.loc 1 616 0
 271 0038 38BD     		pop	{r3, r4, r5, pc}
 272              	.LVL15:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 36


 273              	.L15:
 274              	.LCFI1:
 275              		.cfi_def_cfa_offset 0
 276              		.cfi_restore 3
 277              		.cfi_restore 4
 278              		.cfi_restore 5
 279              		.cfi_restore 14
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 280              		.loc 1 590 0
 281 003a 0120     		movs	r0, #1
 282              	.LVL16:
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 283              		.loc 1 616 0
 284 003c 7047     		bx	lr
 285              		.cfi_endproc
 286              	.LFE143:
 288              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 289              		.align	1
 290              		.global	HAL_UART_Transmit_IT
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv5-sp-d16
 296              	HAL_UART_Transmit_IT:
 297              	.LFB148:
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 298              		.loc 1 857 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303              	.LVL17:
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 304              		.loc 1 859 0
 305 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 306 0004 DBB2     		uxtb	r3, r3
 307 0006 202B     		cmp	r3, #32
 308 0008 1DD1     		bne	.L22
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 309              		.loc 1 861 0
 310 000a B2FA82F3 		clz	r3, r2
 311 000e 5B09     		lsrs	r3, r3, #5
 312 0010 0029     		cmp	r1, #0
 313 0012 08BF     		it	eq
 314 0014 0123     		moveq	r3, #1
 315 0016 C3B9     		cbnz	r3, .L23
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 316              		.loc 1 867 0
 317 0018 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 318 001c 012B     		cmp	r3, #1
 319 001e 16D0     		beq	.L24
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 320              		.loc 1 869 0 discriminator 2
 321 0020 C164     		str	r1, [r0, #76]
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 322              		.loc 1 870 0 discriminator 2
 323 0022 A0F85020 		strh	r2, [r0, #80]	@ movhi
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 37


 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 324              		.loc 1 871 0 discriminator 2
 325 0026 A0F85220 		strh	r2, [r0, #82]	@ movhi
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 326              		.loc 1 873 0 discriminator 2
 327 002a 0023     		movs	r3, #0
 328 002c C366     		str	r3, [r0, #108]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 329              		.loc 1 874 0 discriminator 2
 330 002e 2122     		movs	r2, #33
 331              	.LVL18:
 332 0030 80F86920 		strb	r2, [r0, #105]
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 333              		.loc 1 877 0 discriminator 2
 334 0034 80F86830 		strb	r3, [r0, #104]
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 335              		.loc 1 880 0 discriminator 2
 336 0038 0168     		ldr	r1, [r0]
 337              	.LVL19:
 338 003a 0A68     		ldr	r2, [r1]
 339 003c 42F08002 		orr	r2, r2, #128
 340 0040 0A60     		str	r2, [r1]
 341              	.LVL20:
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 342              		.loc 1 882 0 discriminator 2
 343 0042 1846     		mov	r0, r3
 344              	.LVL21:
 345 0044 7047     		bx	lr
 346              	.LVL22:
 347              	.L22:
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 348              		.loc 1 886 0
 349 0046 0220     		movs	r0, #2
 350              	.LVL23:
 351 0048 7047     		bx	lr
 352              	.LVL24:
 353              	.L23:
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 354              		.loc 1 863 0
 355 004a 0120     		movs	r0, #1
 356              	.LVL25:
 357 004c 7047     		bx	lr
 358              	.LVL26:
 359              	.L24:
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 360              		.loc 1 867 0
 361 004e 0220     		movs	r0, #2
 362              	.LVL27:
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 363              		.loc 1 888 0
 364 0050 7047     		bx	lr
 365              		.cfi_endproc
 366              	.LFE148:
 368              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 369              		.align	1
 370              		.global	HAL_UART_Receive_IT
 371              		.syntax unified
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 38


 372              		.thumb
 373              		.thumb_func
 374              		.fpu fpv5-sp-d16
 376              	HAL_UART_Receive_IT:
 377              	.LFB149:
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 378              		.loc 1 898 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 383              	.LVL28:
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 384              		.loc 1 900 0
 385 0000 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 386 0004 DBB2     		uxtb	r3, r3
 387 0006 202B     		cmp	r3, #32
 388 0008 4DD1     		bne	.L33
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 389              		.loc 1 902 0
 390 000a B2FA82F3 		clz	r3, r2
 391 000e 5B09     		lsrs	r3, r3, #5
 392 0010 0029     		cmp	r1, #0
 393 0012 08BF     		it	eq
 394 0014 0123     		moveq	r3, #1
 395 0016 002B     		cmp	r3, #0
 396 0018 47D1     		bne	.L34
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 397              		.loc 1 908 0
 398 001a 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 399 001e 012B     		cmp	r3, #1
 400 0020 45D0     		beq	.L35
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 401              		.loc 1 908 0 is_stmt 0 discriminator 2
 402 0022 0123     		movs	r3, #1
 403 0024 80F86830 		strb	r3, [r0, #104]
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 404              		.loc 1 910 0 is_stmt 1 discriminator 2
 405 0028 4165     		str	r1, [r0, #84]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 406              		.loc 1 911 0 discriminator 2
 407 002a A0F85820 		strh	r2, [r0, #88]	@ movhi
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 408              		.loc 1 912 0 discriminator 2
 409 002e A0F85A20 		strh	r2, [r0, #90]	@ movhi
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 410              		.loc 1 915 0 discriminator 2
 411 0032 8368     		ldr	r3, [r0, #8]
 412 0034 B3F5805F 		cmp	r3, #4096
 413 0038 06D0     		beq	.L36
 414 003a A3B9     		cbnz	r3, .L30
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 415              		.loc 1 915 0 is_stmt 0 discriminator 5
 416 003c 0369     		ldr	r3, [r0, #16]
 417 003e 73B9     		cbnz	r3, .L31
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 418              		.loc 1 915 0 discriminator 7
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 39


 419 0040 FF23     		movs	r3, #255
 420 0042 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 421 0046 11E0     		b	.L29
 422              	.L36:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 423              		.loc 1 915 0 discriminator 1
 424 0048 0369     		ldr	r3, [r0, #16]
 425 004a 23B9     		cbnz	r3, .L28
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 426              		.loc 1 915 0 discriminator 3
 427 004c 40F2FF13 		movw	r3, #511
 428 0050 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 429 0054 0AE0     		b	.L29
 430              	.L28:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 431              		.loc 1 915 0 discriminator 4
 432 0056 FF23     		movs	r3, #255
 433 0058 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 434 005c 06E0     		b	.L29
 435              	.L31:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 436              		.loc 1 915 0 discriminator 8
 437 005e 7F23     		movs	r3, #127
 438 0060 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 439 0064 02E0     		b	.L29
 440              	.L30:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 441              		.loc 1 915 0 discriminator 6
 442 0066 B3F1805F 		cmp	r3, #268435456
 443 006a 12D0     		beq	.L37
 444              	.L29:
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 445              		.loc 1 917 0 is_stmt 1
 446 006c 0023     		movs	r3, #0
 447 006e C366     		str	r3, [r0, #108]
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 448              		.loc 1 918 0
 449 0070 2222     		movs	r2, #34
 450              	.LVL29:
 451 0072 80F86A20 		strb	r2, [r0, #106]
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 452              		.loc 1 921 0
 453 0076 80F86830 		strb	r3, [r0, #104]
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 454              		.loc 1 924 0
 455 007a 0168     		ldr	r1, [r0]
 456              	.LVL30:
 457 007c 8A68     		ldr	r2, [r1, #8]
 458 007e 42F00102 		orr	r2, r2, #1
 459 0082 8A60     		str	r2, [r1, #8]
 460              	.LVL31:
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 461              		.loc 1 927 0
 462 0084 0168     		ldr	r1, [r0]
 463 0086 0A68     		ldr	r2, [r1]
 464 0088 42F49072 		orr	r2, r2, #288
 465 008c 0A60     		str	r2, [r1]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 40


 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 466              		.loc 1 929 0
 467 008e 1846     		mov	r0, r3
 468              	.LVL32:
 469 0090 7047     		bx	lr
 470              	.LVL33:
 471              	.L37:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 472              		.loc 1 915 0 discriminator 9
 473 0092 0369     		ldr	r3, [r0, #16]
 474 0094 1BB9     		cbnz	r3, .L32
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 475              		.loc 1 915 0 is_stmt 0 discriminator 10
 476 0096 7F23     		movs	r3, #127
 477 0098 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 478 009c E6E7     		b	.L29
 479              	.L32:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 480              		.loc 1 915 0 discriminator 11
 481 009e 3F23     		movs	r3, #63
 482 00a0 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 483 00a4 E2E7     		b	.L29
 484              	.L33:
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 485              		.loc 1 933 0 is_stmt 1
 486 00a6 0220     		movs	r0, #2
 487              	.LVL34:
 488 00a8 7047     		bx	lr
 489              	.LVL35:
 490              	.L34:
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 491              		.loc 1 904 0
 492 00aa 0120     		movs	r0, #1
 493              	.LVL36:
 494 00ac 7047     		bx	lr
 495              	.LVL37:
 496              	.L35:
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 497              		.loc 1 908 0
 498 00ae 0220     		movs	r0, #2
 499              	.LVL38:
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 500              		.loc 1 935 0
 501 00b0 7047     		bx	lr
 502              		.cfi_endproc
 503              	.LFE149:
 505              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 506              		.align	1
 507              		.global	HAL_UART_Transmit_DMA
 508              		.syntax unified
 509              		.thumb
 510              		.thumb_func
 511              		.fpu fpv5-sp-d16
 513              	HAL_UART_Transmit_DMA:
 514              	.LFB150:
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
 515              		.loc 1 945 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 41


 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              	.LVL39:
 520 0000 38B5     		push	{r3, r4, r5, lr}
 521              	.LCFI2:
 522              		.cfi_def_cfa_offset 16
 523              		.cfi_offset 3, -16
 524              		.cfi_offset 4, -12
 525              		.cfi_offset 5, -8
 526              		.cfi_offset 14, -4
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 527              		.loc 1 949 0
 528 0002 90F86950 		ldrb	r5, [r0, #105]	@ zero_extendqisi2
 529 0006 EDB2     		uxtb	r5, r5
 530 0008 202D     		cmp	r5, #32
 531 000a 35D1     		bne	.L40
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 532              		.loc 1 951 0
 533 000c B2FA82F5 		clz	r5, r2
 534 0010 6D09     		lsrs	r5, r5, #5
 535 0012 0029     		cmp	r1, #0
 536 0014 08BF     		it	eq
 537 0016 0125     		moveq	r5, #1
 538 0018 002D     		cmp	r5, #0
 539 001a 2FD1     		bne	.L41
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 540              		.loc 1 957 0
 541 001c 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 542 0020 012B     		cmp	r3, #1
 543 0022 2DD0     		beq	.L42
 544 0024 1346     		mov	r3, r2
 545 0026 0446     		mov	r4, r0
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 546              		.loc 1 957 0 is_stmt 0 discriminator 2
 547 0028 0122     		movs	r2, #1
 548              	.LVL40:
 549 002a 80F86820 		strb	r2, [r0, #104]
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 550              		.loc 1 959 0 is_stmt 1 discriminator 2
 551 002e C164     		str	r1, [r0, #76]
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 552              		.loc 1 960 0 discriminator 2
 553 0030 A0F85030 		strh	r3, [r0, #80]	@ movhi
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 554              		.loc 1 961 0 discriminator 2
 555 0034 A0F85230 		strh	r3, [r0, #82]	@ movhi
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 556              		.loc 1 963 0 discriminator 2
 557 0038 C566     		str	r5, [r0, #108]
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 558              		.loc 1 964 0 discriminator 2
 559 003a 2122     		movs	r2, #33
 560 003c 80F86920 		strb	r2, [r0, #105]
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 561              		.loc 1 967 0 discriminator 2
 562 0040 026E     		ldr	r2, [r0, #96]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 42


 563 0042 1048     		ldr	r0, .L44
 564              	.LVL41:
 565 0044 D063     		str	r0, [r2, #60]
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 566              		.loc 1 970 0 discriminator 2
 567 0046 226E     		ldr	r2, [r4, #96]
 568 0048 0F48     		ldr	r0, .L44+4
 569 004a 1064     		str	r0, [r2, #64]
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 570              		.loc 1 973 0 discriminator 2
 571 004c 226E     		ldr	r2, [r4, #96]
 572 004e 0F48     		ldr	r0, .L44+8
 573 0050 D064     		str	r0, [r2, #76]
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 574              		.loc 1 976 0 discriminator 2
 575 0052 226E     		ldr	r2, [r4, #96]
 576 0054 1565     		str	r5, [r2, #80]
 577              	.LVL42:
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 578              		.loc 1 980 0 discriminator 2
 579 0056 2268     		ldr	r2, [r4]
 580 0058 2832     		adds	r2, r2, #40
 581 005a 206E     		ldr	r0, [r4, #96]
 582 005c FFF7FEFF 		bl	HAL_DMA_Start_IT
 583              	.LVL43:
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 584              		.loc 1 983 0 discriminator 2
 585 0060 2368     		ldr	r3, [r4]
 586 0062 4022     		movs	r2, #64
 587 0064 1A62     		str	r2, [r3, #32]
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 588              		.loc 1 986 0 discriminator 2
 589 0066 84F86850 		strb	r5, [r4, #104]
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 590              		.loc 1 990 0 discriminator 2
 591 006a 2268     		ldr	r2, [r4]
 592 006c 9368     		ldr	r3, [r2, #8]
 593 006e 43F08003 		orr	r3, r3, #128
 594 0072 9360     		str	r3, [r2, #8]
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 595              		.loc 1 992 0 discriminator 2
 596 0074 2846     		mov	r0, r5
 597 0076 00E0     		b	.L39
 598              	.LVL44:
 599              	.L40:
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 600              		.loc 1 996 0
 601 0078 0220     		movs	r0, #2
 602              	.LVL45:
 603              	.L39:
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 604              		.loc 1 998 0
 605 007a 38BD     		pop	{r3, r4, r5, pc}
 606              	.LVL46:
 607              	.L41:
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 608              		.loc 1 953 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 43


 609 007c 0120     		movs	r0, #1
 610              	.LVL47:
 611 007e FCE7     		b	.L39
 612              	.LVL48:
 613              	.L42:
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 614              		.loc 1 957 0
 615 0080 0220     		movs	r0, #2
 616              	.LVL49:
 617 0082 FAE7     		b	.L39
 618              	.L45:
 619              		.align	2
 620              	.L44:
 621 0084 00000000 		.word	UART_DMATransmitCplt
 622 0088 00000000 		.word	UART_DMATxHalfCplt
 623 008c 00000000 		.word	UART_DMAError
 624              		.cfi_endproc
 625              	.LFE150:
 627              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 628              		.align	1
 629              		.global	HAL_UART_Receive_DMA
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu fpv5-sp-d16
 635              	HAL_UART_Receive_DMA:
 636              	.LFB151:
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
 637              		.loc 1 1010 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              	.LVL50:
 642 0000 38B5     		push	{r3, r4, r5, lr}
 643              	.LCFI3:
 644              		.cfi_def_cfa_offset 16
 645              		.cfi_offset 3, -16
 646              		.cfi_offset 4, -12
 647              		.cfi_offset 5, -8
 648              		.cfi_offset 14, -4
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 649              		.loc 1 1014 0
 650 0002 90F86A50 		ldrb	r5, [r0, #106]	@ zero_extendqisi2
 651 0006 EDB2     		uxtb	r5, r5
 652 0008 202D     		cmp	r5, #32
 653 000a 3BD1     		bne	.L48
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 654              		.loc 1 1016 0
 655 000c B2FA82F5 		clz	r5, r2
 656 0010 6D09     		lsrs	r5, r5, #5
 657 0012 0029     		cmp	r1, #0
 658 0014 08BF     		it	eq
 659 0016 0125     		moveq	r5, #1
 660 0018 002D     		cmp	r5, #0
 661 001a 35D1     		bne	.L49
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 662              		.loc 1 1022 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 44


 663 001c 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 664 0020 012B     		cmp	r3, #1
 665 0022 33D0     		beq	.L50
 666 0024 1346     		mov	r3, r2
 667 0026 0A46     		mov	r2, r1
 668              	.LVL51:
 669 0028 0446     		mov	r4, r0
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 670              		.loc 1 1022 0 is_stmt 0 discriminator 2
 671 002a 0121     		movs	r1, #1
 672              	.LVL52:
 673 002c 80F86810 		strb	r1, [r0, #104]
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 674              		.loc 1 1024 0 is_stmt 1 discriminator 2
 675 0030 4265     		str	r2, [r0, #84]
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 676              		.loc 1 1025 0 discriminator 2
 677 0032 A0F85830 		strh	r3, [r0, #88]	@ movhi
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 678              		.loc 1 1027 0 discriminator 2
 679 0036 C566     		str	r5, [r0, #108]
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 680              		.loc 1 1028 0 discriminator 2
 681 0038 2221     		movs	r1, #34
 682 003a 80F86A10 		strb	r1, [r0, #106]
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 683              		.loc 1 1031 0 discriminator 2
 684 003e 416E     		ldr	r1, [r0, #100]
 685 0040 1348     		ldr	r0, .L52
 686              	.LVL53:
 687 0042 C863     		str	r0, [r1, #60]
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 688              		.loc 1 1034 0 discriminator 2
 689 0044 616E     		ldr	r1, [r4, #100]
 690 0046 1348     		ldr	r0, .L52+4
 691 0048 0864     		str	r0, [r1, #64]
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 692              		.loc 1 1037 0 discriminator 2
 693 004a 616E     		ldr	r1, [r4, #100]
 694 004c 1248     		ldr	r0, .L52+8
 695 004e C864     		str	r0, [r1, #76]
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 696              		.loc 1 1040 0 discriminator 2
 697 0050 616E     		ldr	r1, [r4, #100]
 698 0052 0D65     		str	r5, [r1, #80]
 699              	.LVL54:
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 700              		.loc 1 1044 0 discriminator 2
 701 0054 2168     		ldr	r1, [r4]
 702 0056 2431     		adds	r1, r1, #36
 703 0058 606E     		ldr	r0, [r4, #100]
 704 005a FFF7FEFF 		bl	HAL_DMA_Start_IT
 705              	.LVL55:
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 706              		.loc 1 1047 0 discriminator 2
 707 005e 84F86850 		strb	r5, [r4, #104]
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 45


 708              		.loc 1 1050 0 discriminator 2
 709 0062 2268     		ldr	r2, [r4]
 710 0064 1368     		ldr	r3, [r2]
 711 0066 43F48073 		orr	r3, r3, #256
 712 006a 1360     		str	r3, [r2]
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 713              		.loc 1 1053 0 discriminator 2
 714 006c 2268     		ldr	r2, [r4]
 715 006e 9368     		ldr	r3, [r2, #8]
 716 0070 43F00103 		orr	r3, r3, #1
 717 0074 9360     		str	r3, [r2, #8]
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 718              		.loc 1 1057 0 discriminator 2
 719 0076 2268     		ldr	r2, [r4]
 720 0078 9368     		ldr	r3, [r2, #8]
 721 007a 43F04003 		orr	r3, r3, #64
 722 007e 9360     		str	r3, [r2, #8]
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 723              		.loc 1 1059 0 discriminator 2
 724 0080 2846     		mov	r0, r5
 725 0082 00E0     		b	.L47
 726              	.LVL56:
 727              	.L48:
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 728              		.loc 1 1063 0
 729 0084 0220     		movs	r0, #2
 730              	.LVL57:
 731              	.L47:
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 732              		.loc 1 1065 0
 733 0086 38BD     		pop	{r3, r4, r5, pc}
 734              	.LVL58:
 735              	.L49:
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 736              		.loc 1 1018 0
 737 0088 0120     		movs	r0, #1
 738              	.LVL59:
 739 008a FCE7     		b	.L47
 740              	.LVL60:
 741              	.L50:
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 742              		.loc 1 1022 0
 743 008c 0220     		movs	r0, #2
 744              	.LVL61:
 745 008e FAE7     		b	.L47
 746              	.L53:
 747              		.align	2
 748              	.L52:
 749 0090 00000000 		.word	UART_DMAReceiveCplt
 750 0094 00000000 		.word	UART_DMARxHalfCplt
 751 0098 00000000 		.word	UART_DMAError
 752              		.cfi_endproc
 753              	.LFE151:
 755              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 756              		.align	1
 757              		.global	HAL_UART_DMAPause
 758              		.syntax unified
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 46


 759              		.thumb
 760              		.thumb_func
 761              		.fpu fpv5-sp-d16
 763              	HAL_UART_DMAPause:
 764              	.LFB152:
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
 765              		.loc 1 1073 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 770              	.LVL62:
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 771              		.loc 1 1075 0
 772 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 773 0004 012B     		cmp	r3, #1
 774 0006 2FD0     		beq	.L58
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 775              		.loc 1 1075 0 is_stmt 0 discriminator 2
 776 0008 0123     		movs	r3, #1
 777 000a 80F86830 		strb	r3, [r0, #104]
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 778              		.loc 1 1077 0 is_stmt 1 discriminator 2
 779 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 780 0012 DBB2     		uxtb	r3, r3
 781 0014 212B     		cmp	r3, #33
 782 0016 09D0     		beq	.L59
 783              	.L56:
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 784              		.loc 1 1083 0
 785 0018 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 786 001c DBB2     		uxtb	r3, r3
 787 001e 222B     		cmp	r3, #34
 788 0020 0ED0     		beq	.L60
 789              	.L57:
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 790              		.loc 1 1095 0
 791 0022 0023     		movs	r3, #0
 792 0024 80F86830 		strb	r3, [r0, #104]
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 793              		.loc 1 1097 0
 794 0028 1846     		mov	r0, r3
 795              	.LVL63:
 796 002a 7047     		bx	lr
 797              	.LVL64:
 798              	.L59:
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 799              		.loc 1 1078 0 discriminator 1
 800 002c 0368     		ldr	r3, [r0]
 801 002e 9A68     		ldr	r2, [r3, #8]
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 802              		.loc 1 1077 0 discriminator 1
 803 0030 12F0800F 		tst	r2, #128
 804 0034 F0D0     		beq	.L56
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 805              		.loc 1 1081 0
 806 0036 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 47


 807 0038 22F08002 		bic	r2, r2, #128
 808 003c 9A60     		str	r2, [r3, #8]
 809 003e EBE7     		b	.L56
 810              	.L60:
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 811              		.loc 1 1084 0 discriminator 1
 812 0040 0368     		ldr	r3, [r0]
 813 0042 9A68     		ldr	r2, [r3, #8]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 814              		.loc 1 1083 0 discriminator 1
 815 0044 12F0400F 		tst	r2, #64
 816 0048 EBD0     		beq	.L57
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 817              		.loc 1 1087 0
 818 004a 1A68     		ldr	r2, [r3]
 819 004c 22F48072 		bic	r2, r2, #256
 820 0050 1A60     		str	r2, [r3]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 821              		.loc 1 1088 0
 822 0052 0268     		ldr	r2, [r0]
 823 0054 9368     		ldr	r3, [r2, #8]
 824 0056 23F00103 		bic	r3, r3, #1
 825 005a 9360     		str	r3, [r2, #8]
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 826              		.loc 1 1091 0
 827 005c 0268     		ldr	r2, [r0]
 828 005e 9368     		ldr	r3, [r2, #8]
 829 0060 23F04003 		bic	r3, r3, #64
 830 0064 9360     		str	r3, [r2, #8]
 831 0066 DCE7     		b	.L57
 832              	.L58:
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 833              		.loc 1 1075 0
 834 0068 0220     		movs	r0, #2
 835              	.LVL65:
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 836              		.loc 1 1098 0
 837 006a 7047     		bx	lr
 838              		.cfi_endproc
 839              	.LFE152:
 841              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 842              		.align	1
 843              		.global	HAL_UART_DMAResume
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 847              		.fpu fpv5-sp-d16
 849              	HAL_UART_DMAResume:
 850              	.LFB153:
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
 851              		.loc 1 1106 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 856              	.LVL66:
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 48


 857              		.loc 1 1108 0
 858 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 859 0004 012B     		cmp	r3, #1
 860 0006 30D0     		beq	.L65
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 861              		.loc 1 1108 0 is_stmt 0 discriminator 2
 862 0008 0123     		movs	r3, #1
 863 000a 80F86830 		strb	r3, [r0, #104]
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 864              		.loc 1 1110 0 is_stmt 1 discriminator 2
 865 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 866 0012 DBB2     		uxtb	r3, r3
 867 0014 212B     		cmp	r3, #33
 868 0016 0FD0     		beq	.L67
 869              	.L63:
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 870              		.loc 1 1115 0
 871 0018 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 872 001c DBB2     		uxtb	r3, r3
 873 001e 222B     		cmp	r3, #34
 874 0020 10D0     		beq	.L68
 875              	.L64:
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 876              		.loc 1 1129 0
 877 0022 0368     		ldr	r3, [r0]
 878 0024 1A68     		ldr	r2, [r3]
 879 0026 12F0010F 		tst	r2, #1
 880 002a 20D1     		bne	.L66
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 881              		.loc 1 1132 0
 882 002c 1A68     		ldr	r2, [r3]
 883 002e 42F00102 		orr	r2, r2, #1
 884 0032 1A60     		str	r2, [r3]
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 885              		.loc 1 1135 0
 886 0034 0020     		movs	r0, #0
 887              	.LVL67:
 888 0036 7047     		bx	lr
 889              	.LVL68:
 890              	.L67:
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 891              		.loc 1 1113 0
 892 0038 0268     		ldr	r2, [r0]
 893 003a 9368     		ldr	r3, [r2, #8]
 894 003c 43F08003 		orr	r3, r3, #128
 895 0040 9360     		str	r3, [r2, #8]
 896 0042 E9E7     		b	.L63
 897              	.L68:
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 898              		.loc 1 1118 0
 899 0044 0368     		ldr	r3, [r0]
 900 0046 0822     		movs	r2, #8
 901 0048 1A62     		str	r2, [r3, #32]
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 902              		.loc 1 1121 0
 903 004a 0268     		ldr	r2, [r0]
 904 004c 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 49


 905 004e 43F48073 		orr	r3, r3, #256
 906 0052 1360     		str	r3, [r2]
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 907              		.loc 1 1122 0
 908 0054 0268     		ldr	r2, [r0]
 909 0056 9368     		ldr	r3, [r2, #8]
 910 0058 43F00103 		orr	r3, r3, #1
 911 005c 9360     		str	r3, [r2, #8]
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 912              		.loc 1 1125 0
 913 005e 0268     		ldr	r2, [r0]
 914 0060 9368     		ldr	r3, [r2, #8]
 915 0062 43F04003 		orr	r3, r3, #64
 916 0066 9360     		str	r3, [r2, #8]
 917 0068 DBE7     		b	.L64
 918              	.L65:
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 919              		.loc 1 1108 0
 920 006a 0220     		movs	r0, #2
 921              	.LVL69:
 922 006c 7047     		bx	lr
 923              	.LVL70:
 924              	.L66:
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 925              		.loc 1 1135 0
 926 006e 0020     		movs	r0, #0
 927              	.LVL71:
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 928              		.loc 1 1136 0
 929 0070 7047     		bx	lr
 930              		.cfi_endproc
 931              	.LFE153:
 933              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 934              		.align	1
 935              		.global	HAL_UART_DMAStop
 936              		.syntax unified
 937              		.thumb
 938              		.thumb_func
 939              		.fpu fpv5-sp-d16
 941              	HAL_UART_DMAStop:
 942              	.LFB154:
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 943              		.loc 1 1144 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947              	.LVL72:
 948 0000 10B5     		push	{r4, lr}
 949              	.LCFI4:
 950              		.cfi_def_cfa_offset 8
 951              		.cfi_offset 4, -8
 952              		.cfi_offset 14, -4
 953 0002 0446     		mov	r4, r0
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 954              		.loc 1 1153 0
 955 0004 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 956 0008 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 50


 957 000a 212B     		cmp	r3, #33
 958 000c 06D0     		beq	.L75
 959              	.LVL73:
 960              	.L70:
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 961              		.loc 1 1168 0
 962 000e 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 963 0012 DBB2     		uxtb	r3, r3
 964 0014 222B     		cmp	r3, #34
 965 0016 12D0     		beq	.L76
 966              	.L72:
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 967              		.loc 1 1183 0
 968 0018 0020     		movs	r0, #0
 969 001a 10BD     		pop	{r4, pc}
 970              	.LVL74:
 971              	.L75:
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 972              		.loc 1 1154 0 discriminator 1
 973 001c 0368     		ldr	r3, [r0]
 974 001e 9A68     		ldr	r2, [r3, #8]
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 975              		.loc 1 1153 0 discriminator 1
 976 0020 12F0800F 		tst	r2, #128
 977 0024 F3D0     		beq	.L70
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 978              		.loc 1 1156 0
 979 0026 9A68     		ldr	r2, [r3, #8]
 980 0028 22F08002 		bic	r2, r2, #128
 981 002c 9A60     		str	r2, [r3, #8]
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 982              		.loc 1 1159 0
 983 002e 006E     		ldr	r0, [r0, #96]
 984              	.LVL75:
 985 0030 08B1     		cbz	r0, .L71
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 986              		.loc 1 1161 0
 987 0032 FFF7FEFF 		bl	HAL_DMA_Abort
 988              	.LVL76:
 989              	.L71:
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 990              		.loc 1 1164 0
 991 0036 2046     		mov	r0, r4
 992 0038 FFF7FEFF 		bl	UART_EndTxTransfer
 993              	.LVL77:
 994 003c E7E7     		b	.L70
 995              	.L76:
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 996              		.loc 1 1169 0 discriminator 1
 997 003e 2368     		ldr	r3, [r4]
 998 0040 9A68     		ldr	r2, [r3, #8]
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 999              		.loc 1 1168 0 discriminator 1
 1000 0042 12F0400F 		tst	r2, #64
 1001 0046 E7D0     		beq	.L72
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1002              		.loc 1 1171 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 51


 1003 0048 9A68     		ldr	r2, [r3, #8]
 1004 004a 22F04002 		bic	r2, r2, #64
 1005 004e 9A60     		str	r2, [r3, #8]
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1006              		.loc 1 1174 0
 1007 0050 606E     		ldr	r0, [r4, #100]
 1008 0052 08B1     		cbz	r0, .L73
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1009              		.loc 1 1176 0
 1010 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 1011              	.LVL78:
 1012              	.L73:
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1013              		.loc 1 1179 0
 1014 0058 2046     		mov	r0, r4
 1015 005a FFF7FEFF 		bl	UART_EndRxTransfer
 1016              	.LVL79:
 1017 005e DBE7     		b	.L72
 1018              		.cfi_endproc
 1019              	.LFE154:
 1021              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 1022              		.align	1
 1023              		.global	UART_WaitOnFlagUntilTimeout
 1024              		.syntax unified
 1025              		.thumb
 1026              		.thumb_func
 1027              		.fpu fpv5-sp-d16
 1029              	UART_WaitOnFlagUntilTimeout:
 1030              	.LFB156:
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Wait until flag is set */
 1031              		.loc 1 1336 0
 1032              		.cfi_startproc
 1033              		@ args = 4, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035              	.LVL80:
 1036 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1037              	.LCFI5:
 1038              		.cfi_def_cfa_offset 24
 1039              		.cfi_offset 4, -24
 1040              		.cfi_offset 5, -20
 1041              		.cfi_offset 6, -16
 1042              		.cfi_offset 7, -12
 1043              		.cfi_offset 8, -8
 1044              		.cfi_offset 14, -4
 1045 0004 0546     		mov	r5, r0
 1046 0006 0F46     		mov	r7, r1
 1047 0008 1646     		mov	r6, r2
 1048 000a 9846     		mov	r8, r3
 1049 000c 069C     		ldr	r4, [sp, #24]
 1050              	.LVL81:
 1051              	.L79:
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1052              		.loc 1 1338 0
 1053 000e 2B68     		ldr	r3, [r5]
 1054 0010 DB69     		ldr	r3, [r3, #28]
 1055 0012 37EA0303 		bics	r3, r7, r3
 1056 0016 0CBF     		ite	eq
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 52


 1057 0018 0123     		moveq	r3, #1
 1058 001a 0023     		movne	r3, #0
 1059 001c B342     		cmp	r3, r6
 1060 001e 1DD1     		bne	.L84
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1061              		.loc 1 1341 0
 1062 0020 B4F1FF3F 		cmp	r4, #-1
 1063 0024 F3D0     		beq	.L79
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1064              		.loc 1 1343 0
 1065 0026 2CB1     		cbz	r4, .L80
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1066              		.loc 1 1343 0 is_stmt 0 discriminator 1
 1067 0028 FFF7FEFF 		bl	HAL_GetTick
 1068              	.LVL82:
 1069 002c A0EB0800 		sub	r0, r0, r8
 1070 0030 A042     		cmp	r0, r4
 1071 0032 ECD3     		bcc	.L79
 1072              	.L80:
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1073              		.loc 1 1346 0 is_stmt 1
 1074 0034 2A68     		ldr	r2, [r5]
 1075 0036 1368     		ldr	r3, [r2]
 1076 0038 23F4D073 		bic	r3, r3, #416
 1077 003c 1360     		str	r3, [r2]
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1078              		.loc 1 1347 0
 1079 003e 2A68     		ldr	r2, [r5]
 1080 0040 9368     		ldr	r3, [r2, #8]
 1081 0042 23F00103 		bic	r3, r3, #1
 1082 0046 9360     		str	r3, [r2, #8]
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 1083              		.loc 1 1349 0
 1084 0048 2023     		movs	r3, #32
 1085 004a 85F86930 		strb	r3, [r5, #105]
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1086              		.loc 1 1350 0
 1087 004e 85F86A30 		strb	r3, [r5, #106]
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 1088              		.loc 1 1353 0
 1089 0052 0023     		movs	r3, #0
 1090 0054 85F86830 		strb	r3, [r5, #104]
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1091              		.loc 1 1354 0
 1092 0058 0320     		movs	r0, #3
 1093 005a 00E0     		b	.L81
 1094              	.L84:
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1095              		.loc 1 1358 0
 1096 005c 0020     		movs	r0, #0
 1097              	.L81:
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1098              		.loc 1 1359 0
 1099 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1100              		.cfi_endproc
 1101              	.LFE156:
 1103              		.section	.text.HAL_UART_Transmit,"ax",%progbits
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 53


 1104              		.align	1
 1105              		.global	HAL_UART_Transmit
 1106              		.syntax unified
 1107              		.thumb
 1108              		.thumb_func
 1109              		.fpu fpv5-sp-d16
 1111              	HAL_UART_Transmit:
 1112              	.LFB146:
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 1113              		.loc 1 717 0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 0
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 1117              	.LVL83:
 1118 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1119              	.LCFI6:
 1120              		.cfi_def_cfa_offset 24
 1121              		.cfi_offset 4, -24
 1122              		.cfi_offset 5, -20
 1123              		.cfi_offset 6, -16
 1124              		.cfi_offset 7, -12
 1125              		.cfi_offset 8, -8
 1126              		.cfi_offset 14, -4
 1127 0004 82B0     		sub	sp, sp, #8
 1128              	.LCFI7:
 1129              		.cfi_def_cfa_offset 32
 1130 0006 1E46     		mov	r6, r3
 1131              	.LVL84:
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1132              		.loc 1 722 0
 1133 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 1134              	.LVL85:
 1135 000c DBB2     		uxtb	r3, r3
 1136 000e 202B     		cmp	r3, #32
 1137 0010 52D1     		bne	.L91
 1138 0012 0446     		mov	r4, r0
 1139 0014 0D46     		mov	r5, r1
 1140 0016 9046     		mov	r8, r2
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1141              		.loc 1 724 0
 1142 0018 B2FA82F3 		clz	r3, r2
 1143 001c 5B09     		lsrs	r3, r3, #5
 1144 001e 0029     		cmp	r1, #0
 1145 0020 08BF     		it	eq
 1146 0022 0123     		moveq	r3, #1
 1147 0024 002B     		cmp	r3, #0
 1148 0026 4CD1     		bne	.L92
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1149              		.loc 1 730 0
 1150 0028 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 1151 002c 012B     		cmp	r3, #1
 1152 002e 4AD0     		beq	.L93
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1153              		.loc 1 730 0 is_stmt 0 discriminator 2
 1154 0030 0123     		movs	r3, #1
 1155 0032 80F86830 		strb	r3, [r0, #104]
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 54


 1156              		.loc 1 732 0 is_stmt 1 discriminator 2
 1157 0036 0023     		movs	r3, #0
 1158 0038 C366     		str	r3, [r0, #108]
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1159              		.loc 1 733 0 discriminator 2
 1160 003a 2123     		movs	r3, #33
 1161 003c 80F86930 		strb	r3, [r0, #105]
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1162              		.loc 1 736 0 discriminator 2
 1163 0040 FFF7FEFF 		bl	HAL_GetTick
 1164              	.LVL86:
 1165 0044 0746     		mov	r7, r0
 1166              	.LVL87:
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1167              		.loc 1 738 0 discriminator 2
 1168 0046 A4F85080 		strh	r8, [r4, #80]	@ movhi
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 1169              		.loc 1 739 0 discriminator 2
 1170 004a A4F85280 		strh	r8, [r4, #82]	@ movhi
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1171              		.loc 1 740 0 discriminator 2
 1172 004e 03E0     		b	.L87
 1173              	.LVL88:
 1174              	.L88:
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1175              		.loc 1 755 0
 1176 0050 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1177 0052 2368     		ldr	r3, [r4]
 1178 0054 9A62     		str	r2, [r3, #40]
 1179 0056 0135     		adds	r5, r5, #1
 1180              	.LVL89:
 1181              	.L87:
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1182              		.loc 1 740 0
 1183 0058 B4F85230 		ldrh	r3, [r4, #82]
 1184 005c 9BB2     		uxth	r3, r3
 1185 005e DBB1     		cbz	r3, .L97
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 1186              		.loc 1 742 0
 1187 0060 B4F85230 		ldrh	r3, [r4, #82]
 1188 0064 013B     		subs	r3, r3, #1
 1189 0066 9BB2     		uxth	r3, r3
 1190 0068 A4F85230 		strh	r3, [r4, #82]	@ movhi
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1191              		.loc 1 743 0
 1192 006c 0096     		str	r6, [sp]
 1193 006e 3B46     		mov	r3, r7
 1194 0070 0022     		movs	r2, #0
 1195 0072 8021     		movs	r1, #128
 1196 0074 2046     		mov	r0, r4
 1197 0076 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1198              	.LVL90:
 1199 007a 30BB     		cbnz	r0, .L94
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1200              		.loc 1 747 0
 1201 007c A368     		ldr	r3, [r4, #8]
 1202 007e B3F5805F 		cmp	r3, #4096
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 55


 1203 0082 E5D1     		bne	.L88
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1204              		.loc 1 747 0 is_stmt 0 discriminator 1
 1205 0084 2369     		ldr	r3, [r4, #16]
 1206 0086 002B     		cmp	r3, #0
 1207 0088 E2D1     		bne	.L88
 1208              	.LVL91:
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData += 2;
 1209              		.loc 1 750 0 is_stmt 1
 1210 008a 35F8023B 		ldrh	r3, [r5], #2
 1211              	.LVL92:
 1212 008e 2268     		ldr	r2, [r4]
 1213 0090 C3F30803 		ubfx	r3, r3, #0, #9
 1214 0094 9362     		str	r3, [r2, #40]
 1215              	.LVL93:
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1216              		.loc 1 751 0
 1217 0096 DFE7     		b	.L87
 1218              	.LVL94:
 1219              	.L97:
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1220              		.loc 1 758 0
 1221 0098 0096     		str	r6, [sp]
 1222 009a 3B46     		mov	r3, r7
 1223 009c 0022     		movs	r2, #0
 1224 009e 4021     		movs	r1, #64
 1225 00a0 2046     		mov	r0, r4
 1226 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1227              	.LVL95:
 1228 00a6 0346     		mov	r3, r0
 1229 00a8 88B9     		cbnz	r0, .L95
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1230              		.loc 1 764 0
 1231 00aa 2022     		movs	r2, #32
 1232 00ac 84F86920 		strb	r2, [r4, #105]
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1233              		.loc 1 767 0
 1234 00b0 0022     		movs	r2, #0
 1235 00b2 84F86820 		strb	r2, [r4, #104]
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1236              		.loc 1 769 0
 1237 00b6 00E0     		b	.L86
 1238              	.LVL96:
 1239              	.L91:
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1240              		.loc 1 773 0
 1241 00b8 0223     		movs	r3, #2
 1242              	.LVL97:
 1243              	.L86:
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1244              		.loc 1 775 0
 1245 00ba 1846     		mov	r0, r3
 1246 00bc 02B0     		add	sp, sp, #8
 1247              	.LCFI8:
 1248              		.cfi_remember_state
 1249              		.cfi_def_cfa_offset 24
 1250              		@ sp needed
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 56


 1251 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1252              	.LVL98:
 1253              	.L92:
 1254              	.LCFI9:
 1255              		.cfi_restore_state
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1256              		.loc 1 726 0
 1257 00c2 0123     		movs	r3, #1
 1258 00c4 F9E7     		b	.L86
 1259              	.L93:
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1260              		.loc 1 730 0
 1261 00c6 0223     		movs	r3, #2
 1262 00c8 F7E7     		b	.L86
 1263              	.LVL99:
 1264              	.L94:
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1265              		.loc 1 745 0
 1266 00ca 0323     		movs	r3, #3
 1267 00cc F5E7     		b	.L86
 1268              	.L95:
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1269              		.loc 1 760 0
 1270 00ce 0323     		movs	r3, #3
 1271 00d0 F3E7     		b	.L86
 1272              		.cfi_endproc
 1273              	.LFE146:
 1275              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1276              		.align	1
 1277              		.global	HAL_UART_Receive
 1278              		.syntax unified
 1279              		.thumb
 1280              		.thumb_func
 1281              		.fpu fpv5-sp-d16
 1283              	HAL_UART_Receive:
 1284              	.LFB147:
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 1285              		.loc 1 786 0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 0
 1288              		@ frame_needed = 0, uses_anonymous_args = 0
 1289              	.LVL100:
 1290 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1291              	.LCFI10:
 1292              		.cfi_def_cfa_offset 24
 1293              		.cfi_offset 4, -24
 1294              		.cfi_offset 5, -20
 1295              		.cfi_offset 6, -16
 1296              		.cfi_offset 7, -12
 1297              		.cfi_offset 8, -8
 1298              		.cfi_offset 14, -4
 1299 0004 82B0     		sub	sp, sp, #8
 1300              	.LCFI11:
 1301              		.cfi_def_cfa_offset 32
 1302 0006 1E46     		mov	r6, r3
 1303              	.LVL101:
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 57


 1304              		.loc 1 792 0
 1305 0008 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 1306              	.LVL102:
 1307 000c DBB2     		uxtb	r3, r3
 1308 000e 202B     		cmp	r3, #32
 1309 0010 75D1     		bne	.L110
 1310 0012 0446     		mov	r4, r0
 1311 0014 0D46     		mov	r5, r1
 1312 0016 9046     		mov	r8, r2
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1313              		.loc 1 794 0
 1314 0018 B2FA82F3 		clz	r3, r2
 1315 001c 5B09     		lsrs	r3, r3, #5
 1316 001e 0029     		cmp	r1, #0
 1317 0020 08BF     		it	eq
 1318 0022 0123     		moveq	r3, #1
 1319 0024 002B     		cmp	r3, #0
 1320 0026 6ED1     		bne	.L111
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1321              		.loc 1 800 0
 1322 0028 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 1323 002c 012B     		cmp	r3, #1
 1324 002e 6CD0     		beq	.L112
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1325              		.loc 1 800 0 is_stmt 0 discriminator 2
 1326 0030 0123     		movs	r3, #1
 1327 0032 80F86830 		strb	r3, [r0, #104]
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1328              		.loc 1 802 0 is_stmt 1 discriminator 2
 1329 0036 0023     		movs	r3, #0
 1330 0038 C366     		str	r3, [r0, #108]
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1331              		.loc 1 803 0 discriminator 2
 1332 003a 2223     		movs	r3, #34
 1333 003c 80F86A30 		strb	r3, [r0, #106]
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1334              		.loc 1 806 0 discriminator 2
 1335 0040 FFF7FEFF 		bl	HAL_GetTick
 1336              	.LVL103:
 1337 0044 0746     		mov	r7, r0
 1338              	.LVL104:
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 1339              		.loc 1 808 0 discriminator 2
 1340 0046 A4F85880 		strh	r8, [r4, #88]	@ movhi
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1341              		.loc 1 809 0 discriminator 2
 1342 004a A4F85A80 		strh	r8, [r4, #90]	@ movhi
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1343              		.loc 1 812 0 discriminator 2
 1344 004e A368     		ldr	r3, [r4, #8]
 1345 0050 B3F5805F 		cmp	r3, #4096
 1346 0054 06D0     		beq	.L115
 1347 0056 A3B9     		cbnz	r3, .L103
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1348              		.loc 1 812 0 is_stmt 0 discriminator 5
 1349 0058 2369     		ldr	r3, [r4, #16]
 1350 005a 73B9     		cbnz	r3, .L104
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 58


 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1351              		.loc 1 812 0 discriminator 7
 1352 005c FF23     		movs	r3, #255
 1353 005e A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1354 0062 11E0     		b	.L102
 1355              	.L115:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1356              		.loc 1 812 0 discriminator 1
 1357 0064 2369     		ldr	r3, [r4, #16]
 1358 0066 23B9     		cbnz	r3, .L101
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1359              		.loc 1 812 0 discriminator 3
 1360 0068 40F2FF13 		movw	r3, #511
 1361 006c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1362 0070 0AE0     		b	.L102
 1363              	.L101:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1364              		.loc 1 812 0 discriminator 4
 1365 0072 FF23     		movs	r3, #255
 1366 0074 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1367 0078 06E0     		b	.L102
 1368              	.L104:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1369              		.loc 1 812 0 discriminator 8
 1370 007a 7F23     		movs	r3, #127
 1371 007c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1372 0080 02E0     		b	.L102
 1373              	.L103:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1374              		.loc 1 812 0 discriminator 6
 1375 0082 B3F1805F 		cmp	r3, #268435456
 1376 0086 02D0     		beq	.L116
 1377              	.L102:
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1378              		.loc 1 813 0 is_stmt 1
 1379 0088 B4F85C80 		ldrh	r8, [r4, #92]
 1380              	.LVL105:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1381              		.loc 1 816 0
 1382 008c 10E0     		b	.L106
 1383              	.LVL106:
 1384              	.L116:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1385              		.loc 1 812 0 discriminator 9
 1386 008e 2369     		ldr	r3, [r4, #16]
 1387 0090 1BB9     		cbnz	r3, .L105
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1388              		.loc 1 812 0 is_stmt 0 discriminator 10
 1389 0092 7F23     		movs	r3, #127
 1390 0094 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1391 0098 F6E7     		b	.L102
 1392              	.L105:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1393              		.loc 1 812 0 discriminator 11
 1394 009a 3F23     		movs	r3, #63
 1395 009c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1396 00a0 F2E7     		b	.L102
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 59


 1397              	.LVL107:
 1398              	.L107:
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1399              		.loc 1 831 0 is_stmt 1
 1400 00a2 2368     		ldr	r3, [r4]
 1401 00a4 5A6A     		ldr	r2, [r3, #36]
 1402 00a6 5FFA88F3 		uxtb	r3, r8
 1403              	.LVL108:
 1404 00aa 1340     		ands	r3, r3, r2
 1405 00ac 2B70     		strb	r3, [r5]
 1406 00ae 0135     		adds	r5, r5, #1
 1407              	.LVL109:
 1408              	.L106:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1409              		.loc 1 816 0
 1410 00b0 B4F85A30 		ldrh	r3, [r4, #90]
 1411 00b4 9BB2     		uxth	r3, r3
 1412 00b6 DBB1     		cbz	r3, .L117
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1413              		.loc 1 818 0
 1414 00b8 B4F85A30 		ldrh	r3, [r4, #90]
 1415 00bc 013B     		subs	r3, r3, #1
 1416 00be 9BB2     		uxth	r3, r3
 1417 00c0 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1418              		.loc 1 819 0
 1419 00c4 0096     		str	r6, [sp]
 1420 00c6 3B46     		mov	r3, r7
 1421 00c8 0022     		movs	r2, #0
 1422 00ca 2021     		movs	r1, #32
 1423 00cc 2046     		mov	r0, r4
 1424 00ce FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1425              	.LVL110:
 1426 00d2 E0B9     		cbnz	r0, .L113
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1427              		.loc 1 823 0
 1428 00d4 A368     		ldr	r3, [r4, #8]
 1429 00d6 B3F5805F 		cmp	r3, #4096
 1430 00da E2D1     		bne	.L107
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1431              		.loc 1 823 0 is_stmt 0 discriminator 1
 1432 00dc 2369     		ldr	r3, [r4, #16]
 1433 00de 002B     		cmp	r3, #0
 1434 00e0 DFD1     		bne	.L107
 1435              	.LVL111:
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData +=2U;
 1436              		.loc 1 826 0 is_stmt 1
 1437 00e2 2368     		ldr	r3, [r4]
 1438 00e4 5B6A     		ldr	r3, [r3, #36]
 1439 00e6 08EA0303 		and	r3, r8, r3
 1440 00ea 25F8023B 		strh	r3, [r5], #2	@ movhi
 1441              	.LVL112:
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1442              		.loc 1 827 0
 1443 00ee DFE7     		b	.L106
 1444              	.LVL113:
 1445              	.L117:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 60


 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1446              		.loc 1 836 0
 1447 00f0 2023     		movs	r3, #32
 1448 00f2 84F86A30 		strb	r3, [r4, #106]
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1449              		.loc 1 839 0
 1450 00f6 0020     		movs	r0, #0
 1451 00f8 84F86800 		strb	r0, [r4, #104]
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1452              		.loc 1 841 0
 1453 00fc 00E0     		b	.L99
 1454              	.LVL114:
 1455              	.L110:
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1456              		.loc 1 845 0
 1457 00fe 0220     		movs	r0, #2
 1458              	.LVL115:
 1459              	.L99:
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1460              		.loc 1 847 0
 1461 0100 02B0     		add	sp, sp, #8
 1462              	.LCFI12:
 1463              		.cfi_remember_state
 1464              		.cfi_def_cfa_offset 24
 1465              		@ sp needed
 1466 0102 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1467              	.LVL116:
 1468              	.L111:
 1469              	.LCFI13:
 1470              		.cfi_restore_state
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1471              		.loc 1 796 0
 1472 0106 0120     		movs	r0, #1
 1473              	.LVL117:
 1474 0108 FAE7     		b	.L99
 1475              	.LVL118:
 1476              	.L112:
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1477              		.loc 1 800 0
 1478 010a 0220     		movs	r0, #2
 1479              	.LVL119:
 1480 010c F8E7     		b	.L99
 1481              	.LVL120:
 1482              	.L113:
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1483              		.loc 1 821 0
 1484 010e 0320     		movs	r0, #3
 1485 0110 F6E7     		b	.L99
 1486              		.cfi_endproc
 1487              	.LFE147:
 1489              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1490              		.align	1
 1491              		.weak	HAL_UART_TxCpltCallback
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1495              		.fpu fpv5-sp-d16
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 61


 1497              	HAL_UART_TxCpltCallback:
 1498              	.LFB163:
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1499              		.loc 1 1489 0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 0
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 1503              		@ link register save eliminated.
 1504              	.LVL121:
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1505              		.loc 1 1496 0
 1506 0000 7047     		bx	lr
 1507              		.cfi_endproc
 1508              	.LFE163:
 1510              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1511              		.align	1
 1512              		.syntax unified
 1513              		.thumb
 1514              		.thumb_func
 1515              		.fpu fpv5-sp-d16
 1517              	UART_DMATransmitCplt:
 1518              	.LFB157:
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1519              		.loc 1 1367 0
 1520              		.cfi_startproc
 1521              		@ args = 0, pretend = 0, frame = 0
 1522              		@ frame_needed = 0, uses_anonymous_args = 0
 1523              	.LVL122:
 1524 0000 08B5     		push	{r3, lr}
 1525              	.LCFI14:
 1526              		.cfi_def_cfa_offset 8
 1527              		.cfi_offset 3, -8
 1528              		.cfi_offset 14, -4
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1529              		.loc 1 1368 0
 1530 0002 836B     		ldr	r3, [r0, #56]
 1531              	.LVL123:
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1532              		.loc 1 1371 0
 1533 0004 0268     		ldr	r2, [r0]
 1534 0006 1268     		ldr	r2, [r2]
 1535 0008 12F4807F 		tst	r2, #256
 1536 000c 0DD1     		bne	.L120
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1537              		.loc 1 1373 0
 1538 000e 0022     		movs	r2, #0
 1539 0010 A3F85220 		strh	r2, [r3, #82]	@ movhi
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1540              		.loc 1 1377 0
 1541 0014 1968     		ldr	r1, [r3]
 1542 0016 8A68     		ldr	r2, [r1, #8]
 1543 0018 22F08002 		bic	r2, r2, #128
 1544 001c 8A60     		str	r2, [r1, #8]
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1545              		.loc 1 1380 0
 1546 001e 1A68     		ldr	r2, [r3]
 1547 0020 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 62


 1548              	.LVL124:
 1549 0022 43F04003 		orr	r3, r3, #64
 1550 0026 1360     		str	r3, [r2]
 1551              	.LVL125:
 1552              	.L119:
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1553              		.loc 1 1387 0
 1554 0028 08BD     		pop	{r3, pc}
 1555              	.LVL126:
 1556              	.L120:
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1557              		.loc 1 1385 0
 1558 002a 1846     		mov	r0, r3
 1559              	.LVL127:
 1560 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1561              	.LVL128:
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1562              		.loc 1 1387 0
 1563 0030 FAE7     		b	.L119
 1564              		.cfi_endproc
 1565              	.LFE157:
 1567              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1568              		.align	1
 1569              		.syntax unified
 1570              		.thumb
 1571              		.thumb_func
 1572              		.fpu fpv5-sp-d16
 1574              	UART_EndTransmit_IT:
 1575              	.LFB169:
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
 1576              		.loc 1 1614 0
 1577              		.cfi_startproc
 1578              		@ args = 0, pretend = 0, frame = 0
 1579              		@ frame_needed = 0, uses_anonymous_args = 0
 1580              	.LVL129:
 1581 0000 08B5     		push	{r3, lr}
 1582              	.LCFI15:
 1583              		.cfi_def_cfa_offset 8
 1584              		.cfi_offset 3, -8
 1585              		.cfi_offset 14, -4
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1586              		.loc 1 1616 0
 1587 0002 0168     		ldr	r1, [r0]
 1588 0004 0B68     		ldr	r3, [r1]
 1589 0006 23F04003 		bic	r3, r3, #64
 1590 000a 0B60     		str	r3, [r1]
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1591              		.loc 1 1619 0
 1592 000c 2023     		movs	r3, #32
 1593 000e 80F86930 		strb	r3, [r0, #105]
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1594              		.loc 1 1621 0
 1595 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1596              	.LVL130:
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1597              		.loc 1 1624 0
 1598 0016 0020     		movs	r0, #0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 63


 1599 0018 08BD     		pop	{r3, pc}
 1600              		.cfi_endproc
 1601              	.LFE169:
 1603              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1604              		.align	1
 1605              		.weak	HAL_UART_TxHalfCpltCallback
 1606              		.syntax unified
 1607              		.thumb
 1608              		.thumb_func
 1609              		.fpu fpv5-sp-d16
 1611              	HAL_UART_TxHalfCpltCallback:
 1612              	.LFB164:
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1613              		.loc 1 1504 0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 0
 1616              		@ frame_needed = 0, uses_anonymous_args = 0
 1617              		@ link register save eliminated.
 1618              	.LVL131:
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1619              		.loc 1 1511 0
 1620 0000 7047     		bx	lr
 1621              		.cfi_endproc
 1622              	.LFE164:
 1624              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1625              		.align	1
 1626              		.syntax unified
 1627              		.thumb
 1628              		.thumb_func
 1629              		.fpu fpv5-sp-d16
 1631              	UART_DMATxHalfCplt:
 1632              	.LFB158:
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 1633              		.loc 1 1395 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 0
 1636              		@ frame_needed = 0, uses_anonymous_args = 0
 1637              	.LVL132:
 1638 0000 08B5     		push	{r3, lr}
 1639              	.LCFI16:
 1640              		.cfi_def_cfa_offset 8
 1641              		.cfi_offset 3, -8
 1642              		.cfi_offset 14, -4
 1643              	.LVL133:
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1644              		.loc 1 1398 0
 1645 0002 806B     		ldr	r0, [r0, #56]
 1646              	.LVL134:
 1647 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1648              	.LVL135:
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1649              		.loc 1 1399 0
 1650 0008 08BD     		pop	{r3, pc}
 1651              		.cfi_endproc
 1652              	.LFE158:
 1654              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1655              		.align	1
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 64


 1656              		.weak	HAL_UART_RxCpltCallback
 1657              		.syntax unified
 1658              		.thumb
 1659              		.thumb_func
 1660              		.fpu fpv5-sp-d16
 1662              	HAL_UART_RxCpltCallback:
 1663              	.LFB165:
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1664              		.loc 1 1519 0
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 0
 1667              		@ frame_needed = 0, uses_anonymous_args = 0
 1668              		@ link register save eliminated.
 1669              	.LVL136:
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1670              		.loc 1 1526 0
 1671 0000 7047     		bx	lr
 1672              		.cfi_endproc
 1673              	.LFE165:
 1675              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1676              		.align	1
 1677              		.syntax unified
 1678              		.thumb
 1679              		.thumb_func
 1680              		.fpu fpv5-sp-d16
 1682              	UART_DMAReceiveCplt:
 1683              	.LFB159:
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1684              		.loc 1 1407 0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 0
 1687              		@ frame_needed = 0, uses_anonymous_args = 0
 1688              	.LVL137:
 1689 0000 08B5     		push	{r3, lr}
 1690              	.LCFI17:
 1691              		.cfi_def_cfa_offset 8
 1692              		.cfi_offset 3, -8
 1693              		.cfi_offset 14, -4
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1694              		.loc 1 1408 0
 1695 0002 836B     		ldr	r3, [r0, #56]
 1696              	.LVL138:
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1697              		.loc 1 1411 0
 1698 0004 0268     		ldr	r2, [r0]
 1699 0006 1268     		ldr	r2, [r2]
 1700 0008 12F4807F 		tst	r2, #256
 1701 000c 14D1     		bne	.L130
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1702              		.loc 1 1413 0
 1703 000e 0022     		movs	r2, #0
 1704 0010 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1705              		.loc 1 1416 0
 1706 0014 1968     		ldr	r1, [r3]
 1707 0016 0A68     		ldr	r2, [r1]
 1708 0018 22F48072 		bic	r2, r2, #256
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 65


 1709 001c 0A60     		str	r2, [r1]
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1710              		.loc 1 1417 0
 1711 001e 1968     		ldr	r1, [r3]
 1712 0020 8A68     		ldr	r2, [r1, #8]
 1713 0022 22F00102 		bic	r2, r2, #1
 1714 0026 8A60     		str	r2, [r1, #8]
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1715              		.loc 1 1421 0
 1716 0028 1968     		ldr	r1, [r3]
 1717 002a 8A68     		ldr	r2, [r1, #8]
 1718 002c 22F04002 		bic	r2, r2, #64
 1719 0030 8A60     		str	r2, [r1, #8]
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1720              		.loc 1 1424 0
 1721 0032 2022     		movs	r2, #32
 1722 0034 83F86A20 		strb	r2, [r3, #106]
 1723              	.L130:
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1724              		.loc 1 1426 0
 1725 0038 1846     		mov	r0, r3
 1726              	.LVL139:
 1727 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1728              	.LVL140:
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1729              		.loc 1 1427 0
 1730 003e 08BD     		pop	{r3, pc}
 1731              		.cfi_endproc
 1732              	.LFE159:
 1734              		.section	.text.UART_Receive_IT,"ax",%progbits
 1735              		.align	1
 1736              		.syntax unified
 1737              		.thumb
 1738              		.thumb_func
 1739              		.fpu fpv5-sp-d16
 1741              	UART_Receive_IT:
 1742              	.LFB170:
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 1743              		.loc 1 1634 0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 0
 1746              		@ frame_needed = 0, uses_anonymous_args = 0
 1747              	.LVL141:
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1748              		.loc 1 1636 0
 1749 0000 B0F85C20 		ldrh	r2, [r0, #92]
 1750              	.LVL142:
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1751              		.loc 1 1639 0
 1752 0004 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 1753 0008 DBB2     		uxtb	r3, r3
 1754 000a 222B     		cmp	r3, #34
 1755 000c 32D1     		bne	.L133
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 1756              		.loc 1 1634 0
 1757 000e 10B5     		push	{r4, lr}
 1758              	.LCFI18:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 66


 1759              		.cfi_def_cfa_offset 8
 1760              		.cfi_offset 4, -8
 1761              		.cfi_offset 14, -4
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1762              		.loc 1 1642 0
 1763 0010 8368     		ldr	r3, [r0, #8]
 1764 0012 B3F5805F 		cmp	r3, #4096
 1765 0016 10D0     		beq	.L142
 1766              	.L134:
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1767              		.loc 1 1650 0
 1768 0018 0368     		ldr	r3, [r0]
 1769 001a 596A     		ldr	r1, [r3, #36]
 1770 001c D2B2     		uxtb	r2, r2
 1771              	.LVL143:
 1772 001e 436D     		ldr	r3, [r0, #84]
 1773 0020 5C1C     		adds	r4, r3, #1
 1774 0022 4465     		str	r4, [r0, #84]
 1775 0024 0A40     		ands	r2, r2, r1
 1776 0026 1A70     		strb	r2, [r3]
 1777              	.LVL144:
 1778              	.L135:
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1779              		.loc 1 1653 0
 1780 0028 B0F85A30 		ldrh	r3, [r0, #90]
 1781 002c 013B     		subs	r3, r3, #1
 1782 002e 9BB2     		uxth	r3, r3
 1783 0030 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 1784 0034 6BB1     		cbz	r3, .L143
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1785              		.loc 1 1669 0
 1786 0036 0020     		movs	r0, #0
 1787              	.LVL145:
 1788              	.L136:
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1789              		.loc 1 1678 0
 1790 0038 10BD     		pop	{r4, pc}
 1791              	.LVL146:
 1792              	.L142:
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1793              		.loc 1 1642 0 discriminator 1
 1794 003a 0369     		ldr	r3, [r0, #16]
 1795 003c 002B     		cmp	r3, #0
 1796 003e EBD1     		bne	.L134
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 1797              		.loc 1 1644 0
 1798 0040 436D     		ldr	r3, [r0, #84]
 1799              	.LVL147:
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
 1800              		.loc 1 1645 0
 1801 0042 0168     		ldr	r1, [r0]
 1802 0044 496A     		ldr	r1, [r1, #36]
 1803 0046 0A40     		ands	r2, r2, r1
 1804              	.LVL148:
 1805 0048 1A80     		strh	r2, [r3]	@ movhi
 1806              	.LVL149:
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 67


 1807              		.loc 1 1646 0
 1808 004a 436D     		ldr	r3, [r0, #84]
 1809              	.LVL150:
 1810 004c 0233     		adds	r3, r3, #2
 1811 004e 4365     		str	r3, [r0, #84]
 1812 0050 EAE7     		b	.L135
 1813              	.L143:
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1814              		.loc 1 1656 0
 1815 0052 0268     		ldr	r2, [r0]
 1816 0054 1368     		ldr	r3, [r2]
 1817 0056 23F49073 		bic	r3, r3, #288
 1818 005a 1360     		str	r3, [r2]
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1819              		.loc 1 1659 0
 1820 005c 0268     		ldr	r2, [r0]
 1821 005e 9368     		ldr	r3, [r2, #8]
 1822 0060 23F00103 		bic	r3, r3, #1
 1823 0064 9360     		str	r3, [r2, #8]
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1824              		.loc 1 1662 0
 1825 0066 2023     		movs	r3, #32
 1826 0068 80F86A30 		strb	r3, [r0, #106]
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1827              		.loc 1 1664 0
 1828 006c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1829              	.LVL151:
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1830              		.loc 1 1666 0
 1831 0070 0020     		movs	r0, #0
 1832 0072 E1E7     		b	.L136
 1833              	.LVL152:
 1834              	.L133:
 1835              	.LCFI19:
 1836              		.cfi_def_cfa_offset 0
 1837              		.cfi_restore 4
 1838              		.cfi_restore 14
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1839              		.loc 1 1674 0
 1840 0074 0268     		ldr	r2, [r0]
 1841              	.LVL153:
 1842 0076 9369     		ldr	r3, [r2, #24]
 1843 0078 43F00803 		orr	r3, r3, #8
 1844 007c 9361     		str	r3, [r2, #24]
 1845              	.LVL154:
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1846              		.loc 1 1676 0
 1847 007e 0220     		movs	r0, #2
 1848              	.LVL155:
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1849              		.loc 1 1678 0
 1850 0080 7047     		bx	lr
 1851              		.cfi_endproc
 1852              	.LFE170:
 1854              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1855              		.align	1
 1856              		.weak	HAL_UART_RxHalfCpltCallback
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 68


 1857              		.syntax unified
 1858              		.thumb
 1859              		.thumb_func
 1860              		.fpu fpv5-sp-d16
 1862              	HAL_UART_RxHalfCpltCallback:
 1863              	.LFB166:
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1864              		.loc 1 1534 0
 1865              		.cfi_startproc
 1866              		@ args = 0, pretend = 0, frame = 0
 1867              		@ frame_needed = 0, uses_anonymous_args = 0
 1868              		@ link register save eliminated.
 1869              	.LVL156:
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1870              		.loc 1 1541 0
 1871 0000 7047     		bx	lr
 1872              		.cfi_endproc
 1873              	.LFE166:
 1875              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1876              		.align	1
 1877              		.syntax unified
 1878              		.thumb
 1879              		.thumb_func
 1880              		.fpu fpv5-sp-d16
 1882              	UART_DMARxHalfCplt:
 1883              	.LFB160:
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 1884              		.loc 1 1435 0
 1885              		.cfi_startproc
 1886              		@ args = 0, pretend = 0, frame = 0
 1887              		@ frame_needed = 0, uses_anonymous_args = 0
 1888              	.LVL157:
 1889 0000 08B5     		push	{r3, lr}
 1890              	.LCFI20:
 1891              		.cfi_def_cfa_offset 8
 1892              		.cfi_offset 3, -8
 1893              		.cfi_offset 14, -4
 1894              	.LVL158:
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1895              		.loc 1 1438 0
 1896 0002 806B     		ldr	r0, [r0, #56]
 1897              	.LVL159:
 1898 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1899              	.LVL160:
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1900              		.loc 1 1439 0
 1901 0008 08BD     		pop	{r3, pc}
 1902              		.cfi_endproc
 1903              	.LFE160:
 1905              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1906              		.align	1
 1907              		.weak	HAL_UART_ErrorCallback
 1908              		.syntax unified
 1909              		.thumb
 1910              		.thumb_func
 1911              		.fpu fpv5-sp-d16
 1913              	HAL_UART_ErrorCallback:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 69


 1914              	.LFB167:
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1915              		.loc 1 1549 0
 1916              		.cfi_startproc
 1917              		@ args = 0, pretend = 0, frame = 0
 1918              		@ frame_needed = 0, uses_anonymous_args = 0
 1919              		@ link register save eliminated.
 1920              	.LVL161:
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1921              		.loc 1 1556 0
 1922 0000 7047     		bx	lr
 1923              		.cfi_endproc
 1924              	.LFE167:
 1926              		.section	.text.UART_DMAError,"ax",%progbits
 1927              		.align	1
 1928              		.syntax unified
 1929              		.thumb
 1930              		.thumb_func
 1931              		.fpu fpv5-sp-d16
 1933              	UART_DMAError:
 1934              	.LFB161:
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1935              		.loc 1 1447 0
 1936              		.cfi_startproc
 1937              		@ args = 0, pretend = 0, frame = 0
 1938              		@ frame_needed = 0, uses_anonymous_args = 0
 1939              	.LVL162:
 1940 0000 10B5     		push	{r4, lr}
 1941              	.LCFI21:
 1942              		.cfi_def_cfa_offset 8
 1943              		.cfi_offset 4, -8
 1944              		.cfi_offset 14, -4
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1945              		.loc 1 1448 0
 1946 0002 846B     		ldr	r4, [r0, #56]
 1947              	.LVL163:
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1948              		.loc 1 1449 0
 1949 0004 0023     		movs	r3, #0
 1950 0006 A4F85A30 		strh	r3, [r4, #90]	@ movhi
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
 1951              		.loc 1 1450 0
 1952 000a A4F85230 		strh	r3, [r4, #82]	@ movhi
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 1953              		.loc 1 1452 0
 1954 000e 94F86930 		ldrb	r3, [r4, #105]	@ zero_extendqisi2
 1955 0012 DBB2     		uxtb	r3, r3
 1956 0014 212B     		cmp	r3, #33
 1957 0016 0CD0     		beq	.L152
 1958              	.LVL164:
 1959              	.L149:
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 1960              		.loc 1 1459 0
 1961 0018 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 1962 001c DBB2     		uxtb	r3, r3
 1963 001e 222B     		cmp	r3, #34
 1964 0020 10D0     		beq	.L153
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 70


 1965              	.L150:
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1966              		.loc 1 1464 0
 1967 0022 E36E     		ldr	r3, [r4, #108]
 1968 0024 43F01003 		orr	r3, r3, #16
 1969 0028 E366     		str	r3, [r4, #108]
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1970              		.loc 1 1465 0
 1971 002a 2046     		mov	r0, r4
 1972 002c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1973              	.LVL165:
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1974              		.loc 1 1466 0
 1975 0030 10BD     		pop	{r4, pc}
 1976              	.LVL166:
 1977              	.L152:
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1978              		.loc 1 1453 0
 1979 0032 2368     		ldr	r3, [r4]
 1980 0034 9B68     		ldr	r3, [r3, #8]
 1981 0036 13F0800F 		tst	r3, #128
 1982 003a EDD0     		beq	.L149
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1983              		.loc 1 1455 0
 1984 003c 2046     		mov	r0, r4
 1985              	.LVL167:
 1986 003e FFF7FEFF 		bl	UART_EndTxTransfer
 1987              	.LVL168:
 1988 0042 E9E7     		b	.L149
 1989              	.L153:
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1990              		.loc 1 1460 0
 1991 0044 2368     		ldr	r3, [r4]
 1992 0046 9B68     		ldr	r3, [r3, #8]
 1993 0048 13F0400F 		tst	r3, #64
 1994 004c E9D0     		beq	.L150
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1995              		.loc 1 1462 0
 1996 004e 2046     		mov	r0, r4
 1997 0050 FFF7FEFF 		bl	UART_EndRxTransfer
 1998              	.LVL169:
 1999 0054 E5E7     		b	.L150
 2000              		.cfi_endproc
 2001              	.LFE161:
 2003              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2004              		.align	1
 2005              		.global	HAL_UART_IRQHandler
 2006              		.syntax unified
 2007              		.thumb
 2008              		.thumb_func
 2009              		.fpu fpv5-sp-d16
 2011              	HAL_UART_IRQHandler:
 2012              	.LFB155:
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2013              		.loc 1 1191 0
 2014              		.cfi_startproc
 2015              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 71


 2016              		@ frame_needed = 0, uses_anonymous_args = 0
 2017              	.LVL170:
 2018 0000 38B5     		push	{r3, r4, r5, lr}
 2019              	.LCFI22:
 2020              		.cfi_def_cfa_offset 16
 2021              		.cfi_offset 3, -16
 2022              		.cfi_offset 4, -12
 2023              		.cfi_offset 5, -8
 2024              		.cfi_offset 14, -4
 2025 0002 0446     		mov	r4, r0
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2026              		.loc 1 1192 0
 2027 0004 0268     		ldr	r2, [r0]
 2028 0006 D369     		ldr	r3, [r2, #28]
 2029              	.LVL171:
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2030              		.loc 1 1193 0
 2031 0008 1068     		ldr	r0, [r2]
 2032              	.LVL172:
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t errorflags;
 2033              		.loc 1 1194 0
 2034 000a 9168     		ldr	r1, [r2, #8]
 2035              	.LVL173:
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2036              		.loc 1 1199 0
 2037 000c 13F00F05 		ands	r5, r3, #15
 2038              	.LVL174:
 2039 0010 05D1     		bne	.L155
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2040              		.loc 1 1202 0
 2041 0012 13F0200F 		tst	r3, #32
 2042 0016 02D0     		beq	.L155
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2043              		.loc 1 1202 0 is_stmt 0 discriminator 1
 2044 0018 10F0200F 		tst	r0, #32
 2045 001c 5FD1     		bne	.L171
 2046              	.L155:
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 2047              		.loc 1 1210 0 is_stmt 1
 2048 001e 002D     		cmp	r5, #0
 2049 0020 73D0     		beq	.L157
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 2050              		.loc 1 1211 0
 2051 0022 11F00101 		ands	r1, r1, #1
 2052              	.LVL175:
 2053 0026 02D1     		bne	.L158
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2054              		.loc 1 1212 0
 2055 0028 10F4907F 		tst	r0, #288
 2056 002c 6DD0     		beq	.L157
 2057              	.L158:
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2058              		.loc 1 1216 0
 2059 002e 13F0010F 		tst	r3, #1
 2060 0032 07D0     		beq	.L159
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2061              		.loc 1 1216 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 72


 2062 0034 10F4807F 		tst	r0, #256
 2063 0038 04D0     		beq	.L159
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2064              		.loc 1 1218 0 is_stmt 1
 2065 003a 0125     		movs	r5, #1
 2066              	.LVL176:
 2067 003c 1562     		str	r5, [r2, #32]
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 2068              		.loc 1 1220 0
 2069 003e E26E     		ldr	r2, [r4, #108]
 2070 0040 2A43     		orrs	r2, r2, r5
 2071 0042 E266     		str	r2, [r4, #108]
 2072              	.L159:
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2073              		.loc 1 1224 0
 2074 0044 13F0020F 		tst	r3, #2
 2075 0048 07D0     		beq	.L160
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2076              		.loc 1 1224 0 is_stmt 0 discriminator 1
 2077 004a 31B1     		cbz	r1, .L160
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2078              		.loc 1 1226 0 is_stmt 1
 2079 004c 2268     		ldr	r2, [r4]
 2080 004e 0225     		movs	r5, #2
 2081 0050 1562     		str	r5, [r2, #32]
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 2082              		.loc 1 1228 0
 2083 0052 E26E     		ldr	r2, [r4, #108]
 2084 0054 42F00402 		orr	r2, r2, #4
 2085 0058 E266     		str	r2, [r4, #108]
 2086              	.L160:
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2087              		.loc 1 1232 0
 2088 005a 13F0040F 		tst	r3, #4
 2089 005e 07D0     		beq	.L161
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2090              		.loc 1 1232 0 is_stmt 0 discriminator 1
 2091 0060 31B1     		cbz	r1, .L161
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2092              		.loc 1 1234 0 is_stmt 1
 2093 0062 2268     		ldr	r2, [r4]
 2094 0064 0425     		movs	r5, #4
 2095 0066 1562     		str	r5, [r2, #32]
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 2096              		.loc 1 1236 0
 2097 0068 E26E     		ldr	r2, [r4, #108]
 2098 006a 42F00202 		orr	r2, r2, #2
 2099 006e E266     		str	r2, [r4, #108]
 2100              	.L161:
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 2101              		.loc 1 1240 0
 2102 0070 13F0080F 		tst	r3, #8
 2103 0074 09D0     		beq	.L162
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 2104              		.loc 1 1240 0 is_stmt 0 discriminator 1
 2105 0076 10F0200F 		tst	r0, #32
 2106 007a 00D1     		bne	.L163
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 73


1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2107              		.loc 1 1241 0 is_stmt 1
 2108 007c 29B1     		cbz	r1, .L162
 2109              	.L163:
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2110              		.loc 1 1243 0
 2111 007e 2268     		ldr	r2, [r4]
 2112 0080 0821     		movs	r1, #8
 2113 0082 1162     		str	r1, [r2, #32]
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 2114              		.loc 1 1245 0
 2115 0084 E26E     		ldr	r2, [r4, #108]
 2116 0086 0A43     		orrs	r2, r2, r1
 2117 0088 E266     		str	r2, [r4, #108]
 2118              	.L162:
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2119              		.loc 1 1249 0
 2120 008a E26E     		ldr	r2, [r4, #108]
 2121 008c 002A     		cmp	r2, #0
 2122 008e 48D0     		beq	.L154
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 2123              		.loc 1 1252 0
 2124 0090 13F0200F 		tst	r3, #32
 2125 0094 02D0     		beq	.L164
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 2126              		.loc 1 1252 0 is_stmt 0 discriminator 1
 2127 0096 10F0200F 		tst	r0, #32
 2128 009a 24D1     		bne	.L172
 2129              	.LVL177:
 2130              	.L164:
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2131              		.loc 1 1259 0 is_stmt 1
 2132 009c E36E     		ldr	r3, [r4, #108]
 2133 009e 13F0080F 		tst	r3, #8
 2134 00a2 04D1     		bne	.L165
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 2135              		.loc 1 1260 0 discriminator 1
 2136 00a4 2368     		ldr	r3, [r4]
 2137 00a6 9B68     		ldr	r3, [r3, #8]
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2138              		.loc 1 1259 0 discriminator 1
 2139 00a8 13F0400F 		tst	r3, #64
 2140 00ac 27D0     		beq	.L166
 2141              	.L165:
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2142              		.loc 1 1265 0
 2143 00ae 2046     		mov	r0, r4
 2144 00b0 FFF7FEFF 		bl	UART_EndRxTransfer
 2145              	.LVL178:
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2146              		.loc 1 1268 0
 2147 00b4 2368     		ldr	r3, [r4]
 2148 00b6 9A68     		ldr	r2, [r3, #8]
 2149 00b8 12F0400F 		tst	r2, #64
 2150 00bc 1BD0     		beq	.L167
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2151              		.loc 1 1270 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 74


 2152 00be 9A68     		ldr	r2, [r3, #8]
 2153 00c0 22F04002 		bic	r2, r2, #64
 2154 00c4 9A60     		str	r2, [r3, #8]
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
 2155              		.loc 1 1273 0
 2156 00c6 636E     		ldr	r3, [r4, #100]
 2157 00c8 8BB1     		cbz	r3, .L168
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2158              		.loc 1 1277 0
 2159 00ca 1A4A     		ldr	r2, .L175
 2160 00cc 1A65     		str	r2, [r3, #80]
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             {
 2161              		.loc 1 1280 0
 2162 00ce 606E     		ldr	r0, [r4, #100]
 2163 00d0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2164              	.LVL179:
 2165 00d4 28B3     		cbz	r0, .L154
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             }
 2166              		.loc 1 1283 0
 2167 00d6 606E     		ldr	r0, [r4, #100]
 2168 00d8 036D     		ldr	r3, [r0, #80]
 2169 00da 9847     		blx	r3
 2170              	.LVL180:
 2171 00dc 21E0     		b	.L154
 2172              	.LVL181:
 2173              	.L171:
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
 2174              		.loc 1 1204 0
 2175 00de 2046     		mov	r0, r4
 2176              	.LVL182:
 2177 00e0 FFF7FEFF 		bl	UART_Receive_IT
 2178              	.LVL183:
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 2179              		.loc 1 1205 0
 2180 00e4 1DE0     		b	.L154
 2181              	.LVL184:
 2182              	.L172:
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 2183              		.loc 1 1254 0
 2184 00e6 2046     		mov	r0, r4
 2185              	.LVL185:
 2186 00e8 FFF7FEFF 		bl	UART_Receive_IT
 2187              	.LVL186:
 2188 00ec D6E7     		b	.L164
 2189              	.L168:
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
 2190              		.loc 1 1289 0
 2191 00ee 2046     		mov	r0, r4
 2192 00f0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2193              	.LVL187:
 2194 00f4 15E0     		b	.L154
 2195              	.L167:
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
 2196              		.loc 1 1295 0
 2197 00f6 2046     		mov	r0, r4
 2198 00f8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2199              	.LVL188:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 75


 2200 00fc 11E0     		b	.L154
 2201              	.L166:
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 2202              		.loc 1 1302 0
 2203 00fe 2046     		mov	r0, r4
 2204 0100 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2205              	.LVL189:
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 2206              		.loc 1 1303 0
 2207 0104 0023     		movs	r3, #0
 2208 0106 E366     		str	r3, [r4, #108]
 2209 0108 0BE0     		b	.L154
 2210              	.LVL190:
 2211              	.L157:
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2212              		.loc 1 1311 0
 2213 010a 13F0800F 		tst	r3, #128
 2214 010e 02D0     		beq	.L169
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2215              		.loc 1 1311 0 is_stmt 0 discriminator 1
 2216 0110 10F0800F 		tst	r0, #128
 2217 0114 06D1     		bne	.L173
 2218              	.L169:
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2219              		.loc 1 1318 0 is_stmt 1
 2220 0116 13F0400F 		tst	r3, #64
 2221 011a 02D0     		beq	.L154
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2222              		.loc 1 1318 0 is_stmt 0 discriminator 1
 2223 011c 10F0400F 		tst	r0, #64
 2224 0120 04D1     		bne	.L174
 2225              	.LVL191:
 2226              	.L154:
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2227              		.loc 1 1324 0 is_stmt 1
 2228 0122 38BD     		pop	{r3, r4, r5, pc}
 2229              	.LVL192:
 2230              	.L173:
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2231              		.loc 1 1313 0
 2232 0124 2046     		mov	r0, r4
 2233              	.LVL193:
 2234 0126 FFF7FEFF 		bl	UART_Transmit_IT
 2235              	.LVL194:
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 2236              		.loc 1 1314 0
 2237 012a FAE7     		b	.L154
 2238              	.LVL195:
 2239              	.L174:
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2240              		.loc 1 1320 0
 2241 012c 2046     		mov	r0, r4
 2242              	.LVL196:
 2243 012e FFF7FEFF 		bl	UART_EndTransmit_IT
 2244              	.LVL197:
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 2245              		.loc 1 1321 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 76


 2246 0132 F6E7     		b	.L154
 2247              	.L176:
 2248              		.align	2
 2249              	.L175:
 2250 0134 00000000 		.word	UART_DMAAbortOnError
 2251              		.cfi_endproc
 2252              	.LFE155:
 2254              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2255              		.align	1
 2256              		.syntax unified
 2257              		.thumb
 2258              		.thumb_func
 2259              		.fpu fpv5-sp-d16
 2261              	UART_DMAAbortOnError:
 2262              	.LFB162:
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2263              		.loc 1 1475 0
 2264              		.cfi_startproc
 2265              		@ args = 0, pretend = 0, frame = 0
 2266              		@ frame_needed = 0, uses_anonymous_args = 0
 2267              	.LVL198:
 2268 0000 08B5     		push	{r3, lr}
 2269              	.LCFI23:
 2270              		.cfi_def_cfa_offset 8
 2271              		.cfi_offset 3, -8
 2272              		.cfi_offset 14, -4
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2273              		.loc 1 1476 0
 2274 0002 806B     		ldr	r0, [r0, #56]
 2275              	.LVL199:
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2276              		.loc 1 1477 0
 2277 0004 0023     		movs	r3, #0
 2278 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2279              		.loc 1 1478 0
 2280 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2281              		.loc 1 1480 0
 2282 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2283              	.LVL200:
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2284              		.loc 1 1481 0
 2285 0012 08BD     		pop	{r3, pc}
 2286              		.cfi_endproc
 2287              	.LFE162:
 2289              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2290              		.align	1
 2291              		.global	HAL_MultiProcessor_EnterMuteMode
 2292              		.syntax unified
 2293              		.thumb
 2294              		.thumb_func
 2295              		.fpu fpv5-sp-d16
 2297              	HAL_MultiProcessor_EnterMuteMode:
 2298              	.LFB175:
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 77


1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief   UART control functions
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_UART_GetState() API is helpful to check in run-time the state of the UART peripheral.
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 	 (+) HAL_MultiProcessorEx_AddressLength_Set() API optionally sets the UART node address
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          detection length to more than 4 bits for multiprocessor address mark wake up.
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Enable UART in mute mode (doesn't mean UART enters mute mode;
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called)
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Disable UART mute mode (doesn't mean it actually wakes up the software,
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * as it may not have been in mute mode at this very moment).
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 78


1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2299              		.loc 1 1789 0
 2300              		.cfi_startproc
 2301              		@ args = 0, pretend = 0, frame = 0
 2302              		@ frame_needed = 0, uses_anonymous_args = 0
 2303              		@ link register save eliminated.
 2304              	.LVL201:
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2305              		.loc 1 1790 0
 2306 0000 0268     		ldr	r2, [r0]
 2307 0002 9369     		ldr	r3, [r2, #24]
 2308 0004 43F00403 		orr	r3, r3, #4
 2309 0008 9361     		str	r3, [r2, #24]
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2310              		.loc 1 1791 0
 2311 000a 7047     		bx	lr
 2312              		.cfi_endproc
 2313              	.LFE175:
 2315              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2316              		.align	1
 2317              		.global	HAL_UART_GetState
 2318              		.syntax unified
 2319              		.thumb
 2320              		.thumb_func
 2321              		.fpu fpv5-sp-d16
 2323              	HAL_UART_GetState:
 2324              	.LFB176:
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief return the UART state
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL state
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 79


1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2325              		.loc 1 1801 0
 2326              		.cfi_startproc
 2327              		@ args = 0, pretend = 0, frame = 0
 2328              		@ frame_needed = 0, uses_anonymous_args = 0
 2329              		@ link register save eliminated.
 2330              	.LVL202:
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp1 = huart->gState;
 2331              		.loc 1 1803 0
 2332 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 2333              	.LVL203:
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp2 = huart->RxState;
 2334              		.loc 1 1804 0
 2335 0004 90F86A00 		ldrb	r0, [r0, #106]	@ zero_extendqisi2
 2336              	.LVL204:
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2337              		.loc 1 1807 0
 2338 0008 1843     		orrs	r0, r0, r3
 2339              	.LVL205:
 2340 000a 7047     		bx	lr
 2341              		.cfi_endproc
 2342              	.LFE176:
 2344              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2345              		.align	1
 2346              		.global	HAL_UART_GetError
 2347              		.syntax unified
 2348              		.thumb
 2349              		.thumb_func
 2350              		.fpu fpv5-sp-d16
 2352              	HAL_UART_GetError:
 2353              	.LFB177:
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @brief  Return the UART error code
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @param  huart  pointer to a UART_HandleTypeDef structure that contains
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *              the configuration information for the specified UART.
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @retval UART Error Code
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** */
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2354              		.loc 1 1816 0
 2355              		.cfi_startproc
 2356              		@ args = 0, pretend = 0, frame = 0
 2357              		@ frame_needed = 0, uses_anonymous_args = 0
 2358              		@ link register save eliminated.
 2359              	.LVL206:
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return huart->ErrorCode;
 2360              		.loc 1 1817 0
 2361 0000 C06E     		ldr	r0, [r0, #108]
 2362              	.LVL207:
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2363              		.loc 1 1818 0
 2364 0002 7047     		bx	lr
 2365              		.cfi_endproc
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 80


 2366              	.LFE177:
 2368              		.section	.text.UART_SetConfig,"ax",%progbits
 2369              		.align	1
 2370              		.global	UART_SetConfig
 2371              		.syntax unified
 2372              		.thumb
 2373              		.thumb_func
 2374              		.fpu fpv5-sp-d16
 2376              	UART_SetConfig:
 2377              	.LFB178:
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2378              		.loc 1 1826 0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 0
 2381              		@ frame_needed = 0, uses_anonymous_args = 0
 2382              	.LVL208:
 2383 0000 10B5     		push	{r4, lr}
 2384              	.LCFI24:
 2385              		.cfi_def_cfa_offset 8
 2386              		.cfi_offset 4, -8
 2387              		.cfi_offset 14, -4
 2388 0002 0446     		mov	r4, r0
 2389              	.LVL209:
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 2390              		.loc 1 1850 0
 2391 0004 8368     		ldr	r3, [r0, #8]
 2392 0006 0269     		ldr	r2, [r0, #16]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 81


 2393 0008 1343     		orrs	r3, r3, r2
 2394 000a 4269     		ldr	r2, [r0, #20]
 2395 000c 1343     		orrs	r3, r3, r2
 2396 000e C269     		ldr	r2, [r0, #28]
 2397 0010 1343     		orrs	r3, r3, r2
 2398              	.LVL210:
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2399              		.loc 1 1851 0
 2400 0012 0168     		ldr	r1, [r0]
 2401 0014 0868     		ldr	r0, [r1]
 2402              	.LVL211:
 2403 0016 9D4A     		ldr	r2, .L273
 2404 0018 0240     		ands	r2, r2, r0
 2405 001a 1343     		orrs	r3, r3, r2
 2406              	.LVL212:
 2407 001c 0B60     		str	r3, [r1]
 2408              	.LVL213:
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * to huart->Init.StopBits value */
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 2409              		.loc 1 1856 0
 2410 001e 2268     		ldr	r2, [r4]
 2411 0020 5368     		ldr	r3, [r2, #4]
 2412 0022 23F44053 		bic	r3, r3, #12288
 2413 0026 E168     		ldr	r1, [r4, #12]
 2414 0028 0B43     		orrs	r3, r3, r1
 2415 002a 5360     		str	r3, [r2, #4]
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 2416              		.loc 1 1864 0
 2417 002c A369     		ldr	r3, [r4, #24]
 2418 002e 226A     		ldr	r2, [r4, #32]
 2419 0030 1A43     		orrs	r2, r2, r3
 2420              	.LVL214:
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2421              		.loc 1 1865 0
 2422 0032 2168     		ldr	r1, [r4]
 2423 0034 8B68     		ldr	r3, [r1, #8]
 2424 0036 23F43063 		bic	r3, r3, #2816
 2425 003a 1343     		orrs	r3, r3, r2
 2426 003c 8B60     		str	r3, [r1, #8]
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 2427              		.loc 1 1868 0
 2428 003e 2368     		ldr	r3, [r4]
 2429 0040 934A     		ldr	r2, .L273+4
 2430              	.LVL215:
 2431 0042 9342     		cmp	r3, r2
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 82


 2432 0044 19D0     		beq	.L258
 2433              		.loc 1 1868 0 is_stmt 0 discriminator 2
 2434 0046 934A     		ldr	r2, .L273+8
 2435 0048 9342     		cmp	r3, r2
 2436 004a 2AD0     		beq	.L259
 2437              		.loc 1 1868 0 discriminator 14
 2438 004c 924A     		ldr	r2, .L273+12
 2439 004e 9342     		cmp	r3, r2
 2440 0050 40D0     		beq	.L260
 2441              		.loc 1 1868 0 discriminator 26
 2442 0052 924A     		ldr	r2, .L273+16
 2443 0054 9342     		cmp	r3, r2
 2444 0056 55D0     		beq	.L261
 2445              		.loc 1 1868 0 discriminator 38
 2446 0058 914A     		ldr	r2, .L273+20
 2447 005a 9342     		cmp	r3, r2
 2448 005c 6AD0     		beq	.L262
 2449              		.loc 1 1868 0 discriminator 50
 2450 005e 914A     		ldr	r2, .L273+24
 2451 0060 9342     		cmp	r3, r2
 2452 0062 00F08280 		beq	.L263
 2453              		.loc 1 1868 0 discriminator 62
 2454 0066 904A     		ldr	r2, .L273+28
 2455 0068 9342     		cmp	r3, r2
 2456 006a 00F09980 		beq	.L264
 2457              		.loc 1 1868 0 discriminator 74
 2458 006e 8F4A     		ldr	r2, .L273+32
 2459 0070 9342     		cmp	r3, r2
 2460 0072 00F0B080 		beq	.L265
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2461              		.loc 1 1828 0 is_stmt 1
 2462 0076 1022     		movs	r2, #16
 2463 0078 C9E0     		b	.L185
 2464              	.L258:
 2465              		.loc 1 1868 0 discriminator 1
 2466 007a 02F59432 		add	r2, r2, #75776
 2467 007e D2F89020 		ldr	r2, [r2, #144]
 2468 0082 02F00302 		and	r2, r2, #3
 2469 0086 032A     		cmp	r2, #3
 2470 0088 03D8     		bhi	.L184
 2471 008a DFE802F0 		tbb	[pc, r2]
 2472              	.L186:
 2473 008e BF       		.byte	(.L246-.L186)/2
 2474 008f 06       		.byte	(.L187-.L186)/2
 2475 0090 04       		.byte	(.L188-.L186)/2
 2476 0091 08       		.byte	(.L189-.L186)/2
 2477              		.p2align 1
 2478              	.L184:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2479              		.loc 1 1828 0
 2480 0092 1022     		movs	r2, #16
 2481 0094 BBE0     		b	.L185
 2482              	.L188:
 2483              	.LVL216:
 2484              		.loc 1 1868 0 discriminator 6
 2485 0096 0222     		movs	r2, #2
 2486 0098 B9E0     		b	.L185
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 83


 2487              	.LVL217:
 2488              	.L187:
 2489              		.loc 1 1868 0 is_stmt 0 discriminator 5
 2490 009a 0422     		movs	r2, #4
 2491 009c B7E0     		b	.L185
 2492              	.LVL218:
 2493              	.L189:
 2494              		.loc 1 1868 0 discriminator 7
 2495 009e 0822     		movs	r2, #8
 2496 00a0 B5E0     		b	.L185
 2497              	.LVL219:
 2498              	.L259:
 2499              		.loc 1 1868 0 discriminator 13
 2500 00a2 02F5FA32 		add	r2, r2, #128000
 2501 00a6 D2F89020 		ldr	r2, [r2, #144]
 2502 00aa 02F00C02 		and	r2, r2, #12
 2503 00ae 0C2A     		cmp	r2, #12
 2504 00b0 08D8     		bhi	.L191
 2505 00b2 DFE802F0 		tbb	[pc, r2]
 2506              	.L192:
 2507 00b6 BA       		.byte	(.L247-.L192)/2
 2508 00b7 07       		.byte	(.L191-.L192)/2
 2509 00b8 07       		.byte	(.L191-.L192)/2
 2510 00b9 07       		.byte	(.L191-.L192)/2
 2511 00ba 0B       		.byte	(.L193-.L192)/2
 2512 00bb 07       		.byte	(.L191-.L192)/2
 2513 00bc 07       		.byte	(.L191-.L192)/2
 2514 00bd 07       		.byte	(.L191-.L192)/2
 2515 00be 09       		.byte	(.L194-.L192)/2
 2516 00bf 07       		.byte	(.L191-.L192)/2
 2517 00c0 07       		.byte	(.L191-.L192)/2
 2518 00c1 07       		.byte	(.L191-.L192)/2
 2519 00c2 0D       		.byte	(.L195-.L192)/2
 2520 00c3 00       		.p2align 1
 2521              	.L191:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2522              		.loc 1 1828 0 is_stmt 1
 2523 00c4 1022     		movs	r2, #16
 2524 00c6 A2E0     		b	.L185
 2525              	.L194:
 2526              	.LVL220:
 2527              		.loc 1 1868 0 discriminator 18
 2528 00c8 0222     		movs	r2, #2
 2529 00ca A0E0     		b	.L185
 2530              	.LVL221:
 2531              	.L193:
 2532              		.loc 1 1868 0 is_stmt 0 discriminator 17
 2533 00cc 0422     		movs	r2, #4
 2534 00ce 9EE0     		b	.L185
 2535              	.LVL222:
 2536              	.L195:
 2537              		.loc 1 1868 0 discriminator 19
 2538 00d0 0822     		movs	r2, #8
 2539 00d2 9CE0     		b	.L185
 2540              	.LVL223:
 2541              	.L260:
 2542              		.loc 1 1868 0 discriminator 25
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 84


 2543 00d4 02F5F832 		add	r2, r2, #126976
 2544 00d8 D2F89020 		ldr	r2, [r2, #144]
 2545 00dc 02F03002 		and	r2, r2, #48
 2546 00e0 102A     		cmp	r2, #16
 2547 00e2 0DD0     		beq	.L198
 2548 00e4 05D9     		bls	.L266
 2549 00e6 202A     		cmp	r2, #32
 2550 00e8 08D0     		beq	.L200
 2551 00ea 302A     		cmp	r2, #48
 2552 00ec 04D1     		bne	.L197
 2553              	.LVL224:
 2554              		.loc 1 1868 0 discriminator 31
 2555 00ee 0822     		movs	r2, #8
 2556 00f0 8DE0     		b	.L185
 2557              	.LVL225:
 2558              	.L266:
 2559              		.loc 1 1868 0 discriminator 25
 2560 00f2 0AB9     		cbnz	r2, .L197
 2561              		.loc 1 1868 0
 2562 00f4 0022     		movs	r2, #0
 2563 00f6 8AE0     		b	.L185
 2564              	.L197:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2565              		.loc 1 1828 0 is_stmt 1
 2566 00f8 1022     		movs	r2, #16
 2567 00fa 88E0     		b	.L185
 2568              	.L200:
 2569              	.LVL226:
 2570              		.loc 1 1868 0 discriminator 30
 2571 00fc 0222     		movs	r2, #2
 2572 00fe 86E0     		b	.L185
 2573              	.LVL227:
 2574              	.L198:
 2575              		.loc 1 1868 0 is_stmt 0 discriminator 29
 2576 0100 0422     		movs	r2, #4
 2577 0102 84E0     		b	.L185
 2578              	.LVL228:
 2579              	.L261:
 2580              		.loc 1 1868 0 discriminator 37
 2581 0104 02F5F632 		add	r2, r2, #125952
 2582 0108 D2F89020 		ldr	r2, [r2, #144]
 2583 010c 02F0C002 		and	r2, r2, #192
 2584 0110 402A     		cmp	r2, #64
 2585 0112 0DD0     		beq	.L204
 2586 0114 05D9     		bls	.L267
 2587 0116 802A     		cmp	r2, #128
 2588 0118 08D0     		beq	.L206
 2589 011a C02A     		cmp	r2, #192
 2590 011c 04D1     		bne	.L203
 2591              	.LVL229:
 2592              		.loc 1 1868 0 discriminator 43
 2593 011e 0822     		movs	r2, #8
 2594 0120 75E0     		b	.L185
 2595              	.LVL230:
 2596              	.L267:
 2597              		.loc 1 1868 0 discriminator 37
 2598 0122 0AB9     		cbnz	r2, .L203
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 85


 2599              		.loc 1 1868 0
 2600 0124 0022     		movs	r2, #0
 2601 0126 72E0     		b	.L185
 2602              	.L203:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2603              		.loc 1 1828 0 is_stmt 1
 2604 0128 1022     		movs	r2, #16
 2605 012a 70E0     		b	.L185
 2606              	.L206:
 2607              	.LVL231:
 2608              		.loc 1 1868 0 discriminator 42
 2609 012c 0222     		movs	r2, #2
 2610 012e 6EE0     		b	.L185
 2611              	.LVL232:
 2612              	.L204:
 2613              		.loc 1 1868 0 is_stmt 0 discriminator 41
 2614 0130 0422     		movs	r2, #4
 2615 0132 6CE0     		b	.L185
 2616              	.LVL233:
 2617              	.L262:
 2618              		.loc 1 1868 0 discriminator 49
 2619 0134 02F5F432 		add	r2, r2, #124928
 2620 0138 D2F89020 		ldr	r2, [r2, #144]
 2621 013c 02F44072 		and	r2, r2, #768
 2622 0140 B2F5807F 		cmp	r2, #256
 2623 0144 0FD0     		beq	.L210
 2624 0146 07D9     		bls	.L268
 2625 0148 B2F5007F 		cmp	r2, #512
 2626 014c 09D0     		beq	.L212
 2627 014e B2F5407F 		cmp	r2, #768
 2628 0152 04D1     		bne	.L209
 2629              	.LVL234:
 2630              		.loc 1 1868 0 discriminator 55
 2631 0154 0822     		movs	r2, #8
 2632 0156 5AE0     		b	.L185
 2633              	.LVL235:
 2634              	.L268:
 2635              		.loc 1 1868 0 discriminator 49
 2636 0158 0AB9     		cbnz	r2, .L209
 2637              		.loc 1 1868 0
 2638 015a 0022     		movs	r2, #0
 2639 015c 57E0     		b	.L185
 2640              	.L209:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2641              		.loc 1 1828 0 is_stmt 1
 2642 015e 1022     		movs	r2, #16
 2643 0160 55E0     		b	.L185
 2644              	.L212:
 2645              	.LVL236:
 2646              		.loc 1 1868 0 discriminator 54
 2647 0162 0222     		movs	r2, #2
 2648 0164 53E0     		b	.L185
 2649              	.LVL237:
 2650              	.L210:
 2651              		.loc 1 1868 0 is_stmt 0 discriminator 53
 2652 0166 0422     		movs	r2, #4
 2653 0168 51E0     		b	.L185
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 86


 2654              	.LVL238:
 2655              	.L263:
 2656              		.loc 1 1868 0 discriminator 61
 2657 016a 02F59232 		add	r2, r2, #74752
 2658 016e D2F89020 		ldr	r2, [r2, #144]
 2659 0172 02F44062 		and	r2, r2, #3072
 2660 0176 B2F5806F 		cmp	r2, #1024
 2661 017a 0FD0     		beq	.L216
 2662 017c 07D9     		bls	.L269
 2663 017e B2F5006F 		cmp	r2, #2048
 2664 0182 09D0     		beq	.L218
 2665 0184 B2F5406F 		cmp	r2, #3072
 2666 0188 04D1     		bne	.L215
 2667              	.LVL239:
 2668              		.loc 1 1868 0 discriminator 67
 2669 018a 0822     		movs	r2, #8
 2670 018c 3FE0     		b	.L185
 2671              	.LVL240:
 2672              	.L269:
 2673              		.loc 1 1868 0 discriminator 61
 2674 018e 0AB9     		cbnz	r2, .L215
 2675              		.loc 1 1868 0
 2676 0190 0122     		movs	r2, #1
 2677 0192 3CE0     		b	.L185
 2678              	.L215:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2679              		.loc 1 1828 0 is_stmt 1
 2680 0194 1022     		movs	r2, #16
 2681 0196 3AE0     		b	.L185
 2682              	.L218:
 2683              	.LVL241:
 2684              		.loc 1 1868 0 discriminator 66
 2685 0198 0222     		movs	r2, #2
 2686 019a 38E0     		b	.L185
 2687              	.LVL242:
 2688              	.L216:
 2689              		.loc 1 1868 0 is_stmt 0 discriminator 65
 2690 019c 0422     		movs	r2, #4
 2691 019e 36E0     		b	.L185
 2692              	.LVL243:
 2693              	.L264:
 2694              		.loc 1 1868 0 discriminator 73
 2695 01a0 02F5E032 		add	r2, r2, #114688
 2696 01a4 D2F89020 		ldr	r2, [r2, #144]
 2697 01a8 02F44052 		and	r2, r2, #12288
 2698 01ac B2F5805F 		cmp	r2, #4096
 2699 01b0 0FD0     		beq	.L222
 2700 01b2 07D9     		bls	.L270
 2701 01b4 B2F5005F 		cmp	r2, #8192
 2702 01b8 09D0     		beq	.L224
 2703 01ba B2F5405F 		cmp	r2, #12288
 2704 01be 04D1     		bne	.L221
 2705              	.LVL244:
 2706              		.loc 1 1868 0 discriminator 79
 2707 01c0 0822     		movs	r2, #8
 2708 01c2 24E0     		b	.L185
 2709              	.LVL245:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 87


 2710              	.L270:
 2711              		.loc 1 1868 0 discriminator 73
 2712 01c4 0AB9     		cbnz	r2, .L221
 2713              		.loc 1 1868 0
 2714 01c6 0022     		movs	r2, #0
 2715 01c8 21E0     		b	.L185
 2716              	.L221:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2717              		.loc 1 1828 0 is_stmt 1
 2718 01ca 1022     		movs	r2, #16
 2719 01cc 1FE0     		b	.L185
 2720              	.L224:
 2721              	.LVL246:
 2722              		.loc 1 1868 0 discriminator 78
 2723 01ce 0222     		movs	r2, #2
 2724 01d0 1DE0     		b	.L185
 2725              	.LVL247:
 2726              	.L222:
 2727              		.loc 1 1868 0 is_stmt 0 discriminator 77
 2728 01d2 0422     		movs	r2, #4
 2729 01d4 1BE0     		b	.L185
 2730              	.LVL248:
 2731              	.L265:
 2732              		.loc 1 1868 0 discriminator 85
 2733 01d6 02F5DE32 		add	r2, r2, #113664
 2734 01da D2F89020 		ldr	r2, [r2, #144]
 2735 01de 02F44042 		and	r2, r2, #49152
 2736 01e2 B2F5804F 		cmp	r2, #16384
 2737 01e6 0FD0     		beq	.L227
 2738 01e8 07D9     		bls	.L271
 2739 01ea B2F5004F 		cmp	r2, #32768
 2740 01ee 09D0     		beq	.L229
 2741 01f0 B2F5404F 		cmp	r2, #49152
 2742 01f4 04D1     		bne	.L226
 2743              	.LVL249:
 2744              		.loc 1 1868 0 discriminator 90
 2745 01f6 0822     		movs	r2, #8
 2746 01f8 09E0     		b	.L185
 2747              	.LVL250:
 2748              	.L271:
 2749              		.loc 1 1868 0 discriminator 85
 2750 01fa 0AB9     		cbnz	r2, .L226
 2751              		.loc 1 1868 0
 2752 01fc 0022     		movs	r2, #0
 2753 01fe 06E0     		b	.L185
 2754              	.L226:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2755              		.loc 1 1828 0 is_stmt 1
 2756 0200 1022     		movs	r2, #16
 2757 0202 04E0     		b	.L185
 2758              	.L229:
 2759              	.LVL251:
 2760              		.loc 1 1868 0 discriminator 89
 2761 0204 0222     		movs	r2, #2
 2762 0206 02E0     		b	.L185
 2763              	.LVL252:
 2764              	.L227:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 88


 2765              		.loc 1 1868 0 is_stmt 0 discriminator 88
 2766 0208 0422     		movs	r2, #4
 2767 020a 00E0     		b	.L185
 2768              	.LVL253:
 2769              	.L246:
 2770              		.loc 1 1868 0
 2771 020c 0122     		movs	r2, #1
 2772              	.LVL254:
 2773              	.L185:
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 2774              		.loc 1 1871 0 is_stmt 1
 2775 020e E169     		ldr	r1, [r4, #28]
 2776 0210 B1F5004F 		cmp	r1, #32768
 2777 0214 0BD0     		beq	.L272
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     default:
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
 2778              		.loc 1 1902 0
 2779 0216 082A     		cmp	r2, #8
 2780 0218 00F29B80 		bhi	.L256
 2781 021c DFE802F0 		tbb	[pc, r2]
 2782              	.L241:
 2783 0220 61       		.byte	(.L240-.L241)/2
 2784 0221 6D       		.byte	(.L242-.L241)/2
 2785 0222 79       		.byte	(.L243-.L241)/2
 2786 0223 99       		.byte	(.L256-.L241)/2
 2787 0224 83       		.byte	(.L244-.L241)/2
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 89


 2788 0225 99       		.byte	(.L256-.L241)/2
 2789 0226 99       		.byte	(.L256-.L241)/2
 2790 0227 99       		.byte	(.L256-.L241)/2
 2791 0228 8F       		.byte	(.L245-.L241)/2
 2792              	.LVL255:
 2793 0229 00       		.p2align 1
 2794              	.L247:
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2795              		.loc 1 1868 0
 2796 022a 0022     		movs	r2, #0
 2797 022c EFE7     		b	.L185
 2798              	.LVL256:
 2799              	.L272:
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2800              		.loc 1 1873 0
 2801 022e 082A     		cmp	r2, #8
 2802 0230 54D8     		bhi	.L255
 2803 0232 DFE802F0 		tbb	[pc, r2]
 2804              	.L234:
 2805 0236 05       		.byte	(.L233-.L234)/2
 2806 0237 17       		.byte	(.L235-.L234)/2
 2807 0238 22       		.byte	(.L236-.L234)/2
 2808 0239 53       		.byte	(.L255-.L234)/2
 2809 023a 3F       		.byte	(.L237-.L234)/2
 2810 023b 53       		.byte	(.L255-.L234)/2
 2811 023c 53       		.byte	(.L255-.L234)/2
 2812 023d 53       		.byte	(.L255-.L234)/2
 2813 023e 4A       		.byte	(.L238-.L234)/2
 2814 023f 00       		.p2align 1
 2815              	.L233:
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2816              		.loc 1 1876 0
 2817 0240 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2818              	.LVL257:
 2819 0244 6268     		ldr	r2, [r4, #4]
 2820 0246 5308     		lsrs	r3, r2, #1
 2821 0248 03EB4003 		add	r3, r3, r0, lsl #1
 2822 024c B3FBF2F3 		udiv	r3, r3, r2
 2823 0250 9BB2     		uxth	r3, r3
 2824              	.LVL258:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2825              		.loc 1 1831 0
 2826 0252 0020     		movs	r0, #0
 2827              	.LVL259:
 2828              	.L232:
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2829              		.loc 1 1896 0
 2830 0254 23F00F02 		bic	r2, r3, #15
 2831              	.LVL260:
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 2832              		.loc 1 1897 0
 2833 0258 C3F34203 		ubfx	r3, r3, #1, #3
 2834              	.LVL261:
 2835 025c 1343     		orrs	r3, r3, r2
 2836              	.LVL262:
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 2837              		.loc 1 1898 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 90


 2838 025e 2268     		ldr	r2, [r4]
 2839 0260 D360     		str	r3, [r2, #12]
 2840              	.LVL263:
 2841              	.L239:
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     default:
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return ret;
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2842              		.loc 1 1928 0
 2843 0262 10BD     		pop	{r4, pc}
 2844              	.LVL264:
 2845              	.L235:
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2846              		.loc 1 1879 0
 2847 0264 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2848              	.LVL265:
 2849 0268 6268     		ldr	r2, [r4, #4]
 2850 026a 5308     		lsrs	r3, r2, #1
 2851 026c 03EB4003 		add	r3, r3, r0, lsl #1
 2852 0270 B3FBF2F3 		udiv	r3, r3, r2
 2853 0274 9BB2     		uxth	r3, r3
 2854              	.LVL266:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2855              		.loc 1 1831 0
 2856 0276 0020     		movs	r0, #0
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
 2857              		.loc 1 1880 0
 2858 0278 ECE7     		b	.L232
 2859              	.LVL267:
 2860              	.L236:
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2861              		.loc 1 1882 0
 2862 027a 6268     		ldr	r2, [r4, #4]
 2863              	.LVL268:
 2864 027c 0C4B     		ldr	r3, .L273+36
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 91


 2865 027e 03EB5203 		add	r3, r3, r2, lsr #1
 2866 0282 B3FBF2F3 		udiv	r3, r3, r2
 2867 0286 9BB2     		uxth	r3, r3
 2868              	.LVL269:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2869              		.loc 1 1831 0
 2870 0288 0020     		movs	r0, #0
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
 2871              		.loc 1 1883 0
 2872 028a E3E7     		b	.L232
 2873              	.L274:
 2874              		.align	2
 2875              	.L273:
 2876 028c F369FFEF 		.word	-268473869
 2877 0290 00100140 		.word	1073811456
 2878 0294 00440040 		.word	1073759232
 2879 0298 00480040 		.word	1073760256
 2880 029c 004C0040 		.word	1073761280
 2881 02a0 00500040 		.word	1073762304
 2882 02a4 00140140 		.word	1073812480
 2883 02a8 00780040 		.word	1073772544
 2884 02ac 007C0040 		.word	1073773568
 2885 02b0 0048E801 		.word	32000000
 2886              	.LVL270:
 2887              	.L237:
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2888              		.loc 1 1885 0
 2889 02b4 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2890              	.LVL271:
 2891 02b8 6268     		ldr	r2, [r4, #4]
 2892 02ba 5308     		lsrs	r3, r2, #1
 2893 02bc 03EB4003 		add	r3, r3, r0, lsl #1
 2894 02c0 B3FBF2F3 		udiv	r3, r3, r2
 2895 02c4 9BB2     		uxth	r3, r3
 2896              	.LVL272:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2897              		.loc 1 1831 0
 2898 02c6 0020     		movs	r0, #0
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
 2899              		.loc 1 1886 0
 2900 02c8 C4E7     		b	.L232
 2901              	.LVL273:
 2902              	.L238:
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2903              		.loc 1 1888 0
 2904 02ca 6268     		ldr	r2, [r4, #4]
 2905              	.LVL274:
 2906 02cc 5308     		lsrs	r3, r2, #1
 2907 02ce 03F58033 		add	r3, r3, #65536
 2908 02d2 B3FBF2F3 		udiv	r3, r3, r2
 2909 02d6 9BB2     		uxth	r3, r3
 2910              	.LVL275:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2911              		.loc 1 1831 0
 2912 02d8 0020     		movs	r0, #0
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2913              		.loc 1 1889 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 92


 2914 02da BBE7     		b	.L232
 2915              	.LVL276:
 2916              	.L255:
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2917              		.loc 1 1892 0
 2918 02dc 0120     		movs	r0, #1
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2919              		.loc 1 1830 0
 2920 02de 0023     		movs	r3, #0
 2921 02e0 B8E7     		b	.L232
 2922              	.L240:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2923              		.loc 1 1905 0
 2924 02e2 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2925              	.LVL277:
 2926 02e6 6368     		ldr	r3, [r4, #4]
 2927 02e8 00EB5300 		add	r0, r0, r3, lsr #1
 2928 02ec B0FBF3F0 		udiv	r0, r0, r3
 2929 02f0 2368     		ldr	r3, [r4]
 2930 02f2 80B2     		uxth	r0, r0
 2931 02f4 D860     		str	r0, [r3, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2932              		.loc 1 1831 0
 2933 02f6 0020     		movs	r0, #0
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
 2934              		.loc 1 1906 0
 2935 02f8 B3E7     		b	.L239
 2936              	.LVL278:
 2937              	.L242:
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2938              		.loc 1 1908 0
 2939 02fa FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2940              	.LVL279:
 2941 02fe 6368     		ldr	r3, [r4, #4]
 2942 0300 00EB5300 		add	r0, r0, r3, lsr #1
 2943 0304 B0FBF3F0 		udiv	r0, r0, r3
 2944 0308 2368     		ldr	r3, [r4]
 2945 030a 80B2     		uxth	r0, r0
 2946 030c D860     		str	r0, [r3, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2947              		.loc 1 1831 0
 2948 030e 0020     		movs	r0, #0
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
 2949              		.loc 1 1909 0
 2950 0310 A7E7     		b	.L239
 2951              	.LVL280:
 2952              	.L243:
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2953              		.loc 1 1911 0
 2954 0312 6168     		ldr	r1, [r4, #4]
 2955 0314 104A     		ldr	r2, .L275
 2956              	.LVL281:
 2957 0316 02EB5102 		add	r2, r2, r1, lsr #1
 2958 031a B2FBF1F2 		udiv	r2, r2, r1
 2959 031e 92B2     		uxth	r2, r2
 2960 0320 DA60     		str	r2, [r3, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 93


 2961              		.loc 1 1831 0
 2962 0322 0020     		movs	r0, #0
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
 2963              		.loc 1 1912 0
 2964 0324 9DE7     		b	.L239
 2965              	.LVL282:
 2966              	.L244:
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2967              		.loc 1 1914 0
 2968 0326 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2969              	.LVL283:
 2970 032a 6368     		ldr	r3, [r4, #4]
 2971 032c 00EB5300 		add	r0, r0, r3, lsr #1
 2972 0330 B0FBF3F0 		udiv	r0, r0, r3
 2973 0334 2368     		ldr	r3, [r4]
 2974 0336 80B2     		uxth	r0, r0
 2975 0338 D860     		str	r0, [r3, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2976              		.loc 1 1831 0
 2977 033a 0020     		movs	r0, #0
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
 2978              		.loc 1 1915 0
 2979 033c 91E7     		b	.L239
 2980              	.LVL284:
 2981              	.L245:
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2982              		.loc 1 1917 0
 2983 033e 6168     		ldr	r1, [r4, #4]
 2984 0340 4A08     		lsrs	r2, r1, #1
 2985              	.LVL285:
 2986 0342 02F50042 		add	r2, r2, #32768
 2987 0346 B2FBF1F2 		udiv	r2, r2, r1
 2988 034a 92B2     		uxth	r2, r2
 2989 034c DA60     		str	r2, [r3, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2990              		.loc 1 1831 0
 2991 034e 0020     		movs	r0, #0
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2992              		.loc 1 1918 0
 2993 0350 87E7     		b	.L239
 2994              	.LVL286:
 2995              	.L256:
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2996              		.loc 1 1921 0
 2997 0352 0120     		movs	r0, #1
 2998 0354 85E7     		b	.L239
 2999              	.L276:
 3000 0356 00BF     		.align	2
 3001              	.L275:
 3002 0358 0024F400 		.word	16000000
 3003              		.cfi_endproc
 3004              	.LFE178:
 3006              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 3007              		.align	1
 3008              		.global	UART_AdvFeatureConfig
 3009              		.syntax unified
 3010              		.thumb
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 94


 3011              		.thumb_func
 3012              		.fpu fpv5-sp-d16
 3014              	UART_AdvFeatureConfig:
 3015              	.LFB179:
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3016              		.loc 1 1937 0
 3017              		.cfi_startproc
 3018              		@ args = 0, pretend = 0, frame = 0
 3019              		@ frame_needed = 0, uses_anonymous_args = 0
 3020              		@ link register save eliminated.
 3021              	.LVL287:
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 3022              		.loc 1 1942 0
 3023 0000 436A     		ldr	r3, [r0, #36]
 3024 0002 13F0010F 		tst	r3, #1
 3025 0006 06D0     		beq	.L278
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 3026              		.loc 1 1945 0
 3027 0008 0268     		ldr	r2, [r0]
 3028 000a 5368     		ldr	r3, [r2, #4]
 3029 000c 23F40033 		bic	r3, r3, #131072
 3030 0010 816A     		ldr	r1, [r0, #40]
 3031 0012 0B43     		orrs	r3, r3, r1
 3032 0014 5360     		str	r3, [r2, #4]
 3033              	.L278:
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 3034              		.loc 1 1949 0
 3035 0016 436A     		ldr	r3, [r0, #36]
 3036 0018 13F0020F 		tst	r3, #2
 3037 001c 06D0     		beq	.L279
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 3038              		.loc 1 1952 0
 3039 001e 0268     		ldr	r2, [r0]
 3040 0020 5368     		ldr	r3, [r2, #4]
 3041 0022 23F48033 		bic	r3, r3, #65536
 3042 0026 C16A     		ldr	r1, [r0, #44]
 3043 0028 0B43     		orrs	r3, r3, r1
 3044 002a 5360     		str	r3, [r2, #4]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 95


 3045              	.L279:
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure data inversion */
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 3046              		.loc 1 1956 0
 3047 002c 436A     		ldr	r3, [r0, #36]
 3048 002e 13F0040F 		tst	r3, #4
 3049 0032 06D0     		beq	.L280
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 3050              		.loc 1 1959 0
 3051 0034 0268     		ldr	r2, [r0]
 3052 0036 5368     		ldr	r3, [r2, #4]
 3053 0038 23F48023 		bic	r3, r3, #262144
 3054 003c 016B     		ldr	r1, [r0, #48]
 3055 003e 0B43     		orrs	r3, r3, r1
 3056 0040 5360     		str	r3, [r2, #4]
 3057              	.L280:
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 3058              		.loc 1 1963 0
 3059 0042 436A     		ldr	r3, [r0, #36]
 3060 0044 13F0080F 		tst	r3, #8
 3061 0048 06D0     		beq	.L281
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 3062              		.loc 1 1966 0
 3063 004a 0268     		ldr	r2, [r0]
 3064 004c 5368     		ldr	r3, [r2, #4]
 3065 004e 23F40043 		bic	r3, r3, #32768
 3066 0052 416B     		ldr	r1, [r0, #52]
 3067 0054 0B43     		orrs	r3, r3, r1
 3068 0056 5360     		str	r3, [r2, #4]
 3069              	.L281:
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 3070              		.loc 1 1970 0
 3071 0058 436A     		ldr	r3, [r0, #36]
 3072 005a 13F0100F 		tst	r3, #16
 3073 005e 06D0     		beq	.L282
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 3074              		.loc 1 1973 0
 3075 0060 0268     		ldr	r2, [r0]
 3076 0062 9368     		ldr	r3, [r2, #8]
 3077 0064 23F48053 		bic	r3, r3, #4096
 3078 0068 816B     		ldr	r1, [r0, #56]
 3079 006a 0B43     		orrs	r3, r3, r1
 3080 006c 9360     		str	r3, [r2, #8]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 96


 3081              	.L282:
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 3082              		.loc 1 1977 0
 3083 006e 436A     		ldr	r3, [r0, #36]
 3084 0070 13F0200F 		tst	r3, #32
 3085 0074 06D0     		beq	.L283
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 3086              		.loc 1 1980 0
 3087 0076 0268     		ldr	r2, [r0]
 3088 0078 9368     		ldr	r3, [r2, #8]
 3089 007a 23F40053 		bic	r3, r3, #8192
 3090 007e C16B     		ldr	r1, [r0, #60]
 3091 0080 0B43     		orrs	r3, r3, r1
 3092 0082 9360     		str	r3, [r2, #8]
 3093              	.L283:
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 3094              		.loc 1 1984 0
 3095 0084 436A     		ldr	r3, [r0, #36]
 3096 0086 13F0400F 		tst	r3, #64
 3097 008a 0AD0     		beq	.L284
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 3098              		.loc 1 1987 0
 3099 008c 0268     		ldr	r2, [r0]
 3100 008e 5368     		ldr	r3, [r2, #4]
 3101 0090 23F48013 		bic	r3, r3, #1048576
 3102 0094 016C     		ldr	r1, [r0, #64]
 3103 0096 0B43     		orrs	r3, r3, r1
 3104 0098 5360     		str	r3, [r2, #4]
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 3105              		.loc 1 1989 0
 3106 009a 036C     		ldr	r3, [r0, #64]
 3107 009c B3F5801F 		cmp	r3, #1048576
 3108 00a0 0BD0     		beq	.L286
 3109              	.L284:
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 3110              		.loc 1 1997 0
 3111 00a2 436A     		ldr	r3, [r0, #36]
 3112 00a4 13F0800F 		tst	r3, #128
 3113 00a8 06D0     		beq	.L277
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 97


1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 3114              		.loc 1 2000 0
 3115 00aa 0268     		ldr	r2, [r0]
 3116 00ac 5368     		ldr	r3, [r2, #4]
 3117 00ae 23F40023 		bic	r3, r3, #524288
 3118 00b2 816C     		ldr	r1, [r0, #72]
 3119 00b4 0B43     		orrs	r3, r3, r1
 3120 00b6 5360     		str	r3, [r2, #4]
 3121              	.L277:
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3122              		.loc 1 2002 0
 3123 00b8 7047     		bx	lr
 3124              	.L286:
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 3125              		.loc 1 1992 0
 3126 00ba 0268     		ldr	r2, [r0]
 3127 00bc 5368     		ldr	r3, [r2, #4]
 3128 00be 23F4C003 		bic	r3, r3, #6291456
 3129 00c2 416C     		ldr	r1, [r0, #68]
 3130 00c4 0B43     		orrs	r3, r3, r1
 3131 00c6 5360     		str	r3, [r2, #4]
 3132 00c8 EBE7     		b	.L284
 3133              		.cfi_endproc
 3134              	.LFE179:
 3136              		.section	.text.UART_CheckIdleState,"ax",%progbits
 3137              		.align	1
 3138              		.global	UART_CheckIdleState
 3139              		.syntax unified
 3140              		.thumb
 3141              		.thumb_func
 3142              		.fpu fpv5-sp-d16
 3144              	UART_CheckIdleState:
 3145              	.LFB180:
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Check the UART Idle State
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3146              		.loc 1 2012 0
 3147              		.cfi_startproc
 3148              		@ args = 0, pretend = 0, frame = 0
 3149              		@ frame_needed = 0, uses_anonymous_args = 0
 3150              	.LVL288:
 3151 0000 10B5     		push	{r4, lr}
 3152              	.LCFI25:
 3153              		.cfi_def_cfa_offset 8
 3154              		.cfi_offset 4, -8
 3155              		.cfi_offset 14, -4
 3156 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 98


 3157              	.LCFI26:
 3158              		.cfi_def_cfa_offset 16
 3159 0004 0446     		mov	r4, r0
 3160              	.LVL289:
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3161              		.loc 1 2016 0
 3162 0006 0023     		movs	r3, #0
 3163 0008 C366     		str	r3, [r0, #108]
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tickstart = HAL_GetTick();
 3164              		.loc 1 2019 0
 3165 000a FFF7FEFF 		bl	HAL_GetTick
 3166              	.LVL290:
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 3167              		.loc 1 2022 0
 3168 000e 2268     		ldr	r2, [r4]
 3169 0010 1268     		ldr	r2, [r2]
 3170 0012 12F0080F 		tst	r2, #8
 3171 0016 09D1     		bne	.L292
 3172              	.LVL291:
 3173              	.L288:
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Timeout Occurred */
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART State */
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 3174              		.loc 1 2033 0
 3175 0018 2023     		movs	r3, #32
 3176 001a 84F86930 		strb	r3, [r4, #105]
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 3177              		.loc 1 2034 0
 3178 001e 84F86A30 		strb	r3, [r4, #106]
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3179              		.loc 1 2037 0
 3180 0022 0020     		movs	r0, #0
 3181 0024 84F86800 		strb	r0, [r4, #104]
 3182              	.L289:
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3183              		.loc 1 2040 0
 3184 0028 02B0     		add	sp, sp, #8
 3185              	.LCFI27:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 99


 3186              		.cfi_remember_state
 3187              		.cfi_def_cfa_offset 8
 3188              		@ sp needed
 3189 002a 10BD     		pop	{r4, pc}
 3190              	.LVL292:
 3191              	.L292:
 3192              	.LCFI28:
 3193              		.cfi_restore_state
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 3194              		.loc 1 2025 0
 3195 002c 6FF07E43 		mvn	r3, #-33554432
 3196 0030 0093     		str	r3, [sp]
 3197 0032 0346     		mov	r3, r0
 3198 0034 0022     		movs	r2, #0
 3199 0036 4FF40011 		mov	r1, #2097152
 3200 003a 2046     		mov	r0, r4
 3201              	.LVL293:
 3202 003c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3203              	.LVL294:
 3204 0040 0028     		cmp	r0, #0
 3205 0042 E9D0     		beq	.L288
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 3206              		.loc 1 2028 0
 3207 0044 0320     		movs	r0, #3
 3208 0046 EFE7     		b	.L289
 3209              		.cfi_endproc
 3210              	.LFE180:
 3212              		.section	.text.HAL_UART_Init,"ax",%progbits
 3213              		.align	1
 3214              		.global	HAL_UART_Init
 3215              		.syntax unified
 3216              		.thumb
 3217              		.thumb_func
 3218              		.fpu fpv5-sp-d16
 3220              	HAL_UART_Init:
 3221              	.LFB138:
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3222              		.loc 1 242 0
 3223              		.cfi_startproc
 3224              		@ args = 0, pretend = 0, frame = 0
 3225              		@ frame_needed = 0, uses_anonymous_args = 0
 3226              	.LVL295:
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3227              		.loc 1 244 0
 3228 0000 78B3     		cbz	r0, .L297
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3229              		.loc 1 242 0
 3230 0002 10B5     		push	{r4, lr}
 3231              	.LCFI29:
 3232              		.cfi_def_cfa_offset 8
 3233              		.cfi_offset 4, -8
 3234              		.cfi_offset 14, -4
 3235 0004 0446     		mov	r4, r0
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3236              		.loc 1 260 0
 3237 0006 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3238 000a 0BB3     		cbz	r3, .L302
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 100


 3239              	.LVL296:
 3240              	.L295:
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3241              		.loc 1 269 0
 3242 000c 2423     		movs	r3, #36
 3243 000e 84F86930 		strb	r3, [r4, #105]
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3244              		.loc 1 272 0
 3245 0012 2268     		ldr	r2, [r4]
 3246 0014 1368     		ldr	r3, [r2]
 3247 0016 23F00103 		bic	r3, r3, #1
 3248 001a 1360     		str	r3, [r2]
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3249              		.loc 1 275 0
 3250 001c 2046     		mov	r0, r4
 3251 001e FFF7FEFF 		bl	UART_SetConfig
 3252              	.LVL297:
 3253 0022 0128     		cmp	r0, #1
 3254 0024 13D0     		beq	.L294
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3255              		.loc 1 280 0
 3256 0026 636A     		ldr	r3, [r4, #36]
 3257 0028 BBB9     		cbnz	r3, .L303
 3258              	.L296:
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3259              		.loc 1 288 0
 3260 002a 2268     		ldr	r2, [r4]
 3261 002c 5368     		ldr	r3, [r2, #4]
 3262 002e 23F49043 		bic	r3, r3, #18432
 3263 0032 5360     		str	r3, [r2, #4]
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3264              		.loc 1 289 0
 3265 0034 2268     		ldr	r2, [r4]
 3266 0036 9368     		ldr	r3, [r2, #8]
 3267 0038 23F02A03 		bic	r3, r3, #42
 3268 003c 9360     		str	r3, [r2, #8]
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3269              		.loc 1 292 0
 3270 003e 2268     		ldr	r2, [r4]
 3271 0040 1368     		ldr	r3, [r2]
 3272 0042 43F00103 		orr	r3, r3, #1
 3273 0046 1360     		str	r3, [r2]
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3274              		.loc 1 295 0
 3275 0048 2046     		mov	r0, r4
 3276 004a FFF7FEFF 		bl	UART_CheckIdleState
 3277              	.LVL298:
 3278              	.L294:
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3279              		.loc 1 296 0
 3280 004e 10BD     		pop	{r4, pc}
 3281              	.LVL299:
 3282              	.L302:
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3283              		.loc 1 263 0
 3284 0050 80F86830 		strb	r3, [r0, #104]
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 101


 3285              		.loc 1 266 0
 3286 0054 FFF7FEFF 		bl	HAL_UART_MspInit
 3287              	.LVL300:
 3288 0058 D8E7     		b	.L295
 3289              	.L303:
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3290              		.loc 1 282 0
 3291 005a 2046     		mov	r0, r4
 3292 005c FFF7FEFF 		bl	UART_AdvFeatureConfig
 3293              	.LVL301:
 3294 0060 E3E7     		b	.L296
 3295              	.LVL302:
 3296              	.L297:
 3297              	.LCFI30:
 3298              		.cfi_def_cfa_offset 0
 3299              		.cfi_restore 4
 3300              		.cfi_restore 14
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3301              		.loc 1 246 0
 3302 0062 0120     		movs	r0, #1
 3303              	.LVL303:
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3304              		.loc 1 296 0
 3305 0064 7047     		bx	lr
 3306              		.cfi_endproc
 3307              	.LFE138:
 3309              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 3310              		.align	1
 3311              		.global	HAL_HalfDuplex_Init
 3312              		.syntax unified
 3313              		.thumb
 3314              		.thumb_func
 3315              		.fpu fpv5-sp-d16
 3317              	HAL_HalfDuplex_Init:
 3318              	.LFB139:
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3319              		.loc 1 305 0
 3320              		.cfi_startproc
 3321              		@ args = 0, pretend = 0, frame = 0
 3322              		@ frame_needed = 0, uses_anonymous_args = 0
 3323              	.LVL304:
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3324              		.loc 1 307 0
 3325 0000 0028     		cmp	r0, #0
 3326 0002 34D0     		beq	.L308
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3327              		.loc 1 305 0
 3328 0004 10B5     		push	{r4, lr}
 3329              	.LCFI31:
 3330              		.cfi_def_cfa_offset 8
 3331              		.cfi_offset 4, -8
 3332              		.cfi_offset 14, -4
 3333 0006 0446     		mov	r4, r0
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3334              		.loc 1 312 0
 3335 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3336 000c 33B3     		cbz	r3, .L313
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 102


 3337              	.LVL305:
 3338              	.L306:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3339              		.loc 1 321 0
 3340 000e 2423     		movs	r3, #36
 3341 0010 84F86930 		strb	r3, [r4, #105]
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3342              		.loc 1 324 0
 3343 0014 2268     		ldr	r2, [r4]
 3344 0016 1368     		ldr	r3, [r2]
 3345 0018 23F00103 		bic	r3, r3, #1
 3346 001c 1360     		str	r3, [r2]
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3347              		.loc 1 327 0
 3348 001e 2046     		mov	r0, r4
 3349 0020 FFF7FEFF 		bl	UART_SetConfig
 3350              	.LVL306:
 3351 0024 0128     		cmp	r0, #1
 3352 0026 18D0     		beq	.L305
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3353              		.loc 1 332 0
 3354 0028 636A     		ldr	r3, [r4, #36]
 3355 002a E3B9     		cbnz	r3, .L314
 3356              	.L307:
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 3357              		.loc 1 340 0
 3358 002c 2268     		ldr	r2, [r4]
 3359 002e 5368     		ldr	r3, [r2, #4]
 3360 0030 23F49043 		bic	r3, r3, #18432
 3361 0034 5360     		str	r3, [r2, #4]
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3362              		.loc 1 341 0
 3363 0036 2268     		ldr	r2, [r4]
 3364 0038 9368     		ldr	r3, [r2, #8]
 3365 003a 23F02203 		bic	r3, r3, #34
 3366 003e 9360     		str	r3, [r2, #8]
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3367              		.loc 1 344 0
 3368 0040 2268     		ldr	r2, [r4]
 3369 0042 9368     		ldr	r3, [r2, #8]
 3370 0044 43F00803 		orr	r3, r3, #8
 3371 0048 9360     		str	r3, [r2, #8]
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3372              		.loc 1 347 0
 3373 004a 2268     		ldr	r2, [r4]
 3374 004c 1368     		ldr	r3, [r2]
 3375 004e 43F00103 		orr	r3, r3, #1
 3376 0052 1360     		str	r3, [r2]
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3377              		.loc 1 350 0
 3378 0054 2046     		mov	r0, r4
 3379 0056 FFF7FEFF 		bl	UART_CheckIdleState
 3380              	.LVL307:
 3381              	.L305:
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3382              		.loc 1 351 0
 3383 005a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 103


 3384              	.LVL308:
 3385              	.L313:
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3386              		.loc 1 315 0
 3387 005c 80F86830 		strb	r3, [r0, #104]
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3388              		.loc 1 318 0
 3389 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 3390              	.LVL309:
 3391 0064 D3E7     		b	.L306
 3392              	.L314:
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3393              		.loc 1 334 0
 3394 0066 2046     		mov	r0, r4
 3395 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3396              	.LVL310:
 3397 006c DEE7     		b	.L307
 3398              	.LVL311:
 3399              	.L308:
 3400              	.LCFI32:
 3401              		.cfi_def_cfa_offset 0
 3402              		.cfi_restore 4
 3403              		.cfi_restore 14
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3404              		.loc 1 309 0
 3405 006e 0120     		movs	r0, #1
 3406              	.LVL312:
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3407              		.loc 1 351 0
 3408 0070 7047     		bx	lr
 3409              		.cfi_endproc
 3410              	.LFE139:
 3412              		.section	.text.HAL_LIN_Init,"ax",%progbits
 3413              		.align	1
 3414              		.global	HAL_LIN_Init
 3415              		.syntax unified
 3416              		.thumb
 3417              		.thumb_func
 3418              		.fpu fpv5-sp-d16
 3420              	HAL_LIN_Init:
 3421              	.LFB140:
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3422              		.loc 1 365 0
 3423              		.cfi_startproc
 3424              		@ args = 0, pretend = 0, frame = 0
 3425              		@ frame_needed = 0, uses_anonymous_args = 0
 3426              	.LVL313:
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3427              		.loc 1 367 0
 3428 0000 0028     		cmp	r0, #0
 3429 0002 3BD0     		beq	.L319
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3430              		.loc 1 365 0
 3431 0004 38B5     		push	{r3, r4, r5, lr}
 3432              	.LCFI33:
 3433              		.cfi_def_cfa_offset 16
 3434              		.cfi_offset 3, -16
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 104


 3435              		.cfi_offset 4, -12
 3436              		.cfi_offset 5, -8
 3437              		.cfi_offset 14, -4
 3438 0006 0446     		mov	r4, r0
 3439 0008 0D46     		mov	r5, r1
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3440              		.loc 1 377 0
 3441 000a 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3442 000e 63B3     		cbz	r3, .L324
 3443              	.LVL314:
 3444              	.L317:
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3445              		.loc 1 386 0
 3446 0010 2423     		movs	r3, #36
 3447 0012 84F86930 		strb	r3, [r4, #105]
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3448              		.loc 1 389 0
 3449 0016 2268     		ldr	r2, [r4]
 3450 0018 1368     		ldr	r3, [r2]
 3451 001a 23F00103 		bic	r3, r3, #1
 3452 001e 1360     		str	r3, [r2]
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3453              		.loc 1 392 0
 3454 0020 2046     		mov	r0, r4
 3455 0022 FFF7FEFF 		bl	UART_SetConfig
 3456              	.LVL315:
 3457 0026 0128     		cmp	r0, #1
 3458 0028 1ED0     		beq	.L316
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3459              		.loc 1 397 0
 3460 002a 636A     		ldr	r3, [r4, #36]
 3461 002c 13BB     		cbnz	r3, .L325
 3462              	.L318:
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 3463              		.loc 1 405 0
 3464 002e 2268     		ldr	r2, [r4]
 3465 0030 5368     		ldr	r3, [r2, #4]
 3466 0032 23F40063 		bic	r3, r3, #2048
 3467 0036 5360     		str	r3, [r2, #4]
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3468              		.loc 1 406 0
 3469 0038 2268     		ldr	r2, [r4]
 3470 003a 9368     		ldr	r3, [r2, #8]
 3471 003c 23F02A03 		bic	r3, r3, #42
 3472 0040 9360     		str	r3, [r2, #8]
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3473              		.loc 1 409 0
 3474 0042 2268     		ldr	r2, [r4]
 3475 0044 5368     		ldr	r3, [r2, #4]
 3476 0046 43F48043 		orr	r3, r3, #16384
 3477 004a 5360     		str	r3, [r2, #4]
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3478              		.loc 1 412 0
 3479 004c 2268     		ldr	r2, [r4]
 3480 004e 5368     		ldr	r3, [r2, #4]
 3481 0050 23F02003 		bic	r3, r3, #32
 3482 0054 2B43     		orrs	r3, r3, r5
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 105


 3483 0056 5360     		str	r3, [r2, #4]
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3484              		.loc 1 415 0
 3485 0058 2268     		ldr	r2, [r4]
 3486 005a 1368     		ldr	r3, [r2]
 3487 005c 43F00103 		orr	r3, r3, #1
 3488 0060 1360     		str	r3, [r2]
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3489              		.loc 1 418 0
 3490 0062 2046     		mov	r0, r4
 3491 0064 FFF7FEFF 		bl	UART_CheckIdleState
 3492              	.LVL316:
 3493              	.L316:
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3494              		.loc 1 419 0
 3495 0068 38BD     		pop	{r3, r4, r5, pc}
 3496              	.LVL317:
 3497              	.L324:
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3498              		.loc 1 380 0
 3499 006a 80F86830 		strb	r3, [r0, #104]
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3500              		.loc 1 383 0
 3501 006e FFF7FEFF 		bl	HAL_UART_MspInit
 3502              	.LVL318:
 3503 0072 CDE7     		b	.L317
 3504              	.L325:
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3505              		.loc 1 399 0
 3506 0074 2046     		mov	r0, r4
 3507 0076 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3508              	.LVL319:
 3509 007a D8E7     		b	.L318
 3510              	.LVL320:
 3511              	.L319:
 3512              	.LCFI34:
 3513              		.cfi_def_cfa_offset 0
 3514              		.cfi_restore 3
 3515              		.cfi_restore 4
 3516              		.cfi_restore 5
 3517              		.cfi_restore 14
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3518              		.loc 1 369 0
 3519 007c 0120     		movs	r0, #1
 3520              	.LVL321:
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3521              		.loc 1 419 0
 3522 007e 7047     		bx	lr
 3523              		.cfi_endproc
 3524              	.LFE140:
 3526              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 3527              		.align	1
 3528              		.global	HAL_MultiProcessor_Init
 3529              		.syntax unified
 3530              		.thumb
 3531              		.thumb_func
 3532              		.fpu fpv5-sp-d16
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 106


 3534              	HAL_MultiProcessor_Init:
 3535              	.LFB141:
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3536              		.loc 1 439 0
 3537              		.cfi_startproc
 3538              		@ args = 0, pretend = 0, frame = 0
 3539              		@ frame_needed = 0, uses_anonymous_args = 0
 3540              	.LVL322:
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3541              		.loc 1 441 0
 3542 0000 0028     		cmp	r0, #0
 3543 0002 42D0     		beq	.L331
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3544              		.loc 1 439 0
 3545 0004 70B5     		push	{r4, r5, r6, lr}
 3546              	.LCFI35:
 3547              		.cfi_def_cfa_offset 16
 3548              		.cfi_offset 4, -16
 3549              		.cfi_offset 5, -12
 3550              		.cfi_offset 6, -8
 3551              		.cfi_offset 14, -4
 3552 0006 0446     		mov	r4, r0
 3553 0008 1546     		mov	r5, r2
 3554 000a 0E46     		mov	r6, r1
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3555              		.loc 1 449 0
 3556 000c 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3557 0010 53B3     		cbz	r3, .L336
 3558              	.LVL323:
 3559              	.L328:
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3560              		.loc 1 458 0
 3561 0012 2423     		movs	r3, #36
 3562 0014 84F86930 		strb	r3, [r4, #105]
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3563              		.loc 1 461 0
 3564 0018 2268     		ldr	r2, [r4]
 3565 001a 1368     		ldr	r3, [r2]
 3566 001c 23F00103 		bic	r3, r3, #1
 3567 0020 1360     		str	r3, [r2]
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3568              		.loc 1 464 0
 3569 0022 2046     		mov	r0, r4
 3570 0024 FFF7FEFF 		bl	UART_SetConfig
 3571              	.LVL324:
 3572 0028 0128     		cmp	r0, #1
 3573 002a 1CD0     		beq	.L327
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3574              		.loc 1 469 0
 3575 002c 636A     		ldr	r3, [r4, #36]
 3576 002e 03BB     		cbnz	r3, .L337
 3577              	.L329:
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3578              		.loc 1 477 0
 3579 0030 2268     		ldr	r2, [r4]
 3580 0032 5368     		ldr	r3, [r2, #4]
 3581 0034 23F49043 		bic	r3, r3, #18432
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 107


 3582 0038 5360     		str	r3, [r2, #4]
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3583              		.loc 1 478 0
 3584 003a 2268     		ldr	r2, [r4]
 3585 003c 9368     		ldr	r3, [r2, #8]
 3586 003e 23F02A03 		bic	r3, r3, #42
 3587 0042 9360     		str	r3, [r2, #8]
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3588              		.loc 1 480 0
 3589 0044 B5F5006F 		cmp	r5, #2048
 3590 0048 17D0     		beq	.L338
 3591              	.L330:
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3592              		.loc 1 487 0
 3593 004a 2368     		ldr	r3, [r4]
 3594 004c 1A68     		ldr	r2, [r3]
 3595 004e 22F40062 		bic	r2, r2, #2048
 3596 0052 1543     		orrs	r5, r5, r2
 3597              	.LVL325:
 3598 0054 1D60     		str	r5, [r3]
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3599              		.loc 1 490 0
 3600 0056 2268     		ldr	r2, [r4]
 3601 0058 1368     		ldr	r3, [r2]
 3602 005a 43F00103 		orr	r3, r3, #1
 3603 005e 1360     		str	r3, [r2]
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3604              		.loc 1 493 0
 3605 0060 2046     		mov	r0, r4
 3606 0062 FFF7FEFF 		bl	UART_CheckIdleState
 3607              	.LVL326:
 3608              	.L327:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3609              		.loc 1 494 0
 3610 0066 70BD     		pop	{r4, r5, r6, pc}
 3611              	.LVL327:
 3612              	.L336:
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3613              		.loc 1 452 0
 3614 0068 80F86830 		strb	r3, [r0, #104]
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3615              		.loc 1 455 0
 3616 006c FFF7FEFF 		bl	HAL_UART_MspInit
 3617              	.LVL328:
 3618 0070 CFE7     		b	.L328
 3619              	.L337:
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3620              		.loc 1 471 0
 3621 0072 2046     		mov	r0, r4
 3622 0074 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3623              	.LVL329:
 3624 0078 DAE7     		b	.L329
 3625              	.L338:
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3626              		.loc 1 483 0
 3627 007a 2368     		ldr	r3, [r4]
 3628 007c 5968     		ldr	r1, [r3, #4]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 108


 3629 007e 21F07F41 		bic	r1, r1, #-16777216
 3630 0082 41EA0666 		orr	r6, r1, r6, lsl #24
 3631 0086 5E60     		str	r6, [r3, #4]
 3632 0088 DFE7     		b	.L330
 3633              	.LVL330:
 3634              	.L331:
 3635              	.LCFI36:
 3636              		.cfi_def_cfa_offset 0
 3637              		.cfi_restore 4
 3638              		.cfi_restore 5
 3639              		.cfi_restore 6
 3640              		.cfi_restore 14
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3641              		.loc 1 443 0
 3642 008a 0120     		movs	r0, #1
 3643              	.LVL331:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3644              		.loc 1 494 0
 3645 008c 7047     		bx	lr
 3646              		.cfi_endproc
 3647              	.LFE141:
 3649              		.section	.text.HAL_RS485Ex_Init,"ax",%progbits
 3650              		.align	1
 3651              		.global	HAL_RS485Ex_Init
 3652              		.syntax unified
 3653              		.thumb
 3654              		.thumb_func
 3655              		.fpu fpv5-sp-d16
 3657              	HAL_RS485Ex_Init:
 3658              	.LFB142:
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp = 0x0;
 3659              		.loc 1 517 0
 3660              		.cfi_startproc
 3661              		@ args = 0, pretend = 0, frame = 0
 3662              		@ frame_needed = 0, uses_anonymous_args = 0
 3663              	.LVL332:
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3664              		.loc 1 521 0
 3665 0000 0028     		cmp	r0, #0
 3666 0002 3CD0     		beq	.L343
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp = 0x0;
 3667              		.loc 1 517 0
 3668 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3669              	.LCFI37:
 3670              		.cfi_def_cfa_offset 24
 3671              		.cfi_offset 3, -24
 3672              		.cfi_offset 4, -20
 3673              		.cfi_offset 5, -16
 3674              		.cfi_offset 6, -12
 3675              		.cfi_offset 7, -8
 3676              		.cfi_offset 14, -4
 3677 0006 0446     		mov	r4, r0
 3678 0008 1D46     		mov	r5, r3
 3679 000a 1646     		mov	r6, r2
 3680 000c 0F46     		mov	r7, r1
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3681              		.loc 1 537 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 109


 3682 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3683              	.LVL333:
 3684 0012 5BB3     		cbz	r3, .L348
 3685              	.LVL334:
 3686              	.L341:
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3687              		.loc 1 546 0
 3688 0014 2423     		movs	r3, #36
 3689 0016 84F86930 		strb	r3, [r4, #105]
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3690              		.loc 1 549 0
 3691 001a 2268     		ldr	r2, [r4]
 3692 001c 1368     		ldr	r3, [r2]
 3693 001e 23F00103 		bic	r3, r3, #1
 3694 0022 1360     		str	r3, [r2]
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3695              		.loc 1 552 0
 3696 0024 2046     		mov	r0, r4
 3697 0026 FFF7FEFF 		bl	UART_SetConfig
 3698              	.LVL335:
 3699 002a 0128     		cmp	r0, #1
 3700 002c 1DD0     		beq	.L340
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3701              		.loc 1 557 0
 3702 002e 636A     		ldr	r3, [r4, #36]
 3703 0030 0BBB     		cbnz	r3, .L349
 3704              	.L342:
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3705              		.loc 1 563 0
 3706 0032 2268     		ldr	r2, [r4]
 3707 0034 9368     		ldr	r3, [r2, #8]
 3708 0036 43F48043 		orr	r3, r3, #16384
 3709 003a 9360     		str	r3, [r2, #8]
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3710              		.loc 1 566 0
 3711 003c 2268     		ldr	r2, [r4]
 3712 003e 9368     		ldr	r3, [r2, #8]
 3713 0040 23F40043 		bic	r3, r3, #32768
 3714 0044 3B43     		orrs	r3, r3, r7
 3715 0046 9360     		str	r3, [r2, #8]
 3716              	.LVL336:
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT|USART_CR1_DEAT), temp);
 3717              		.loc 1 570 0
 3718 0048 2D04     		lsls	r5, r5, #16
 3719              	.LVL337:
 3720 004a 45EA4652 		orr	r2, r5, r6, lsl #21
 3721              	.LVL338:
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3722              		.loc 1 571 0
 3723 004e 2368     		ldr	r3, [r4]
 3724 0050 1968     		ldr	r1, [r3]
 3725 0052 0C4D     		ldr	r5, .L350
 3726 0054 0D40     		ands	r5, r5, r1
 3727 0056 2A43     		orrs	r2, r2, r5
 3728              	.LVL339:
 3729 0058 1A60     		str	r2, [r3]
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 110


 3730              		.loc 1 574 0
 3731 005a 2268     		ldr	r2, [r4]
 3732 005c 1368     		ldr	r3, [r2]
 3733 005e 43F00103 		orr	r3, r3, #1
 3734 0062 1360     		str	r3, [r2]
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3735              		.loc 1 577 0
 3736 0064 2046     		mov	r0, r4
 3737 0066 FFF7FEFF 		bl	UART_CheckIdleState
 3738              	.LVL340:
 3739              	.L340:
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3740              		.loc 1 578 0
 3741 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3742              	.LVL341:
 3743              	.L348:
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3744              		.loc 1 540 0
 3745 006c 80F86830 		strb	r3, [r0, #104]
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3746              		.loc 1 543 0
 3747 0070 FFF7FEFF 		bl	HAL_UART_MspInit
 3748              	.LVL342:
 3749 0074 CEE7     		b	.L341
 3750              	.L349:
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3751              		.loc 1 559 0
 3752 0076 2046     		mov	r0, r4
 3753 0078 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3754              	.LVL343:
 3755 007c D9E7     		b	.L342
 3756              	.LVL344:
 3757              	.L343:
 3758              	.LCFI38:
 3759              		.cfi_def_cfa_offset 0
 3760              		.cfi_restore 3
 3761              		.cfi_restore 4
 3762              		.cfi_restore 5
 3763              		.cfi_restore 6
 3764              		.cfi_restore 7
 3765              		.cfi_restore 14
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3766              		.loc 1 523 0
 3767 007e 0120     		movs	r0, #1
 3768              	.LVL345:
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3769              		.loc 1 578 0
 3770 0080 7047     		bx	lr
 3771              	.L351:
 3772 0082 00BF     		.align	2
 3773              	.L350:
 3774 0084 FFFF00FC 		.word	-67043329
 3775              		.cfi_endproc
 3776              	.LFE142:
 3778              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3779              		.align	1
 3780              		.global	HAL_MultiProcessor_EnableMuteMode
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 111


 3781              		.syntax unified
 3782              		.thumb
 3783              		.thumb_func
 3784              		.fpu fpv5-sp-d16
 3786              	HAL_MultiProcessor_EnableMuteMode:
 3787              	.LFB173:
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
 3788              		.loc 1 1747 0
 3789              		.cfi_startproc
 3790              		@ args = 0, pretend = 0, frame = 0
 3791              		@ frame_needed = 0, uses_anonymous_args = 0
 3792              	.LVL346:
 3793 0000 08B5     		push	{r3, lr}
 3794              	.LCFI39:
 3795              		.cfi_def_cfa_offset 8
 3796              		.cfi_offset 3, -8
 3797              		.cfi_offset 14, -4
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3798              		.loc 1 1749 0
 3799 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3800 0006 012B     		cmp	r3, #1
 3801 0008 10D0     		beq	.L354
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3802              		.loc 1 1749 0 is_stmt 0 discriminator 2
 3803 000a 0123     		movs	r3, #1
 3804 000c 80F86830 		strb	r3, [r0, #104]
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3805              		.loc 1 1751 0 is_stmt 1 discriminator 2
 3806 0010 2423     		movs	r3, #36
 3807 0012 80F86930 		strb	r3, [r0, #105]
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3808              		.loc 1 1754 0 discriminator 2
 3809 0016 0268     		ldr	r2, [r0]
 3810 0018 1368     		ldr	r3, [r2]
 3811 001a 43F40053 		orr	r3, r3, #8192
 3812 001e 1360     		str	r3, [r2]
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3813              		.loc 1 1756 0 discriminator 2
 3814 0020 2023     		movs	r3, #32
 3815 0022 80F86930 		strb	r3, [r0, #105]
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3816              		.loc 1 1758 0 discriminator 2
 3817 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3818              	.LVL347:
 3819              	.L353:
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3820              		.loc 1 1759 0
 3821 002a 08BD     		pop	{r3, pc}
 3822              	.LVL348:
 3823              	.L354:
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3824              		.loc 1 1749 0
 3825 002c 0220     		movs	r0, #2
 3826              	.LVL349:
 3827 002e FCE7     		b	.L353
 3828              		.cfi_endproc
 3829              	.LFE173:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 112


 3831              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 3832              		.align	1
 3833              		.global	HAL_MultiProcessor_DisableMuteMode
 3834              		.syntax unified
 3835              		.thumb
 3836              		.thumb_func
 3837              		.fpu fpv5-sp-d16
 3839              	HAL_MultiProcessor_DisableMuteMode:
 3840              	.LFB174:
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
 3841              		.loc 1 1768 0
 3842              		.cfi_startproc
 3843              		@ args = 0, pretend = 0, frame = 0
 3844              		@ frame_needed = 0, uses_anonymous_args = 0
 3845              	.LVL350:
 3846 0000 08B5     		push	{r3, lr}
 3847              	.LCFI40:
 3848              		.cfi_def_cfa_offset 8
 3849              		.cfi_offset 3, -8
 3850              		.cfi_offset 14, -4
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3851              		.loc 1 1770 0
 3852 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3853 0006 012B     		cmp	r3, #1
 3854 0008 10D0     		beq	.L358
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3855              		.loc 1 1770 0 is_stmt 0 discriminator 2
 3856 000a 0123     		movs	r3, #1
 3857 000c 80F86830 		strb	r3, [r0, #104]
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3858              		.loc 1 1772 0 is_stmt 1 discriminator 2
 3859 0010 2423     		movs	r3, #36
 3860 0012 80F86930 		strb	r3, [r0, #105]
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3861              		.loc 1 1775 0 discriminator 2
 3862 0016 0268     		ldr	r2, [r0]
 3863 0018 1368     		ldr	r3, [r2]
 3864 001a 23F40053 		bic	r3, r3, #8192
 3865 001e 1360     		str	r3, [r2]
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3866              		.loc 1 1777 0 discriminator 2
 3867 0020 2023     		movs	r3, #32
 3868 0022 80F86930 		strb	r3, [r0, #105]
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3869              		.loc 1 1779 0 discriminator 2
 3870 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3871              	.LVL351:
 3872              	.L357:
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3873              		.loc 1 1780 0
 3874 002a 08BD     		pop	{r3, pc}
 3875              	.LVL352:
 3876              	.L358:
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3877              		.loc 1 1770 0
 3878 002c 0220     		movs	r0, #2
 3879              	.LVL353:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 113


 3880 002e FCE7     		b	.L357
 3881              		.cfi_endproc
 3882              	.LFE174:
 3884              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3885              		.align	1
 3886              		.global	HAL_HalfDuplex_EnableTransmitter
 3887              		.syntax unified
 3888              		.thumb
 3889              		.thumb_func
 3890              		.fpu fpv5-sp-d16
 3892              	HAL_HalfDuplex_EnableTransmitter:
 3893              	.LFB181:
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3894              		.loc 1 2049 0
 3895              		.cfi_startproc
 3896              		@ args = 0, pretend = 0, frame = 0
 3897              		@ frame_needed = 0, uses_anonymous_args = 0
 3898              		@ link register save eliminated.
 3899              	.LVL354:
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3900              		.loc 1 2051 0
 3901 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3902 0004 012B     		cmp	r3, #1
 3903 0006 17D0     		beq	.L362
 3904              		.loc 1 2051 0 is_stmt 0 discriminator 2
 3905 0008 0123     		movs	r3, #1
 3906 000a 80F86830 		strb	r3, [r0, #104]
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3907              		.loc 1 2052 0 is_stmt 1 discriminator 2
 3908 000e 2423     		movs	r3, #36
 3909 0010 80F86930 		strb	r3, [r0, #105]
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 3910              		.loc 1 2055 0 discriminator 2
 3911 0014 0268     		ldr	r2, [r0]
 3912 0016 1368     		ldr	r3, [r2]
 3913 0018 23F00C03 		bic	r3, r3, #12
 3914 001c 1360     		str	r3, [r2]
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 3915              		.loc 1 2057 0 discriminator 2
 3916 001e 0268     		ldr	r2, [r0]
 3917 0020 1368     		ldr	r3, [r2]
 3918 0022 43F00803 		orr	r3, r3, #8
 3919 0026 1360     		str	r3, [r2]
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 114


 3920              		.loc 1 2059 0 discriminator 2
 3921 0028 2023     		movs	r3, #32
 3922 002a 80F86930 		strb	r3, [r0, #105]
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3923              		.loc 1 2061 0 discriminator 2
 3924 002e 0023     		movs	r3, #0
 3925 0030 80F86830 		strb	r3, [r0, #104]
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3926              		.loc 1 2063 0 discriminator 2
 3927 0034 1846     		mov	r0, r3
 3928              	.LVL355:
 3929 0036 7047     		bx	lr
 3930              	.LVL356:
 3931              	.L362:
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3932              		.loc 1 2051 0
 3933 0038 0220     		movs	r0, #2
 3934              	.LVL357:
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3935              		.loc 1 2064 0
 3936 003a 7047     		bx	lr
 3937              		.cfi_endproc
 3938              	.LFE181:
 3940              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3941              		.align	1
 3942              		.global	HAL_HalfDuplex_EnableReceiver
 3943              		.syntax unified
 3944              		.thumb
 3945              		.thumb_func
 3946              		.fpu fpv5-sp-d16
 3948              	HAL_HalfDuplex_EnableReceiver:
 3949              	.LFB182:
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3950              		.loc 1 2072 0
 3951              		.cfi_startproc
 3952              		@ args = 0, pretend = 0, frame = 0
 3953              		@ frame_needed = 0, uses_anonymous_args = 0
 3954              		@ link register save eliminated.
 3955              	.LVL358:
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3956              		.loc 1 2074 0
 3957 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3958 0004 012B     		cmp	r3, #1
 3959 0006 17D0     		beq	.L365
 3960              		.loc 1 2074 0 is_stmt 0 discriminator 2
 3961 0008 0123     		movs	r3, #1
 3962 000a 80F86830 		strb	r3, [r0, #104]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 115


2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3963              		.loc 1 2075 0 is_stmt 1 discriminator 2
 3964 000e 2423     		movs	r3, #36
 3965 0010 80F86930 		strb	r3, [r0, #105]
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 3966              		.loc 1 2078 0 discriminator 2
 3967 0014 0268     		ldr	r2, [r0]
 3968 0016 1368     		ldr	r3, [r2]
 3969 0018 23F00C03 		bic	r3, r3, #12
 3970 001c 1360     		str	r3, [r2]
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 3971              		.loc 1 2080 0 discriminator 2
 3972 001e 0268     		ldr	r2, [r0]
 3973 0020 1368     		ldr	r3, [r2]
 3974 0022 43F00403 		orr	r3, r3, #4
 3975 0026 1360     		str	r3, [r2]
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3976              		.loc 1 2082 0 discriminator 2
 3977 0028 2023     		movs	r3, #32
 3978 002a 80F86930 		strb	r3, [r0, #105]
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3979              		.loc 1 2084 0 discriminator 2
 3980 002e 0023     		movs	r3, #0
 3981 0030 80F86830 		strb	r3, [r0, #104]
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3982              		.loc 1 2086 0 discriminator 2
 3983 0034 1846     		mov	r0, r3
 3984              	.LVL359:
 3985 0036 7047     		bx	lr
 3986              	.LVL360:
 3987              	.L365:
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3988              		.loc 1 2074 0
 3989 0038 0220     		movs	r0, #2
 3990              	.LVL361:
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3991              		.loc 1 2087 0
 3992 003a 7047     		bx	lr
 3993              		.cfi_endproc
 3994              	.LFE182:
 3996              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3997              		.align	1
 3998              		.global	HAL_LIN_SendBreak
 3999              		.syntax unified
 4000              		.thumb
 4001              		.thumb_func
 4002              		.fpu fpv5-sp-d16
 4004              	HAL_LIN_SendBreak:
 4005              	.LFB183:
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 116


2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Transmits break characters.
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4006              		.loc 1 2096 0
 4007              		.cfi_startproc
 4008              		@ args = 0, pretend = 0, frame = 0
 4009              		@ frame_needed = 0, uses_anonymous_args = 0
 4010              		@ link register save eliminated.
 4011              	.LVL362:
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 4012              		.loc 1 2101 0
 4013 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 4014 0004 012B     		cmp	r3, #1
 4015 0006 12D0     		beq	.L368
 4016              		.loc 1 2101 0 is_stmt 0 discriminator 2
 4017 0008 0123     		movs	r3, #1
 4018 000a 80F86830 		strb	r3, [r0, #104]
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4019              		.loc 1 2103 0 is_stmt 1 discriminator 2
 4020 000e 2423     		movs	r3, #36
 4021 0010 80F86930 		strb	r3, [r0, #105]
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Send break characters */
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->RQR, UART_SENDBREAK_REQUEST);
 4022              		.loc 1 2106 0 discriminator 2
 4023 0014 0268     		ldr	r2, [r0]
 4024 0016 9369     		ldr	r3, [r2, #24]
 4025 0018 43F00203 		orr	r3, r3, #2
 4026 001c 9361     		str	r3, [r2, #24]
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4027              		.loc 1 2108 0 discriminator 2
 4028 001e 2023     		movs	r3, #32
 4029 0020 80F86930 		strb	r3, [r0, #105]
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4030              		.loc 1 2111 0 discriminator 2
 4031 0024 0023     		movs	r3, #0
 4032 0026 80F86830 		strb	r3, [r0, #104]
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 4033              		.loc 1 2113 0 discriminator 2
 4034 002a 1846     		mov	r0, r3
 4035              	.LVL363:
 4036 002c 7047     		bx	lr
 4037              	.LVL364:
 4038              	.L368:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 117


2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 4039              		.loc 1 2101 0
 4040 002e 0220     		movs	r0, #2
 4041              	.LVL365:
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4042              		.loc 1 2114 0
 4043 0030 7047     		bx	lr
 4044              		.cfi_endproc
 4045              	.LFE183:
 4047              		.section	.text.HAL_MultiProcessorEx_AddressLength_Set,"ax",%progbits
 4048              		.align	1
 4049              		.global	HAL_MultiProcessorEx_AddressLength_Set
 4050              		.syntax unified
 4051              		.thumb
 4052              		.thumb_func
 4053              		.fpu fpv5-sp-d16
 4055              	HAL_MultiProcessorEx_AddressLength_Set:
 4056              	.LFB184:
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief By default in multiprocessor mode, when the wake up method is set
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        to address mark, the UART handles only 4-bit long addresses detection;
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        this API allows to enable longer addresses detection (6-, 7- or 8-bit
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        long).
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  Addresses detection lengths are: 6-bit address detection in 7-bit data mode,
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        7-bit address detection in 8-bit data mode, 8-bit address detection in 9-bit data mode.
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param AddressLength this parameter can be one of the following values:
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_ADDRESS_DETECT_4B 4-bit long address
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_ADDRESS_DETECT_7B 6-, 7- or 8-bit long address
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessorEx_AddressLength_Set(UART_HandleTypeDef *huart, uint32_t Addres
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4057              		.loc 1 2130 0
 4058              		.cfi_startproc
 4059              		@ args = 0, pretend = 0, frame = 0
 4060              		@ frame_needed = 0, uses_anonymous_args = 0
 4061              	.LVL366:
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 4062              		.loc 1 2132 0
 4063 0000 B0B1     		cbz	r0, .L371
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 4064              		.loc 1 2130 0
 4065 0002 08B5     		push	{r3, lr}
 4066              	.LCFI41:
 4067              		.cfi_def_cfa_offset 8
 4068              		.cfi_offset 3, -8
 4069              		.cfi_offset 14, -4
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the address length parameter */
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(AddressLength));
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 118


2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4070              		.loc 1 2140 0
 4071 0004 2423     		movs	r3, #36
 4072 0006 80F86930 		strb	r3, [r0, #105]
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 4073              		.loc 1 2143 0
 4074 000a 0268     		ldr	r2, [r0]
 4075 000c 1368     		ldr	r3, [r2]
 4076 000e 23F00103 		bic	r3, r3, #1
 4077 0012 1360     		str	r3, [r2]
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the address length */
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, AddressLength);
 4078              		.loc 1 2146 0
 4079 0014 0268     		ldr	r2, [r0]
 4080 0016 5368     		ldr	r3, [r2, #4]
 4081 0018 23F01003 		bic	r3, r3, #16
 4082 001c 1943     		orrs	r1, r1, r3
 4083              	.LVL367:
 4084 001e 5160     		str	r1, [r2, #4]
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 4085              		.loc 1 2149 0
 4086 0020 0268     		ldr	r2, [r0]
 4087 0022 1368     		ldr	r3, [r2]
 4088 0024 43F00103 		orr	r3, r3, #1
 4089 0028 1360     		str	r3, [r2]
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState to Ready */
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4090              		.loc 1 2152 0
 4091 002a FFF7FEFF 		bl	UART_CheckIdleState
 4092              	.LVL368:
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4093              		.loc 1 2153 0
 4094 002e 08BD     		pop	{r3, pc}
 4095              	.LVL369:
 4096              	.L371:
 4097              	.LCFI42:
 4098              		.cfi_def_cfa_offset 0
 4099              		.cfi_restore 3
 4100              		.cfi_restore 14
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 4101              		.loc 1 2134 0
 4102 0030 0120     		movs	r0, #1
 4103              	.LVL370:
 4104              		.loc 1 2153 0
 4105 0032 7047     		bx	lr
 4106              		.cfi_endproc
 4107              	.LFE184:
 4109              		.text
 4110              	.Letext0:
 4111              		.file 2 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\machine\\_default
 4112              		.file 3 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 119


 4113              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 4114              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 4115              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 4116              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 4117              		.file 8 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 4118              		.file 9 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 4119              		.file 10 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\
 4120              		.file 11 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 4121              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 4122              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 4123              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 4124              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 4125              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 120


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_uart.c
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:18     .text.UART_Transmit_IT:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:24     .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:111    .text.UART_EndTxTransfer:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:117    .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:139    .text.UART_EndRxTransfer:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:145    .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:172    .text.HAL_UART_MspInit:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:179    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:193    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:200    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:214    .text.HAL_UART_DeInit:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:221    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:289    .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:296    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:369    .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:376    .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:506    .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:513    .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:621    .text.HAL_UART_Transmit_DMA:00000084 $d
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1517   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1631   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1933   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:628    .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:635    .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:749    .text.HAL_UART_Receive_DMA:00000090 $d
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1682   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1882   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:756    .text.HAL_UART_DMAPause:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:763    .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:842    .text.HAL_UART_DMAResume:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:849    .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:934    .text.HAL_UART_DMAStop:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:941    .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1022   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1029   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1104   .text.HAL_UART_Transmit:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1111   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1276   .text.HAL_UART_Receive:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1283   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1490   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1497   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1511   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1568   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1574   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1604   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1611   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1625   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1655   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1662   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1676   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1735   .text.UART_Receive_IT:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1741   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1855   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1862   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1876   .text.UART_DMARxHalfCplt:00000000 $t
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 121


C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1906   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1913   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:1927   .text.UART_DMAError:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2004   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2011   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2250   .text.HAL_UART_IRQHandler:00000134 $d
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2261   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2255   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2290   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2297   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2316   .text.HAL_UART_GetState:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2323   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2345   .text.HAL_UART_GetError:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2352   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2369   .text.UART_SetConfig:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2376   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2473   .text.UART_SetConfig:0000008e $d
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2477   .text.UART_SetConfig:00000092 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2507   .text.UART_SetConfig:000000b6 $d
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2783   .text.UART_SetConfig:00000220 $d
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2805   .text.UART_SetConfig:00000236 $d
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2876   .text.UART_SetConfig:0000028c $d
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2889   .text.UART_SetConfig:000002b4 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3002   .text.UART_SetConfig:00000358 $d
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3007   .text.UART_AdvFeatureConfig:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3014   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3137   .text.UART_CheckIdleState:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3144   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3213   .text.HAL_UART_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3220   .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3310   .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3317   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3413   .text.HAL_LIN_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3420   .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3527   .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3534   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3650   .text.HAL_RS485Ex_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3657   .text.HAL_RS485Ex_Init:00000000 HAL_RS485Ex_Init
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3774   .text.HAL_RS485Ex_Init:00000084 $d
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3779   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3786   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3832   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3839   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3885   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3892   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3941   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3948   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:3997   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:4004   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:4048   .text.HAL_MultiProcessorEx_AddressLength_Set:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:4055   .text.HAL_MultiProcessorEx_AddressLength_Set:00000000 HAL_MultiProcessorEx_AddressLength_Set
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2520   .text.UART_SetConfig:000000c3 $d
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2520   .text.UART_SetConfig:000000c4 $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2793   .text.UART_SetConfig:00000229 $d
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2793   .text.UART_SetConfig:0000022a $t
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2814   .text.UART_SetConfig:0000023f $d
C:\Users\milek\AppData\Local\Temp\cc46nkmd.s:2814   .text.UART_SetConfig:00000240 $t
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc46nkmd.s 			page 122



UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_GetTick
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
