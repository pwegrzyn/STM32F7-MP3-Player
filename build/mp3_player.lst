ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mp3_player.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.BSP_init,"ax",%progbits
  18              		.align	1
  19              		.global	BSP_init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	BSP_init:
  26              	.LFB142:
  27              		.file 1 "Src/mp3_player.c"
   1:Src/mp3_player.c **** /*
   2:Src/mp3_player.c ****  *	Main MP3 Player functionality
   3:Src/mp3_player.c ****  */
   4:Src/mp3_player.c **** 
   5:Src/mp3_player.c **** #include <stdio.h>
   6:Src/mp3_player.c **** #include <string.h>
   7:Src/mp3_player.c **** #include <stdlib.h>
   8:Src/mp3_player.c **** 
   9:Src/mp3_player.c **** #include "mp3_player.h"
  10:Src/mp3_player.c **** #include "gui.h"
  11:Src/mp3_player.c **** #include "lib\helix\pub\mp3dec.h"
  12:Src/mp3_player.c **** #include "fatfs.h"
  13:Src/mp3_player.c **** #include "stm32746g_discovery_audio.h"
  14:Src/mp3_player.c **** #include "term_io.h"
  15:Src/mp3_player.c **** #include "dbgu.h"
  16:Src/mp3_player.c **** #include "ansi.h"
  17:Src/mp3_player.c **** 
  18:Src/mp3_player.c **** #define DEBUG_ON 1
  19:Src/mp3_player.c **** 
  20:Src/mp3_player.c **** // Data read from the USB and fed to the MP3 Decoder
  21:Src/mp3_player.c **** #define READ_BUFFER_SIZE 2 * MAINBUF_SIZE// + 216
  22:Src/mp3_player.c **** 
  23:Src/mp3_player.c **** // Decoded data ready to be passed out to output
  24:Src/mp3_player.c **** #define DECODED_MP3_FRAME_SIZE MAX_NGRAN * MAX_NCHAN * MAX_NSAMP
  25:Src/mp3_player.c **** #define AUDIO_OUT_BUFFER_SIZE 2 * DECODED_MP3_FRAME_SIZE
  26:Src/mp3_player.c **** 
  27:Src/mp3_player.c **** // State of the offset of the BSP output buffer
  28:Src/mp3_player.c **** typedef enum BSP_BUFFER_STATE_TAG {
  29:Src/mp3_player.c ****     BUFFER_OFFSET_NONE = 0,
  30:Src/mp3_player.c ****     BUFFER_OFFSET_HALF,
  31:Src/mp3_player.c ****     BUFFER_OFFSET_FULL,
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 2


  32:Src/mp3_player.c **** } BSP_BUFFER_STATE;
  33:Src/mp3_player.c **** 
  34:Src/mp3_player.c **** /* ------------------------------------------------------------------- */
  35:Src/mp3_player.c **** 
  36:Src/mp3_player.c **** static HMP3Decoder hMP3Decoder;
  37:Src/mp3_player.c **** Mp3_Player_State state;
  38:Src/mp3_player.c **** short output_buffer[AUDIO_OUT_BUFFER_SIZE];
  39:Src/mp3_player.c **** uint8_t input_buffer[READ_BUFFER_SIZE];
  40:Src/mp3_player.c **** static uint8_t *current_ptr;
  41:Src/mp3_player.c **** static BSP_BUFFER_STATE out_buf_offs = BUFFER_OFFSET_NONE;
  42:Src/mp3_player.c **** FIL input_file;
  43:Src/mp3_player.c **** const char** paths;
  44:Src/mp3_player.c **** int mp3FilesCounter = 0;
  45:Src/mp3_player.c **** int currentFilePosition = -1;
  46:Src/mp3_player.c **** int currentFileBytes = 0;
  47:Src/mp3_player.c **** int currentFileBytesRead = 0;
  48:Src/mp3_player.c **** static int buffer_leftover = 0;
  49:Src/mp3_player.c **** static int in_buf_offs;
  50:Src/mp3_player.c **** static int decode_result;
  51:Src/mp3_player.c **** int has_been_paused = 0;
  52:Src/mp3_player.c **** char gui_info_text[100];
  53:Src/mp3_player.c **** 
  54:Src/mp3_player.c **** 
  55:Src/mp3_player.c **** /* ------------------------------------------------------------------- */
  56:Src/mp3_player.c **** void BSP_init(void);
  57:Src/mp3_player.c **** void mp3_player_init(void);
  58:Src/mp3_player.c **** void mp3_player_fsm(const char*);
  59:Src/mp3_player.c **** void mp3_player_play();
  60:Src/mp3_player.c **** int mp3_player_process_frame();
  61:Src/mp3_player.c **** int fill_input_buffer();
  62:Src/mp3_player.c **** void copy_leftover();
  63:Src/mp3_player.c **** void reset_player_state();
  64:Src/mp3_player.c **** 
  65:Src/mp3_player.c **** /* ------------------------------------------------------------------- */
  66:Src/mp3_player.c **** 
  67:Src/mp3_player.c **** // Main Finite State Machine of the player
  68:Src/mp3_player.c **** void mp3_player_fsm(const char* path)
  69:Src/mp3_player.c **** {
  70:Src/mp3_player.c ****     BSP_init();
  71:Src/mp3_player.c ****     state = NEXT;
  72:Src/mp3_player.c **** 
  73:Src/mp3_player.c ****     touchscreen_loop_init();
  74:Src/mp3_player.c **** 
  75:Src/mp3_player.c **** 	sprintf(gui_info_text, "-----------------");
  76:Src/mp3_player.c **** 
  77:Src/mp3_player.c ****     DIR directory;
  78:Src/mp3_player.c ****     FILINFO info;
  79:Src/mp3_player.c **** 
  80:Src/mp3_player.c ****     if (f_opendir(&directory, path) != FR_OK) {
  81:Src/mp3_player.c ****         if (DEBUG_ON) xprintf("Error opening the directory\n");
  82:Src/mp3_player.c ****         return;
  83:Src/mp3_player.c ****     }
  84:Src/mp3_player.c **** 
  85:Src/mp3_player.c ****     while(1) {
  86:Src/mp3_player.c ****         if (f_readdir(&directory, &info) != FR_OK) {
  87:Src/mp3_player.c ****             xprintf("Error reading from directory\n");
  88:Src/mp3_player.c ****             return;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 3


  89:Src/mp3_player.c ****         }
  90:Src/mp3_player.c ****         if (info.fname[0] == 0)
  91:Src/mp3_player.c ****             break;
  92:Src/mp3_player.c ****         if (strstr(info.fname, ".mp3"))
  93:Src/mp3_player.c ****             mp3FilesCounter++;
  94:Src/mp3_player.c ****     }
  95:Src/mp3_player.c **** 
  96:Src/mp3_player.c ****     f_closedir(&directory);
  97:Src/mp3_player.c **** 
  98:Src/mp3_player.c ****     int i = 0;
  99:Src/mp3_player.c ****     paths = malloc(sizeof(char*) * mp3FilesCounter);
 100:Src/mp3_player.c **** 
 101:Src/mp3_player.c ****     if (paths == NULL) {
 102:Src/mp3_player.c ****         if (DEBUG_ON) xprintf("Error allocating memory\n");
 103:Src/mp3_player.c ****         return;
 104:Src/mp3_player.c ****     }
 105:Src/mp3_player.c **** 
 106:Src/mp3_player.c ****     if (f_opendir(&directory, path) != FR_OK) {
 107:Src/mp3_player.c ****         if (DEBUG_ON) xprintf("Error opening the directory\n");
 108:Src/mp3_player.c ****         return;
 109:Src/mp3_player.c ****     }
 110:Src/mp3_player.c **** 
 111:Src/mp3_player.c ****     while(1) {
 112:Src/mp3_player.c ****         if (f_readdir(&directory, &info) != FR_OK) {
 113:Src/mp3_player.c ****             xprintf("Error reading from directory\n");
 114:Src/mp3_player.c ****             return;
 115:Src/mp3_player.c ****         }
 116:Src/mp3_player.c ****         if (info.fname[0] == 0)
 117:Src/mp3_player.c ****             break;
 118:Src/mp3_player.c ****         if (strstr(info.fname, ".mp3")) {
 119:Src/mp3_player.c ****             paths[i] = malloc((strlen(info.fname) + 1) * sizeof(char));
 120:Src/mp3_player.c **** 			strcpy(paths[i], info.fname);
 121:Src/mp3_player.c **** 			if(DEBUG_ON) xprintf("%s\n", paths[i]);
 122:Src/mp3_player.c ****             i++;
 123:Src/mp3_player.c ****         }
 124:Src/mp3_player.c ****     }
 125:Src/mp3_player.c **** 
 126:Src/mp3_player.c **** 	while(1)
 127:Src/mp3_player.c **** 	{	
 128:Src/mp3_player.c **** 		switch(state)
 129:Src/mp3_player.c **** 		{
 130:Src/mp3_player.c **** 			case PLAY:
 131:Src/mp3_player.c **** 			    if(DEBUG_ON) xprintf("Now playing\n");
 132:Src/mp3_player.c **** 				currentFileBytes = info.fsize;
 133:Src/mp3_player.c **** 				mp3_player_play();
 134:Src/mp3_player.c ****                 f_close(&input_file);
 135:Src/mp3_player.c **** 				currentFileBytesRead = 0;
 136:Src/mp3_player.c **** 				break;
 137:Src/mp3_player.c **** 			case NEXT:
 138:Src/mp3_player.c **** 			    reset_player_state();
 139:Src/mp3_player.c **** 			    if (currentFilePosition == mp3FilesCounter - 1)
 140:Src/mp3_player.c ****                     currentFilePosition = 0;
 141:Src/mp3_player.c ****                 else
 142:Src/mp3_player.c ****                     currentFilePosition++;
 143:Src/mp3_player.c ****                 if (f_open(&input_file, paths[currentFilePosition], FA_READ) != FR_OK) {
 144:Src/mp3_player.c ****                     if(DEBUG_ON) xprintf("Error opening file\n");
 145:Src/mp3_player.c ****                     return;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 4


 146:Src/mp3_player.c ****                 }
 147:Src/mp3_player.c ****                 state = PLAY;
 148:Src/mp3_player.c **** 				break;
 149:Src/mp3_player.c ****             case PREV:
 150:Src/mp3_player.c ****                 reset_player_state();
 151:Src/mp3_player.c ****                 if (currentFilePosition == 0)
 152:Src/mp3_player.c ****                     currentFilePosition = mp3FilesCounter - 1;
 153:Src/mp3_player.c ****                 else
 154:Src/mp3_player.c ****                     currentFilePosition--;
 155:Src/mp3_player.c ****                 if (f_open(&input_file, paths[currentFilePosition], FA_READ) != FR_OK) {
 156:Src/mp3_player.c ****                     if(DEBUG_ON) xprintf("Error opening file\n");
 157:Src/mp3_player.c ****                     return;
 158:Src/mp3_player.c ****                 }
 159:Src/mp3_player.c ****                 state = PLAY;
 160:Src/mp3_player.c ****                 break;
 161:Src/mp3_player.c ****             case PAUSE:
 162:Src/mp3_player.c **** 				// shouldn't ever come to this place
 163:Src/mp3_player.c ****                 break;
 164:Src/mp3_player.c ****             case STOP:
 165:Src/mp3_player.c ****                 reset_player_state();
 166:Src/mp3_player.c ****                 currentFilePosition = 0;
 167:Src/mp3_player.c ****                 while(state == STOP) {
 168:Src/mp3_player.c ****                     Mp3_Player_State newState = check_touchscreen((double) currentFileBytes / curre
 169:Src/mp3_player.c ****                     if (newState != EMPTY)
 170:Src/mp3_player.c ****                         state = newState;
 171:Src/mp3_player.c ****                 }
 172:Src/mp3_player.c ****                 if (state == PLAY)
 173:Src/mp3_player.c ****                     if (f_open(&input_file, paths[currentFilePosition], FA_READ) != FR_OK) {
 174:Src/mp3_player.c ****                         if(DEBUG_ON) xprintf("Error opening file\n");
 175:Src/mp3_player.c ****                         return;
 176:Src/mp3_player.c ****                     }
 177:Src/mp3_player.c ****                 break;
 178:Src/mp3_player.c **** 			case FINISH:
 179:Src/mp3_player.c **** 			    if(DEBUG_ON) xprintf("fsm: state -> finish\n");
 180:Src/mp3_player.c **** 				return;
 181:Src/mp3_player.c ****             default:
 182:Src/mp3_player.c ****                 if(DEBUG_ON) xprintf("fsm: state -> default\n");
 183:Src/mp3_player.c ****                 return;
 184:Src/mp3_player.c **** 		}
 185:Src/mp3_player.c **** 
 186:Src/mp3_player.c **** 		sprintf(gui_info_text, "Currently playing: %s", paths[currentFilePosition]);
 187:Src/mp3_player.c **** 		refresh_screen(gui_info_text);
 188:Src/mp3_player.c **** 	}
 189:Src/mp3_player.c **** 
 190:Src/mp3_player.c **** }
 191:Src/mp3_player.c **** 
 192:Src/mp3_player.c **** // Initialize AUDIO_OUT
 193:Src/mp3_player.c **** void BSP_init(void) {
  28              		.loc 1 193 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 5


 194:Src/mp3_player.c **** 	if(BSP_AUDIO_OUT_Init(OUTPUT_DEVICE_BOTH, 100, AUDIO_FREQUENCY_44K) == 0)
  37              		.loc 1 194 0
  38 0002 4AF64442 		movw	r2, #44100
  39 0006 6421     		movs	r1, #100
  40 0008 0320     		movs	r0, #3
  41 000a FFF7FEFF 		bl	BSP_AUDIO_OUT_Init
  42              	.LVL0:
  43 000e 18B1     		cbz	r0, .L5
 195:Src/mp3_player.c **** 	{
 196:Src/mp3_player.c **** 	  BSP_AUDIO_OUT_SetAudioFrameSlot(CODEC_AUDIOFRAME_SLOT_02);
 197:Src/mp3_player.c **** 		xprintf("Audio Init Ok\n");
 198:Src/mp3_player.c **** 	}
 199:Src/mp3_player.c **** 	else
 200:Src/mp3_player.c **** 	{
 201:Src/mp3_player.c **** 		xprintf("Audio Init Error\n");
  44              		.loc 1 201 0
  45 0010 0548     		ldr	r0, .L6
  46 0012 FFF7FEFF 		bl	xprintf
  47              	.LVL1:
  48 0016 08BD     		pop	{r3, pc}
  49              	.L5:
 196:Src/mp3_player.c **** 		xprintf("Audio Init Ok\n");
  50              		.loc 1 196 0
  51 0018 0520     		movs	r0, #5
  52 001a FFF7FEFF 		bl	BSP_AUDIO_OUT_SetAudioFrameSlot
  53              	.LVL2:
 197:Src/mp3_player.c **** 	}
  54              		.loc 1 197 0
  55 001e 0348     		ldr	r0, .L6+4
  56 0020 FFF7FEFF 		bl	xprintf
  57              	.LVL3:
  58 0024 08BD     		pop	{r3, pc}
  59              	.L7:
  60 0026 00BF     		.align	2
  61              	.L6:
  62 0028 10000000 		.word	.LC1
  63 002c 00000000 		.word	.LC0
  64              		.cfi_endproc
  65              	.LFE142:
  67              		.section	.text.copy_leftover,"ax",%progbits
  68              		.align	1
  69              		.global	copy_leftover
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-sp-d16
  75              	copy_leftover:
  76              	.LFB148:
 202:Src/mp3_player.c **** 	}
 203:Src/mp3_player.c **** }
 204:Src/mp3_player.c **** 
 205:Src/mp3_player.c **** // Play state handler
 206:Src/mp3_player.c **** void mp3_player_play(void)
 207:Src/mp3_player.c **** {
 208:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("play: initializing decoder\n");
 209:Src/mp3_player.c **** 	hMP3Decoder = MP3InitDecoder();
 210:Src/mp3_player.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 6


 211:Src/mp3_player.c ****     if(DEBUG_ON) xprintf("play: starting frame processing\n");
 212:Src/mp3_player.c **** 	if(mp3_player_process_frame() == 0) {
 213:Src/mp3_player.c **** 		state = PLAY;
 214:Src/mp3_player.c **** 		BSP_AUDIO_OUT_Play((uint16_t*)&output_buffer[0], AUDIO_OUT_BUFFER_SIZE * 2);
 215:Src/mp3_player.c **** 		while(1) {
 216:Src/mp3_player.c **** 			Mp3_Player_State newState = check_touchscreen((double) currentFileBytes / currentFileBytes);
 217:Src/mp3_player.c **** 			if (newState != EMPTY)
 218:Src/mp3_player.c **** 				state = newState;
 219:Src/mp3_player.c ****             if (!has_been_paused && state == PAUSE) {
 220:Src/mp3_player.c ****                 if(BSP_AUDIO_OUT_Pause() != AUDIO_OK) {
 221:Src/mp3_player.c **** 					xprintf("Error while pausing stream\n");
 222:Src/mp3_player.c **** 					return;
 223:Src/mp3_player.c **** 				}
 224:Src/mp3_player.c **** 				has_been_paused = 1;
 225:Src/mp3_player.c ****             } else if(has_been_paused && state == PLAY) {
 226:Src/mp3_player.c **** 				if(BSP_AUDIO_OUT_Resume() != AUDIO_OK) {
 227:Src/mp3_player.c **** 					xprintf("Error while pausing stream\n");
 228:Src/mp3_player.c **** 					return;
 229:Src/mp3_player.c **** 				}
 230:Src/mp3_player.c **** 				has_been_paused = 0;
 231:Src/mp3_player.c **** 			}  else if (has_been_paused && state == PAUSE)
 232:Src/mp3_player.c **** 				continue;
 233:Src/mp3_player.c **** 			else if (state != PLAY) {
 234:Src/mp3_player.c ****                 break;
 235:Src/mp3_player.c ****             }
 236:Src/mp3_player.c **** 		}
 237:Src/mp3_player.c **** 		BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 238:Src/mp3_player.c **** 		out_buf_offs = BUFFER_OFFSET_NONE;
 239:Src/mp3_player.c **** 	}
 240:Src/mp3_player.c **** 	else
 241:Src/mp3_player.c **** 	{
 242:Src/mp3_player.c **** 		state = NEXT;
 243:Src/mp3_player.c **** 	}
 244:Src/mp3_player.c **** 
 245:Src/mp3_player.c **** 	buffer_leftover = 0;
 246:Src/mp3_player.c **** 	current_ptr = NULL;
 247:Src/mp3_player.c **** 	MP3FreeDecoder(hMP3Decoder);
 248:Src/mp3_player.c **** 
 249:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("play: freeing decoder\n");
 250:Src/mp3_player.c **** }
 251:Src/mp3_player.c **** 
 252:Src/mp3_player.c **** // Process next mp3 frame from the main file
 253:Src/mp3_player.c **** int mp3_player_process_frame(void)
 254:Src/mp3_player.c **** {
 255:Src/mp3_player.c ****     if(DEBUG_ON) xprintf("process: starting\n");
 256:Src/mp3_player.c **** 	MP3FrameInfo mp3FrameInfo;
 257:Src/mp3_player.c **** 
 258:Src/mp3_player.c **** 	if (current_ptr == NULL && fill_input_buffer() != 0) return EOF;
 259:Src/mp3_player.c **** 
 260:Src/mp3_player.c **** 	in_buf_offs = MP3FindSyncWord(current_ptr, buffer_leftover);
 261:Src/mp3_player.c **** 	while(in_buf_offs < 0)
 262:Src/mp3_player.c **** 	{
 263:Src/mp3_player.c **** 		if(fill_input_buffer() != 0) return EOF;
 264:Src/mp3_player.c **** 		// TODO check if this if is necessary at all
 265:Src/mp3_player.c **** 		if(buffer_leftover > 0)
 266:Src/mp3_player.c **** 		{
 267:Src/mp3_player.c **** 			buffer_leftover--;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 7


 268:Src/mp3_player.c **** 			current_ptr++;
 269:Src/mp3_player.c **** 		}
 270:Src/mp3_player.c **** 		// END TODO
 271:Src/mp3_player.c **** 		in_buf_offs = MP3FindSyncWord(current_ptr, buffer_leftover);
 272:Src/mp3_player.c **** 	}
 273:Src/mp3_player.c **** 	current_ptr += in_buf_offs;
 274:Src/mp3_player.c **** 	buffer_leftover -= in_buf_offs;
 275:Src/mp3_player.c **** 
 276:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("process: findSyncWord read\n");
 277:Src/mp3_player.c **** 
 278:Src/mp3_player.c **** 	// get data from the frame header
 279:Src/mp3_player.c **** 	if(!(MP3GetNextFrameInfo(hMP3Decoder, &mp3FrameInfo, current_ptr) == 0 && mp3FrameInfo.nChans == 2
 280:Src/mp3_player.c **** 	{
 281:Src/mp3_player.c **** 		// if header has failed
 282:Src/mp3_player.c **** 		if(buffer_leftover > 0)
 283:Src/mp3_player.c **** 		{
 284:Src/mp3_player.c **** 			buffer_leftover--;
 285:Src/mp3_player.c **** 			current_ptr++;
 286:Src/mp3_player.c **** 		}
 287:Src/mp3_player.c **** 		return 0;
 288:Src/mp3_player.c **** 	}
 289:Src/mp3_player.c **** 
 290:Src/mp3_player.c **** 	// if feel the buffer with actual non-frame-header data if necessary
 291:Src/mp3_player.c **** 	if (buffer_leftover < MAINBUF_SIZE && fill_input_buffer() != 0) return EOF;
 292:Src/mp3_player.c **** 
 293:Src/mp3_player.c **** 	// decode the right portion of the buffer
 294:Src/mp3_player.c **** 	if(out_buf_offs == BUFFER_OFFSET_HALF)
 295:Src/mp3_player.c **** 	{
 296:Src/mp3_player.c **** 	    if(DEBUG_ON) xprintf("process: out_buf half\n");
 297:Src/mp3_player.c **** 		decode_result = MP3Decode(hMP3Decoder, &current_ptr, &buffer_leftover, output_buffer, 0);
 298:Src/mp3_player.c **** 		out_buf_offs = BUFFER_OFFSET_NONE;
 299:Src/mp3_player.c **** 	}
 300:Src/mp3_player.c **** 
 301:Src/mp3_player.c **** 	if(out_buf_offs == BUFFER_OFFSET_FULL)
 302:Src/mp3_player.c **** 	{
 303:Src/mp3_player.c ****         if(DEBUG_ON) xprintf("process: out_buf full\n");
 304:Src/mp3_player.c **** 		decode_result = MP3Decode(hMP3Decoder, &current_ptr, &buffer_leftover, &output_buffer[DECODED_MP3
 305:Src/mp3_player.c **** 		out_buf_offs = BUFFER_OFFSET_NONE;
 306:Src/mp3_player.c **** 	}
 307:Src/mp3_player.c **** 
 308:Src/mp3_player.c **** 	// check results of the decoding process
 309:Src/mp3_player.c **** 	if(decode_result != ERR_MP3_NONE)
 310:Src/mp3_player.c **** 	{
 311:Src/mp3_player.c **** 		if(decode_result == ERR_MP3_INDATA_UNDERFLOW)
 312:Src/mp3_player.c **** 		{
 313:Src/mp3_player.c **** 			buffer_leftover = 0;
 314:Src/mp3_player.c **** 			if(fill_input_buffer() != 0) return EOF;
 315:Src/mp3_player.c **** 		}
 316:Src/mp3_player.c **** 		else if(decode_result == ERR_UNKNOWN)
 317:Src/mp3_player.c **** 		{
 318:Src/mp3_player.c **** 			xprintf("An unkown error has occured while decoding the frame\n");
 319:Src/mp3_player.c **** 		}
 320:Src/mp3_player.c **** 	}
 321:Src/mp3_player.c **** 
 322:Src/mp3_player.c **** 	return 0;
 323:Src/mp3_player.c **** }
 324:Src/mp3_player.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 8


 325:Src/mp3_player.c **** // Callback when half of audio out buffer is transefered
 326:Src/mp3_player.c **** void BSP_AUDIO_OUT_TransferComplete_CallBack(void)
 327:Src/mp3_player.c **** {
 328:Src/mp3_player.c ****     out_buf_offs = BUFFER_OFFSET_FULL;
 329:Src/mp3_player.c **** 
 330:Src/mp3_player.c **** 	if(mp3_player_process_frame() != 0)
 331:Src/mp3_player.c **** 	{
 332:Src/mp3_player.c **** 		BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 333:Src/mp3_player.c **** 		state = NEXT;
 334:Src/mp3_player.c **** 	}
 335:Src/mp3_player.c **** }
 336:Src/mp3_player.c **** 
 337:Src/mp3_player.c **** // Callback when all of audio out buffer is transefered
 338:Src/mp3_player.c **** void BSP_AUDIO_OUT_HalfTransfer_CallBack(void)
 339:Src/mp3_player.c **** {
 340:Src/mp3_player.c ****     out_buf_offs = BUFFER_OFFSET_HALF;
 341:Src/mp3_player.c **** 
 342:Src/mp3_player.c **** 	if(mp3_player_process_frame() != 0)
 343:Src/mp3_player.c **** 	{
 344:Src/mp3_player.c **** 		BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 345:Src/mp3_player.c **** 		state = NEXT;
 346:Src/mp3_player.c **** 	}
 347:Src/mp3_player.c **** }
 348:Src/mp3_player.c **** 
 349:Src/mp3_player.c **** // Fill the input buffer with mp3 data from the USB for the decoder
 350:Src/mp3_player.c **** int fill_input_buffer() 
 351:Src/mp3_player.c **** {
 352:Src/mp3_player.c **** 	unsigned int actually_read, how_much_to_read;
 353:Src/mp3_player.c **** 
 354:Src/mp3_player.c **** 	copy_leftover();
 355:Src/mp3_player.c **** 
 356:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("fill: copied from current_ptr input_buffer\n");
 357:Src/mp3_player.c **** 
 358:Src/mp3_player.c **** 	how_much_to_read = READ_BUFFER_SIZE - buffer_leftover;
 359:Src/mp3_player.c **** 
 360:Src/mp3_player.c **** 	// read from the input_file to fill the input_buffer fully
 361:Src/mp3_player.c **** 	f_read(&input_file, (BYTE *)input_buffer + buffer_leftover, how_much_to_read, &actually_read);
 362:Src/mp3_player.c **** 	currentFileBytesRead += actually_read;
 363:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("fill: copied from file to input_buffer\n");
 364:Src/mp3_player.c **** 
 365:Src/mp3_player.c **** 	// if there's still data in  the file
 366:Src/mp3_player.c **** 	if (actually_read == how_much_to_read)
 367:Src/mp3_player.c **** 	{
 368:Src/mp3_player.c **** 		current_ptr = input_buffer;
 369:Src/mp3_player.c **** 		in_buf_offs = 0;
 370:Src/mp3_player.c **** 		buffer_leftover = READ_BUFFER_SIZE;
 371:Src/mp3_player.c **** 		return 0;
 372:Src/mp3_player.c **** 	}
 373:Src/mp3_player.c **** 	else return EOF;
 374:Src/mp3_player.c **** }
 375:Src/mp3_player.c **** 
 376:Src/mp3_player.c **** // if there is some data left in the buffer copy it to the beginning
 377:Src/mp3_player.c **** void copy_leftover() 
 378:Src/mp3_player.c **** {
  77              		.loc 1 378 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 9


  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81 0000 08B5     		push	{r3, lr}
  82              	.LCFI1:
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
 379:Src/mp3_player.c **** 	if(buffer_leftover > 0)
  86              		.loc 1 379 0
  87 0002 054B     		ldr	r3, .L11
  88 0004 1A68     		ldr	r2, [r3]
  89 0006 002A     		cmp	r2, #0
  90 0008 04DD     		ble	.L8
 380:Src/mp3_player.c **** 	{
 381:Src/mp3_player.c **** 		memcpy(input_buffer, current_ptr, buffer_leftover);
  91              		.loc 1 381 0
  92 000a 044B     		ldr	r3, .L11+4
  93 000c 1968     		ldr	r1, [r3]
  94 000e 0448     		ldr	r0, .L11+8
  95 0010 FFF7FEFF 		bl	memcpy
  96              	.LVL4:
  97              	.L8:
  98 0014 08BD     		pop	{r3, pc}
  99              	.L12:
 100 0016 00BF     		.align	2
 101              	.L11:
 102 0018 00000000 		.word	.LANCHOR0
 103 001c 00000000 		.word	.LANCHOR1
 104 0020 00000000 		.word	input_buffer
 105              		.cfi_endproc
 106              	.LFE148:
 108              		.section	.text.fill_input_buffer,"ax",%progbits
 109              		.align	1
 110              		.global	fill_input_buffer
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv5-sp-d16
 116              	fill_input_buffer:
 117              	.LFB147:
 351:Src/mp3_player.c **** 	unsigned int actually_read, how_much_to_read;
 118              		.loc 1 351 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 8
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 10B5     		push	{r4, lr}
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 4, -8
 126              		.cfi_offset 14, -4
 127 0002 82B0     		sub	sp, sp, #8
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 16
 354:Src/mp3_player.c **** 
 130              		.loc 1 354 0
 131 0004 FFF7FEFF 		bl	copy_leftover
 132              	.LVL5:
 356:Src/mp3_player.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 10


 133              		.loc 1 356 0
 134 0008 1448     		ldr	r0, .L17
 135 000a FFF7FEFF 		bl	xprintf
 136              	.LVL6:
 358:Src/mp3_player.c **** 
 137              		.loc 1 358 0
 138 000e 144B     		ldr	r3, .L17+4
 139 0010 1968     		ldr	r1, [r3]
 140 0012 40F62874 		movw	r4, #3880
 141 0016 641A     		subs	r4, r4, r1
 142              	.LVL7:
 361:Src/mp3_player.c **** 	currentFileBytesRead += actually_read;
 143              		.loc 1 361 0
 144 0018 01AB     		add	r3, sp, #4
 145 001a 2246     		mov	r2, r4
 146 001c 1148     		ldr	r0, .L17+8
 147 001e 0144     		add	r1, r1, r0
 148 0020 1148     		ldr	r0, .L17+12
 149 0022 FFF7FEFF 		bl	f_read
 150              	.LVL8:
 362:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("fill: copied from file to input_buffer\n");
 151              		.loc 1 362 0
 152 0026 114A     		ldr	r2, .L17+16
 153 0028 1368     		ldr	r3, [r2]
 154 002a 0199     		ldr	r1, [sp, #4]
 155 002c 0B44     		add	r3, r3, r1
 156 002e 1360     		str	r3, [r2]
 363:Src/mp3_player.c **** 
 157              		.loc 1 363 0
 158 0030 0F48     		ldr	r0, .L17+20
 159 0032 FFF7FEFF 		bl	xprintf
 160              	.LVL9:
 366:Src/mp3_player.c **** 	{
 161              		.loc 1 366 0
 162 0036 019B     		ldr	r3, [sp, #4]
 163 0038 9C42     		cmp	r4, r3
 164 003a 0BD1     		bne	.L15
 368:Src/mp3_player.c **** 		in_buf_offs = 0;
 165              		.loc 1 368 0
 166 003c 094A     		ldr	r2, .L17+8
 167 003e 0D4B     		ldr	r3, .L17+24
 168 0040 1A60     		str	r2, [r3]
 369:Src/mp3_player.c **** 		buffer_leftover = READ_BUFFER_SIZE;
 169              		.loc 1 369 0
 170 0042 0020     		movs	r0, #0
 171 0044 0C4B     		ldr	r3, .L17+28
 172 0046 1860     		str	r0, [r3]
 370:Src/mp3_player.c **** 		return 0;
 173              		.loc 1 370 0
 174 0048 40F62872 		movw	r2, #3880
 175 004c 044B     		ldr	r3, .L17+4
 176 004e 1A60     		str	r2, [r3]
 177              	.L13:
 374:Src/mp3_player.c **** 
 178              		.loc 1 374 0
 179 0050 02B0     		add	sp, sp, #8
 180              	.LCFI4:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 11


 181              		.cfi_remember_state
 182              		.cfi_def_cfa_offset 8
 183              		@ sp needed
 184 0052 10BD     		pop	{r4, pc}
 185              	.LVL10:
 186              	.L15:
 187              	.LCFI5:
 188              		.cfi_restore_state
 373:Src/mp3_player.c **** }
 189              		.loc 1 373 0
 190 0054 4FF0FF30 		mov	r0, #-1
 191 0058 FAE7     		b	.L13
 192              	.L18:
 193 005a 00BF     		.align	2
 194              	.L17:
 195 005c 00000000 		.word	.LC2
 196 0060 00000000 		.word	.LANCHOR0
 197 0064 00000000 		.word	input_buffer
 198 0068 00000000 		.word	input_file
 199 006c 00000000 		.word	.LANCHOR2
 200 0070 2C000000 		.word	.LC3
 201 0074 00000000 		.word	.LANCHOR1
 202 0078 00000000 		.word	.LANCHOR3
 203              		.cfi_endproc
 204              	.LFE147:
 206              		.section	.text.mp3_player_process_frame,"ax",%progbits
 207              		.align	1
 208              		.global	mp3_player_process_frame
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu fpv5-sp-d16
 214              	mp3_player_process_frame:
 215              	.LFB144:
 254:Src/mp3_player.c ****     if(DEBUG_ON) xprintf("process: starting\n");
 216              		.loc 1 254 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 32
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220 0000 30B5     		push	{r4, r5, lr}
 221              	.LCFI6:
 222              		.cfi_def_cfa_offset 12
 223              		.cfi_offset 4, -12
 224              		.cfi_offset 5, -8
 225              		.cfi_offset 14, -4
 226 0002 8BB0     		sub	sp, sp, #44
 227              	.LCFI7:
 228              		.cfi_def_cfa_offset 56
 255:Src/mp3_player.c **** 	MP3FrameInfo mp3FrameInfo;
 229              		.loc 1 255 0
 230 0004 5648     		ldr	r0, .L44
 231 0006 FFF7FEFF 		bl	xprintf
 232              	.LVL11:
 258:Src/mp3_player.c **** 
 233              		.loc 1 258 0
 234 000a 564B     		ldr	r3, .L44+4
 235 000c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 12


 236 000e 43B1     		cbz	r3, .L37
 237              	.L20:
 260:Src/mp3_player.c **** 	while(in_buf_offs < 0)
 238              		.loc 1 260 0
 239 0010 554B     		ldr	r3, .L44+8
 240 0012 1968     		ldr	r1, [r3]
 241 0014 534B     		ldr	r3, .L44+4
 242 0016 1868     		ldr	r0, [r3]
 243 0018 FFF7FEFF 		bl	MP3FindSyncWord
 244              	.LVL12:
 245 001c 534B     		ldr	r3, .L44+12
 246 001e 1860     		str	r0, [r3]
 261:Src/mp3_player.c **** 	{
 247              		.loc 1 261 0
 248 0020 0EE0     		b	.L22
 249              	.L37:
 258:Src/mp3_player.c **** 
 250              		.loc 1 258 0 discriminator 1
 251 0022 FFF7FEFF 		bl	fill_input_buffer
 252              	.LVL13:
 253 0026 0028     		cmp	r0, #0
 254 0028 F2D0     		beq	.L20
 258:Src/mp3_player.c **** 
 255              		.loc 1 258 0 is_stmt 0
 256 002a 4FF0FF34 		mov	r4, #-1
 257 002e 90E0     		b	.L19
 258              	.L23:
 271:Src/mp3_player.c **** 	}
 259              		.loc 1 271 0 is_stmt 1
 260 0030 4D4B     		ldr	r3, .L44+8
 261 0032 1968     		ldr	r1, [r3]
 262 0034 4B4B     		ldr	r3, .L44+4
 263 0036 1868     		ldr	r0, [r3]
 264 0038 FFF7FEFF 		bl	MP3FindSyncWord
 265              	.LVL14:
 266 003c 4B4B     		ldr	r3, .L44+12
 267 003e 1860     		str	r0, [r3]
 268              	.L22:
 261:Src/mp3_player.c **** 	{
 269              		.loc 1 261 0
 270 0040 4A4B     		ldr	r3, .L44+12
 271 0042 1B68     		ldr	r3, [r3]
 272 0044 002B     		cmp	r3, #0
 273 0046 0FDA     		bge	.L38
 263:Src/mp3_player.c **** 		// TODO check if this if is necessary at all
 274              		.loc 1 263 0
 275 0048 FFF7FEFF 		bl	fill_input_buffer
 276              	.LVL15:
 277 004c 0028     		cmp	r0, #0
 278 004e 7ED1     		bne	.L32
 265:Src/mp3_player.c **** 		{
 279              		.loc 1 265 0
 280 0050 454B     		ldr	r3, .L44+8
 281 0052 1B68     		ldr	r3, [r3]
 282 0054 002B     		cmp	r3, #0
 283 0056 EBDD     		ble	.L23
 267:Src/mp3_player.c **** 			current_ptr++;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 13


 284              		.loc 1 267 0
 285 0058 013B     		subs	r3, r3, #1
 286 005a 434A     		ldr	r2, .L44+8
 287 005c 1360     		str	r3, [r2]
 268:Src/mp3_player.c **** 		}
 288              		.loc 1 268 0
 289 005e 414A     		ldr	r2, .L44+4
 290 0060 1368     		ldr	r3, [r2]
 291 0062 0133     		adds	r3, r3, #1
 292 0064 1360     		str	r3, [r2]
 293 0066 E3E7     		b	.L23
 294              	.L38:
 273:Src/mp3_player.c **** 	buffer_leftover -= in_buf_offs;
 295              		.loc 1 273 0
 296 0068 3E4C     		ldr	r4, .L44+4
 297 006a 2268     		ldr	r2, [r4]
 298 006c 1A44     		add	r2, r2, r3
 299 006e 2260     		str	r2, [r4]
 274:Src/mp3_player.c **** 
 300              		.loc 1 274 0
 301 0070 3D49     		ldr	r1, .L44+8
 302 0072 0A68     		ldr	r2, [r1]
 303 0074 D31A     		subs	r3, r2, r3
 304 0076 0B60     		str	r3, [r1]
 276:Src/mp3_player.c **** 
 305              		.loc 1 276 0
 306 0078 3D48     		ldr	r0, .L44+16
 307 007a FFF7FEFF 		bl	xprintf
 308              	.LVL16:
 279:Src/mp3_player.c **** 	{
 309              		.loc 1 279 0
 310 007e 2268     		ldr	r2, [r4]
 311 0080 03A9     		add	r1, sp, #12
 312 0082 3C4B     		ldr	r3, .L44+20
 313 0084 1868     		ldr	r0, [r3]
 314 0086 FFF7FEFF 		bl	MP3GetNextFrameInfo
 315              	.LVL17:
 316 008a 10B9     		cbnz	r0, .L25
 279:Src/mp3_player.c **** 	{
 317              		.loc 1 279 0 is_stmt 0 discriminator 1
 318 008c 049B     		ldr	r3, [sp, #16]
 319 008e 022B     		cmp	r3, #2
 320 0090 0CD0     		beq	.L39
 321              	.L25:
 282:Src/mp3_player.c **** 		{
 322              		.loc 1 282 0 is_stmt 1
 323 0092 354B     		ldr	r3, .L44+8
 324 0094 1B68     		ldr	r3, [r3]
 325 0096 002B     		cmp	r3, #0
 326 0098 5EDD     		ble	.L33
 284:Src/mp3_player.c **** 			current_ptr++;
 327              		.loc 1 284 0
 328 009a 013B     		subs	r3, r3, #1
 329 009c 324A     		ldr	r2, .L44+8
 330 009e 1360     		str	r3, [r2]
 285:Src/mp3_player.c **** 		}
 331              		.loc 1 285 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 14


 332 00a0 304A     		ldr	r2, .L44+4
 333 00a2 1368     		ldr	r3, [r2]
 334 00a4 0133     		adds	r3, r3, #1
 335 00a6 1360     		str	r3, [r2]
 287:Src/mp3_player.c **** 	}
 336              		.loc 1 287 0
 337 00a8 0024     		movs	r4, #0
 338 00aa 52E0     		b	.L19
 339              	.L39:
 279:Src/mp3_player.c **** 	{
 340              		.loc 1 279 0 discriminator 2
 341 00ac 099C     		ldr	r4, [sp, #36]
 342 00ae 002C     		cmp	r4, #0
 343 00b0 EFD1     		bne	.L25
 291:Src/mp3_player.c **** 
 344              		.loc 1 291 0
 345 00b2 2D4B     		ldr	r3, .L44+8
 346 00b4 1A68     		ldr	r2, [r3]
 347 00b6 40F29373 		movw	r3, #1939
 348 00ba 9A42     		cmp	r2, r3
 349 00bc 15DD     		ble	.L40
 350              	.L27:
 294:Src/mp3_player.c **** 	{
 351              		.loc 1 294 0
 352 00be 2E4B     		ldr	r3, .L44+24
 353 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 354 00c2 012B     		cmp	r3, #1
 355 00c4 18D0     		beq	.L41
 356              	.L28:
 301:Src/mp3_player.c **** 	{
 357              		.loc 1 301 0
 358 00c6 2C4B     		ldr	r3, .L44+24
 359 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 360 00ca 022B     		cmp	r3, #2
 361 00cc 25D0     		beq	.L42
 362              	.L29:
 309:Src/mp3_player.c **** 	{
 363              		.loc 1 309 0
 364 00ce 2B4B     		ldr	r3, .L44+28
 365 00d0 1D68     		ldr	r5, [r3]
 366 00d2 002D     		cmp	r5, #0
 367 00d4 42D0     		beq	.L35
 311:Src/mp3_player.c **** 		{
 368              		.loc 1 311 0
 369 00d6 B5F1FF3F 		cmp	r5, #-1
 370 00da 2FD0     		beq	.L43
 316:Src/mp3_player.c **** 		{
 371              		.loc 1 316 0
 372 00dc 284B     		ldr	r3, .L44+32
 373 00de 9D42     		cmp	r5, r3
 374 00e0 37D1     		bne	.L19
 318:Src/mp3_player.c **** 		}
 375              		.loc 1 318 0
 376 00e2 2848     		ldr	r0, .L44+36
 377 00e4 FFF7FEFF 		bl	xprintf
 378              	.LVL18:
 379 00e8 33E0     		b	.L19
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 15


 380              	.L40:
 291:Src/mp3_player.c **** 
 381              		.loc 1 291 0 discriminator 1
 382 00ea FFF7FEFF 		bl	fill_input_buffer
 383              	.LVL19:
 384 00ee 0028     		cmp	r0, #0
 385 00f0 E5D0     		beq	.L27
 291:Src/mp3_player.c **** 
 386              		.loc 1 291 0 is_stmt 0
 387 00f2 4FF0FF34 		mov	r4, #-1
 388 00f6 2CE0     		b	.L19
 389              	.L41:
 296:Src/mp3_player.c **** 		decode_result = MP3Decode(hMP3Decoder, &current_ptr, &buffer_leftover, output_buffer, 0);
 390              		.loc 1 296 0 is_stmt 1 discriminator 1
 391 00f8 2348     		ldr	r0, .L44+40
 392 00fa FFF7FEFF 		bl	xprintf
 393              	.LVL20:
 297:Src/mp3_player.c **** 		out_buf_offs = BUFFER_OFFSET_NONE;
 394              		.loc 1 297 0 discriminator 1
 395 00fe 1D4B     		ldr	r3, .L44+20
 396 0100 1868     		ldr	r0, [r3]
 397 0102 0025     		movs	r5, #0
 398 0104 0095     		str	r5, [sp]
 399 0106 214B     		ldr	r3, .L44+44
 400 0108 174A     		ldr	r2, .L44+8
 401 010a 1649     		ldr	r1, .L44+4
 402 010c FFF7FEFF 		bl	MP3Decode
 403              	.LVL21:
 404 0110 1A4B     		ldr	r3, .L44+28
 405 0112 1860     		str	r0, [r3]
 298:Src/mp3_player.c **** 	}
 406              		.loc 1 298 0 discriminator 1
 407 0114 184B     		ldr	r3, .L44+24
 408 0116 1D70     		strb	r5, [r3]
 409 0118 D5E7     		b	.L28
 410              	.L42:
 303:Src/mp3_player.c **** 		decode_result = MP3Decode(hMP3Decoder, &current_ptr, &buffer_leftover, &output_buffer[DECODED_MP3
 411              		.loc 1 303 0 discriminator 1
 412 011a 1D48     		ldr	r0, .L44+48
 413 011c FFF7FEFF 		bl	xprintf
 414              	.LVL22:
 304:Src/mp3_player.c **** 		out_buf_offs = BUFFER_OFFSET_NONE;
 415              		.loc 1 304 0 discriminator 1
 416 0120 144B     		ldr	r3, .L44+20
 417 0122 1868     		ldr	r0, [r3]
 418 0124 0025     		movs	r5, #0
 419 0126 0095     		str	r5, [sp]
 420 0128 1A4B     		ldr	r3, .L44+52
 421 012a 0F4A     		ldr	r2, .L44+8
 422 012c 0D49     		ldr	r1, .L44+4
 423 012e FFF7FEFF 		bl	MP3Decode
 424              	.LVL23:
 425 0132 124B     		ldr	r3, .L44+28
 426 0134 1860     		str	r0, [r3]
 305:Src/mp3_player.c **** 	}
 427              		.loc 1 305 0 discriminator 1
 428 0136 104B     		ldr	r3, .L44+24
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 16


 429 0138 1D70     		strb	r5, [r3]
 430 013a C8E7     		b	.L29
 431              	.L43:
 313:Src/mp3_player.c **** 			if(fill_input_buffer() != 0) return EOF;
 432              		.loc 1 313 0
 433 013c 0022     		movs	r2, #0
 434 013e 0A4B     		ldr	r3, .L44+8
 435 0140 1A60     		str	r2, [r3]
 314:Src/mp3_player.c **** 		}
 436              		.loc 1 314 0
 437 0142 FFF7FEFF 		bl	fill_input_buffer
 438              	.LVL24:
 439 0146 0446     		mov	r4, r0
 440 0148 18B1     		cbz	r0, .L19
 441 014a 2C46     		mov	r4, r5
 442 014c 01E0     		b	.L19
 443              	.L32:
 263:Src/mp3_player.c **** 		// TODO check if this if is necessary at all
 444              		.loc 1 263 0
 445 014e 4FF0FF34 		mov	r4, #-1
 446              	.L19:
 323:Src/mp3_player.c **** 
 447              		.loc 1 323 0
 448 0152 2046     		mov	r0, r4
 449 0154 0BB0     		add	sp, sp, #44
 450              	.LCFI8:
 451              		.cfi_remember_state
 452              		.cfi_def_cfa_offset 12
 453              		@ sp needed
 454 0156 30BD     		pop	{r4, r5, pc}
 455              	.L33:
 456              	.LCFI9:
 457              		.cfi_restore_state
 287:Src/mp3_player.c **** 	}
 458              		.loc 1 287 0
 459 0158 0024     		movs	r4, #0
 460 015a FAE7     		b	.L19
 461              	.L35:
 322:Src/mp3_player.c **** }
 462              		.loc 1 322 0
 463 015c 2C46     		mov	r4, r5
 464 015e F8E7     		b	.L19
 465              	.L45:
 466              		.align	2
 467              	.L44:
 468 0160 00000000 		.word	.LC4
 469 0164 00000000 		.word	.LANCHOR1
 470 0168 00000000 		.word	.LANCHOR0
 471 016c 00000000 		.word	.LANCHOR3
 472 0170 14000000 		.word	.LC5
 473 0174 00000000 		.word	.LANCHOR4
 474 0178 00000000 		.word	.LANCHOR5
 475 017c 00000000 		.word	.LANCHOR6
 476 0180 F1D8FFFF 		.word	-9999
 477 0184 60000000 		.word	.LC8
 478 0188 30000000 		.word	.LC6
 479 018c 00000000 		.word	output_buffer
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 17


 480 0190 48000000 		.word	.LC7
 481 0194 00120000 		.word	output_buffer+4608
 482              		.cfi_endproc
 483              	.LFE144:
 485              		.global	__aeabi_i2d
 486              		.global	__aeabi_ddiv
 487              		.section	.text.mp3_player_play,"ax",%progbits
 488              		.align	1
 489              		.global	mp3_player_play
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 493              		.fpu fpv5-sp-d16
 495              	mp3_player_play:
 496              	.LFB143:
 207:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("play: initializing decoder\n");
 497              		.loc 1 207 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 08B5     		push	{r3, lr}
 502              	.LCFI10:
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 3, -8
 505              		.cfi_offset 14, -4
 208:Src/mp3_player.c **** 	hMP3Decoder = MP3InitDecoder();
 506              		.loc 1 208 0
 507 0002 3448     		ldr	r0, .L65
 508 0004 FFF7FEFF 		bl	xprintf
 509              	.LVL25:
 209:Src/mp3_player.c **** 
 510              		.loc 1 209 0
 511 0008 FFF7FEFF 		bl	MP3InitDecoder
 512              	.LVL26:
 513 000c 324B     		ldr	r3, .L65+4
 514 000e 1860     		str	r0, [r3]
 211:Src/mp3_player.c **** 	if(mp3_player_process_frame() == 0) {
 515              		.loc 1 211 0
 516 0010 3248     		ldr	r0, .L65+8
 517 0012 FFF7FEFF 		bl	xprintf
 518              	.LVL27:
 212:Src/mp3_player.c **** 		state = PLAY;
 519              		.loc 1 212 0
 520 0016 FFF7FEFF 		bl	mp3_player_process_frame
 521              	.LVL28:
 522 001a 78B1     		cbz	r0, .L59
 242:Src/mp3_player.c **** 	}
 523              		.loc 1 242 0
 524 001c 0322     		movs	r2, #3
 525 001e 304B     		ldr	r3, .L65+12
 526 0020 1A70     		strb	r2, [r3]
 527              	.L57:
 245:Src/mp3_player.c **** 	current_ptr = NULL;
 528              		.loc 1 245 0
 529 0022 0023     		movs	r3, #0
 530 0024 2F4A     		ldr	r2, .L65+16
 531 0026 1360     		str	r3, [r2]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 18


 246:Src/mp3_player.c **** 	MP3FreeDecoder(hMP3Decoder);
 532              		.loc 1 246 0
 533 0028 2F4A     		ldr	r2, .L65+20
 534 002a 1360     		str	r3, [r2]
 247:Src/mp3_player.c **** 
 535              		.loc 1 247 0
 536 002c 2A4B     		ldr	r3, .L65+4
 537 002e 1868     		ldr	r0, [r3]
 538 0030 FFF7FEFF 		bl	MP3FreeDecoder
 539              	.LVL29:
 249:Src/mp3_player.c **** }
 540              		.loc 1 249 0
 541 0034 2D48     		ldr	r0, .L65+24
 542 0036 FFF7FEFF 		bl	xprintf
 543              	.LVL30:
 544 003a 08BD     		pop	{r3, pc}
 545              	.L59:
 213:Src/mp3_player.c **** 		BSP_AUDIO_OUT_Play((uint16_t*)&output_buffer[0], AUDIO_OUT_BUFFER_SIZE * 2);
 546              		.loc 1 213 0
 547 003c 0022     		movs	r2, #0
 548 003e 284B     		ldr	r3, .L65+12
 549 0040 1A70     		strb	r2, [r3]
 214:Src/mp3_player.c **** 		while(1) {
 550              		.loc 1 214 0
 551 0042 4FF41051 		mov	r1, #9216
 552 0046 2A48     		ldr	r0, .L65+28
 553 0048 FFF7FEFF 		bl	BSP_AUDIO_OUT_Play
 554              	.LVL31:
 555 004c 18E0     		b	.L48
 556              	.LVL32:
 557              	.L63:
 558              	.LBB2:
 220:Src/mp3_player.c **** 					xprintf("Error while pausing stream\n");
 559              		.loc 1 220 0
 560 004e FFF7FEFF 		bl	BSP_AUDIO_OUT_Pause
 561              	.LVL33:
 562 0052 18B9     		cbnz	r0, .L60
 224:Src/mp3_player.c ****             } else if(has_been_paused && state == PLAY) {
 563              		.loc 1 224 0
 564 0054 0122     		movs	r2, #1
 565 0056 274B     		ldr	r3, .L65+32
 566 0058 1A60     		str	r2, [r3]
 567 005a 11E0     		b	.L48
 568              	.L60:
 221:Src/mp3_player.c **** 					return;
 569              		.loc 1 221 0
 570 005c 2648     		ldr	r0, .L65+36
 571 005e FFF7FEFF 		bl	xprintf
 572              	.LVL34:
 222:Src/mp3_player.c **** 				}
 573              		.loc 1 222 0
 574 0062 08BD     		pop	{r3, pc}
 575              	.LVL35:
 576              	.L64:
 226:Src/mp3_player.c **** 					xprintf("Error while pausing stream\n");
 577              		.loc 1 226 0
 578 0064 FFF7FEFF 		bl	BSP_AUDIO_OUT_Resume
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 19


 579              	.LVL36:
 580 0068 18B9     		cbnz	r0, .L61
 230:Src/mp3_player.c **** 			}  else if (has_been_paused && state == PAUSE)
 581              		.loc 1 230 0
 582 006a 0022     		movs	r2, #0
 583 006c 214B     		ldr	r3, .L65+32
 584 006e 1A60     		str	r2, [r3]
 585 0070 06E0     		b	.L48
 586              	.L61:
 227:Src/mp3_player.c **** 					return;
 587              		.loc 1 227 0
 588 0072 2148     		ldr	r0, .L65+36
 589 0074 FFF7FEFF 		bl	xprintf
 590              	.LVL37:
 228:Src/mp3_player.c **** 				}
 591              		.loc 1 228 0
 592 0078 08BD     		pop	{r3, pc}
 593              	.LVL38:
 594              	.L56:
 233:Src/mp3_player.c ****                 break;
 595              		.loc 1 233 0
 596 007a 194B     		ldr	r3, .L65+12
 597 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 598 007e 13BB     		cbnz	r3, .L62
 599              	.LVL39:
 600              	.L48:
 216:Src/mp3_player.c **** 			if (newState != EMPTY)
 601              		.loc 1 216 0
 602 0080 1E4B     		ldr	r3, .L65+40
 603 0082 1868     		ldr	r0, [r3]
 604 0084 FFF7FEFF 		bl	__aeabi_i2d
 605              	.LVL40:
 606 0088 0246     		mov	r2, r0
 607 008a 0B46     		mov	r3, r1
 608 008c FFF7FEFF 		bl	__aeabi_ddiv
 609              	.LVL41:
 610 0090 41EC100B 		vmov	d0, r0, r1
 611 0094 FFF7FEFF 		bl	check_touchscreen
 612              	.LVL42:
 217:Src/mp3_player.c **** 				state = newState;
 613              		.loc 1 217 0
 614 0098 0628     		cmp	r0, #6
 615 009a 01D0     		beq	.L49
 218:Src/mp3_player.c ****             if (!has_been_paused && state == PAUSE) {
 616              		.loc 1 218 0
 617 009c 104B     		ldr	r3, .L65+12
 618 009e 1870     		strb	r0, [r3]
 619              	.L49:
 219:Src/mp3_player.c ****                 if(BSP_AUDIO_OUT_Pause() != AUDIO_OK) {
 620              		.loc 1 219 0
 621 00a0 144B     		ldr	r3, .L65+32
 622 00a2 1B68     		ldr	r3, [r3]
 623 00a4 1BB9     		cbnz	r3, .L50
 219:Src/mp3_player.c ****                 if(BSP_AUDIO_OUT_Pause() != AUDIO_OK) {
 624              		.loc 1 219 0 is_stmt 0 discriminator 1
 625 00a6 0E4A     		ldr	r2, .L65+12
 626 00a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 20


 627 00aa 012A     		cmp	r2, #1
 628 00ac CFD0     		beq	.L63
 629              	.L50:
 225:Src/mp3_player.c **** 				if(BSP_AUDIO_OUT_Resume() != AUDIO_OK) {
 630              		.loc 1 225 0 is_stmt 1
 631 00ae 1BB1     		cbz	r3, .L54
 225:Src/mp3_player.c **** 				if(BSP_AUDIO_OUT_Resume() != AUDIO_OK) {
 632              		.loc 1 225 0 is_stmt 0 discriminator 1
 633 00b0 0B4A     		ldr	r2, .L65+12
 634 00b2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 635 00b4 002A     		cmp	r2, #0
 636 00b6 D5D0     		beq	.L64
 637              	.L54:
 231:Src/mp3_player.c **** 				continue;
 638              		.loc 1 231 0 is_stmt 1
 639 00b8 002B     		cmp	r3, #0
 640 00ba DED0     		beq	.L56
 231:Src/mp3_player.c **** 				continue;
 641              		.loc 1 231 0 is_stmt 0 discriminator 1
 642 00bc 084B     		ldr	r3, .L65+12
 643 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 644 00c0 012B     		cmp	r3, #1
 645 00c2 DAD1     		bne	.L56
 646 00c4 DCE7     		b	.L48
 647              	.L62:
 648              	.LBE2:
 237:Src/mp3_player.c **** 		out_buf_offs = BUFFER_OFFSET_NONE;
 649              		.loc 1 237 0 is_stmt 1
 650 00c6 0220     		movs	r0, #2
 651              	.LVL43:
 652 00c8 FFF7FEFF 		bl	BSP_AUDIO_OUT_Stop
 653              	.LVL44:
 238:Src/mp3_player.c **** 	}
 654              		.loc 1 238 0
 655 00cc 0022     		movs	r2, #0
 656 00ce 0C4B     		ldr	r3, .L65+44
 657 00d0 1A70     		strb	r2, [r3]
 658 00d2 A6E7     		b	.L57
 659              	.L66:
 660              		.align	2
 661              	.L65:
 662 00d4 00000000 		.word	.LC9
 663 00d8 00000000 		.word	.LANCHOR4
 664 00dc 1C000000 		.word	.LC10
 665 00e0 00000000 		.word	state
 666 00e4 00000000 		.word	.LANCHOR0
 667 00e8 00000000 		.word	.LANCHOR1
 668 00ec 5C000000 		.word	.LC12
 669 00f0 00000000 		.word	output_buffer
 670 00f4 00000000 		.word	.LANCHOR8
 671 00f8 40000000 		.word	.LC11
 672 00fc 00000000 		.word	.LANCHOR7
 673 0100 00000000 		.word	.LANCHOR5
 674              		.cfi_endproc
 675              	.LFE143:
 677              		.section	.text.BSP_AUDIO_OUT_TransferComplete_CallBack,"ax",%progbits
 678              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 21


 679              		.global	BSP_AUDIO_OUT_TransferComplete_CallBack
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 683              		.fpu fpv5-sp-d16
 685              	BSP_AUDIO_OUT_TransferComplete_CallBack:
 686              	.LFB145:
 327:Src/mp3_player.c ****     out_buf_offs = BUFFER_OFFSET_FULL;
 687              		.loc 1 327 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691 0000 08B5     		push	{r3, lr}
 692              	.LCFI11:
 693              		.cfi_def_cfa_offset 8
 694              		.cfi_offset 3, -8
 695              		.cfi_offset 14, -4
 328:Src/mp3_player.c **** 
 696              		.loc 1 328 0
 697 0002 0222     		movs	r2, #2
 698 0004 064B     		ldr	r3, .L71
 699 0006 1A70     		strb	r2, [r3]
 330:Src/mp3_player.c **** 	{
 700              		.loc 1 330 0
 701 0008 FFF7FEFF 		bl	mp3_player_process_frame
 702              	.LVL45:
 703 000c 00B9     		cbnz	r0, .L70
 704              	.L67:
 705 000e 08BD     		pop	{r3, pc}
 706              	.L70:
 332:Src/mp3_player.c **** 		state = NEXT;
 707              		.loc 1 332 0
 708 0010 0220     		movs	r0, #2
 709 0012 FFF7FEFF 		bl	BSP_AUDIO_OUT_Stop
 710              	.LVL46:
 333:Src/mp3_player.c **** 	}
 711              		.loc 1 333 0
 712 0016 0322     		movs	r2, #3
 713 0018 024B     		ldr	r3, .L71+4
 714 001a 1A70     		strb	r2, [r3]
 335:Src/mp3_player.c **** 
 715              		.loc 1 335 0
 716 001c F7E7     		b	.L67
 717              	.L72:
 718 001e 00BF     		.align	2
 719              	.L71:
 720 0020 00000000 		.word	.LANCHOR5
 721 0024 00000000 		.word	state
 722              		.cfi_endproc
 723              	.LFE145:
 725              		.section	.text.BSP_AUDIO_OUT_HalfTransfer_CallBack,"ax",%progbits
 726              		.align	1
 727              		.global	BSP_AUDIO_OUT_HalfTransfer_CallBack
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 731              		.fpu fpv5-sp-d16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 22


 733              	BSP_AUDIO_OUT_HalfTransfer_CallBack:
 734              	.LFB146:
 339:Src/mp3_player.c ****     out_buf_offs = BUFFER_OFFSET_HALF;
 735              		.loc 1 339 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739 0000 08B5     		push	{r3, lr}
 740              	.LCFI12:
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 3, -8
 743              		.cfi_offset 14, -4
 340:Src/mp3_player.c **** 
 744              		.loc 1 340 0
 745 0002 0122     		movs	r2, #1
 746 0004 064B     		ldr	r3, .L77
 747 0006 1A70     		strb	r2, [r3]
 342:Src/mp3_player.c **** 	{
 748              		.loc 1 342 0
 749 0008 FFF7FEFF 		bl	mp3_player_process_frame
 750              	.LVL47:
 751 000c 00B9     		cbnz	r0, .L76
 752              	.L73:
 753 000e 08BD     		pop	{r3, pc}
 754              	.L76:
 344:Src/mp3_player.c **** 		state = NEXT;
 755              		.loc 1 344 0
 756 0010 0220     		movs	r0, #2
 757 0012 FFF7FEFF 		bl	BSP_AUDIO_OUT_Stop
 758              	.LVL48:
 345:Src/mp3_player.c **** 	}
 759              		.loc 1 345 0
 760 0016 0322     		movs	r2, #3
 761 0018 024B     		ldr	r3, .L77+4
 762 001a 1A70     		strb	r2, [r3]
 347:Src/mp3_player.c **** 
 763              		.loc 1 347 0
 764 001c F7E7     		b	.L73
 765              	.L78:
 766 001e 00BF     		.align	2
 767              	.L77:
 768 0020 00000000 		.word	.LANCHOR5
 769 0024 00000000 		.word	state
 770              		.cfi_endproc
 771              	.LFE146:
 773              		.section	.text.reset_player_state,"ax",%progbits
 774              		.align	1
 775              		.global	reset_player_state
 776              		.syntax unified
 777              		.thumb
 778              		.thumb_func
 779              		.fpu fpv5-sp-d16
 781              	reset_player_state:
 782              	.LFB149:
 382:Src/mp3_player.c **** 	}
 383:Src/mp3_player.c **** }
 384:Src/mp3_player.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 23


 385:Src/mp3_player.c **** // reset all the used data structures
 386:Src/mp3_player.c **** void reset_player_state() 
 387:Src/mp3_player.c **** {
 783              		.loc 1 387 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              		@ link register save eliminated.
 388:Src/mp3_player.c **** 	buffer_leftover = 0;
 788              		.loc 1 388 0
 789 0000 0023     		movs	r3, #0
 790 0002 034A     		ldr	r2, .L80
 791 0004 1360     		str	r3, [r2]
 389:Src/mp3_player.c ****     current_ptr = NULL;
 792              		.loc 1 389 0
 793 0006 034A     		ldr	r2, .L80+4
 794 0008 1360     		str	r3, [r2]
 390:Src/mp3_player.c ****     out_buf_offs = BUFFER_OFFSET_NONE;
 795              		.loc 1 390 0
 796 000a 034A     		ldr	r2, .L80+8
 797 000c 1370     		strb	r3, [r2]
 798 000e 7047     		bx	lr
 799              	.L81:
 800              		.align	2
 801              	.L80:
 802 0010 00000000 		.word	.LANCHOR0
 803 0014 00000000 		.word	.LANCHOR1
 804 0018 00000000 		.word	.LANCHOR5
 805              		.cfi_endproc
 806              	.LFE149:
 808              		.section	.text.mp3_player_fsm,"ax",%progbits
 809              		.align	1
 810              		.global	mp3_player_fsm
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 814              		.fpu fpv5-sp-d16
 816              	mp3_player_fsm:
 817              	.LFB141:
  69:Src/mp3_player.c ****     BSP_init();
 818              		.loc 1 69 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 336
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              	.LVL49:
 823 0000 70B5     		push	{r4, r5, r6, lr}
 824              	.LCFI13:
 825              		.cfi_def_cfa_offset 16
 826              		.cfi_offset 4, -16
 827              		.cfi_offset 5, -12
 828              		.cfi_offset 6, -8
 829              		.cfi_offset 14, -4
 830 0002 D4B0     		sub	sp, sp, #336
 831              	.LCFI14:
 832              		.cfi_def_cfa_offset 352
 833 0004 0646     		mov	r6, r0
  70:Src/mp3_player.c ****     state = NEXT;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 24


 834              		.loc 1 70 0
 835 0006 FFF7FEFF 		bl	BSP_init
 836              	.LVL50:
  71:Src/mp3_player.c **** 
 837              		.loc 1 71 0
 838 000a 0322     		movs	r2, #3
 839 000c 8F4B     		ldr	r3, .L121
 840 000e 1A70     		strb	r2, [r3]
  73:Src/mp3_player.c **** 
 841              		.loc 1 73 0
 842 0010 FFF7FEFF 		bl	touchscreen_loop_init
 843              	.LVL51:
  75:Src/mp3_player.c **** 
 844              		.loc 1 75 0
 845 0014 8E4D     		ldr	r5, .L121+4
 846 0016 8F4C     		ldr	r4, .L121+8
 847 0018 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 848 001a 2860     		str	r0, [r5]	@ unaligned
 849 001c 6960     		str	r1, [r5, #4]	@ unaligned
 850 001e AA60     		str	r2, [r5, #8]	@ unaligned
 851 0020 EB60     		str	r3, [r5, #12]	@ unaligned
 852 0022 2388     		ldrh	r3, [r4]	@ unaligned
 853 0024 2B82     		strh	r3, [r5, #16]	@ unaligned
  80:Src/mp3_player.c ****         if (DEBUG_ON) xprintf("Error opening the directory\n");
 854              		.loc 1 80 0
 855 0026 3146     		mov	r1, r6
 856 0028 47A8     		add	r0, sp, #284
 857 002a FFF7FEFF 		bl	f_opendir
 858              	.LVL52:
 859 002e 98B9     		cbnz	r0, .L112
 860              	.L87:
  86:Src/mp3_player.c ****             xprintf("Error reading from directory\n");
 861              		.loc 1 86 0
 862 0030 01A9     		add	r1, sp, #4
 863 0032 47A8     		add	r0, sp, #284
 864 0034 FFF7FEFF 		bl	f_readdir
 865              	.LVL53:
 866 0038 90B9     		cbnz	r0, .L113
  90:Src/mp3_player.c ****             break;
 867              		.loc 1 90 0
 868 003a 9DF81A30 		ldrb	r3, [sp, #26]	@ zero_extendqisi2
 869 003e A3B1     		cbz	r3, .L86
  92:Src/mp3_player.c ****             mp3FilesCounter++;
 870              		.loc 1 92 0
 871 0040 8549     		ldr	r1, .L121+12
 872 0042 0DF11A00 		add	r0, sp, #26
 873 0046 FFF7FEFF 		bl	strstr
 874              	.LVL54:
 875 004a 0028     		cmp	r0, #0
 876 004c F0D0     		beq	.L87
  93:Src/mp3_player.c ****     }
 877              		.loc 1 93 0
 878 004e 834A     		ldr	r2, .L121+16
 879 0050 1368     		ldr	r3, [r2]
 880 0052 0133     		adds	r3, r3, #1
 881 0054 1360     		str	r3, [r2]
 882 0056 EBE7     		b	.L87
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 25


 883              	.L112:
  81:Src/mp3_player.c ****         return;
 884              		.loc 1 81 0 discriminator 1
 885 0058 8148     		ldr	r0, .L121+20
 886 005a FFF7FEFF 		bl	xprintf
 887              	.LVL55:
  82:Src/mp3_player.c ****     }
 888              		.loc 1 82 0 discriminator 1
 889 005e 02E0     		b	.L82
 890              	.L113:
  87:Src/mp3_player.c ****             return;
 891              		.loc 1 87 0
 892 0060 8048     		ldr	r0, .L121+24
 893 0062 FFF7FEFF 		bl	xprintf
 894              	.LVL56:
 895              	.L82:
 190:Src/mp3_player.c **** 
 896              		.loc 1 190 0
 897 0066 54B0     		add	sp, sp, #336
 898              	.LCFI15:
 899              		.cfi_remember_state
 900              		.cfi_def_cfa_offset 16
 901              		@ sp needed
 902 0068 70BD     		pop	{r4, r5, r6, pc}
 903              	.LVL57:
 904              	.L86:
 905              	.LCFI16:
 906              		.cfi_restore_state
  96:Src/mp3_player.c **** 
 907              		.loc 1 96 0
 908 006a 47A8     		add	r0, sp, #284
 909 006c FFF7FEFF 		bl	f_closedir
 910              	.LVL58:
  99:Src/mp3_player.c **** 
 911              		.loc 1 99 0
 912 0070 7A4B     		ldr	r3, .L121+16
 913 0072 1868     		ldr	r0, [r3]
 914 0074 8000     		lsls	r0, r0, #2
 915 0076 FFF7FEFF 		bl	malloc
 916              	.LVL59:
 917 007a 7B4B     		ldr	r3, .L121+28
 918 007c 1860     		str	r0, [r3]
 101:Src/mp3_player.c ****         if (DEBUG_ON) xprintf("Error allocating memory\n");
 919              		.loc 1 101 0
 920 007e 78B3     		cbz	r0, .L114
 106:Src/mp3_player.c ****         if (DEBUG_ON) xprintf("Error opening the directory\n");
 921              		.loc 1 106 0
 922 0080 3146     		mov	r1, r6
 923 0082 47A8     		add	r0, sp, #284
 924 0084 FFF7FEFF 		bl	f_opendir
 925              	.LVL60:
 926 0088 70BB     		cbnz	r0, .L115
 927 008a 0024     		movs	r4, #0
 928              	.LVL61:
 929              	.L92:
 112:Src/mp3_player.c ****             xprintf("Error reading from directory\n");
 930              		.loc 1 112 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 26


 931 008c 01A9     		add	r1, sp, #4
 932 008e 47A8     		add	r0, sp, #284
 933 0090 FFF7FEFF 		bl	f_readdir
 934              	.LVL62:
 935 0094 60BB     		cbnz	r0, .L116
 116:Src/mp3_player.c ****             break;
 936              		.loc 1 116 0
 937 0096 9DF81A30 		ldrb	r3, [sp, #26]	@ zero_extendqisi2
 938 009a 002B     		cmp	r3, #0
 939 009c 48D0     		beq	.L91
 118:Src/mp3_player.c ****             paths[i] = malloc((strlen(info.fname) + 1) * sizeof(char));
 940              		.loc 1 118 0
 941 009e 6E49     		ldr	r1, .L121+12
 942 00a0 0DF11A00 		add	r0, sp, #26
 943 00a4 FFF7FEFF 		bl	strstr
 944              	.LVL63:
 945 00a8 0028     		cmp	r0, #0
 946 00aa EFD0     		beq	.L92
 119:Src/mp3_player.c **** 			strcpy(paths[i], info.fname);
 947              		.loc 1 119 0
 948 00ac 6E4D     		ldr	r5, .L121+28
 949 00ae 2E68     		ldr	r6, [r5]
 950 00b0 0DF11A00 		add	r0, sp, #26
 951 00b4 FFF7FEFF 		bl	strlen
 952              	.LVL64:
 953 00b8 0130     		adds	r0, r0, #1
 954 00ba FFF7FEFF 		bl	malloc
 955              	.LVL65:
 956 00be 46F82400 		str	r0, [r6, r4, lsl #2]
 120:Src/mp3_player.c **** 			if(DEBUG_ON) xprintf("%s\n", paths[i]);
 957              		.loc 1 120 0
 958 00c2 2B68     		ldr	r3, [r5]
 959 00c4 0DF11A01 		add	r1, sp, #26
 960 00c8 53F82400 		ldr	r0, [r3, r4, lsl #2]
 961 00cc FFF7FEFF 		bl	strcpy
 962              	.LVL66:
 121:Src/mp3_player.c ****             i++;
 963              		.loc 1 121 0
 964 00d0 2B68     		ldr	r3, [r5]
 965 00d2 53F82410 		ldr	r1, [r3, r4, lsl #2]
 966 00d6 6548     		ldr	r0, .L121+32
 967 00d8 FFF7FEFF 		bl	xprintf
 968              	.LVL67:
 122:Src/mp3_player.c ****         }
 969              		.loc 1 122 0
 970 00dc 0134     		adds	r4, r4, #1
 971              	.LVL68:
 972 00de D5E7     		b	.L92
 973              	.LVL69:
 974              	.L114:
 102:Src/mp3_player.c ****         return;
 975              		.loc 1 102 0 discriminator 1
 976 00e0 6348     		ldr	r0, .L121+36
 977 00e2 FFF7FEFF 		bl	xprintf
 978              	.LVL70:
 103:Src/mp3_player.c ****     }
 979              		.loc 1 103 0 discriminator 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 27


 980 00e6 BEE7     		b	.L82
 981              	.L115:
 107:Src/mp3_player.c ****         return;
 982              		.loc 1 107 0 discriminator 1
 983 00e8 5D48     		ldr	r0, .L121+20
 984 00ea FFF7FEFF 		bl	xprintf
 985              	.LVL71:
 108:Src/mp3_player.c ****     }
 986              		.loc 1 108 0 discriminator 1
 987 00ee BAE7     		b	.L82
 988              	.LVL72:
 989              	.L116:
 113:Src/mp3_player.c ****             return;
 990              		.loc 1 113 0
 991 00f0 5C48     		ldr	r0, .L121+24
 992 00f2 FFF7FEFF 		bl	xprintf
 993              	.LVL73:
 114:Src/mp3_player.c ****         }
 994              		.loc 1 114 0
 995 00f6 B6E7     		b	.L82
 996              	.LVL74:
 997              	.L94:
 131:Src/mp3_player.c **** 				currentFileBytes = info.fsize;
 998              		.loc 1 131 0 discriminator 1
 999 00f8 5E48     		ldr	r0, .L121+40
 1000 00fa FFF7FEFF 		bl	xprintf
 1001              	.LVL75:
 132:Src/mp3_player.c **** 				mp3_player_play();
 1002              		.loc 1 132 0 discriminator 1
 1003 00fe 019A     		ldr	r2, [sp, #4]
 1004 0100 5D4B     		ldr	r3, .L121+44
 1005 0102 1A60     		str	r2, [r3]
 133:Src/mp3_player.c ****                 f_close(&input_file);
 1006              		.loc 1 133 0 discriminator 1
 1007 0104 FFF7FEFF 		bl	mp3_player_play
 1008              	.LVL76:
 134:Src/mp3_player.c **** 				currentFileBytesRead = 0;
 1009              		.loc 1 134 0 discriminator 1
 1010 0108 5C48     		ldr	r0, .L121+48
 1011 010a FFF7FEFF 		bl	f_close
 1012              	.LVL77:
 135:Src/mp3_player.c **** 				break;
 1013              		.loc 1 135 0 discriminator 1
 1014 010e 0022     		movs	r2, #0
 1015 0110 5B4B     		ldr	r3, .L121+52
 1016 0112 1A60     		str	r2, [r3]
 1017              	.L96:
 186:Src/mp3_player.c **** 		refresh_screen(gui_info_text);
 1018              		.loc 1 186 0
 1019 0114 5B4B     		ldr	r3, .L121+56
 1020 0116 1A68     		ldr	r2, [r3]
 1021 0118 534B     		ldr	r3, .L121+28
 1022 011a 1B68     		ldr	r3, [r3]
 1023 011c 4C4C     		ldr	r4, .L121+4
 1024 011e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 1025 0122 5949     		ldr	r1, .L121+60
 1026 0124 2046     		mov	r0, r4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 28


 1027 0126 FFF7FEFF 		bl	sprintf
 1028              	.LVL78:
 187:Src/mp3_player.c **** 	}
 1029              		.loc 1 187 0
 1030 012a 2046     		mov	r0, r4
 1031 012c FFF7FEFF 		bl	refresh_screen
 1032              	.LVL79:
 1033              	.L91:
 128:Src/mp3_player.c **** 		{
 1034              		.loc 1 128 0
 1035 0130 464B     		ldr	r3, .L121
 1036 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1037 0134 052B     		cmp	r3, #5
 1038 0136 00F28580 		bhi	.L93
 1039 013a 01A2     		adr	r2, .L95
 1040 013c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1041              		.p2align 2
 1042              	.L95:
 1043 0140 F9000000 		.word	.L94+1
 1044 0144 15010000 		.word	.L96+1
 1045 0148 E1010000 		.word	.L97+1
 1046 014c 59010000 		.word	.L98+1
 1047 0150 9F010000 		.word	.L99+1
 1048 0154 3D020000 		.word	.L100+1
 1049              		.p2align 1
 1050              	.L98:
 138:Src/mp3_player.c **** 			    if (currentFilePosition == mp3FilesCounter - 1)
 1051              		.loc 1 138 0
 1052 0158 FFF7FEFF 		bl	reset_player_state
 1053              	.LVL80:
 139:Src/mp3_player.c ****                     currentFilePosition = 0;
 1054              		.loc 1 139 0
 1055 015c 3F4B     		ldr	r3, .L121+16
 1056 015e 1B68     		ldr	r3, [r3]
 1057 0160 013B     		subs	r3, r3, #1
 1058 0162 484A     		ldr	r2, .L121+56
 1059 0164 1268     		ldr	r2, [r2]
 1060 0166 9342     		cmp	r3, r2
 1061 0168 11D0     		beq	.L117
 142:Src/mp3_player.c ****                 if (f_open(&input_file, paths[currentFilePosition], FA_READ) != FR_OK) {
 1062              		.loc 1 142 0
 1063 016a 0132     		adds	r2, r2, #1
 1064 016c 454B     		ldr	r3, .L121+56
 1065 016e 1A60     		str	r2, [r3]
 1066              	.L102:
 143:Src/mp3_player.c ****                     if(DEBUG_ON) xprintf("Error opening file\n");
 1067              		.loc 1 143 0
 1068 0170 444B     		ldr	r3, .L121+56
 1069 0172 1968     		ldr	r1, [r3]
 1070 0174 3C4B     		ldr	r3, .L121+28
 1071 0176 1B68     		ldr	r3, [r3]
 1072 0178 0122     		movs	r2, #1
 1073 017a 53F82110 		ldr	r1, [r3, r1, lsl #2]
 1074 017e 3F48     		ldr	r0, .L121+48
 1075 0180 FFF7FEFF 		bl	f_open
 1076              	.LVL81:
 1077 0184 38B9     		cbnz	r0, .L118
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 29


 147:Src/mp3_player.c **** 				break;
 1078              		.loc 1 147 0
 1079 0186 0022     		movs	r2, #0
 1080 0188 304B     		ldr	r3, .L121
 1081 018a 1A70     		strb	r2, [r3]
 148:Src/mp3_player.c ****             case PREV:
 1082              		.loc 1 148 0
 1083 018c C2E7     		b	.L96
 1084              	.L117:
 140:Src/mp3_player.c ****                 else
 1085              		.loc 1 140 0
 1086 018e 0022     		movs	r2, #0
 1087 0190 3C4B     		ldr	r3, .L121+56
 1088 0192 1A60     		str	r2, [r3]
 1089 0194 ECE7     		b	.L102
 1090              	.L118:
 144:Src/mp3_player.c ****                     return;
 1091              		.loc 1 144 0 discriminator 1
 1092 0196 3D48     		ldr	r0, .L121+64
 1093 0198 FFF7FEFF 		bl	xprintf
 1094              	.LVL82:
 145:Src/mp3_player.c ****                 }
 1095              		.loc 1 145 0 discriminator 1
 1096 019c 63E7     		b	.L82
 1097              	.L99:
 150:Src/mp3_player.c ****                 if (currentFilePosition == 0)
 1098              		.loc 1 150 0
 1099 019e FFF7FEFF 		bl	reset_player_state
 1100              	.LVL83:
 151:Src/mp3_player.c ****                     currentFilePosition = mp3FilesCounter - 1;
 1101              		.loc 1 151 0
 1102 01a2 384B     		ldr	r3, .L121+56
 1103 01a4 1B68     		ldr	r3, [r3]
 1104 01a6 9BB9     		cbnz	r3, .L104
 152:Src/mp3_player.c ****                 else
 1105              		.loc 1 152 0
 1106 01a8 2C4B     		ldr	r3, .L121+16
 1107 01aa 1B68     		ldr	r3, [r3]
 1108 01ac 013B     		subs	r3, r3, #1
 1109 01ae 354A     		ldr	r2, .L121+56
 1110 01b0 1360     		str	r3, [r2]
 1111              	.L105:
 155:Src/mp3_player.c ****                     if(DEBUG_ON) xprintf("Error opening file\n");
 1112              		.loc 1 155 0
 1113 01b2 344B     		ldr	r3, .L121+56
 1114 01b4 1968     		ldr	r1, [r3]
 1115 01b6 2C4B     		ldr	r3, .L121+28
 1116 01b8 1B68     		ldr	r3, [r3]
 1117 01ba 0122     		movs	r2, #1
 1118 01bc 53F82110 		ldr	r1, [r3, r1, lsl #2]
 1119 01c0 2E48     		ldr	r0, .L121+48
 1120 01c2 FFF7FEFF 		bl	f_open
 1121              	.LVL84:
 1122 01c6 38B9     		cbnz	r0, .L119
 159:Src/mp3_player.c ****                 break;
 1123              		.loc 1 159 0
 1124 01c8 0022     		movs	r2, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 30


 1125 01ca 204B     		ldr	r3, .L121
 1126 01cc 1A70     		strb	r2, [r3]
 160:Src/mp3_player.c ****             case PAUSE:
 1127              		.loc 1 160 0
 1128 01ce A1E7     		b	.L96
 1129              	.L104:
 154:Src/mp3_player.c ****                 if (f_open(&input_file, paths[currentFilePosition], FA_READ) != FR_OK) {
 1130              		.loc 1 154 0
 1131 01d0 013B     		subs	r3, r3, #1
 1132 01d2 2C4A     		ldr	r2, .L121+56
 1133 01d4 1360     		str	r3, [r2]
 1134 01d6 ECE7     		b	.L105
 1135              	.L119:
 156:Src/mp3_player.c ****                     return;
 1136              		.loc 1 156 0 discriminator 1
 1137 01d8 2C48     		ldr	r0, .L121+64
 1138 01da FFF7FEFF 		bl	xprintf
 1139              	.LVL85:
 157:Src/mp3_player.c ****                 }
 1140              		.loc 1 157 0 discriminator 1
 1141 01de 42E7     		b	.L82
 1142              	.L97:
 165:Src/mp3_player.c ****                 currentFilePosition = 0;
 1143              		.loc 1 165 0
 1144 01e0 FFF7FEFF 		bl	reset_player_state
 1145              	.LVL86:
 166:Src/mp3_player.c ****                 while(state == STOP) {
 1146              		.loc 1 166 0
 1147 01e4 0022     		movs	r2, #0
 1148 01e6 274B     		ldr	r3, .L121+56
 1149 01e8 1A60     		str	r2, [r3]
 1150              	.L108:
 167:Src/mp3_player.c ****                     Mp3_Player_State newState = check_touchscreen((double) currentFileBytes / curre
 1151              		.loc 1 167 0
 1152 01ea 184B     		ldr	r3, .L121
 1153 01ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1154 01ee 022B     		cmp	r3, #2
 1155 01f0 10D1     		bne	.L120
 1156              	.LBB3:
 168:Src/mp3_player.c ****                     if (newState != EMPTY)
 1157              		.loc 1 168 0
 1158 01f2 214B     		ldr	r3, .L121+44
 1159 01f4 1868     		ldr	r0, [r3]
 1160 01f6 FFF7FEFF 		bl	__aeabi_i2d
 1161              	.LVL87:
 1162 01fa 0246     		mov	r2, r0
 1163 01fc 0B46     		mov	r3, r1
 1164 01fe FFF7FEFF 		bl	__aeabi_ddiv
 1165              	.LVL88:
 1166 0202 41EC100B 		vmov	d0, r0, r1
 1167 0206 FFF7FEFF 		bl	check_touchscreen
 1168              	.LVL89:
 169:Src/mp3_player.c ****                         state = newState;
 1169              		.loc 1 169 0
 1170 020a 0628     		cmp	r0, #6
 1171 020c EDD0     		beq	.L108
 170:Src/mp3_player.c ****                 }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 31


 1172              		.loc 1 170 0
 1173 020e 0F4B     		ldr	r3, .L121
 1174 0210 1870     		strb	r0, [r3]
 1175 0212 EAE7     		b	.L108
 1176              	.LVL90:
 1177              	.L120:
 1178              	.LBE3:
 172:Src/mp3_player.c ****                     if (f_open(&input_file, paths[currentFilePosition], FA_READ) != FR_OK) {
 1179              		.loc 1 172 0
 1180 0214 002B     		cmp	r3, #0
 1181 0216 7FF47DAF 		bne	.L96
 173:Src/mp3_player.c ****                         if(DEBUG_ON) xprintf("Error opening file\n");
 1182              		.loc 1 173 0
 1183 021a 1A4B     		ldr	r3, .L121+56
 1184 021c 1968     		ldr	r1, [r3]
 1185 021e 124B     		ldr	r3, .L121+28
 1186 0220 1B68     		ldr	r3, [r3]
 1187 0222 0122     		movs	r2, #1
 1188 0224 53F82110 		ldr	r1, [r3, r1, lsl #2]
 1189 0228 1448     		ldr	r0, .L121+48
 1190 022a FFF7FEFF 		bl	f_open
 1191              	.LVL91:
 1192 022e 0028     		cmp	r0, #0
 1193 0230 3FF470AF 		beq	.L96
 174:Src/mp3_player.c ****                         return;
 1194              		.loc 1 174 0 discriminator 1
 1195 0234 1548     		ldr	r0, .L121+64
 1196 0236 FFF7FEFF 		bl	xprintf
 1197              	.LVL92:
 175:Src/mp3_player.c ****                     }
 1198              		.loc 1 175 0 discriminator 1
 1199 023a 14E7     		b	.L82
 1200              	.L100:
 179:Src/mp3_player.c **** 				return;
 1201              		.loc 1 179 0 discriminator 1
 1202 023c 1448     		ldr	r0, .L121+68
 1203 023e FFF7FEFF 		bl	xprintf
 1204              	.LVL93:
 180:Src/mp3_player.c ****             default:
 1205              		.loc 1 180 0 discriminator 1
 1206 0242 10E7     		b	.L82
 1207              	.L93:
 182:Src/mp3_player.c ****                 return;
 1208              		.loc 1 182 0 discriminator 1
 1209 0244 1348     		ldr	r0, .L121+72
 1210 0246 FFF7FEFF 		bl	xprintf
 1211              	.LVL94:
 183:Src/mp3_player.c **** 		}
 1212              		.loc 1 183 0 discriminator 1
 1213 024a 0CE7     		b	.L82
 1214              	.L122:
 1215              		.align	2
 1216              	.L121:
 1217 024c 00000000 		.word	state
 1218 0250 00000000 		.word	gui_info_text
 1219 0254 00000000 		.word	.LC13
 1220 0258 54000000 		.word	.LC16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 32


 1221 025c 00000000 		.word	.LANCHOR9
 1222 0260 14000000 		.word	.LC14
 1223 0264 34000000 		.word	.LC15
 1224 0268 00000000 		.word	paths
 1225 026c 78000000 		.word	.LC18
 1226 0270 5C000000 		.word	.LC17
 1227 0274 7C000000 		.word	.LC19
 1228 0278 00000000 		.word	.LANCHOR7
 1229 027c 00000000 		.word	input_file
 1230 0280 00000000 		.word	.LANCHOR2
 1231 0284 00000000 		.word	.LANCHOR10
 1232 0288 D0000000 		.word	.LC23
 1233 028c 8C000000 		.word	.LC20
 1234 0290 A0000000 		.word	.LC21
 1235 0294 B8000000 		.word	.LC22
 1236              		.cfi_endproc
 1237              	.LFE141:
 1239              		.comm	gui_info_text,100,4
 1240              		.global	has_been_paused
 1241              		.global	currentFileBytesRead
 1242              		.global	currentFileBytes
 1243              		.global	currentFilePosition
 1244              		.global	mp3FilesCounter
 1245              		.comm	paths,4,4
 1246              		.comm	input_file,560,4
 1247              		.comm	input_buffer,3880,4
 1248              		.comm	output_buffer,9216,4
 1249              		.comm	state,1,1
 1250              		.section	.bss.buffer_leftover,"aw",%nobits
 1251              		.align	2
 1252              		.set	.LANCHOR0,. + 0
 1255              	buffer_leftover:
 1256 0000 00000000 		.space	4
 1257              		.section	.bss.currentFileBytes,"aw",%nobits
 1258              		.align	2
 1259              		.set	.LANCHOR7,. + 0
 1262              	currentFileBytes:
 1263 0000 00000000 		.space	4
 1264              		.section	.bss.currentFileBytesRead,"aw",%nobits
 1265              		.align	2
 1266              		.set	.LANCHOR2,. + 0
 1269              	currentFileBytesRead:
 1270 0000 00000000 		.space	4
 1271              		.section	.bss.current_ptr,"aw",%nobits
 1272              		.align	2
 1273              		.set	.LANCHOR1,. + 0
 1276              	current_ptr:
 1277 0000 00000000 		.space	4
 1278              		.section	.bss.decode_result,"aw",%nobits
 1279              		.align	2
 1280              		.set	.LANCHOR6,. + 0
 1283              	decode_result:
 1284 0000 00000000 		.space	4
 1285              		.section	.bss.hMP3Decoder,"aw",%nobits
 1286              		.align	2
 1287              		.set	.LANCHOR4,. + 0
 1290              	hMP3Decoder:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 33


 1291 0000 00000000 		.space	4
 1292              		.section	.bss.has_been_paused,"aw",%nobits
 1293              		.align	2
 1294              		.set	.LANCHOR8,. + 0
 1297              	has_been_paused:
 1298 0000 00000000 		.space	4
 1299              		.section	.bss.in_buf_offs,"aw",%nobits
 1300              		.align	2
 1301              		.set	.LANCHOR3,. + 0
 1304              	in_buf_offs:
 1305 0000 00000000 		.space	4
 1306              		.section	.bss.mp3FilesCounter,"aw",%nobits
 1307              		.align	2
 1308              		.set	.LANCHOR9,. + 0
 1311              	mp3FilesCounter:
 1312 0000 00000000 		.space	4
 1313              		.section	.bss.out_buf_offs,"aw",%nobits
 1314              		.set	.LANCHOR5,. + 0
 1317              	out_buf_offs:
 1318 0000 00       		.space	1
 1319              		.section	.data.currentFilePosition,"aw",%progbits
 1320              		.align	2
 1321              		.set	.LANCHOR10,. + 0
 1324              	currentFilePosition:
 1325 0000 FFFFFFFF 		.word	-1
 1326              		.section	.rodata.BSP_init.str1.4,"aMS",%progbits,1
 1327              		.align	2
 1328              	.LC0:
 1329 0000 41756469 		.ascii	"Audio Init Ok\012\000"
 1329      6F20496E 
 1329      6974204F 
 1329      6B0A00
 1330 000f 00       		.space	1
 1331              	.LC1:
 1332 0010 41756469 		.ascii	"Audio Init Error\012\000"
 1332      6F20496E 
 1332      69742045 
 1332      72726F72 
 1332      0A00
 1333              		.section	.rodata.fill_input_buffer.str1.4,"aMS",%progbits,1
 1334              		.align	2
 1335              	.LC2:
 1336 0000 66696C6C 		.ascii	"fill: copied from current_ptr input_buffer\012\000"
 1336      3A20636F 
 1336      70696564 
 1336      2066726F 
 1336      6D206375 
 1337              	.LC3:
 1338 002c 66696C6C 		.ascii	"fill: copied from file to input_buffer\012\000"
 1338      3A20636F 
 1338      70696564 
 1338      2066726F 
 1338      6D206669 
 1339              		.section	.rodata.mp3_player_fsm.str1.4,"aMS",%progbits,1
 1340              		.align	2
 1341              	.LC13:
 1342 0000 2D2D2D2D 		.ascii	"-----------------\000"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 34


 1342      2D2D2D2D 
 1342      2D2D2D2D 
 1342      2D2D2D2D 
 1342      2D00
 1343 0012 0000     		.space	2
 1344              	.LC14:
 1345 0014 4572726F 		.ascii	"Error opening the directory\012\000"
 1345      72206F70 
 1345      656E696E 
 1345      67207468 
 1345      65206469 
 1346 0031 000000   		.space	3
 1347              	.LC15:
 1348 0034 4572726F 		.ascii	"Error reading from directory\012\000"
 1348      72207265 
 1348      6164696E 
 1348      67206672 
 1348      6F6D2064 
 1349 0052 0000     		.space	2
 1350              	.LC16:
 1351 0054 2E6D7033 		.ascii	".mp3\000"
 1351      00
 1352 0059 000000   		.space	3
 1353              	.LC17:
 1354 005c 4572726F 		.ascii	"Error allocating memory\012\000"
 1354      7220616C 
 1354      6C6F6361 
 1354      74696E67 
 1354      206D656D 
 1355 0075 000000   		.space	3
 1356              	.LC18:
 1357 0078 25730A00 		.ascii	"%s\012\000"
 1358              	.LC19:
 1359 007c 4E6F7720 		.ascii	"Now playing\012\000"
 1359      706C6179 
 1359      696E670A 
 1359      00
 1360 0089 000000   		.space	3
 1361              	.LC20:
 1362 008c 4572726F 		.ascii	"Error opening file\012\000"
 1362      72206F70 
 1362      656E696E 
 1362      67206669 
 1362      6C650A00 
 1363              	.LC21:
 1364 00a0 66736D3A 		.ascii	"fsm: state -> finish\012\000"
 1364      20737461 
 1364      7465202D 
 1364      3E206669 
 1364      6E697368 
 1365 00b6 0000     		.space	2
 1366              	.LC22:
 1367 00b8 66736D3A 		.ascii	"fsm: state -> default\012\000"
 1367      20737461 
 1367      7465202D 
 1367      3E206465 
 1367      6661756C 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 35


 1368 00cf 00       		.space	1
 1369              	.LC23:
 1370 00d0 43757272 		.ascii	"Currently playing: %s\000"
 1370      656E746C 
 1370      7920706C 
 1370      6179696E 
 1370      673A2025 
 1371              		.section	.rodata.mp3_player_play.str1.4,"aMS",%progbits,1
 1372              		.align	2
 1373              	.LC9:
 1374 0000 706C6179 		.ascii	"play: initializing decoder\012\000"
 1374      3A20696E 
 1374      69746961 
 1374      6C697A69 
 1374      6E672064 
 1375              	.LC10:
 1376 001c 706C6179 		.ascii	"play: starting frame processing\012\000"
 1376      3A207374 
 1376      61727469 
 1376      6E672066 
 1376      72616D65 
 1377 003d 000000   		.space	3
 1378              	.LC11:
 1379 0040 4572726F 		.ascii	"Error while pausing stream\012\000"
 1379      72207768 
 1379      696C6520 
 1379      70617573 
 1379      696E6720 
 1380              	.LC12:
 1381 005c 706C6179 		.ascii	"play: freeing decoder\012\000"
 1381      3A206672 
 1381      6565696E 
 1381      67206465 
 1381      636F6465 
 1382              		.section	.rodata.mp3_player_process_frame.str1.4,"aMS",%progbits,1
 1383              		.align	2
 1384              	.LC4:
 1385 0000 70726F63 		.ascii	"process: starting\012\000"
 1385      6573733A 
 1385      20737461 
 1385      7274696E 
 1385      670A00
 1386 0013 00       		.space	1
 1387              	.LC5:
 1388 0014 70726F63 		.ascii	"process: findSyncWord read\012\000"
 1388      6573733A 
 1388      2066696E 
 1388      6453796E 
 1388      63576F72 
 1389              	.LC6:
 1390 0030 70726F63 		.ascii	"process: out_buf half\012\000"
 1390      6573733A 
 1390      206F7574 
 1390      5F627566 
 1390      2068616C 
 1391 0047 00       		.space	1
 1392              	.LC7:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 36


 1393 0048 70726F63 		.ascii	"process: out_buf full\012\000"
 1393      6573733A 
 1393      206F7574 
 1393      5F627566 
 1393      2066756C 
 1394 005f 00       		.space	1
 1395              	.LC8:
 1396 0060 416E2075 		.ascii	"An unkown error has occured while decoding the fram"
 1396      6E6B6F77 
 1396      6E206572 
 1396      726F7220 
 1396      68617320 
 1397 0093 650A00   		.ascii	"e\012\000"
 1398              		.text
 1399              	.Letext0:
 1400              		.file 2 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 1401              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 1402              		.file 4 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 1403              		.file 5 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 1404              		.file 6 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 1405              		.file 7 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 1406              		.file 8 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdlib.h"
 1407              		.file 9 "Inc/mp3_player.h"
 1408              		.file 10 "./lib\\helix\\pub\\mp3dec.h"
 1409              		.file 11 "Middlewares/Third_Party/FatFs/src/integer.h"
 1410              		.file 12 "Drivers/CMSIS/Include/core_cm7.h"
 1411              		.file 13 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1412              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1413              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1414              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1415              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1416              		.file 18 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 1417              		.file 19 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 1418              		.file 20 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 1419              		.file 21 "Middlewares/Third_Party/FatFs/src/ff.h"
 1420              		.file 22 "Middlewares/Third_Party/FatFs/src/diskio.h"
 1421              		.file 23 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 1422              		.file 24 "Inc/sd_diskio.h"
 1423              		.file 25 "Inc/usbh_diskio.h"
 1424              		.file 26 "Inc/fatfs.h"
 1425              		.file 27 "Drivers/BSP/STM32746G-Discovery/../Components/wm8994/../Common/audio.h"
 1426              		.file 28 "Drivers/BSP/STM32746G-Discovery/../Components/wm8994/wm8994.h"
 1427              		.file 29 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_audio.h"
 1428              		.file 30 "Inc/term_io.h"
 1429              		.file 31 "Inc/gui.h"
 1430              		.file 32 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\string.h"
 1431              		.file 33 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdio.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 37


DEFINED SYMBOLS
                            *ABS*:00000000 mp3_player.c
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:18     .text.BSP_init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:25     .text.BSP_init:00000000 BSP_init
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:62     .text.BSP_init:00000028 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:68     .text.copy_leftover:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:75     .text.copy_leftover:00000000 copy_leftover
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:102    .text.copy_leftover:00000018 $d
                            *COM*:00000f28 input_buffer
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:109    .text.fill_input_buffer:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:116    .text.fill_input_buffer:00000000 fill_input_buffer
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:195    .text.fill_input_buffer:0000005c $d
                            *COM*:00000230 input_file
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:207    .text.mp3_player_process_frame:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:214    .text.mp3_player_process_frame:00000000 mp3_player_process_frame
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:468    .text.mp3_player_process_frame:00000160 $d
                            *COM*:00002400 output_buffer
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:488    .text.mp3_player_play:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:495    .text.mp3_player_play:00000000 mp3_player_play
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:662    .text.mp3_player_play:000000d4 $d
                            *COM*:00000001 state
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:678    .text.BSP_AUDIO_OUT_TransferComplete_CallBack:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:685    .text.BSP_AUDIO_OUT_TransferComplete_CallBack:00000000 BSP_AUDIO_OUT_TransferComplete_CallBack
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:720    .text.BSP_AUDIO_OUT_TransferComplete_CallBack:00000020 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:726    .text.BSP_AUDIO_OUT_HalfTransfer_CallBack:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:733    .text.BSP_AUDIO_OUT_HalfTransfer_CallBack:00000000 BSP_AUDIO_OUT_HalfTransfer_CallBack
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:768    .text.BSP_AUDIO_OUT_HalfTransfer_CallBack:00000020 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:774    .text.reset_player_state:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:781    .text.reset_player_state:00000000 reset_player_state
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:802    .text.reset_player_state:00000010 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:809    .text.mp3_player_fsm:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:816    .text.mp3_player_fsm:00000000 mp3_player_fsm
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1043   .text.mp3_player_fsm:00000140 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1049   .text.mp3_player_fsm:00000158 $t
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1217   .text.mp3_player_fsm:0000024c $d
                            *COM*:00000064 gui_info_text
                            *COM*:00000004 paths
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1297   .bss.has_been_paused:00000000 has_been_paused
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1269   .bss.currentFileBytesRead:00000000 currentFileBytesRead
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1262   .bss.currentFileBytes:00000000 currentFileBytes
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1324   .data.currentFilePosition:00000000 currentFilePosition
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1311   .bss.mp3FilesCounter:00000000 mp3FilesCounter
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1251   .bss.buffer_leftover:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1255   .bss.buffer_leftover:00000000 buffer_leftover
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1258   .bss.currentFileBytes:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1265   .bss.currentFileBytesRead:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1272   .bss.current_ptr:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1276   .bss.current_ptr:00000000 current_ptr
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1279   .bss.decode_result:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1283   .bss.decode_result:00000000 decode_result
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1286   .bss.hMP3Decoder:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1290   .bss.hMP3Decoder:00000000 hMP3Decoder
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1293   .bss.has_been_paused:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1300   .bss.in_buf_offs:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1304   .bss.in_buf_offs:00000000 in_buf_offs
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1307   .bss.mp3FilesCounter:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1317   .bss.out_buf_offs:00000000 out_buf_offs
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s 			page 38


C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1318   .bss.out_buf_offs:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1320   .data.currentFilePosition:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1327   .rodata.BSP_init.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1334   .rodata.fill_input_buffer.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1340   .rodata.mp3_player_fsm.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1372   .rodata.mp3_player_play.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgwLiOJ.s:1383   .rodata.mp3_player_process_frame.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
BSP_AUDIO_OUT_Init
xprintf
BSP_AUDIO_OUT_SetAudioFrameSlot
memcpy
f_read
MP3FindSyncWord
MP3GetNextFrameInfo
MP3Decode
__aeabi_i2d
__aeabi_ddiv
MP3InitDecoder
MP3FreeDecoder
BSP_AUDIO_OUT_Play
BSP_AUDIO_OUT_Pause
BSP_AUDIO_OUT_Resume
check_touchscreen
BSP_AUDIO_OUT_Stop
touchscreen_loop_init
f_opendir
f_readdir
strstr
f_closedir
malloc
strlen
strcpy
f_close
sprintf
refresh_screen
f_open
