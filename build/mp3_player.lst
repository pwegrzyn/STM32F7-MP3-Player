ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mp3_player.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.BSP_init,"ax",%progbits
  18              		.align	1
  19              		.global	BSP_init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	BSP_init:
  26              	.LFB142:
  27              		.file 1 "Src/mp3_player.c"
   1:Src/mp3_player.c **** /*
   2:Src/mp3_player.c ****  *	Main MP3 Player functionality
   3:Src/mp3_player.c ****  */
   4:Src/mp3_player.c **** 
   5:Src/mp3_player.c **** #include <stdio.h>
   6:Src/mp3_player.c **** #include <string.h>
   7:Src/mp3_player.c **** 
   8:Src/mp3_player.c **** #include "mp3_player.h"
   9:Src/mp3_player.c **** #include "gui.h"
  10:Src/mp3_player.c **** #include "lib\helix\pub\mp3dec.h"
  11:Src/mp3_player.c **** #include "fatfs.h"
  12:Src/mp3_player.c **** #include "stm32746g_discovery_audio.h"
  13:Src/mp3_player.c **** #include "term_io.h"
  14:Src/mp3_player.c **** #include "dbgu.h"
  15:Src/mp3_player.c **** #include "ansi.h"
  16:Src/mp3_player.c **** 
  17:Src/mp3_player.c **** #define DEBUG_ON 0
  18:Src/mp3_player.c **** 
  19:Src/mp3_player.c **** // Data read from the USB and fed to the MP3 Decoder
  20:Src/mp3_player.c **** #define READ_BUFFER_SIZE 2 * MAINBUF_SIZE// + 216
  21:Src/mp3_player.c **** 
  22:Src/mp3_player.c **** // Decoded data ready to be passed out output
  23:Src/mp3_player.c **** #define DECODED_MP3_FRAME_SIZE MAX_NGRAN * MAX_NCHAN * MAX_NSAMP
  24:Src/mp3_player.c **** #define AUDIO_OUT_BUFFER_SIZE 2 * DECODED_MP3_FRAME_SIZE
  25:Src/mp3_player.c **** 
  26:Src/mp3_player.c **** // State of the offset of the BSP Out buffer
  27:Src/mp3_player.c **** typedef enum BSP_BUFFER_STATE_TAG {
  28:Src/mp3_player.c ****     BUFFER_OFFSET_NONE = 0,
  29:Src/mp3_player.c ****     BUFFER_OFFSET_HALF,
  30:Src/mp3_player.c ****     BUFFER_OFFSET_FULL,
  31:Src/mp3_player.c **** } BSP_BUFFER_STATE;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 2


  32:Src/mp3_player.c **** 
  33:Src/mp3_player.c **** /* ------------------------------------------------------------------- */
  34:Src/mp3_player.c **** 
  35:Src/mp3_player.c **** static HMP3Decoder hMP3Decoder;
  36:Src/mp3_player.c **** Mp3_Player_State state;
  37:Src/mp3_player.c **** short output_buffer[AUDIO_OUT_BUFFER_SIZE];
  38:Src/mp3_player.c **** uint8_t input_buffer[READ_BUFFER_SIZE];
  39:Src/mp3_player.c **** static uint8_t *read_pointer;
  40:Src/mp3_player.c **** static BSP_BUFFER_STATE out_buf_offs = BUFFER_OFFSET_NONE;
  41:Src/mp3_player.c **** FIL input_file;
  42:Src/mp3_player.c **** static int bytes_left=0;
  43:Src/mp3_player.c **** static int in_buf_offs;
  44:Src/mp3_player.c **** static int decode_result;
  45:Src/mp3_player.c **** 
  46:Src/mp3_player.c **** /* ------------------------------------------------------------------- */
  47:Src/mp3_player.c **** void BSP_init(void);
  48:Src/mp3_player.c **** void mp3_player_init(void);
  49:Src/mp3_player.c **** void mp3_player_fsm(const char*);
  50:Src/mp3_player.c **** void mp3_player_play();
  51:Src/mp3_player.c **** int mp3_player_process_frame();
  52:Src/mp3_player.c **** int fill_input_buffer();
  53:Src/mp3_player.c **** 
  54:Src/mp3_player.c **** /* ------------------------------------------------------------------- */
  55:Src/mp3_player.c **** 
  56:Src/mp3_player.c **** // Main Finite State Machine of the player
  57:Src/mp3_player.c **** void mp3_player_fsm(const char* path)
  58:Src/mp3_player.c **** {
  59:Src/mp3_player.c ****     BSP_init();
  60:Src/mp3_player.c ****     state = NEXT;
  61:Src/mp3_player.c **** 
  62:Src/mp3_player.c ****     DIR directory;
  63:Src/mp3_player.c ****     f_opendir(&directory, path);
  64:Src/mp3_player.c **** 
  65:Src/mp3_player.c **** 	while(1)
  66:Src/mp3_player.c **** 	{
  67:Src/mp3_player.c **** 		switch(state)
  68:Src/mp3_player.c **** 		{
  69:Src/mp3_player.c **** 			case PLAY:
  70:Src/mp3_player.c **** 				mp3_player_play();
  71:Src/mp3_player.c ****                 f_close(&input_file);
  72:Src/mp3_player.c **** 				break;
  73:Src/mp3_player.c **** 			case NEXT:
  74:Src/mp3_player.c **** 			    ;
  75:Src/mp3_player.c **** 			    if(DEBUG_ON) xprintf("fsm: state -> next\n");
  76:Src/mp3_player.c **** 			    FILINFO info;
  77:Src/mp3_player.c **** 				if (f_readdir(&directory, &info) != FR_OK) {
  78:Src/mp3_player.c ****                     xprintf("Error reading from directory\n");
  79:Src/mp3_player.c ****                     return;
  80:Src/mp3_player.c **** 				}
  81:Src/mp3_player.c ****                 if (info.fname[0] == 0) {
  82:Src/mp3_player.c ****                     xprintf("fsm: no more files to read\n");
  83:Src/mp3_player.c ****                     f_closedir(&directory);
  84:Src/mp3_player.c ****                     f_opendir(&directory, path);
  85:Src/mp3_player.c ****                     continue;
  86:Src/mp3_player.c ****                 }
  87:Src/mp3_player.c ****                 if (strstr(info.fname, ".mp3")) {
  88:Src/mp3_player.c ****                     if (f_open(&input_file, info.fname, FA_READ) != FR_OK) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 3


  89:Src/mp3_player.c ****                         xprintf("Error opening file\n");
  90:Src/mp3_player.c ****                         return;
  91:Src/mp3_player.c ****                     }
  92:Src/mp3_player.c ****                     if(DEBUG_ON) xprintf("fsm: state next -> play\n");
  93:Src/mp3_player.c ****                     state = PLAY;
  94:Src/mp3_player.c ****                 }
  95:Src/mp3_player.c **** 				break;
  96:Src/mp3_player.c **** 			case FINISH:
  97:Src/mp3_player.c **** 			    if(DEBUG_ON) xprintf("fsm: state -> finish\n");
  98:Src/mp3_player.c **** 				return;
  99:Src/mp3_player.c ****             default:
 100:Src/mp3_player.c ****                 if(DEBUG_ON) xprintf("fsm: state -> default\n");
 101:Src/mp3_player.c ****                 return;
 102:Src/mp3_player.c **** 		}
 103:Src/mp3_player.c **** 	}
 104:Src/mp3_player.c **** 
 105:Src/mp3_player.c **** }
 106:Src/mp3_player.c **** 
 107:Src/mp3_player.c **** // Initialize AUDIO_OUT
 108:Src/mp3_player.c **** void BSP_init(void) {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 109:Src/mp3_player.c **** 	if(BSP_AUDIO_OUT_Init(OUTPUT_DEVICE_BOTH, 100, AUDIO_FREQUENCY_44K) == 0)
  37              		.loc 1 109 0
  38 0002 4AF64442 		movw	r2, #44100
  39 0006 6421     		movs	r1, #100
  40 0008 0320     		movs	r0, #3
  41 000a FFF7FEFF 		bl	BSP_AUDIO_OUT_Init
  42              	.LVL0:
  43 000e 18B1     		cbz	r0, .L5
 110:Src/mp3_player.c **** 	{
 111:Src/mp3_player.c **** 	  BSP_AUDIO_OUT_SetAudioFrameSlot(CODEC_AUDIOFRAME_SLOT_02);
 112:Src/mp3_player.c **** 		xprintf("Audio Init Ok\n");
 113:Src/mp3_player.c **** 	}
 114:Src/mp3_player.c **** 	else
 115:Src/mp3_player.c **** 	{
 116:Src/mp3_player.c **** 		xprintf("Audio Init Error\n");
  44              		.loc 1 116 0
  45 0010 0548     		ldr	r0, .L6
  46 0012 FFF7FEFF 		bl	xprintf
  47              	.LVL1:
  48 0016 08BD     		pop	{r3, pc}
  49              	.L5:
 111:Src/mp3_player.c **** 		xprintf("Audio Init Ok\n");
  50              		.loc 1 111 0
  51 0018 0520     		movs	r0, #5
  52 001a FFF7FEFF 		bl	BSP_AUDIO_OUT_SetAudioFrameSlot
  53              	.LVL2:
 112:Src/mp3_player.c **** 	}
  54              		.loc 1 112 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 4


  55 001e 0348     		ldr	r0, .L6+4
  56 0020 FFF7FEFF 		bl	xprintf
  57              	.LVL3:
  58 0024 08BD     		pop	{r3, pc}
  59              	.L7:
  60 0026 00BF     		.align	2
  61              	.L6:
  62 0028 10000000 		.word	.LC1
  63 002c 00000000 		.word	.LC0
  64              		.cfi_endproc
  65              	.LFE142:
  67              		.section	.text.fill_input_buffer,"ax",%progbits
  68              		.align	1
  69              		.global	fill_input_buffer
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-sp-d16
  75              	fill_input_buffer:
  76              	.LFB147:
 117:Src/mp3_player.c **** 	}
 118:Src/mp3_player.c **** }
 119:Src/mp3_player.c **** 
 120:Src/mp3_player.c **** // Play state handler
 121:Src/mp3_player.c **** void mp3_player_play(void)
 122:Src/mp3_player.c **** {
 123:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("play: initializing decoder\n");
 124:Src/mp3_player.c **** 	hMP3Decoder = MP3InitDecoder();
 125:Src/mp3_player.c **** 
 126:Src/mp3_player.c ****     if(DEBUG_ON) xprintf("play: starting frame processing\n");
 127:Src/mp3_player.c **** 	if(mp3_player_process_frame() == 0) {
 128:Src/mp3_player.c **** 		state = PLAY;
 129:Src/mp3_player.c **** 		BSP_AUDIO_OUT_Play((uint16_t*)&output_buffer[0], AUDIO_OUT_BUFFER_SIZE * 2);
 130:Src/mp3_player.c **** 		touchscreen_loop_init();
 131:Src/mp3_player.c **** 		while(1) {
 132:Src/mp3_player.c **** 			state = check_touchscreen();
 133:Src/mp3_player.c **** 			if(state != PLAY && state != EMPTY) {
 134:Src/mp3_player.c **** 				break;
 135:Src/mp3_player.c **** 			}
 136:Src/mp3_player.c **** 		}
 137:Src/mp3_player.c **** 		BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 138:Src/mp3_player.c **** 		out_buf_offs = BUFFER_OFFSET_NONE;
 139:Src/mp3_player.c **** 	}
 140:Src/mp3_player.c **** 	else
 141:Src/mp3_player.c **** 	{
 142:Src/mp3_player.c **** 		state = NEXT;
 143:Src/mp3_player.c **** 	}
 144:Src/mp3_player.c **** 
 145:Src/mp3_player.c **** 	bytes_left = 0;
 146:Src/mp3_player.c **** 	read_pointer = NULL;
 147:Src/mp3_player.c **** 	MP3FreeDecoder(hMP3Decoder);
 148:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("play: freeing decoder\n");
 149:Src/mp3_player.c **** }
 150:Src/mp3_player.c **** 
 151:Src/mp3_player.c **** // Process next mp3 frame from the main file
 152:Src/mp3_player.c **** int mp3_player_process_frame(void)
 153:Src/mp3_player.c **** {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 5


 154:Src/mp3_player.c ****     if(DEBUG_ON) xprintf("process: starting\n");
 155:Src/mp3_player.c **** 	MP3FrameInfo mp3FrameInfo;
 156:Src/mp3_player.c **** 
 157:Src/mp3_player.c **** 	if (read_pointer == NULL) 
 158:Src/mp3_player.c **** 	{
 159:Src/mp3_player.c **** 		if(fill_input_buffer() != 0)
 160:Src/mp3_player.c **** 			return EOF;
 161:Src/mp3_player.c **** 	}
 162:Src/mp3_player.c **** 
 163:Src/mp3_player.c **** 	in_buf_offs = MP3FindSyncWord(read_pointer, bytes_left);
 164:Src/mp3_player.c **** 	while(in_buf_offs < 0) 
 165:Src/mp3_player.c **** 	{
 166:Src/mp3_player.c **** 		if(fill_input_buffer() != 0) return EOF;
 167:Src/mp3_player.c **** 		if(bytes_left > 0)
 168:Src/mp3_player.c **** 		{
 169:Src/mp3_player.c **** 			bytes_left--;
 170:Src/mp3_player.c **** 			read_pointer++;
 171:Src/mp3_player.c **** 		}
 172:Src/mp3_player.c **** 		in_buf_offs = MP3FindSyncWord(read_pointer, bytes_left);
 173:Src/mp3_player.c **** 	}
 174:Src/mp3_player.c **** 	read_pointer += in_buf_offs;
 175:Src/mp3_player.c **** 	bytes_left -= in_buf_offs;
 176:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("process: findSyncWord read\n");
 177:Src/mp3_player.c **** 
 178:Src/mp3_player.c **** 	if (MP3GetNextFrameInfo(hMP3Decoder, &mp3FrameInfo, read_pointer) == 0 &&
 179:Src/mp3_player.c **** 			mp3FrameInfo.nChans == 2 &&
 180:Src/mp3_player.c **** 			mp3FrameInfo.version == 0)
 181:Src/mp3_player.c **** 	{
 182:Src/mp3_player.c **** 	}
 183:Src/mp3_player.c **** 	else
 184:Src/mp3_player.c **** 	{
 185:Src/mp3_player.c **** 		if(bytes_left > 0)
 186:Src/mp3_player.c **** 		{
 187:Src/mp3_player.c **** 			bytes_left -= 1;
 188:Src/mp3_player.c **** 			read_pointer += 1;
 189:Src/mp3_player.c **** 		}
 190:Src/mp3_player.c **** 		return 0;
 191:Src/mp3_player.c **** 	}
 192:Src/mp3_player.c **** 
 193:Src/mp3_player.c **** 	if (bytes_left < MAINBUF_SIZE)
 194:Src/mp3_player.c **** 	{
 195:Src/mp3_player.c **** 		if(fill_input_buffer() != 0)
 196:Src/mp3_player.c **** 			return EOF;
 197:Src/mp3_player.c **** 	}
 198:Src/mp3_player.c **** 
 199:Src/mp3_player.c **** 	if(out_buf_offs == BUFFER_OFFSET_HALF)
 200:Src/mp3_player.c **** 	{
 201:Src/mp3_player.c **** 	    if(DEBUG_ON) xprintf("process: out_buf half\n");
 202:Src/mp3_player.c **** 		decode_result = MP3Decode(hMP3Decoder, &read_pointer, &bytes_left, output_buffer, 0);
 203:Src/mp3_player.c **** 		out_buf_offs = BUFFER_OFFSET_NONE;
 204:Src/mp3_player.c **** 	}
 205:Src/mp3_player.c **** 	if(out_buf_offs == BUFFER_OFFSET_FULL){
 206:Src/mp3_player.c ****         if(DEBUG_ON) xprintf("process: out_buf full\n");
 207:Src/mp3_player.c **** 		decode_result = MP3Decode(hMP3Decoder, &read_pointer, &bytes_left, &output_buffer[DECODED_MP3_FRA
 208:Src/mp3_player.c **** 		out_buf_offs = BUFFER_OFFSET_NONE;
 209:Src/mp3_player.c **** 	}
 210:Src/mp3_player.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 6


 211:Src/mp3_player.c **** 	if(decode_result != ERR_MP3_NONE)
 212:Src/mp3_player.c **** 	{
 213:Src/mp3_player.c **** 		switch(decode_result)
 214:Src/mp3_player.c **** 		{
 215:Src/mp3_player.c **** 		case ERR_MP3_INDATA_UNDERFLOW:
 216:Src/mp3_player.c **** 			bytes_left = 0;
 217:Src/mp3_player.c **** 			if(fill_input_buffer() != 0)
 218:Src/mp3_player.c **** 				return EOF;
 219:Src/mp3_player.c **** 			break;
 220:Src/mp3_player.c **** 		case ERR_MP3_MAINDATA_UNDERFLOW:
 221:Src/mp3_player.c **** 			break;
 222:Src/mp3_player.c **** 		default:
 223:Src/mp3_player.c **** 			return 0;
 224:Src/mp3_player.c **** 		}
 225:Src/mp3_player.c **** 	}
 226:Src/mp3_player.c **** 	return 0;
 227:Src/mp3_player.c **** }
 228:Src/mp3_player.c **** 
 229:Src/mp3_player.c **** // Callback when half of audio out buffer is transefered
 230:Src/mp3_player.c **** void BSP_AUDIO_OUT_TransferComplete_CallBack(void)
 231:Src/mp3_player.c **** {
 232:Src/mp3_player.c ****     out_buf_offs = BUFFER_OFFSET_FULL;
 233:Src/mp3_player.c **** 
 234:Src/mp3_player.c **** 	if(mp3_player_process_frame() != 0)
 235:Src/mp3_player.c **** 	{
 236:Src/mp3_player.c **** 		BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 237:Src/mp3_player.c **** 		state = NEXT;
 238:Src/mp3_player.c **** 	}
 239:Src/mp3_player.c **** }
 240:Src/mp3_player.c **** 
 241:Src/mp3_player.c **** // Callback when all of audio out buffer is transefered
 242:Src/mp3_player.c **** void BSP_AUDIO_OUT_HalfTransfer_CallBack(void)
 243:Src/mp3_player.c **** {
 244:Src/mp3_player.c ****     out_buf_offs = BUFFER_OFFSET_HALF;
 245:Src/mp3_player.c **** 
 246:Src/mp3_player.c **** 	if(mp3_player_process_frame() != 0)
 247:Src/mp3_player.c **** 	{
 248:Src/mp3_player.c **** 		BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 249:Src/mp3_player.c **** 		state = NEXT;
 250:Src/mp3_player.c **** 	}
 251:Src/mp3_player.c **** }
 252:Src/mp3_player.c **** 
 253:Src/mp3_player.c **** // Fill the input buffer with mp3 data from the USB for the decoder
 254:Src/mp3_player.c **** int fill_input_buffer() {
  77              		.loc 1 254 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81 0000 30B5     		push	{r4, r5, lr}
  82              	.LCFI1:
  83              		.cfi_def_cfa_offset 12
  84              		.cfi_offset 4, -12
  85              		.cfi_offset 5, -8
  86              		.cfi_offset 14, -4
  87 0002 83B0     		sub	sp, sp, #12
  88              	.LCFI2:
  89              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 7


 255:Src/mp3_player.c **** 
 256:Src/mp3_player.c **** 	unsigned int bytes_read;
 257:Src/mp3_player.c **** 	unsigned int bytes_to_read;
 258:Src/mp3_player.c **** 
 259:Src/mp3_player.c **** 	if(bytes_left > 0) 
  90              		.loc 1 259 0
  91 0004 124B     		ldr	r3, .L13
  92 0006 1D68     		ldr	r5, [r3]
  93 0008 002D     		cmp	r5, #0
  94 000a 05DD     		ble	.L9
 260:Src/mp3_player.c **** 	{
 261:Src/mp3_player.c **** 		memcpy(input_buffer, read_pointer, bytes_left);
  95              		.loc 1 261 0
  96 000c 2A46     		mov	r2, r5
  97 000e 114B     		ldr	r3, .L13+4
  98 0010 1968     		ldr	r1, [r3]
  99 0012 1148     		ldr	r0, .L13+8
 100 0014 FFF7FEFF 		bl	memcpy
 101              	.LVL4:
 102              	.L9:
 262:Src/mp3_player.c **** 	}
 263:Src/mp3_player.c **** 
 264:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("fill: copied from read_pointer input_buffer\n");
 265:Src/mp3_player.c **** 
 266:Src/mp3_player.c **** 	bytes_to_read = READ_BUFFER_SIZE - bytes_left;
 103              		.loc 1 266 0
 104 0018 40F62874 		movw	r4, #3880
 105 001c 641B     		subs	r4, r4, r5
 106              	.LVL5:
 267:Src/mp3_player.c **** 
 268:Src/mp3_player.c **** 	f_read(&input_file, (BYTE *)input_buffer + bytes_left, bytes_to_read, &bytes_read);
 107              		.loc 1 268 0
 108 001e 01AB     		add	r3, sp, #4
 109 0020 2246     		mov	r2, r4
 110 0022 0D49     		ldr	r1, .L13+8
 111 0024 2944     		add	r1, r1, r5
 112 0026 0D48     		ldr	r0, .L13+12
 113 0028 FFF7FEFF 		bl	f_read
 114              	.LVL6:
 269:Src/mp3_player.c **** 
 270:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("fill: copied from file to input_buffer\n");
 271:Src/mp3_player.c **** 
 272:Src/mp3_player.c **** 	if (bytes_read == bytes_to_read)
 115              		.loc 1 272 0
 116 002c 019B     		ldr	r3, [sp, #4]
 117 002e 9C42     		cmp	r4, r3
 118 0030 0BD1     		bne	.L11
 273:Src/mp3_player.c **** 	{
 274:Src/mp3_player.c **** 		read_pointer = input_buffer;
 119              		.loc 1 274 0
 120 0032 094A     		ldr	r2, .L13+8
 121 0034 074B     		ldr	r3, .L13+4
 122 0036 1A60     		str	r2, [r3]
 275:Src/mp3_player.c **** 		in_buf_offs = 0;
 123              		.loc 1 275 0
 124 0038 0020     		movs	r0, #0
 125 003a 094B     		ldr	r3, .L13+16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 8


 126 003c 1860     		str	r0, [r3]
 276:Src/mp3_player.c **** 		bytes_left = READ_BUFFER_SIZE;
 127              		.loc 1 276 0
 128 003e 40F62872 		movw	r2, #3880
 129 0042 034B     		ldr	r3, .L13
 130 0044 1A60     		str	r2, [r3]
 131              	.L8:
 277:Src/mp3_player.c **** 		return 0;
 278:Src/mp3_player.c **** 	}
 279:Src/mp3_player.c **** 	else
 280:Src/mp3_player.c **** 	{
 281:Src/mp3_player.c **** 		return EOF;
 282:Src/mp3_player.c **** 	}
 283:Src/mp3_player.c **** }
 132              		.loc 1 283 0
 133 0046 03B0     		add	sp, sp, #12
 134              	.LCFI3:
 135              		.cfi_remember_state
 136              		.cfi_def_cfa_offset 12
 137              		@ sp needed
 138 0048 30BD     		pop	{r4, r5, pc}
 139              	.LVL7:
 140              	.L11:
 141              	.LCFI4:
 142              		.cfi_restore_state
 281:Src/mp3_player.c **** 	}
 143              		.loc 1 281 0
 144 004a 4FF0FF30 		mov	r0, #-1
 145 004e FAE7     		b	.L8
 146              	.L14:
 147              		.align	2
 148              	.L13:
 149 0050 00000000 		.word	.LANCHOR0
 150 0054 00000000 		.word	.LANCHOR1
 151 0058 00000000 		.word	input_buffer
 152 005c 00000000 		.word	input_file
 153 0060 00000000 		.word	.LANCHOR2
 154              		.cfi_endproc
 155              	.LFE147:
 157              		.section	.text.mp3_player_process_frame,"ax",%progbits
 158              		.align	1
 159              		.global	mp3_player_process_frame
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv5-sp-d16
 165              	mp3_player_process_frame:
 166              	.LFB144:
 153:Src/mp3_player.c ****     if(DEBUG_ON) xprintf("process: starting\n");
 167              		.loc 1 153 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 32
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 30B5     		push	{r4, r5, lr}
 172              	.LCFI5:
 173              		.cfi_def_cfa_offset 12
 174              		.cfi_offset 4, -12
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 9


 175              		.cfi_offset 5, -8
 176              		.cfi_offset 14, -4
 177 0002 8BB0     		sub	sp, sp, #44
 178              	.LCFI6:
 179              		.cfi_def_cfa_offset 56
 157:Src/mp3_player.c **** 	{
 180              		.loc 1 157 0
 181 0004 4C4B     		ldr	r3, .L39
 182 0006 1B68     		ldr	r3, [r3]
 183 0008 43B1     		cbz	r3, .L33
 184              	.L16:
 163:Src/mp3_player.c **** 	while(in_buf_offs < 0) 
 185              		.loc 1 163 0
 186 000a 4C4B     		ldr	r3, .L39+4
 187 000c 1968     		ldr	r1, [r3]
 188 000e 4A4B     		ldr	r3, .L39
 189 0010 1868     		ldr	r0, [r3]
 190 0012 FFF7FEFF 		bl	MP3FindSyncWord
 191              	.LVL8:
 192 0016 4A4B     		ldr	r3, .L39+8
 193 0018 1860     		str	r0, [r3]
 164:Src/mp3_player.c **** 	{
 194              		.loc 1 164 0
 195 001a 0EE0     		b	.L18
 196              	.L33:
 159:Src/mp3_player.c **** 			return EOF;
 197              		.loc 1 159 0
 198 001c FFF7FEFF 		bl	fill_input_buffer
 199              	.LVL9:
 200 0020 0028     		cmp	r0, #0
 201 0022 F2D0     		beq	.L16
 160:Src/mp3_player.c **** 	}
 202              		.loc 1 160 0
 203 0024 4FF0FF34 		mov	r4, #-1
 204 0028 7FE0     		b	.L15
 205              	.L19:
 172:Src/mp3_player.c **** 	}
 206              		.loc 1 172 0
 207 002a 444B     		ldr	r3, .L39+4
 208 002c 1968     		ldr	r1, [r3]
 209 002e 424B     		ldr	r3, .L39
 210 0030 1868     		ldr	r0, [r3]
 211 0032 FFF7FEFF 		bl	MP3FindSyncWord
 212              	.LVL10:
 213 0036 424B     		ldr	r3, .L39+8
 214 0038 1860     		str	r0, [r3]
 215              	.L18:
 164:Src/mp3_player.c **** 	{
 216              		.loc 1 164 0
 217 003a 414B     		ldr	r3, .L39+8
 218 003c 1B68     		ldr	r3, [r3]
 219 003e 002B     		cmp	r3, #0
 220 0040 0FDA     		bge	.L34
 166:Src/mp3_player.c **** 		if(bytes_left > 0)
 221              		.loc 1 166 0
 222 0042 FFF7FEFF 		bl	fill_input_buffer
 223              	.LVL11:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 10


 224 0046 0028     		cmp	r0, #0
 225 0048 6DD1     		bne	.L28
 167:Src/mp3_player.c **** 		{
 226              		.loc 1 167 0
 227 004a 3C4B     		ldr	r3, .L39+4
 228 004c 1B68     		ldr	r3, [r3]
 229 004e 002B     		cmp	r3, #0
 230 0050 EBDD     		ble	.L19
 169:Src/mp3_player.c **** 			read_pointer++;
 231              		.loc 1 169 0
 232 0052 013B     		subs	r3, r3, #1
 233 0054 394A     		ldr	r2, .L39+4
 234 0056 1360     		str	r3, [r2]
 170:Src/mp3_player.c **** 		}
 235              		.loc 1 170 0
 236 0058 374A     		ldr	r2, .L39
 237 005a 1368     		ldr	r3, [r2]
 238 005c 0133     		adds	r3, r3, #1
 239 005e 1360     		str	r3, [r2]
 240 0060 E3E7     		b	.L19
 241              	.L34:
 174:Src/mp3_player.c **** 	bytes_left -= in_buf_offs;
 242              		.loc 1 174 0
 243 0062 3549     		ldr	r1, .L39
 244 0064 0A68     		ldr	r2, [r1]
 245 0066 1A44     		add	r2, r2, r3
 246 0068 0A60     		str	r2, [r1]
 175:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("process: findSyncWord read\n");
 247              		.loc 1 175 0
 248 006a 3448     		ldr	r0, .L39+4
 249 006c 0168     		ldr	r1, [r0]
 250 006e CB1A     		subs	r3, r1, r3
 251 0070 0360     		str	r3, [r0]
 178:Src/mp3_player.c **** 			mp3FrameInfo.nChans == 2 &&
 252              		.loc 1 178 0
 253 0072 03A9     		add	r1, sp, #12
 254 0074 334B     		ldr	r3, .L39+12
 255 0076 1868     		ldr	r0, [r3]
 256 0078 FFF7FEFF 		bl	MP3GetNextFrameInfo
 257              	.LVL12:
 258 007c 10B9     		cbnz	r0, .L21
 179:Src/mp3_player.c **** 			mp3FrameInfo.version == 0)
 259              		.loc 1 179 0 discriminator 1
 260 007e 049B     		ldr	r3, [sp, #16]
 178:Src/mp3_player.c **** 			mp3FrameInfo.nChans == 2 &&
 261              		.loc 1 178 0 discriminator 1
 262 0080 022B     		cmp	r3, #2
 263 0082 0CD0     		beq	.L35
 264              	.L21:
 185:Src/mp3_player.c **** 		{
 265              		.loc 1 185 0
 266 0084 2D4B     		ldr	r3, .L39+4
 267 0086 1B68     		ldr	r3, [r3]
 268 0088 002B     		cmp	r3, #0
 269 008a 51DD     		ble	.L29
 187:Src/mp3_player.c **** 			read_pointer += 1;
 270              		.loc 1 187 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 11


 271 008c 013B     		subs	r3, r3, #1
 272 008e 2B4A     		ldr	r2, .L39+4
 273 0090 1360     		str	r3, [r2]
 188:Src/mp3_player.c **** 		}
 274              		.loc 1 188 0
 275 0092 294A     		ldr	r2, .L39
 276 0094 1368     		ldr	r3, [r2]
 277 0096 0133     		adds	r3, r3, #1
 278 0098 1360     		str	r3, [r2]
 190:Src/mp3_player.c **** 	}
 279              		.loc 1 190 0
 280 009a 0024     		movs	r4, #0
 281 009c 45E0     		b	.L15
 282              	.L35:
 180:Src/mp3_player.c **** 	{
 283              		.loc 1 180 0
 284 009e 099C     		ldr	r4, [sp, #36]
 179:Src/mp3_player.c **** 			mp3FrameInfo.version == 0)
 285              		.loc 1 179 0
 286 00a0 002C     		cmp	r4, #0
 287 00a2 EFD1     		bne	.L21
 193:Src/mp3_player.c **** 	{
 288              		.loc 1 193 0
 289 00a4 254B     		ldr	r3, .L39+4
 290 00a6 1A68     		ldr	r2, [r3]
 291 00a8 40F29373 		movw	r3, #1939
 292 00ac 9A42     		cmp	r2, r3
 293 00ae 17DD     		ble	.L36
 294              	.L23:
 199:Src/mp3_player.c **** 	{
 295              		.loc 1 199 0
 296 00b0 254B     		ldr	r3, .L39+16
 297 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 298 00b4 012B     		cmp	r3, #1
 299 00b6 1AD0     		beq	.L37
 300              	.L24:
 205:Src/mp3_player.c ****         if(DEBUG_ON) xprintf("process: out_buf full\n");
 301              		.loc 1 205 0
 302 00b8 234B     		ldr	r3, .L39+16
 303 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 304 00bc 022B     		cmp	r3, #2
 305 00be 24D0     		beq	.L38
 306              	.L25:
 211:Src/mp3_player.c **** 	{
 307              		.loc 1 211 0
 308 00c0 224B     		ldr	r3, .L39+20
 309 00c2 1D68     		ldr	r5, [r3]
 310 00c4 002D     		cmp	r5, #0
 311 00c6 35D0     		beq	.L31
 213:Src/mp3_player.c **** 		{
 312              		.loc 1 213 0
 313 00c8 B5F1FF3F 		cmp	r5, #-1
 314 00cc 2DD1     		bne	.L15
 216:Src/mp3_player.c **** 			if(fill_input_buffer() != 0)
 315              		.loc 1 216 0
 316 00ce 0022     		movs	r2, #0
 317 00d0 1A4B     		ldr	r3, .L39+4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 12


 318 00d2 1A60     		str	r2, [r3]
 217:Src/mp3_player.c **** 				return EOF;
 319              		.loc 1 217 0
 320 00d4 FFF7FEFF 		bl	fill_input_buffer
 321              	.LVL13:
 322 00d8 0446     		mov	r4, r0
 323 00da 30B3     		cbz	r0, .L15
 218:Src/mp3_player.c **** 			break;
 324              		.loc 1 218 0
 325 00dc 2C46     		mov	r4, r5
 326 00de 24E0     		b	.L15
 327              	.L36:
 195:Src/mp3_player.c **** 			return EOF;
 328              		.loc 1 195 0
 329 00e0 FFF7FEFF 		bl	fill_input_buffer
 330              	.LVL14:
 331 00e4 0028     		cmp	r0, #0
 332 00e6 E3D0     		beq	.L23
 196:Src/mp3_player.c **** 	}
 333              		.loc 1 196 0
 334 00e8 4FF0FF34 		mov	r4, #-1
 335 00ec 1DE0     		b	.L15
 336              	.L37:
 202:Src/mp3_player.c **** 		out_buf_offs = BUFFER_OFFSET_NONE;
 337              		.loc 1 202 0
 338 00ee 154B     		ldr	r3, .L39+12
 339 00f0 1868     		ldr	r0, [r3]
 340 00f2 0025     		movs	r5, #0
 341 00f4 0095     		str	r5, [sp]
 342 00f6 164B     		ldr	r3, .L39+24
 343 00f8 104A     		ldr	r2, .L39+4
 344 00fa 0F49     		ldr	r1, .L39
 345 00fc FFF7FEFF 		bl	MP3Decode
 346              	.LVL15:
 347 0100 124B     		ldr	r3, .L39+20
 348 0102 1860     		str	r0, [r3]
 203:Src/mp3_player.c **** 	}
 349              		.loc 1 203 0
 350 0104 104B     		ldr	r3, .L39+16
 351 0106 1D70     		strb	r5, [r3]
 352 0108 D6E7     		b	.L24
 353              	.L38:
 207:Src/mp3_player.c **** 		out_buf_offs = BUFFER_OFFSET_NONE;
 354              		.loc 1 207 0
 355 010a 0E4B     		ldr	r3, .L39+12
 356 010c 1868     		ldr	r0, [r3]
 357 010e 0025     		movs	r5, #0
 358 0110 0095     		str	r5, [sp]
 359 0112 104B     		ldr	r3, .L39+28
 360 0114 094A     		ldr	r2, .L39+4
 361 0116 0849     		ldr	r1, .L39
 362 0118 FFF7FEFF 		bl	MP3Decode
 363              	.LVL16:
 364 011c 0B4B     		ldr	r3, .L39+20
 365 011e 1860     		str	r0, [r3]
 208:Src/mp3_player.c **** 	}
 366              		.loc 1 208 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 13


 367 0120 094B     		ldr	r3, .L39+16
 368 0122 1D70     		strb	r5, [r3]
 369 0124 CCE7     		b	.L25
 370              	.L28:
 166:Src/mp3_player.c **** 		if(bytes_left > 0)
 371              		.loc 1 166 0
 372 0126 4FF0FF34 		mov	r4, #-1
 373              	.L15:
 227:Src/mp3_player.c **** 
 374              		.loc 1 227 0
 375 012a 2046     		mov	r0, r4
 376 012c 0BB0     		add	sp, sp, #44
 377              	.LCFI7:
 378              		.cfi_remember_state
 379              		.cfi_def_cfa_offset 12
 380              		@ sp needed
 381 012e 30BD     		pop	{r4, r5, pc}
 382              	.L29:
 383              	.LCFI8:
 384              		.cfi_restore_state
 190:Src/mp3_player.c **** 	}
 385              		.loc 1 190 0
 386 0130 0024     		movs	r4, #0
 387 0132 FAE7     		b	.L15
 388              	.L31:
 226:Src/mp3_player.c **** }
 389              		.loc 1 226 0
 390 0134 2C46     		mov	r4, r5
 391 0136 F8E7     		b	.L15
 392              	.L40:
 393              		.align	2
 394              	.L39:
 395 0138 00000000 		.word	.LANCHOR1
 396 013c 00000000 		.word	.LANCHOR0
 397 0140 00000000 		.word	.LANCHOR2
 398 0144 00000000 		.word	.LANCHOR3
 399 0148 00000000 		.word	.LANCHOR4
 400 014c 00000000 		.word	.LANCHOR5
 401 0150 00000000 		.word	output_buffer
 402 0154 00120000 		.word	output_buffer+4608
 403              		.cfi_endproc
 404              	.LFE144:
 406              		.section	.text.mp3_player_play,"ax",%progbits
 407              		.align	1
 408              		.global	mp3_player_play
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu fpv5-sp-d16
 414              	mp3_player_play:
 415              	.LFB143:
 122:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("play: initializing decoder\n");
 416              		.loc 1 122 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 14


 421              	.LCFI9:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
 424              		.cfi_offset 14, -4
 124:Src/mp3_player.c **** 
 425              		.loc 1 124 0
 426 0002 FFF7FEFF 		bl	MP3InitDecoder
 427              	.LVL17:
 428 0006 154B     		ldr	r3, .L47
 429 0008 1860     		str	r0, [r3]
 127:Src/mp3_player.c **** 		state = PLAY;
 430              		.loc 1 127 0
 431 000a FFF7FEFF 		bl	mp3_player_process_frame
 432              	.LVL18:
 433 000e 60B1     		cbz	r0, .L46
 142:Src/mp3_player.c **** 	}
 434              		.loc 1 142 0
 435 0010 0322     		movs	r2, #3
 436 0012 134B     		ldr	r3, .L47+4
 437 0014 1A70     		strb	r2, [r3]
 438              	.L44:
 145:Src/mp3_player.c **** 	read_pointer = NULL;
 439              		.loc 1 145 0
 440 0016 0023     		movs	r3, #0
 441 0018 124A     		ldr	r2, .L47+8
 442 001a 1360     		str	r3, [r2]
 146:Src/mp3_player.c **** 	MP3FreeDecoder(hMP3Decoder);
 443              		.loc 1 146 0
 444 001c 124A     		ldr	r2, .L47+12
 445 001e 1360     		str	r3, [r2]
 147:Src/mp3_player.c **** 	if(DEBUG_ON) xprintf("play: freeing decoder\n");
 446              		.loc 1 147 0
 447 0020 0E4B     		ldr	r3, .L47
 448 0022 1868     		ldr	r0, [r3]
 449 0024 FFF7FEFF 		bl	MP3FreeDecoder
 450              	.LVL19:
 451 0028 08BD     		pop	{r3, pc}
 452              	.L46:
 128:Src/mp3_player.c **** 		BSP_AUDIO_OUT_Play((uint16_t*)&output_buffer[0], AUDIO_OUT_BUFFER_SIZE * 2);
 453              		.loc 1 128 0
 454 002a 0022     		movs	r2, #0
 455 002c 0C4B     		ldr	r3, .L47+4
 456 002e 1A70     		strb	r2, [r3]
 129:Src/mp3_player.c **** 		touchscreen_loop_init();
 457              		.loc 1 129 0
 458 0030 4FF41051 		mov	r1, #9216
 459 0034 0D48     		ldr	r0, .L47+16
 460 0036 FFF7FEFF 		bl	BSP_AUDIO_OUT_Play
 461              	.LVL20:
 130:Src/mp3_player.c **** 		while(1) {
 462              		.loc 1 130 0
 463 003a FFF7FEFF 		bl	touchscreen_loop_init
 464              	.LVL21:
 465              	.L43:
 132:Src/mp3_player.c **** 			if(state != PLAY && state != EMPTY) {
 466              		.loc 1 132 0
 467 003e FFF7FEFF 		bl	check_touchscreen
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 15


 468              	.LVL22:
 469 0042 074B     		ldr	r3, .L47+4
 470 0044 1870     		strb	r0, [r3]
 133:Src/mp3_player.c **** 				break;
 471              		.loc 1 133 0
 472 0046 0028     		cmp	r0, #0
 473 0048 18BF     		it	ne
 474 004a 0628     		cmpne	r0, #6
 475 004c F7D0     		beq	.L43
 137:Src/mp3_player.c **** 		out_buf_offs = BUFFER_OFFSET_NONE;
 476              		.loc 1 137 0
 477 004e 0220     		movs	r0, #2
 478 0050 FFF7FEFF 		bl	BSP_AUDIO_OUT_Stop
 479              	.LVL23:
 138:Src/mp3_player.c **** 	}
 480              		.loc 1 138 0
 481 0054 0022     		movs	r2, #0
 482 0056 064B     		ldr	r3, .L47+20
 483 0058 1A70     		strb	r2, [r3]
 484 005a DCE7     		b	.L44
 485              	.L48:
 486              		.align	2
 487              	.L47:
 488 005c 00000000 		.word	.LANCHOR3
 489 0060 00000000 		.word	state
 490 0064 00000000 		.word	.LANCHOR0
 491 0068 00000000 		.word	.LANCHOR1
 492 006c 00000000 		.word	output_buffer
 493 0070 00000000 		.word	.LANCHOR4
 494              		.cfi_endproc
 495              	.LFE143:
 497              		.section	.text.mp3_player_fsm,"ax",%progbits
 498              		.align	1
 499              		.global	mp3_player_fsm
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu fpv5-sp-d16
 505              	mp3_player_fsm:
 506              	.LFB141:
  58:Src/mp3_player.c ****     BSP_init();
 507              		.loc 1 58 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 336
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              	.LVL24:
 512 0000 10B5     		push	{r4, lr}
 513              	.LCFI10:
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 4, -8
 516              		.cfi_offset 14, -4
 517 0002 D4B0     		sub	sp, sp, #336
 518              	.LCFI11:
 519              		.cfi_def_cfa_offset 344
 520 0004 0446     		mov	r4, r0
  59:Src/mp3_player.c ****     state = NEXT;
 521              		.loc 1 59 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 16


 522 0006 FFF7FEFF 		bl	BSP_init
 523              	.LVL25:
  60:Src/mp3_player.c **** 
 524              		.loc 1 60 0
 525 000a 0322     		movs	r2, #3
 526 000c 1F4B     		ldr	r3, .L63
 527 000e 1A70     		strb	r2, [r3]
  63:Src/mp3_player.c **** 
 528              		.loc 1 63 0
 529 0010 2146     		mov	r1, r4
 530 0012 47A8     		add	r0, sp, #284
 531 0014 FFF7FEFF 		bl	f_opendir
 532              	.LVL26:
 533              	.L50:
  67:Src/mp3_player.c **** 		{
 534              		.loc 1 67 0
 535 0018 1C4B     		ldr	r3, .L63
 536 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 537 001c 1BB1     		cbz	r3, .L52
 538 001e 032B     		cmp	r3, #3
 539 0020 07D0     		beq	.L53
 540              	.L49:
 105:Src/mp3_player.c **** 
 541              		.loc 1 105 0
 542 0022 54B0     		add	sp, sp, #336
 543              	.LCFI12:
 544              		.cfi_remember_state
 545              		.cfi_def_cfa_offset 8
 546              		@ sp needed
 547 0024 10BD     		pop	{r4, pc}
 548              	.LVL27:
 549              	.L52:
 550              	.LCFI13:
 551              		.cfi_restore_state
 552              	.LBB2:
  70:Src/mp3_player.c ****                 f_close(&input_file);
 553              		.loc 1 70 0
 554 0026 FFF7FEFF 		bl	mp3_player_play
 555              	.LVL28:
  71:Src/mp3_player.c **** 				break;
 556              		.loc 1 71 0
 557 002a 1948     		ldr	r0, .L63+4
 558 002c FFF7FEFF 		bl	f_close
 559              	.LVL29:
  72:Src/mp3_player.c **** 			case NEXT:
 560              		.loc 1 72 0
 561 0030 F2E7     		b	.L50
 562              	.L53:
  77:Src/mp3_player.c ****                     xprintf("Error reading from directory\n");
 563              		.loc 1 77 0
 564 0032 01A9     		add	r1, sp, #4
 565 0034 47A8     		add	r0, sp, #284
 566 0036 FFF7FEFF 		bl	f_readdir
 567              	.LVL30:
 568 003a A0B9     		cbnz	r0, .L60
  81:Src/mp3_player.c ****                     xprintf("fsm: no more files to read\n");
 569              		.loc 1 81 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 17


 570 003c 9DF81A30 		ldrb	r3, [sp, #26]	@ zero_extendqisi2
 571 0040 ABB1     		cbz	r3, .L61
  87:Src/mp3_player.c ****                     if (f_open(&input_file, info.fname, FA_READ) != FR_OK) {
 572              		.loc 1 87 0
 573 0042 1449     		ldr	r1, .L63+8
 574 0044 0DF11A00 		add	r0, sp, #26
 575 0048 FFF7FEFF 		bl	strstr
 576              	.LVL31:
 577 004c 0028     		cmp	r0, #0
 578 004e E3D0     		beq	.L50
  88:Src/mp3_player.c ****                         xprintf("Error opening file\n");
 579              		.loc 1 88 0
 580 0050 0122     		movs	r2, #1
 581 0052 0DF11A01 		add	r1, sp, #26
 582 0056 0E48     		ldr	r0, .L63+4
 583 0058 FFF7FEFF 		bl	f_open
 584              	.LVL32:
 585 005c 90B9     		cbnz	r0, .L62
  93:Src/mp3_player.c ****                 }
 586              		.loc 1 93 0
 587 005e 0022     		movs	r2, #0
 588 0060 0A4B     		ldr	r3, .L63
 589 0062 1A70     		strb	r2, [r3]
 590 0064 D8E7     		b	.L50
 591              	.L60:
  78:Src/mp3_player.c ****                     return;
 592              		.loc 1 78 0
 593 0066 0C48     		ldr	r0, .L63+12
 594 0068 FFF7FEFF 		bl	xprintf
 595              	.LVL33:
  79:Src/mp3_player.c **** 				}
 596              		.loc 1 79 0
 597 006c D9E7     		b	.L49
 598              	.L61:
  82:Src/mp3_player.c ****                     f_closedir(&directory);
 599              		.loc 1 82 0
 600 006e 0B48     		ldr	r0, .L63+16
 601 0070 FFF7FEFF 		bl	xprintf
 602              	.LVL34:
  83:Src/mp3_player.c ****                     f_opendir(&directory, path);
 603              		.loc 1 83 0
 604 0074 47A8     		add	r0, sp, #284
 605 0076 FFF7FEFF 		bl	f_closedir
 606              	.LVL35:
  84:Src/mp3_player.c ****                     continue;
 607              		.loc 1 84 0
 608 007a 2146     		mov	r1, r4
 609 007c 47A8     		add	r0, sp, #284
 610 007e FFF7FEFF 		bl	f_opendir
 611              	.LVL36:
 612 0082 C9E7     		b	.L50
 613              	.L62:
  89:Src/mp3_player.c ****                         return;
 614              		.loc 1 89 0
 615 0084 0648     		ldr	r0, .L63+20
 616 0086 FFF7FEFF 		bl	xprintf
 617              	.LVL37:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 18


  90:Src/mp3_player.c ****                     }
 618              		.loc 1 90 0
 619 008a CAE7     		b	.L49
 620              	.L64:
 621              		.align	2
 622              	.L63:
 623 008c 00000000 		.word	state
 624 0090 00000000 		.word	input_file
 625 0094 3C000000 		.word	.LC4
 626 0098 00000000 		.word	.LC2
 627 009c 20000000 		.word	.LC3
 628 00a0 44000000 		.word	.LC5
 629              	.LBE2:
 630              		.cfi_endproc
 631              	.LFE141:
 633              		.section	.text.BSP_AUDIO_OUT_TransferComplete_CallBack,"ax",%progbits
 634              		.align	1
 635              		.global	BSP_AUDIO_OUT_TransferComplete_CallBack
 636              		.syntax unified
 637              		.thumb
 638              		.thumb_func
 639              		.fpu fpv5-sp-d16
 641              	BSP_AUDIO_OUT_TransferComplete_CallBack:
 642              	.LFB145:
 231:Src/mp3_player.c ****     out_buf_offs = BUFFER_OFFSET_FULL;
 643              		.loc 1 231 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647 0000 08B5     		push	{r3, lr}
 648              	.LCFI14:
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 3, -8
 651              		.cfi_offset 14, -4
 232:Src/mp3_player.c **** 
 652              		.loc 1 232 0
 653 0002 0222     		movs	r2, #2
 654 0004 064B     		ldr	r3, .L69
 655 0006 1A70     		strb	r2, [r3]
 234:Src/mp3_player.c **** 	{
 656              		.loc 1 234 0
 657 0008 FFF7FEFF 		bl	mp3_player_process_frame
 658              	.LVL38:
 659 000c 00B9     		cbnz	r0, .L68
 660              	.L65:
 661 000e 08BD     		pop	{r3, pc}
 662              	.L68:
 236:Src/mp3_player.c **** 		state = NEXT;
 663              		.loc 1 236 0
 664 0010 0220     		movs	r0, #2
 665 0012 FFF7FEFF 		bl	BSP_AUDIO_OUT_Stop
 666              	.LVL39:
 237:Src/mp3_player.c **** 	}
 667              		.loc 1 237 0
 668 0016 0322     		movs	r2, #3
 669 0018 024B     		ldr	r3, .L69+4
 670 001a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 19


 239:Src/mp3_player.c **** 
 671              		.loc 1 239 0
 672 001c F7E7     		b	.L65
 673              	.L70:
 674 001e 00BF     		.align	2
 675              	.L69:
 676 0020 00000000 		.word	.LANCHOR4
 677 0024 00000000 		.word	state
 678              		.cfi_endproc
 679              	.LFE145:
 681              		.section	.text.BSP_AUDIO_OUT_HalfTransfer_CallBack,"ax",%progbits
 682              		.align	1
 683              		.global	BSP_AUDIO_OUT_HalfTransfer_CallBack
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 687              		.fpu fpv5-sp-d16
 689              	BSP_AUDIO_OUT_HalfTransfer_CallBack:
 690              	.LFB146:
 243:Src/mp3_player.c ****     out_buf_offs = BUFFER_OFFSET_HALF;
 691              		.loc 1 243 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695 0000 08B5     		push	{r3, lr}
 696              	.LCFI15:
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 3, -8
 699              		.cfi_offset 14, -4
 244:Src/mp3_player.c **** 
 700              		.loc 1 244 0
 701 0002 0122     		movs	r2, #1
 702 0004 064B     		ldr	r3, .L75
 703 0006 1A70     		strb	r2, [r3]
 246:Src/mp3_player.c **** 	{
 704              		.loc 1 246 0
 705 0008 FFF7FEFF 		bl	mp3_player_process_frame
 706              	.LVL40:
 707 000c 00B9     		cbnz	r0, .L74
 708              	.L71:
 709 000e 08BD     		pop	{r3, pc}
 710              	.L74:
 248:Src/mp3_player.c **** 		state = NEXT;
 711              		.loc 1 248 0
 712 0010 0220     		movs	r0, #2
 713 0012 FFF7FEFF 		bl	BSP_AUDIO_OUT_Stop
 714              	.LVL41:
 249:Src/mp3_player.c **** 	}
 715              		.loc 1 249 0
 716 0016 0322     		movs	r2, #3
 717 0018 024B     		ldr	r3, .L75+4
 718 001a 1A70     		strb	r2, [r3]
 251:Src/mp3_player.c **** 
 719              		.loc 1 251 0
 720 001c F7E7     		b	.L71
 721              	.L76:
 722 001e 00BF     		.align	2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 20


 723              	.L75:
 724 0020 00000000 		.word	.LANCHOR4
 725 0024 00000000 		.word	state
 726              		.cfi_endproc
 727              	.LFE146:
 729              		.comm	input_file,560,4
 730              		.comm	input_buffer,3880,4
 731              		.comm	output_buffer,9216,4
 732              		.comm	state,1,1
 733              		.section	.bss.bytes_left,"aw",%nobits
 734              		.align	2
 735              		.set	.LANCHOR0,. + 0
 738              	bytes_left:
 739 0000 00000000 		.space	4
 740              		.section	.bss.decode_result,"aw",%nobits
 741              		.align	2
 742              		.set	.LANCHOR5,. + 0
 745              	decode_result:
 746 0000 00000000 		.space	4
 747              		.section	.bss.hMP3Decoder,"aw",%nobits
 748              		.align	2
 749              		.set	.LANCHOR3,. + 0
 752              	hMP3Decoder:
 753 0000 00000000 		.space	4
 754              		.section	.bss.in_buf_offs,"aw",%nobits
 755              		.align	2
 756              		.set	.LANCHOR2,. + 0
 759              	in_buf_offs:
 760 0000 00000000 		.space	4
 761              		.section	.bss.out_buf_offs,"aw",%nobits
 762              		.set	.LANCHOR4,. + 0
 765              	out_buf_offs:
 766 0000 00       		.space	1
 767              		.section	.bss.read_pointer,"aw",%nobits
 768              		.align	2
 769              		.set	.LANCHOR1,. + 0
 772              	read_pointer:
 773 0000 00000000 		.space	4
 774              		.section	.rodata.BSP_init.str1.4,"aMS",%progbits,1
 775              		.align	2
 776              	.LC0:
 777 0000 41756469 		.ascii	"Audio Init Ok\012\000"
 777      6F20496E 
 777      6974204F 
 777      6B0A00
 778 000f 00       		.space	1
 779              	.LC1:
 780 0010 41756469 		.ascii	"Audio Init Error\012\000"
 780      6F20496E 
 780      69742045 
 780      72726F72 
 780      0A00
 781              		.section	.rodata.mp3_player_fsm.str1.4,"aMS",%progbits,1
 782              		.align	2
 783              	.LC2:
 784 0000 4572726F 		.ascii	"Error reading from directory\012\000"
 784      72207265 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 21


 784      6164696E 
 784      67206672 
 784      6F6D2064 
 785 001e 0000     		.space	2
 786              	.LC3:
 787 0020 66736D3A 		.ascii	"fsm: no more files to read\012\000"
 787      206E6F20 
 787      6D6F7265 
 787      2066696C 
 787      65732074 
 788              	.LC4:
 789 003c 2E6D7033 		.ascii	".mp3\000"
 789      00
 790 0041 000000   		.space	3
 791              	.LC5:
 792 0044 4572726F 		.ascii	"Error opening file\012\000"
 792      72206F70 
 792      656E696E 
 792      67206669 
 792      6C650A00 
 793              		.text
 794              	.Letext0:
 795              		.file 2 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 796              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 797              		.file 4 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 798              		.file 5 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 799              		.file 6 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 800              		.file 7 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 801              		.file 8 "Inc/mp3_player.h"
 802              		.file 9 "./lib\\helix\\pub\\mp3dec.h"
 803              		.file 10 "Middlewares/Third_Party/FatFs/src/integer.h"
 804              		.file 11 "Drivers/CMSIS/Include/core_cm7.h"
 805              		.file 12 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 806              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 807              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 808              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 809              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 810              		.file 17 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdlib.h"
 811              		.file 18 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 812              		.file 19 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 813              		.file 20 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 814              		.file 21 "Middlewares/Third_Party/FatFs/src/ff.h"
 815              		.file 22 "Middlewares/Third_Party/FatFs/src/diskio.h"
 816              		.file 23 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 817              		.file 24 "Inc/sd_diskio.h"
 818              		.file 25 "Inc/usbh_diskio.h"
 819              		.file 26 "Inc/fatfs.h"
 820              		.file 27 "Drivers/BSP/STM32746G-Discovery/../Components/wm8994/../Common/audio.h"
 821              		.file 28 "Drivers/BSP/STM32746G-Discovery/../Components/wm8994/wm8994.h"
 822              		.file 29 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_audio.h"
 823              		.file 30 "Inc/gui.h"
 824              		.file 31 "Inc/term_io.h"
 825              		.file 32 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\string.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 mp3_player.c
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:18     .text.BSP_init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:25     .text.BSP_init:00000000 BSP_init
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:62     .text.BSP_init:00000028 $d
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:68     .text.fill_input_buffer:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:75     .text.fill_input_buffer:00000000 fill_input_buffer
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:149    .text.fill_input_buffer:00000050 $d
                            *COM*:00000f28 input_buffer
                            *COM*:00000230 input_file
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:158    .text.mp3_player_process_frame:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:165    .text.mp3_player_process_frame:00000000 mp3_player_process_frame
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:395    .text.mp3_player_process_frame:00000138 $d
                            *COM*:00002400 output_buffer
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:407    .text.mp3_player_play:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:414    .text.mp3_player_play:00000000 mp3_player_play
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:488    .text.mp3_player_play:0000005c $d
                            *COM*:00000001 state
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:498    .text.mp3_player_fsm:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:505    .text.mp3_player_fsm:00000000 mp3_player_fsm
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:623    .text.mp3_player_fsm:0000008c $d
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:634    .text.BSP_AUDIO_OUT_TransferComplete_CallBack:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:641    .text.BSP_AUDIO_OUT_TransferComplete_CallBack:00000000 BSP_AUDIO_OUT_TransferComplete_CallBack
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:676    .text.BSP_AUDIO_OUT_TransferComplete_CallBack:00000020 $d
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:682    .text.BSP_AUDIO_OUT_HalfTransfer_CallBack:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:689    .text.BSP_AUDIO_OUT_HalfTransfer_CallBack:00000000 BSP_AUDIO_OUT_HalfTransfer_CallBack
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:724    .text.BSP_AUDIO_OUT_HalfTransfer_CallBack:00000020 $d
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:734    .bss.bytes_left:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:738    .bss.bytes_left:00000000 bytes_left
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:741    .bss.decode_result:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:745    .bss.decode_result:00000000 decode_result
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:748    .bss.hMP3Decoder:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:752    .bss.hMP3Decoder:00000000 hMP3Decoder
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:755    .bss.in_buf_offs:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:759    .bss.in_buf_offs:00000000 in_buf_offs
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:765    .bss.out_buf_offs:00000000 out_buf_offs
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:766    .bss.out_buf_offs:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:768    .bss.read_pointer:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:772    .bss.read_pointer:00000000 read_pointer
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:775    .rodata.BSP_init.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s:782    .rodata.mp3_player_fsm.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
BSP_AUDIO_OUT_Init
xprintf
BSP_AUDIO_OUT_SetAudioFrameSlot
memcpy
f_read
MP3FindSyncWord
MP3GetNextFrameInfo
MP3Decode
MP3InitDecoder
MP3FreeDecoder
BSP_AUDIO_OUT_Play
touchscreen_loop_init
check_touchscreen
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccNm1oqA.s 			page 23


BSP_AUDIO_OUT_Stop
f_opendir
f_close
f_readdir
strstr
f_open
f_closedir
