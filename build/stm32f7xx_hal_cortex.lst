ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_cortex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_NVIC_SetPriorityGrouping
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	HAL_NVIC_SetPriorityGrouping:
  26              	.LFB138:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @file    stm32f7xx_hal_cortex.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           + Peripheral Control functions 
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   @verbatim  
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]  
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     ===========================================================
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]     
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         function according to the following table.
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority(). 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) please refer to programming manual for details in how to configure priority. 
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ preemption is no more possible. 
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (+@) Lowest preemption priority
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (+@) Lowest sub priority
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]  
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     ========================================================
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****            
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        is a CMSIS function that:
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        inside the stm32f7xx_hal_cortex.h file.
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                             
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   @endverbatim
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ******************************************************************************
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @attention
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * are permitted provided that the following conditions are met:
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer.
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer in the documentation
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *      and/or other materials provided with the distribution.
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *      may be used to endorse or promote products derived from this software
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *      without specific prior written permission.
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ******************************************************************************
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #include "stm32f7xx_hal.h"
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @addtogroup STM32F7xx_HAL_Driver
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions 
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @verbatim    
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       Systick functionalities 
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @endverbatim
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (preemption priority and subpriority)
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         using the required unlock sequence.
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  PriorityGroup The priority grouping bits length. 
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    4 bits for subpriority
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    3 bits for subpriority
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    2 bits for subpriority
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    1 bits for subpriority
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    0 bits for subpriority
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
  28              		.loc 1 160 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.LBB46:
  35              	.LBB47:
  36              		.file 2 "Drivers/CMSIS/Include/core_cm7.h"
   1:Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm7.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/core_cm7.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm7.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm7.h **** 
   9:Drivers/CMSIS/Include/core_cm7.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/core_cm7.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm7.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm7.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm7.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm7.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm7.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm7.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm7.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm7.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/core_cm7.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm7.h ****    *
  21:Drivers/CMSIS/Include/core_cm7.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm7.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/core_cm7.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm7.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm7.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm7.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm7.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm7.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm7.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm7.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm7.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/core_cm7.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 5


  34:Drivers/CMSIS/Include/core_cm7.h **** 
  35:Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm7.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm7.h **** #endif
  40:Drivers/CMSIS/Include/core_cm7.h **** 
  41:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  42:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm7.h **** 
  44:Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  45:Drivers/CMSIS/Include/core_cm7.h **** 
  46:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm7.h **** #endif
  49:Drivers/CMSIS/Include/core_cm7.h **** 
  50:Drivers/CMSIS/Include/core_cm7.h **** /**
  51:Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm7.h **** 
  54:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm7.h **** 
  57:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  59:Drivers/CMSIS/Include/core_cm7.h **** 
  60:Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  62:Drivers/CMSIS/Include/core_cm7.h ****  */
  63:Drivers/CMSIS/Include/core_cm7.h **** 
  64:Drivers/CMSIS/Include/core_cm7.h **** 
  65:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  66:Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  67:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm7.h **** /**
  69:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  70:Drivers/CMSIS/Include/core_cm7.h ****   @{
  71:Drivers/CMSIS/Include/core_cm7.h ****  */
  72:Drivers/CMSIS/Include/core_cm7.h **** 
  73:Drivers/CMSIS/Include/core_cm7.h **** /*  CMSIS CM7 definitions */
  74:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm7.h **** 
  79:Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (0x07U)                                      /*!< Cortex-M Core *
  80:Drivers/CMSIS/Include/core_cm7.h **** 
  81:Drivers/CMSIS/Include/core_cm7.h **** 
  82:Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm7.h **** 
  87:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static __inline
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 6


  91:Drivers/CMSIS/Include/core_cm7.h **** 
  92:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm7.h **** 
  97:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm7.h **** 
 102:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm7.h **** 
 106:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm7.h **** 
 111:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm7.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
 116:Drivers/CMSIS/Include/core_cm7.h **** 
 117:Drivers/CMSIS/Include/core_cm7.h **** #else
 118:Drivers/CMSIS/Include/core_cm7.h ****   #error Unknown compiler
 119:Drivers/CMSIS/Include/core_cm7.h **** #endif
 120:Drivers/CMSIS/Include/core_cm7.h **** 
 121:Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:Drivers/CMSIS/Include/core_cm7.h **** */
 124:Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
 125:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
 126:Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm7.h ****     #else
 129:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm7.h ****   #else
 133:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm7.h **** 
 136:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
 138:Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1)
 139:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm7.h ****     #else
 141:Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm7.h ****   #else
 145:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 7


 148:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 149:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm7.h ****     #else
 153:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm7.h ****   #else
 157:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm7.h **** 
 160:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 161:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 162:Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 163:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 164:Drivers/CMSIS/Include/core_cm7.h ****     #else
 165:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 167:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 168:Drivers/CMSIS/Include/core_cm7.h ****   #else
 169:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 170:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 171:Drivers/CMSIS/Include/core_cm7.h **** 
 172:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TMS470__ )
 173:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 174:Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 175:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 176:Drivers/CMSIS/Include/core_cm7.h ****     #else
 177:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 179:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 180:Drivers/CMSIS/Include/core_cm7.h ****   #else
 181:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 182:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 183:Drivers/CMSIS/Include/core_cm7.h **** 
 184:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 185:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 186:Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 187:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 188:Drivers/CMSIS/Include/core_cm7.h ****     #else
 189:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 191:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 192:Drivers/CMSIS/Include/core_cm7.h ****   #else
 193:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 194:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 195:Drivers/CMSIS/Include/core_cm7.h **** 
 196:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 197:Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 198:Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 199:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 200:Drivers/CMSIS/Include/core_cm7.h ****     #else
 201:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 203:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 204:Drivers/CMSIS/Include/core_cm7.h ****   #else
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 8


 205:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 206:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 207:Drivers/CMSIS/Include/core_cm7.h **** 
 208:Drivers/CMSIS/Include/core_cm7.h **** #endif
 209:Drivers/CMSIS/Include/core_cm7.h **** 
 210:Drivers/CMSIS/Include/core_cm7.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:Drivers/CMSIS/Include/core_cm7.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:Drivers/CMSIS/Include/core_cm7.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:Drivers/CMSIS/Include/core_cm7.h **** 
 214:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 215:Drivers/CMSIS/Include/core_cm7.h **** }
 216:Drivers/CMSIS/Include/core_cm7.h **** #endif
 217:Drivers/CMSIS/Include/core_cm7.h **** 
 218:Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 219:Drivers/CMSIS/Include/core_cm7.h **** 
 220:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 221:Drivers/CMSIS/Include/core_cm7.h **** 
 222:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 223:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 224:Drivers/CMSIS/Include/core_cm7.h **** 
 225:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 226:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 227:Drivers/CMSIS/Include/core_cm7.h **** #endif
 228:Drivers/CMSIS/Include/core_cm7.h **** 
 229:Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 230:Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 231:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 232:Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 233:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 234:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 235:Drivers/CMSIS/Include/core_cm7.h **** 
 236:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 237:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 238:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 240:Drivers/CMSIS/Include/core_cm7.h **** 
 241:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 242:Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 243:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 245:Drivers/CMSIS/Include/core_cm7.h **** 
 246:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 247:Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 248:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 249:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 250:Drivers/CMSIS/Include/core_cm7.h **** 
 251:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 252:Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 253:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 254:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 255:Drivers/CMSIS/Include/core_cm7.h **** 
 256:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 257:Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 258:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 259:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 260:Drivers/CMSIS/Include/core_cm7.h **** 
 261:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 9


 262:Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 263:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 264:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 265:Drivers/CMSIS/Include/core_cm7.h **** 
 266:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 267:Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 268:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 269:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 270:Drivers/CMSIS/Include/core_cm7.h **** #endif
 271:Drivers/CMSIS/Include/core_cm7.h **** 
 272:Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 273:Drivers/CMSIS/Include/core_cm7.h **** /**
 274:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 275:Drivers/CMSIS/Include/core_cm7.h **** 
 276:Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 277:Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 278:Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 279:Drivers/CMSIS/Include/core_cm7.h **** */
 280:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 281:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 282:Drivers/CMSIS/Include/core_cm7.h **** #else
 283:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 284:Drivers/CMSIS/Include/core_cm7.h **** #endif
 285:Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 286:Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 287:Drivers/CMSIS/Include/core_cm7.h **** 
 288:Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 289:Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 290:Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 291:Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 292:Drivers/CMSIS/Include/core_cm7.h **** 
 293:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 294:Drivers/CMSIS/Include/core_cm7.h **** 
 295:Drivers/CMSIS/Include/core_cm7.h **** 
 296:Drivers/CMSIS/Include/core_cm7.h **** 
 297:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 298:Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 299:Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 300:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 301:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 302:Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 303:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 304:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 305:Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 306:Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 307:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 308:Drivers/CMSIS/Include/core_cm7.h **** /**
 309:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 310:Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 311:Drivers/CMSIS/Include/core_cm7.h **** */
 312:Drivers/CMSIS/Include/core_cm7.h **** 
 313:Drivers/CMSIS/Include/core_cm7.h **** /**
 314:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 315:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 316:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 317:Drivers/CMSIS/Include/core_cm7.h ****   @{
 318:Drivers/CMSIS/Include/core_cm7.h ****  */
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 10


 319:Drivers/CMSIS/Include/core_cm7.h **** 
 320:Drivers/CMSIS/Include/core_cm7.h **** /**
 321:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 322:Drivers/CMSIS/Include/core_cm7.h ****  */
 323:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 324:Drivers/CMSIS/Include/core_cm7.h **** {
 325:Drivers/CMSIS/Include/core_cm7.h ****   struct
 326:Drivers/CMSIS/Include/core_cm7.h ****   {
 327:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 328:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 330:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 331:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 332:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 333:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 334:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 335:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 336:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 337:Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 338:Drivers/CMSIS/Include/core_cm7.h **** 
 339:Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 340:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 341:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 342:Drivers/CMSIS/Include/core_cm7.h **** 
 343:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 344:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 345:Drivers/CMSIS/Include/core_cm7.h **** 
 346:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 347:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 348:Drivers/CMSIS/Include/core_cm7.h **** 
 349:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 350:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 351:Drivers/CMSIS/Include/core_cm7.h **** 
 352:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 353:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 354:Drivers/CMSIS/Include/core_cm7.h **** 
 355:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 356:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 357:Drivers/CMSIS/Include/core_cm7.h **** 
 358:Drivers/CMSIS/Include/core_cm7.h **** 
 359:Drivers/CMSIS/Include/core_cm7.h **** /**
 360:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 361:Drivers/CMSIS/Include/core_cm7.h ****  */
 362:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 363:Drivers/CMSIS/Include/core_cm7.h **** {
 364:Drivers/CMSIS/Include/core_cm7.h ****   struct
 365:Drivers/CMSIS/Include/core_cm7.h ****   {
 366:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 367:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 368:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 369:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 370:Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 371:Drivers/CMSIS/Include/core_cm7.h **** 
 372:Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 373:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 374:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 375:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 11


 376:Drivers/CMSIS/Include/core_cm7.h **** 
 377:Drivers/CMSIS/Include/core_cm7.h **** /**
 378:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 379:Drivers/CMSIS/Include/core_cm7.h ****  */
 380:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 381:Drivers/CMSIS/Include/core_cm7.h **** {
 382:Drivers/CMSIS/Include/core_cm7.h ****   struct
 383:Drivers/CMSIS/Include/core_cm7.h ****   {
 384:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 385:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 386:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 387:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 388:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 389:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 390:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 391:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 392:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 393:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 394:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 395:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 396:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 397:Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 398:Drivers/CMSIS/Include/core_cm7.h **** 
 399:Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 400:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 401:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 402:Drivers/CMSIS/Include/core_cm7.h **** 
 403:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 404:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 405:Drivers/CMSIS/Include/core_cm7.h **** 
 406:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 407:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 408:Drivers/CMSIS/Include/core_cm7.h **** 
 409:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 410:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 411:Drivers/CMSIS/Include/core_cm7.h **** 
 412:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 413:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 414:Drivers/CMSIS/Include/core_cm7.h **** 
 415:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 416:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 417:Drivers/CMSIS/Include/core_cm7.h **** 
 418:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 419:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 420:Drivers/CMSIS/Include/core_cm7.h **** 
 421:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 422:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 423:Drivers/CMSIS/Include/core_cm7.h **** 
 424:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 425:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 426:Drivers/CMSIS/Include/core_cm7.h **** 
 427:Drivers/CMSIS/Include/core_cm7.h **** 
 428:Drivers/CMSIS/Include/core_cm7.h **** /**
 429:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 430:Drivers/CMSIS/Include/core_cm7.h ****  */
 431:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 432:Drivers/CMSIS/Include/core_cm7.h **** {
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 12


 433:Drivers/CMSIS/Include/core_cm7.h ****   struct
 434:Drivers/CMSIS/Include/core_cm7.h ****   {
 435:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 436:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 437:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 438:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 439:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 440:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 441:Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 442:Drivers/CMSIS/Include/core_cm7.h **** 
 443:Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 444:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 445:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 446:Drivers/CMSIS/Include/core_cm7.h **** 
 447:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 448:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 449:Drivers/CMSIS/Include/core_cm7.h **** 
 450:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 451:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 452:Drivers/CMSIS/Include/core_cm7.h **** 
 453:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 454:Drivers/CMSIS/Include/core_cm7.h **** 
 455:Drivers/CMSIS/Include/core_cm7.h **** 
 456:Drivers/CMSIS/Include/core_cm7.h **** /**
 457:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 458:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 459:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 460:Drivers/CMSIS/Include/core_cm7.h ****   @{
 461:Drivers/CMSIS/Include/core_cm7.h ****  */
 462:Drivers/CMSIS/Include/core_cm7.h **** 
 463:Drivers/CMSIS/Include/core_cm7.h **** /**
 464:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 465:Drivers/CMSIS/Include/core_cm7.h ****  */
 466:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 467:Drivers/CMSIS/Include/core_cm7.h **** {
 468:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 469:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 470:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 471:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 472:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 473:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 474:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 475:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 476:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 477:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 478:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 479:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 480:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 481:Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 482:Drivers/CMSIS/Include/core_cm7.h **** 
 483:Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 484:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 485:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 486:Drivers/CMSIS/Include/core_cm7.h **** 
 487:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 488:Drivers/CMSIS/Include/core_cm7.h **** 
 489:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 13


 490:Drivers/CMSIS/Include/core_cm7.h **** /**
 491:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 492:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 493:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 494:Drivers/CMSIS/Include/core_cm7.h ****   @{
 495:Drivers/CMSIS/Include/core_cm7.h ****  */
 496:Drivers/CMSIS/Include/core_cm7.h **** 
 497:Drivers/CMSIS/Include/core_cm7.h **** /**
 498:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 499:Drivers/CMSIS/Include/core_cm7.h ****  */
 500:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 501:Drivers/CMSIS/Include/core_cm7.h **** {
 502:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 503:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 504:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 505:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 506:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 507:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 508:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 509:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 510:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 511:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 512:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 513:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 514:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 515:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 516:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 517:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 518:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 519:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 520:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 521:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 522:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 523:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 524:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 525:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 526:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 527:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 528:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 529:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 530:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 531:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 532:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 1
 533:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 534:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 535:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 536:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 537:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 538:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 539:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 540:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 541:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 542:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 543:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 544:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 545:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 546:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 14


 547:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 548:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 549:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 550:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 551:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 552:Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 553:Drivers/CMSIS/Include/core_cm7.h **** 
 554:Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 555:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm7.h **** 
 558:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm7.h **** 
 561:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm7.h **** 
 564:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm7.h **** 
 567:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm7.h **** 
 570:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 571:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm7.h **** 
 574:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm7.h **** 
 577:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm7.h **** 
 580:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm7.h **** 
 583:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm7.h **** 
 586:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm7.h **** 
 589:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm7.h **** 
 592:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm7.h **** 
 595:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm7.h **** 
 598:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm7.h **** 
 601:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 602:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 15


 604:Drivers/CMSIS/Include/core_cm7.h **** 
 605:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 606:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm7.h **** 
 609:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm7.h **** 
 612:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm7.h **** 
 615:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm7.h **** 
 618:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm7.h **** 
 621:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm7.h **** 
 624:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm7.h **** 
 627:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 628:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm7.h **** 
 631:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm7.h **** 
 634:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm7.h **** 
 637:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 638:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 639:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm7.h **** 
 641:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm7.h **** 
 644:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 645:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm7.h **** 
 647:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 648:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm7.h **** 
 650:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 651:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm7.h **** 
 653:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 654:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm7.h **** 
 656:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 657:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm7.h **** 
 659:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 660:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 16


 661:Drivers/CMSIS/Include/core_cm7.h **** 
 662:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 663:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm7.h **** 
 665:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 666:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 667:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm7.h **** 
 669:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 670:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm7.h **** 
 672:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 673:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 674:Drivers/CMSIS/Include/core_cm7.h **** 
 675:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 677:Drivers/CMSIS/Include/core_cm7.h **** 
 678:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 680:Drivers/CMSIS/Include/core_cm7.h **** 
 681:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm7.h **** 
 684:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 686:Drivers/CMSIS/Include/core_cm7.h **** 
 687:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 689:Drivers/CMSIS/Include/core_cm7.h **** 
 690:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 691:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 692:Drivers/CMSIS/Include/core_cm7.h **** 
 693:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 694:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm7.h **** 
 696:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 697:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm7.h **** 
 699:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 700:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm7.h **** 
 702:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 703:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm7.h **** 
 705:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 706:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm7.h **** 
 708:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 709:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 711:Drivers/CMSIS/Include/core_cm7.h **** 
 712:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 713:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 714:Drivers/CMSIS/Include/core_cm7.h **** 
 715:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 716:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 717:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 17


 718:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 719:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 720:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 721:Drivers/CMSIS/Include/core_cm7.h **** 
 722:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 723:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 724:Drivers/CMSIS/Include/core_cm7.h **** 
 725:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 726:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 727:Drivers/CMSIS/Include/core_cm7.h **** 
 728:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 729:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 730:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 731:Drivers/CMSIS/Include/core_cm7.h **** 
 732:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 733:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 734:Drivers/CMSIS/Include/core_cm7.h **** 
 735:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 736:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 737:Drivers/CMSIS/Include/core_cm7.h **** 
 738:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 739:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 740:Drivers/CMSIS/Include/core_cm7.h **** 
 741:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 742:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 743:Drivers/CMSIS/Include/core_cm7.h **** 
 744:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 745:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 746:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 747:Drivers/CMSIS/Include/core_cm7.h **** 
 748:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 749:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 750:Drivers/CMSIS/Include/core_cm7.h **** 
 751:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 752:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 753:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 754:Drivers/CMSIS/Include/core_cm7.h **** 
 755:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 756:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 757:Drivers/CMSIS/Include/core_cm7.h **** 
 758:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 759:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 760:Drivers/CMSIS/Include/core_cm7.h **** 
 761:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 762:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 763:Drivers/CMSIS/Include/core_cm7.h **** 
 764:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 765:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 766:Drivers/CMSIS/Include/core_cm7.h **** 
 767:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 768:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 769:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 770:Drivers/CMSIS/Include/core_cm7.h **** 
 771:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 772:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 773:Drivers/CMSIS/Include/core_cm7.h **** 
 774:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 18


 775:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 776:Drivers/CMSIS/Include/core_cm7.h **** 
 777:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 778:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 779:Drivers/CMSIS/Include/core_cm7.h **** 
 780:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 781:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 782:Drivers/CMSIS/Include/core_cm7.h **** 
 783:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 784:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 785:Drivers/CMSIS/Include/core_cm7.h **** 
 786:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 787:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 788:Drivers/CMSIS/Include/core_cm7.h **** 
 789:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 790:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 791:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 792:Drivers/CMSIS/Include/core_cm7.h **** 
 793:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 794:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 795:Drivers/CMSIS/Include/core_cm7.h **** 
 796:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 797:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 798:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 799:Drivers/CMSIS/Include/core_cm7.h **** 
 800:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 801:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 802:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 803:Drivers/CMSIS/Include/core_cm7.h **** 
 804:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 805:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 806:Drivers/CMSIS/Include/core_cm7.h **** 
 807:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 808:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 809:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 810:Drivers/CMSIS/Include/core_cm7.h **** 
 811:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 812:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 813:Drivers/CMSIS/Include/core_cm7.h **** 
 814:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 815:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 816:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 817:Drivers/CMSIS/Include/core_cm7.h **** 
 818:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 819:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 820:Drivers/CMSIS/Include/core_cm7.h **** 
 821:Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 822:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 823:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 824:Drivers/CMSIS/Include/core_cm7.h **** 
 825:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 826:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 827:Drivers/CMSIS/Include/core_cm7.h **** 
 828:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 829:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 830:Drivers/CMSIS/Include/core_cm7.h **** 
 831:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 19


 832:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 833:Drivers/CMSIS/Include/core_cm7.h **** 
 834:Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 835:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 836:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 837:Drivers/CMSIS/Include/core_cm7.h **** 
 838:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 839:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 840:Drivers/CMSIS/Include/core_cm7.h **** 
 841:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 842:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 843:Drivers/CMSIS/Include/core_cm7.h **** 
 844:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 845:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 846:Drivers/CMSIS/Include/core_cm7.h **** 
 847:Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 848:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 849:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 850:Drivers/CMSIS/Include/core_cm7.h **** 
 851:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 852:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 853:Drivers/CMSIS/Include/core_cm7.h **** 
 854:Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 855:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 856:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 857:Drivers/CMSIS/Include/core_cm7.h **** 
 858:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 859:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 860:Drivers/CMSIS/Include/core_cm7.h **** 
 861:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 862:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 863:Drivers/CMSIS/Include/core_cm7.h **** 
 864:Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 865:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 866:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 867:Drivers/CMSIS/Include/core_cm7.h **** 
 868:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 869:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 870:Drivers/CMSIS/Include/core_cm7.h **** 
 871:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 872:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 873:Drivers/CMSIS/Include/core_cm7.h **** 
 874:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 875:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 876:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 877:Drivers/CMSIS/Include/core_cm7.h **** 
 878:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 879:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 880:Drivers/CMSIS/Include/core_cm7.h **** 
 881:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 882:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 883:Drivers/CMSIS/Include/core_cm7.h **** 
 884:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 885:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 886:Drivers/CMSIS/Include/core_cm7.h **** 
 887:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 888:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 20


 889:Drivers/CMSIS/Include/core_cm7.h **** 
 890:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 891:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 892:Drivers/CMSIS/Include/core_cm7.h **** 
 893:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 894:Drivers/CMSIS/Include/core_cm7.h **** 
 895:Drivers/CMSIS/Include/core_cm7.h **** 
 896:Drivers/CMSIS/Include/core_cm7.h **** /**
 897:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 898:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 899:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 900:Drivers/CMSIS/Include/core_cm7.h ****   @{
 901:Drivers/CMSIS/Include/core_cm7.h ****  */
 902:Drivers/CMSIS/Include/core_cm7.h **** 
 903:Drivers/CMSIS/Include/core_cm7.h **** /**
 904:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 905:Drivers/CMSIS/Include/core_cm7.h ****  */
 906:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 907:Drivers/CMSIS/Include/core_cm7.h **** {
 908:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 909:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 910:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 911:Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 912:Drivers/CMSIS/Include/core_cm7.h **** 
 913:Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 914:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 915:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 916:Drivers/CMSIS/Include/core_cm7.h **** 
 917:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 918:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 919:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 920:Drivers/CMSIS/Include/core_cm7.h **** 
 921:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 922:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 923:Drivers/CMSIS/Include/core_cm7.h **** 
 924:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 925:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 926:Drivers/CMSIS/Include/core_cm7.h **** 
 927:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 928:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 929:Drivers/CMSIS/Include/core_cm7.h **** 
 930:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 931:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 932:Drivers/CMSIS/Include/core_cm7.h **** 
 933:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 934:Drivers/CMSIS/Include/core_cm7.h **** 
 935:Drivers/CMSIS/Include/core_cm7.h **** 
 936:Drivers/CMSIS/Include/core_cm7.h **** /**
 937:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 938:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 939:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 940:Drivers/CMSIS/Include/core_cm7.h ****   @{
 941:Drivers/CMSIS/Include/core_cm7.h ****  */
 942:Drivers/CMSIS/Include/core_cm7.h **** 
 943:Drivers/CMSIS/Include/core_cm7.h **** /**
 944:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 945:Drivers/CMSIS/Include/core_cm7.h ****  */
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 21


 946:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 947:Drivers/CMSIS/Include/core_cm7.h **** {
 948:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 949:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 950:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 951:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 952:Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 953:Drivers/CMSIS/Include/core_cm7.h **** 
 954:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 955:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 956:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 957:Drivers/CMSIS/Include/core_cm7.h **** 
 958:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 959:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 960:Drivers/CMSIS/Include/core_cm7.h **** 
 961:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 962:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 963:Drivers/CMSIS/Include/core_cm7.h **** 
 964:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 965:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 966:Drivers/CMSIS/Include/core_cm7.h **** 
 967:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 968:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 969:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 970:Drivers/CMSIS/Include/core_cm7.h **** 
 971:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 972:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 973:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 974:Drivers/CMSIS/Include/core_cm7.h **** 
 975:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 976:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 977:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 978:Drivers/CMSIS/Include/core_cm7.h **** 
 979:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 980:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 981:Drivers/CMSIS/Include/core_cm7.h **** 
 982:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 983:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 984:Drivers/CMSIS/Include/core_cm7.h **** 
 985:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
 986:Drivers/CMSIS/Include/core_cm7.h **** 
 987:Drivers/CMSIS/Include/core_cm7.h **** 
 988:Drivers/CMSIS/Include/core_cm7.h **** /**
 989:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 990:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 991:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 992:Drivers/CMSIS/Include/core_cm7.h ****   @{
 993:Drivers/CMSIS/Include/core_cm7.h ****  */
 994:Drivers/CMSIS/Include/core_cm7.h **** 
 995:Drivers/CMSIS/Include/core_cm7.h **** /**
 996:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 997:Drivers/CMSIS/Include/core_cm7.h ****  */
 998:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 999:Drivers/CMSIS/Include/core_cm7.h **** {
1000:Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
1001:Drivers/CMSIS/Include/core_cm7.h ****   {
1002:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 22


1003:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1004:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1005:Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1006:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1007:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1008:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1009:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1010:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1011:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1012:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1013:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1014:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1015:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1016:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1017:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1018:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1019:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1020:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1021:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1022:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1023:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1024:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1025:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1026:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1027:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1028:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1029:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1030:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1031:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1032:Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1033:Drivers/CMSIS/Include/core_cm7.h **** 
1034:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1035:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1036:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
1037:Drivers/CMSIS/Include/core_cm7.h **** 
1038:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1039:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1040:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1041:Drivers/CMSIS/Include/core_cm7.h **** 
1042:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1043:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1044:Drivers/CMSIS/Include/core_cm7.h **** 
1045:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1046:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1047:Drivers/CMSIS/Include/core_cm7.h **** 
1048:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1049:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1050:Drivers/CMSIS/Include/core_cm7.h **** 
1051:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1052:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1053:Drivers/CMSIS/Include/core_cm7.h **** 
1054:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1055:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1056:Drivers/CMSIS/Include/core_cm7.h **** 
1057:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1058:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1059:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 23


1060:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1061:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1062:Drivers/CMSIS/Include/core_cm7.h **** 
1063:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1064:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1065:Drivers/CMSIS/Include/core_cm7.h **** 
1066:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1067:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1068:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1069:Drivers/CMSIS/Include/core_cm7.h **** 
1070:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1071:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1072:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1073:Drivers/CMSIS/Include/core_cm7.h **** 
1074:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1075:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
1076:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1077:Drivers/CMSIS/Include/core_cm7.h **** 
1078:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1079:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1080:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1081:Drivers/CMSIS/Include/core_cm7.h **** 
1082:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1083:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1084:Drivers/CMSIS/Include/core_cm7.h **** 
1085:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1086:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1087:Drivers/CMSIS/Include/core_cm7.h **** 
1088:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1089:Drivers/CMSIS/Include/core_cm7.h **** 
1090:Drivers/CMSIS/Include/core_cm7.h **** 
1091:Drivers/CMSIS/Include/core_cm7.h **** /**
1092:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1093:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1094:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1095:Drivers/CMSIS/Include/core_cm7.h ****   @{
1096:Drivers/CMSIS/Include/core_cm7.h ****  */
1097:Drivers/CMSIS/Include/core_cm7.h **** 
1098:Drivers/CMSIS/Include/core_cm7.h **** /**
1099:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1100:Drivers/CMSIS/Include/core_cm7.h ****  */
1101:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1102:Drivers/CMSIS/Include/core_cm7.h **** {
1103:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1104:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1105:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1106:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1107:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1108:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1109:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1110:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1111:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1112:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1113:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1114:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1115:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1116:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 24


1117:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1118:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1119:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1120:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1121:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1122:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1123:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1124:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1125:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1126:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1127:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1128:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1129:Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1130:Drivers/CMSIS/Include/core_cm7.h **** 
1131:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1132:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1133:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1134:Drivers/CMSIS/Include/core_cm7.h **** 
1135:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1136:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1137:Drivers/CMSIS/Include/core_cm7.h **** 
1138:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1139:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1140:Drivers/CMSIS/Include/core_cm7.h **** 
1141:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1142:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1143:Drivers/CMSIS/Include/core_cm7.h **** 
1144:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1145:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1146:Drivers/CMSIS/Include/core_cm7.h **** 
1147:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1148:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1149:Drivers/CMSIS/Include/core_cm7.h **** 
1150:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1151:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1152:Drivers/CMSIS/Include/core_cm7.h **** 
1153:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1154:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1155:Drivers/CMSIS/Include/core_cm7.h **** 
1156:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1157:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1158:Drivers/CMSIS/Include/core_cm7.h **** 
1159:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1160:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1161:Drivers/CMSIS/Include/core_cm7.h **** 
1162:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1163:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1164:Drivers/CMSIS/Include/core_cm7.h **** 
1165:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1166:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1167:Drivers/CMSIS/Include/core_cm7.h **** 
1168:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1169:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1170:Drivers/CMSIS/Include/core_cm7.h **** 
1171:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1172:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1173:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 25


1174:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1175:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1176:Drivers/CMSIS/Include/core_cm7.h **** 
1177:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1178:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1179:Drivers/CMSIS/Include/core_cm7.h **** 
1180:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1181:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1182:Drivers/CMSIS/Include/core_cm7.h **** 
1183:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1184:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1185:Drivers/CMSIS/Include/core_cm7.h **** 
1186:Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1187:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1188:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1189:Drivers/CMSIS/Include/core_cm7.h **** 
1190:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1191:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1192:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1193:Drivers/CMSIS/Include/core_cm7.h **** 
1194:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1195:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1196:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1197:Drivers/CMSIS/Include/core_cm7.h **** 
1198:Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1199:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1200:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1201:Drivers/CMSIS/Include/core_cm7.h **** 
1202:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1203:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1204:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1205:Drivers/CMSIS/Include/core_cm7.h **** 
1206:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1207:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1208:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1209:Drivers/CMSIS/Include/core_cm7.h **** 
1210:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1211:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1212:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1213:Drivers/CMSIS/Include/core_cm7.h **** 
1214:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1215:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1216:Drivers/CMSIS/Include/core_cm7.h **** 
1217:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1218:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1219:Drivers/CMSIS/Include/core_cm7.h **** 
1220:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1221:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1222:Drivers/CMSIS/Include/core_cm7.h **** 
1223:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1224:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1225:Drivers/CMSIS/Include/core_cm7.h **** 
1226:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1227:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1228:Drivers/CMSIS/Include/core_cm7.h **** 
1229:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1230:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 26


1231:Drivers/CMSIS/Include/core_cm7.h **** 
1232:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1233:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1234:Drivers/CMSIS/Include/core_cm7.h **** 
1235:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1236:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1237:Drivers/CMSIS/Include/core_cm7.h **** 
1238:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1239:Drivers/CMSIS/Include/core_cm7.h **** 
1240:Drivers/CMSIS/Include/core_cm7.h **** 
1241:Drivers/CMSIS/Include/core_cm7.h **** /**
1242:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1243:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1244:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1245:Drivers/CMSIS/Include/core_cm7.h ****   @{
1246:Drivers/CMSIS/Include/core_cm7.h ****  */
1247:Drivers/CMSIS/Include/core_cm7.h **** 
1248:Drivers/CMSIS/Include/core_cm7.h **** /**
1249:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1250:Drivers/CMSIS/Include/core_cm7.h ****  */
1251:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1252:Drivers/CMSIS/Include/core_cm7.h **** {
1253:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1254:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1255:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1256:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1257:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1258:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1259:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1260:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1261:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1262:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1263:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1264:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1265:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1266:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1267:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1268:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1269:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1270:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1271:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1272:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1273:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1274:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1275:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1276:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1277:Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1278:Drivers/CMSIS/Include/core_cm7.h **** 
1279:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1280:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1281:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1282:Drivers/CMSIS/Include/core_cm7.h **** 
1283:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1284:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1285:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1286:Drivers/CMSIS/Include/core_cm7.h **** 
1287:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 27


1288:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1289:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1290:Drivers/CMSIS/Include/core_cm7.h **** 
1291:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1292:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1293:Drivers/CMSIS/Include/core_cm7.h **** 
1294:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1295:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1296:Drivers/CMSIS/Include/core_cm7.h **** 
1297:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1298:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1299:Drivers/CMSIS/Include/core_cm7.h **** 
1300:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1301:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1302:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1303:Drivers/CMSIS/Include/core_cm7.h **** 
1304:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1305:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1306:Drivers/CMSIS/Include/core_cm7.h **** 
1307:Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1308:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1309:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1310:Drivers/CMSIS/Include/core_cm7.h **** 
1311:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1312:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1313:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1314:Drivers/CMSIS/Include/core_cm7.h **** 
1315:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1316:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1317:Drivers/CMSIS/Include/core_cm7.h **** 
1318:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1319:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1320:Drivers/CMSIS/Include/core_cm7.h **** 
1321:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1322:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1323:Drivers/CMSIS/Include/core_cm7.h **** 
1324:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1325:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1326:Drivers/CMSIS/Include/core_cm7.h **** 
1327:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1328:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1329:Drivers/CMSIS/Include/core_cm7.h **** 
1330:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1331:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1332:Drivers/CMSIS/Include/core_cm7.h **** 
1333:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1334:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1335:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1336:Drivers/CMSIS/Include/core_cm7.h **** 
1337:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1338:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1339:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1340:Drivers/CMSIS/Include/core_cm7.h **** 
1341:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1342:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1343:Drivers/CMSIS/Include/core_cm7.h **** 
1344:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 28


1345:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1346:Drivers/CMSIS/Include/core_cm7.h **** 
1347:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1348:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1349:Drivers/CMSIS/Include/core_cm7.h **** 
1350:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1351:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1352:Drivers/CMSIS/Include/core_cm7.h **** 
1353:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1354:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1355:Drivers/CMSIS/Include/core_cm7.h **** 
1356:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1357:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1358:Drivers/CMSIS/Include/core_cm7.h **** 
1359:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1360:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1361:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1362:Drivers/CMSIS/Include/core_cm7.h **** 
1363:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1364:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1365:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1366:Drivers/CMSIS/Include/core_cm7.h **** 
1367:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1368:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1369:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1370:Drivers/CMSIS/Include/core_cm7.h **** 
1371:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1372:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1373:Drivers/CMSIS/Include/core_cm7.h **** 
1374:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1375:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1376:Drivers/CMSIS/Include/core_cm7.h **** 
1377:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1378:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1379:Drivers/CMSIS/Include/core_cm7.h **** 
1380:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1381:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1382:Drivers/CMSIS/Include/core_cm7.h **** 
1383:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1384:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1385:Drivers/CMSIS/Include/core_cm7.h **** 
1386:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1387:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1388:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1389:Drivers/CMSIS/Include/core_cm7.h **** 
1390:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1391:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1392:Drivers/CMSIS/Include/core_cm7.h **** 
1393:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1394:Drivers/CMSIS/Include/core_cm7.h **** 
1395:Drivers/CMSIS/Include/core_cm7.h **** 
1396:Drivers/CMSIS/Include/core_cm7.h **** #if (__MPU_PRESENT == 1U)
1397:Drivers/CMSIS/Include/core_cm7.h **** /**
1398:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1399:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1400:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1401:Drivers/CMSIS/Include/core_cm7.h ****   @{
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 29


1402:Drivers/CMSIS/Include/core_cm7.h ****  */
1403:Drivers/CMSIS/Include/core_cm7.h **** 
1404:Drivers/CMSIS/Include/core_cm7.h **** /**
1405:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1406:Drivers/CMSIS/Include/core_cm7.h ****  */
1407:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1408:Drivers/CMSIS/Include/core_cm7.h **** {
1409:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1410:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1411:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1412:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1413:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1414:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1415:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1416:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1417:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1418:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1419:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1420:Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1421:Drivers/CMSIS/Include/core_cm7.h **** 
1422:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1423:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1424:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1425:Drivers/CMSIS/Include/core_cm7.h **** 
1426:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1427:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1428:Drivers/CMSIS/Include/core_cm7.h **** 
1429:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1430:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1431:Drivers/CMSIS/Include/core_cm7.h **** 
1432:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1433:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1434:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1435:Drivers/CMSIS/Include/core_cm7.h **** 
1436:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1437:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1438:Drivers/CMSIS/Include/core_cm7.h **** 
1439:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1440:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1441:Drivers/CMSIS/Include/core_cm7.h **** 
1442:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1443:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1444:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1445:Drivers/CMSIS/Include/core_cm7.h **** 
1446:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1447:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1448:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1449:Drivers/CMSIS/Include/core_cm7.h **** 
1450:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1451:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1452:Drivers/CMSIS/Include/core_cm7.h **** 
1453:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1454:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1455:Drivers/CMSIS/Include/core_cm7.h **** 
1456:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1457:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1458:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 30


1459:Drivers/CMSIS/Include/core_cm7.h **** 
1460:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1461:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1462:Drivers/CMSIS/Include/core_cm7.h **** 
1463:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1464:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1465:Drivers/CMSIS/Include/core_cm7.h **** 
1466:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1467:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1468:Drivers/CMSIS/Include/core_cm7.h **** 
1469:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1470:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1471:Drivers/CMSIS/Include/core_cm7.h **** 
1472:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1473:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1474:Drivers/CMSIS/Include/core_cm7.h **** 
1475:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1476:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1477:Drivers/CMSIS/Include/core_cm7.h **** 
1478:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1479:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1480:Drivers/CMSIS/Include/core_cm7.h **** 
1481:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1482:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1483:Drivers/CMSIS/Include/core_cm7.h **** 
1484:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1485:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1486:Drivers/CMSIS/Include/core_cm7.h **** 
1487:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1488:Drivers/CMSIS/Include/core_cm7.h **** #endif
1489:Drivers/CMSIS/Include/core_cm7.h **** 
1490:Drivers/CMSIS/Include/core_cm7.h **** 
1491:Drivers/CMSIS/Include/core_cm7.h **** #if (__FPU_PRESENT == 1U)
1492:Drivers/CMSIS/Include/core_cm7.h **** /**
1493:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1494:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1495:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1496:Drivers/CMSIS/Include/core_cm7.h ****   @{
1497:Drivers/CMSIS/Include/core_cm7.h ****  */
1498:Drivers/CMSIS/Include/core_cm7.h **** 
1499:Drivers/CMSIS/Include/core_cm7.h **** /**
1500:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1501:Drivers/CMSIS/Include/core_cm7.h ****  */
1502:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1503:Drivers/CMSIS/Include/core_cm7.h **** {
1504:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1505:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1506:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1507:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1508:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1509:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1510:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1511:Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1512:Drivers/CMSIS/Include/core_cm7.h **** 
1513:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1514:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1515:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 31


1516:Drivers/CMSIS/Include/core_cm7.h **** 
1517:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1518:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1519:Drivers/CMSIS/Include/core_cm7.h **** 
1520:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1521:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1522:Drivers/CMSIS/Include/core_cm7.h **** 
1523:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1524:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1525:Drivers/CMSIS/Include/core_cm7.h **** 
1526:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1527:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1528:Drivers/CMSIS/Include/core_cm7.h **** 
1529:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1530:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1531:Drivers/CMSIS/Include/core_cm7.h **** 
1532:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1533:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1534:Drivers/CMSIS/Include/core_cm7.h **** 
1535:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1536:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1537:Drivers/CMSIS/Include/core_cm7.h **** 
1538:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1539:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1540:Drivers/CMSIS/Include/core_cm7.h **** 
1541:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1542:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1543:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1544:Drivers/CMSIS/Include/core_cm7.h **** 
1545:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1546:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1547:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1548:Drivers/CMSIS/Include/core_cm7.h **** 
1549:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1550:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1551:Drivers/CMSIS/Include/core_cm7.h **** 
1552:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1553:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1554:Drivers/CMSIS/Include/core_cm7.h **** 
1555:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1556:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1557:Drivers/CMSIS/Include/core_cm7.h **** 
1558:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1559:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1560:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1561:Drivers/CMSIS/Include/core_cm7.h **** 
1562:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1563:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1564:Drivers/CMSIS/Include/core_cm7.h **** 
1565:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1566:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1567:Drivers/CMSIS/Include/core_cm7.h **** 
1568:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1569:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1570:Drivers/CMSIS/Include/core_cm7.h **** 
1571:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1572:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 32


1573:Drivers/CMSIS/Include/core_cm7.h **** 
1574:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1575:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1576:Drivers/CMSIS/Include/core_cm7.h **** 
1577:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1578:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1579:Drivers/CMSIS/Include/core_cm7.h **** 
1580:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1581:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1582:Drivers/CMSIS/Include/core_cm7.h **** 
1583:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1584:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1585:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1586:Drivers/CMSIS/Include/core_cm7.h **** 
1587:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1588:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1589:Drivers/CMSIS/Include/core_cm7.h **** 
1590:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1591:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1592:Drivers/CMSIS/Include/core_cm7.h **** 
1593:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1594:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1595:Drivers/CMSIS/Include/core_cm7.h **** 
1596:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1597:Drivers/CMSIS/Include/core_cm7.h **** 
1598:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1599:Drivers/CMSIS/Include/core_cm7.h **** #endif
1600:Drivers/CMSIS/Include/core_cm7.h **** 
1601:Drivers/CMSIS/Include/core_cm7.h **** 
1602:Drivers/CMSIS/Include/core_cm7.h **** /**
1603:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1604:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1605:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1606:Drivers/CMSIS/Include/core_cm7.h ****   @{
1607:Drivers/CMSIS/Include/core_cm7.h ****  */
1608:Drivers/CMSIS/Include/core_cm7.h **** 
1609:Drivers/CMSIS/Include/core_cm7.h **** /**
1610:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1611:Drivers/CMSIS/Include/core_cm7.h ****  */
1612:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1613:Drivers/CMSIS/Include/core_cm7.h **** {
1614:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1615:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1616:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1617:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1618:Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1619:Drivers/CMSIS/Include/core_cm7.h **** 
1620:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1621:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1622:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1623:Drivers/CMSIS/Include/core_cm7.h **** 
1624:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1625:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1626:Drivers/CMSIS/Include/core_cm7.h **** 
1627:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1628:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1629:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 33


1630:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1631:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1632:Drivers/CMSIS/Include/core_cm7.h **** 
1633:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1634:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1635:Drivers/CMSIS/Include/core_cm7.h **** 
1636:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1637:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1638:Drivers/CMSIS/Include/core_cm7.h **** 
1639:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1640:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1641:Drivers/CMSIS/Include/core_cm7.h **** 
1642:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1643:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1644:Drivers/CMSIS/Include/core_cm7.h **** 
1645:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1646:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1647:Drivers/CMSIS/Include/core_cm7.h **** 
1648:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1649:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1650:Drivers/CMSIS/Include/core_cm7.h **** 
1651:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1652:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1653:Drivers/CMSIS/Include/core_cm7.h **** 
1654:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1655:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1656:Drivers/CMSIS/Include/core_cm7.h **** 
1657:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1658:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1659:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1660:Drivers/CMSIS/Include/core_cm7.h **** 
1661:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1662:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1663:Drivers/CMSIS/Include/core_cm7.h **** 
1664:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1665:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1666:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1667:Drivers/CMSIS/Include/core_cm7.h **** 
1668:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1669:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1670:Drivers/CMSIS/Include/core_cm7.h **** 
1671:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1672:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1673:Drivers/CMSIS/Include/core_cm7.h **** 
1674:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1675:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1676:Drivers/CMSIS/Include/core_cm7.h **** 
1677:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1678:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1679:Drivers/CMSIS/Include/core_cm7.h **** 
1680:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1681:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1682:Drivers/CMSIS/Include/core_cm7.h **** 
1683:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1684:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1685:Drivers/CMSIS/Include/core_cm7.h **** 
1686:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 34


1687:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1688:Drivers/CMSIS/Include/core_cm7.h **** 
1689:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1690:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1691:Drivers/CMSIS/Include/core_cm7.h **** 
1692:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1693:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1694:Drivers/CMSIS/Include/core_cm7.h **** 
1695:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1696:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1697:Drivers/CMSIS/Include/core_cm7.h **** 
1698:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1699:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1700:Drivers/CMSIS/Include/core_cm7.h **** 
1701:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1702:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1703:Drivers/CMSIS/Include/core_cm7.h **** 
1704:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1705:Drivers/CMSIS/Include/core_cm7.h **** 
1706:Drivers/CMSIS/Include/core_cm7.h **** 
1707:Drivers/CMSIS/Include/core_cm7.h **** /**
1708:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1709:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1710:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1711:Drivers/CMSIS/Include/core_cm7.h ****   @{
1712:Drivers/CMSIS/Include/core_cm7.h ****  */
1713:Drivers/CMSIS/Include/core_cm7.h **** 
1714:Drivers/CMSIS/Include/core_cm7.h **** /**
1715:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1716:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1717:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field.
1718:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1719:Drivers/CMSIS/Include/core_cm7.h **** */
1720:Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1721:Drivers/CMSIS/Include/core_cm7.h **** 
1722:Drivers/CMSIS/Include/core_cm7.h **** /**
1723:Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1724:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1725:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register.
1726:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1727:Drivers/CMSIS/Include/core_cm7.h **** */
1728:Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1729:Drivers/CMSIS/Include/core_cm7.h **** 
1730:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1731:Drivers/CMSIS/Include/core_cm7.h **** 
1732:Drivers/CMSIS/Include/core_cm7.h **** 
1733:Drivers/CMSIS/Include/core_cm7.h **** /**
1734:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1735:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1736:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1737:Drivers/CMSIS/Include/core_cm7.h ****   @{
1738:Drivers/CMSIS/Include/core_cm7.h ****  */
1739:Drivers/CMSIS/Include/core_cm7.h **** 
1740:Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Cortex-M4 Hardware */
1741:Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1742:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1743:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 35


1744:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1745:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1746:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1747:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1748:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1749:Drivers/CMSIS/Include/core_cm7.h **** 
1750:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1751:Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1752:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1753:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1754:Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1755:Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1756:Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1757:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1758:Drivers/CMSIS/Include/core_cm7.h **** 
1759:Drivers/CMSIS/Include/core_cm7.h **** #if (__MPU_PRESENT == 1U)
1760:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1761:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1762:Drivers/CMSIS/Include/core_cm7.h **** #endif
1763:Drivers/CMSIS/Include/core_cm7.h **** 
1764:Drivers/CMSIS/Include/core_cm7.h **** #if (__FPU_PRESENT == 1U)
1765:Drivers/CMSIS/Include/core_cm7.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1766:Drivers/CMSIS/Include/core_cm7.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1767:Drivers/CMSIS/Include/core_cm7.h **** #endif
1768:Drivers/CMSIS/Include/core_cm7.h **** 
1769:Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1770:Drivers/CMSIS/Include/core_cm7.h **** 
1771:Drivers/CMSIS/Include/core_cm7.h **** 
1772:Drivers/CMSIS/Include/core_cm7.h **** 
1773:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1774:Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1775:Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1776:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1777:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1778:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1779:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1780:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1781:Drivers/CMSIS/Include/core_cm7.h **** /**
1782:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1783:Drivers/CMSIS/Include/core_cm7.h **** */
1784:Drivers/CMSIS/Include/core_cm7.h **** 
1785:Drivers/CMSIS/Include/core_cm7.h **** 
1786:Drivers/CMSIS/Include/core_cm7.h **** 
1787:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1788:Drivers/CMSIS/Include/core_cm7.h **** /**
1789:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1790:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1791:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1792:Drivers/CMSIS/Include/core_cm7.h ****   @{
1793:Drivers/CMSIS/Include/core_cm7.h ****  */
1794:Drivers/CMSIS/Include/core_cm7.h **** 
1795:Drivers/CMSIS/Include/core_cm7.h **** /**
1796:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1797:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1798:Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1799:Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1800:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 36


1801:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1802:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1803:Drivers/CMSIS/Include/core_cm7.h ****  */
1804:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1805:Drivers/CMSIS/Include/core_cm7.h **** {
1806:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1807:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1808:Drivers/CMSIS/Include/core_cm7.h **** 
1809:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  37              		.loc 2 1809 0
  38 0000 0649     		ldr	r1, .L2
  39 0002 CB68     		ldr	r3, [r1, #12]
  40              	.LVL1:
1810:Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  41              		.loc 2 1810 0
  42 0004 23F4E063 		bic	r3, r3, #1792
  43              	.LVL2:
  44 0008 1B04     		lsls	r3, r3, #16
  45 000a 1B0C     		lsrs	r3, r3, #16
  46              	.LVL3:
1811:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1812:Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1813:Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  47              		.loc 2 1813 0
  48 000c 0002     		lsls	r0, r0, #8
  49              	.LVL4:
  50 000e 00F4E060 		and	r0, r0, #1792
1812:Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  51              		.loc 2 1812 0
  52 0012 0343     		orrs	r3, r3, r0
  53              	.LVL5:
1811:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
  54              		.loc 2 1811 0
  55 0014 024A     		ldr	r2, .L2+4
  56 0016 1A43     		orrs	r2, r2, r3
  57              	.LVL6:
1814:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
  58              		.loc 2 1814 0
  59 0018 CA60     		str	r2, [r1, #12]
  60              	.LVL7:
  61              	.LBE47:
  62              	.LBE46:
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
  63              		.loc 1 166 0
  64 001a 7047     		bx	lr
  65              	.L3:
  66              		.align	2
  67              	.L2:
  68 001c 00ED00E0 		.word	-536810240
  69 0020 0000FA05 		.word	100270080
  70              		.cfi_endproc
  71              	.LFE138:
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 37


  73              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
  74              		.align	1
  75              		.global	HAL_NVIC_SetPriority
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  79              		.fpu fpv5-sp-d16
  81              	HAL_NVIC_SetPriority:
  82              	.LFB139:
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  PreemptPriority The preemption priority for the IRQn channel.
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority 
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  SubPriority the subpriority level for the IRQ channel.
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.          
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** { 
  83              		.loc 1 182 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL8:
  89 0000 30B4     		push	{r4, r5}
  90              	.LCFI0:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 4, -8
  93              		.cfi_offset 5, -4
  94              	.LVL9:
  95              	.LBB48:
  96              	.LBB49:
1815:Drivers/CMSIS/Include/core_cm7.h **** }
1816:Drivers/CMSIS/Include/core_cm7.h **** 
1817:Drivers/CMSIS/Include/core_cm7.h **** 
1818:Drivers/CMSIS/Include/core_cm7.h **** /**
1819:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1820:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1821:Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1822:Drivers/CMSIS/Include/core_cm7.h ****  */
1823:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1824:Drivers/CMSIS/Include/core_cm7.h **** {
1825:Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
  97              		.loc 2 1825 0
  98 0002 154B     		ldr	r3, .L11
  99 0004 DB68     		ldr	r3, [r3, #12]
 100 0006 C3F30223 		ubfx	r3, r3, #8, #3
 101              	.LVL10:
 102              	.LBE49:
 103              	.LBE48:
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 38


 104              	.LBB50:
 105              	.LBB51:
1826:Drivers/CMSIS/Include/core_cm7.h **** }
1827:Drivers/CMSIS/Include/core_cm7.h **** 
1828:Drivers/CMSIS/Include/core_cm7.h **** 
1829:Drivers/CMSIS/Include/core_cm7.h **** /**
1830:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable External Interrupt
1831:Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1832:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1833:Drivers/CMSIS/Include/core_cm7.h ****  */
1834:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1835:Drivers/CMSIS/Include/core_cm7.h **** {
1836:Drivers/CMSIS/Include/core_cm7.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1837:Drivers/CMSIS/Include/core_cm7.h **** }
1838:Drivers/CMSIS/Include/core_cm7.h **** 
1839:Drivers/CMSIS/Include/core_cm7.h **** 
1840:Drivers/CMSIS/Include/core_cm7.h **** /**
1841:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable External Interrupt
1842:Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1843:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1844:Drivers/CMSIS/Include/core_cm7.h ****  */
1845:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1846:Drivers/CMSIS/Include/core_cm7.h **** {
1847:Drivers/CMSIS/Include/core_cm7.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1848:Drivers/CMSIS/Include/core_cm7.h **** }
1849:Drivers/CMSIS/Include/core_cm7.h **** 
1850:Drivers/CMSIS/Include/core_cm7.h **** 
1851:Drivers/CMSIS/Include/core_cm7.h **** /**
1852:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1853:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1854:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
1855:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1856:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1857:Drivers/CMSIS/Include/core_cm7.h ****  */
1858:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1859:Drivers/CMSIS/Include/core_cm7.h **** {
1860:Drivers/CMSIS/Include/core_cm7.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1861:Drivers/CMSIS/Include/core_cm7.h **** }
1862:Drivers/CMSIS/Include/core_cm7.h **** 
1863:Drivers/CMSIS/Include/core_cm7.h **** 
1864:Drivers/CMSIS/Include/core_cm7.h **** /**
1865:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1866:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of an external interrupt.
1867:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1868:Drivers/CMSIS/Include/core_cm7.h ****  */
1869:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1870:Drivers/CMSIS/Include/core_cm7.h **** {
1871:Drivers/CMSIS/Include/core_cm7.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1872:Drivers/CMSIS/Include/core_cm7.h **** }
1873:Drivers/CMSIS/Include/core_cm7.h **** 
1874:Drivers/CMSIS/Include/core_cm7.h **** 
1875:Drivers/CMSIS/Include/core_cm7.h **** /**
1876:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1877:Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of an external interrupt.
1878:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1879:Drivers/CMSIS/Include/core_cm7.h ****  */
1880:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 39


1881:Drivers/CMSIS/Include/core_cm7.h **** {
1882:Drivers/CMSIS/Include/core_cm7.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1883:Drivers/CMSIS/Include/core_cm7.h **** }
1884:Drivers/CMSIS/Include/core_cm7.h **** 
1885:Drivers/CMSIS/Include/core_cm7.h **** 
1886:Drivers/CMSIS/Include/core_cm7.h **** /**
1887:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
1888:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in NVIC and returns the active bit.
1889:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
1890:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
1891:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
1892:Drivers/CMSIS/Include/core_cm7.h ****  */
1893:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1894:Drivers/CMSIS/Include/core_cm7.h **** {
1895:Drivers/CMSIS/Include/core_cm7.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1896:Drivers/CMSIS/Include/core_cm7.h **** }
1897:Drivers/CMSIS/Include/core_cm7.h **** 
1898:Drivers/CMSIS/Include/core_cm7.h **** 
1899:Drivers/CMSIS/Include/core_cm7.h **** /**
1900:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
1901:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of an interrupt.
1902:Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every core interrupt.
1903:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
1904:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
1905:Drivers/CMSIS/Include/core_cm7.h ****  */
1906:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1907:Drivers/CMSIS/Include/core_cm7.h **** {
1908:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) < 0)
1909:Drivers/CMSIS/Include/core_cm7.h ****   {
1910:Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_B
1911:Drivers/CMSIS/Include/core_cm7.h ****   }
1912:Drivers/CMSIS/Include/core_cm7.h ****   else
1913:Drivers/CMSIS/Include/core_cm7.h ****   {
1914:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_B
1915:Drivers/CMSIS/Include/core_cm7.h ****   }
1916:Drivers/CMSIS/Include/core_cm7.h **** }
1917:Drivers/CMSIS/Include/core_cm7.h **** 
1918:Drivers/CMSIS/Include/core_cm7.h **** 
1919:Drivers/CMSIS/Include/core_cm7.h **** /**
1920:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
1921:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of an interrupt.
1922:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1923:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify an internal (core) interrupt.
1924:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
1925:Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
1926:Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1927:Drivers/CMSIS/Include/core_cm7.h ****  */
1928:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1929:Drivers/CMSIS/Include/core_cm7.h **** {
1930:Drivers/CMSIS/Include/core_cm7.h **** 
1931:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) < 0)
1932:Drivers/CMSIS/Include/core_cm7.h ****   {
1933:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)
1934:Drivers/CMSIS/Include/core_cm7.h ****   }
1935:Drivers/CMSIS/Include/core_cm7.h ****   else
1936:Drivers/CMSIS/Include/core_cm7.h ****   {
1937:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 40


1938:Drivers/CMSIS/Include/core_cm7.h ****   }
1939:Drivers/CMSIS/Include/core_cm7.h **** }
1940:Drivers/CMSIS/Include/core_cm7.h **** 
1941:Drivers/CMSIS/Include/core_cm7.h **** 
1942:Drivers/CMSIS/Include/core_cm7.h **** /**
1943:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
1944:Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
1945:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
1946:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1947:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1948:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
1949:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1950:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1951:Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1952:Drivers/CMSIS/Include/core_cm7.h ****  */
1953:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1954:Drivers/CMSIS/Include/core_cm7.h **** {
1955:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1956:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
1957:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
1958:Drivers/CMSIS/Include/core_cm7.h **** 
1959:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 106              		.loc 2 1959 0
 107 000a C3F10704 		rsb	r4, r3, #7
 108 000e 042C     		cmp	r4, #4
 109 0010 28BF     		it	cs
 110 0012 0424     		movcs	r4, #4
 111              	.LVL11:
1960:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 112              		.loc 2 1960 0
 113 0014 1D1D     		adds	r5, r3, #4
 114 0016 062D     		cmp	r5, #6
 115 0018 14D9     		bls	.L8
 116 001a 033B     		subs	r3, r3, #3
 117              	.LVL12:
 118              	.L5:
1961:Drivers/CMSIS/Include/core_cm7.h **** 
1962:Drivers/CMSIS/Include/core_cm7.h ****   return (
1963:Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 119              		.loc 2 1963 0
 120 001c 4FF0FF35 		mov	r5, #-1
 121              	.LVL13:
 122 0020 05FA04F4 		lsl	r4, r5, r4
 123              	.LVL14:
 124 0024 21EA0401 		bic	r1, r1, r4
 125              	.LVL15:
 126 0028 9940     		lsls	r1, r1, r3
1964:Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 127              		.loc 2 1964 0
 128 002a 05FA03F3 		lsl	r3, r5, r3
 129              	.LVL16:
 130 002e 22EA0303 		bic	r3, r2, r3
1963:Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 131              		.loc 2 1963 0
 132 0032 1943     		orrs	r1, r1, r3
 133              	.LVL17:
 134              	.LBE51:
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 41


 135              	.LBE50:
 136              	.LBB53:
 137              	.LBB54:
1908:Drivers/CMSIS/Include/core_cm7.h ****   {
 138              		.loc 2 1908 0
 139 0034 0028     		cmp	r0, #0
 140 0036 07DB     		blt	.L10
1914:Drivers/CMSIS/Include/core_cm7.h ****   }
 141              		.loc 2 1914 0
 142 0038 0901     		lsls	r1, r1, #4
 143 003a C9B2     		uxtb	r1, r1
 144 003c 074B     		ldr	r3, .L11+4
 145 003e 1954     		strb	r1, [r3, r0]
 146              	.LVL18:
 147              	.L4:
 148              	.LBE54:
 149              	.LBE53:
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 150              		.loc 1 192 0
 151 0040 30BC     		pop	{r4, r5}
 152              	.LCFI1:
 153              		.cfi_remember_state
 154              		.cfi_restore 5
 155              		.cfi_restore 4
 156              		.cfi_def_cfa_offset 0
 157 0042 7047     		bx	lr
 158              	.LVL19:
 159              	.L8:
 160              	.LCFI2:
 161              		.cfi_restore_state
 162              	.LBB56:
 163              	.LBB52:
1960:Drivers/CMSIS/Include/core_cm7.h **** 
 164              		.loc 2 1960 0
 165 0044 0023     		movs	r3, #0
 166              	.LVL20:
 167 0046 E9E7     		b	.L5
 168              	.LVL21:
 169              	.L10:
 170              	.LBE52:
 171              	.LBE56:
 172              	.LBB57:
 173              	.LBB55:
1910:Drivers/CMSIS/Include/core_cm7.h ****   }
 174              		.loc 2 1910 0
 175 0048 00F00F00 		and	r0, r0, #15
 176              	.LVL22:
 177 004c 0901     		lsls	r1, r1, #4
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 42


 178 004e C9B2     		uxtb	r1, r1
 179 0050 034B     		ldr	r3, .L11+8
 180 0052 1954     		strb	r1, [r3, r0]
 181 0054 F4E7     		b	.L4
 182              	.L12:
 183 0056 00BF     		.align	2
 184              	.L11:
 185 0058 00ED00E0 		.word	-536810240
 186 005c 00E400E0 		.word	-536812544
 187 0060 14ED00E0 		.word	-536810220
 188              	.LBE55:
 189              	.LBE57:
 190              		.cfi_endproc
 191              	.LFE139:
 193              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 194              		.align	1
 195              		.global	HAL_NVIC_EnableIRQ
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu fpv5-sp-d16
 201              	HAL_NVIC_EnableIRQ:
 202              	.LFB140:
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         function should be called before. 
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 203              		.loc 1 204 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 208              	.LVL23:
 209              	.LBB58:
 210              	.LBB59:
1836:Drivers/CMSIS/Include/core_cm7.h **** }
 211              		.loc 2 1836 0
 212 0000 00F01F02 		and	r2, r0, #31
 213 0004 4009     		lsrs	r0, r0, #5
 214              	.LVL24:
 215 0006 0123     		movs	r3, #1
 216 0008 9340     		lsls	r3, r3, r2
 217 000a 024A     		ldr	r2, .L14
 218 000c 42F82030 		str	r3, [r2, r0, lsl #2]
 219              	.LVL25:
 220              	.LBE59:
 221              	.LBE58:
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 43


 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Enable interrupt */
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 222              		.loc 1 210 0
 223 0010 7047     		bx	lr
 224              	.L15:
 225 0012 00BF     		.align	2
 226              	.L14:
 227 0014 00E100E0 		.word	-536813312
 228              		.cfi_endproc
 229              	.LFE140:
 231              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 232              		.align	1
 233              		.global	HAL_NVIC_DisableIRQ
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu fpv5-sp-d16
 239              	HAL_NVIC_DisableIRQ:
 240              	.LFB141:
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 241              		.loc 1 220 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 246              	.LVL26:
 247              	.LBB60:
 248              	.LBB61:
1847:Drivers/CMSIS/Include/core_cm7.h **** }
 249              		.loc 2 1847 0
 250 0000 00F01F02 		and	r2, r0, #31
 251 0004 4009     		lsrs	r0, r0, #5
 252              	.LVL27:
 253 0006 0123     		movs	r3, #1
 254 0008 9340     		lsls	r3, r3, r2
 255 000a 2030     		adds	r0, r0, #32
 256 000c 014A     		ldr	r2, .L17
 257 000e 42F82030 		str	r3, [r2, r0, lsl #2]
 258              	.LVL28:
 259              	.LBE61:
 260              	.LBE60:
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable interrupt */
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 44


 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 261              		.loc 1 226 0
 262 0012 7047     		bx	lr
 263              	.L18:
 264              		.align	2
 265              	.L17:
 266 0014 00E100E0 		.word	-536813312
 267              		.cfi_endproc
 268              	.LFE141:
 270              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 271              		.align	1
 272              		.global	HAL_NVIC_SystemReset
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv5-sp-d16
 278              	HAL_NVIC_SystemReset:
 279              	.LFB142:
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 280              		.loc 1 233 0
 281              		.cfi_startproc
 282              		@ Volatile: function does not return.
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LBB70:
 287              	.LBB71:
 288              	.LBB72:
 289              	.LBB73:
 290              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 45


  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 46


  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 47


 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 48


 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 49


 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 50


 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 51


 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 52


 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 291              		.loc 3 429 0
 292              		.syntax unified
 293              	@ 429 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 294 0000 BFF34F8F 		dsb 0xF
 295              	@ 0 "" 2
 296              		.thumb
 297              		.syntax unified
 298              	.LBE73:
 299              	.LBE72:
1965:Drivers/CMSIS/Include/core_cm7.h ****          );
1966:Drivers/CMSIS/Include/core_cm7.h **** }
1967:Drivers/CMSIS/Include/core_cm7.h **** 
1968:Drivers/CMSIS/Include/core_cm7.h **** 
1969:Drivers/CMSIS/Include/core_cm7.h **** /**
1970:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
1971:Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
1972:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
1973:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1974:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1975:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1976:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
1977:Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1978:Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1979:Drivers/CMSIS/Include/core_cm7.h ****  */
1980:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1981:Drivers/CMSIS/Include/core_cm7.h **** {
1982:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1983:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
1984:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
1985:Drivers/CMSIS/Include/core_cm7.h **** 
1986:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1987:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1988:Drivers/CMSIS/Include/core_cm7.h **** 
1989:Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1990:Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1991:Drivers/CMSIS/Include/core_cm7.h **** }
1992:Drivers/CMSIS/Include/core_cm7.h **** 
1993:Drivers/CMSIS/Include/core_cm7.h **** 
1994:Drivers/CMSIS/Include/core_cm7.h **** /**
1995:Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
1996:Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
1997:Drivers/CMSIS/Include/core_cm7.h ****  */
1998:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1999:Drivers/CMSIS/Include/core_cm7.h **** {
2000:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2001:Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2002:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2003:Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 53


 300              		.loc 2 2003 0
 301 0004 0549     		ldr	r1, .L21
 302 0006 CA68     		ldr	r2, [r1, #12]
 303 0008 02F4E062 		and	r2, r2, #1792
2002:Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 304              		.loc 2 2002 0
 305 000c 044B     		ldr	r3, .L21+4
 306 000e 1343     		orrs	r3, r3, r2
 307 0010 CB60     		str	r3, [r1, #12]
 308              	.LBB74:
 309              	.LBB75:
 310              		.loc 3 429 0
 311              		.syntax unified
 312              	@ 429 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 313 0012 BFF34F8F 		dsb 0xF
 314              	@ 0 "" 2
 315              		.thumb
 316              		.syntax unified
 317              	.L20:
 318              	.LBE75:
 319              	.LBE74:
 320              	.LBB76:
 321              	.LBB77:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 322              		.loc 3 375 0
 323              		.syntax unified
 324              	@ 375 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 325 0016 00BF     		nop
 326              	@ 0 "" 2
 327              		.thumb
 328              		.syntax unified
 329 0018 FDE7     		b	.L20
 330              	.L22:
 331 001a 00BF     		.align	2
 332              	.L21:
 333 001c 00ED00E0 		.word	-536810240
 334 0020 0400FA05 		.word	100270084
 335              	.LBE77:
 336              	.LBE76:
 337              	.LBE71:
 338              	.LBE70:
 339              		.cfi_endproc
 340              	.LFE142:
 342              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 343              		.align	1
 344              		.global	HAL_SYSTICK_Config
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 348              		.fpu fpv5-sp-d16
 350              	HAL_SYSTICK_Config:
 351              	.LFB143:
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* System Reset */
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SystemReset();
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 54


 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                  - 1  Function failed.
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 352              		.loc 1 246 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357              	.LVL29:
 358              	.LBB78:
 359              	.LBB79:
2004:Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2005:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2006:Drivers/CMSIS/Include/core_cm7.h **** 
2007:Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2008:Drivers/CMSIS/Include/core_cm7.h ****   {
2009:Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
2010:Drivers/CMSIS/Include/core_cm7.h ****   }
2011:Drivers/CMSIS/Include/core_cm7.h **** }
2012:Drivers/CMSIS/Include/core_cm7.h **** 
2013:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2014:Drivers/CMSIS/Include/core_cm7.h **** 
2015:Drivers/CMSIS/Include/core_cm7.h **** 
2016:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2017:Drivers/CMSIS/Include/core_cm7.h **** /**
2018:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2019:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2020:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2021:Drivers/CMSIS/Include/core_cm7.h ****   @{
2022:Drivers/CMSIS/Include/core_cm7.h ****  */
2023:Drivers/CMSIS/Include/core_cm7.h **** 
2024:Drivers/CMSIS/Include/core_cm7.h **** /**
2025:Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2026:Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2027:Drivers/CMSIS/Include/core_cm7.h ****   \returns
2028:Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2029:Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2030:Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2031:Drivers/CMSIS/Include/core_cm7.h ****  */
2032:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2033:Drivers/CMSIS/Include/core_cm7.h **** {
2034:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2035:Drivers/CMSIS/Include/core_cm7.h **** 
2036:Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2037:Drivers/CMSIS/Include/core_cm7.h ****   if        ((mvfr0 & 0x00000FF0UL) == 0x220UL)
2038:Drivers/CMSIS/Include/core_cm7.h ****   {
2039:Drivers/CMSIS/Include/core_cm7.h ****     return 2UL;           /* Double + Single precision FPU */
2040:Drivers/CMSIS/Include/core_cm7.h ****   }
2041:Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & 0x00000FF0UL) == 0x020UL)
2042:Drivers/CMSIS/Include/core_cm7.h ****   {
2043:Drivers/CMSIS/Include/core_cm7.h ****     return 1UL;           /* Single precision FPU */
2044:Drivers/CMSIS/Include/core_cm7.h ****   }
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 55


2045:Drivers/CMSIS/Include/core_cm7.h ****   else
2046:Drivers/CMSIS/Include/core_cm7.h ****   {
2047:Drivers/CMSIS/Include/core_cm7.h ****     return 0UL;           /* No FPU */
2048:Drivers/CMSIS/Include/core_cm7.h ****   }
2049:Drivers/CMSIS/Include/core_cm7.h **** }
2050:Drivers/CMSIS/Include/core_cm7.h **** 
2051:Drivers/CMSIS/Include/core_cm7.h **** 
2052:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2053:Drivers/CMSIS/Include/core_cm7.h **** 
2054:Drivers/CMSIS/Include/core_cm7.h **** 
2055:Drivers/CMSIS/Include/core_cm7.h **** 
2056:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2057:Drivers/CMSIS/Include/core_cm7.h **** /**
2058:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2059:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2060:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2061:Drivers/CMSIS/Include/core_cm7.h ****   @{
2062:Drivers/CMSIS/Include/core_cm7.h ****  */
2063:Drivers/CMSIS/Include/core_cm7.h **** 
2064:Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2065:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2066:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2067:Drivers/CMSIS/Include/core_cm7.h **** 
2068:Drivers/CMSIS/Include/core_cm7.h **** 
2069:Drivers/CMSIS/Include/core_cm7.h **** /**
2070:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2071:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2072:Drivers/CMSIS/Include/core_cm7.h ****   */
2073:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
2074:Drivers/CMSIS/Include/core_cm7.h **** {
2075:Drivers/CMSIS/Include/core_cm7.h ****   #if (__ICACHE_PRESENT == 1U)
2076:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2077:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2078:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2079:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
2080:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2081:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2082:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2083:Drivers/CMSIS/Include/core_cm7.h **** }
2084:Drivers/CMSIS/Include/core_cm7.h **** 
2085:Drivers/CMSIS/Include/core_cm7.h **** 
2086:Drivers/CMSIS/Include/core_cm7.h **** /**
2087:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2088:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2089:Drivers/CMSIS/Include/core_cm7.h ****   */
2090:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2091:Drivers/CMSIS/Include/core_cm7.h **** {
2092:Drivers/CMSIS/Include/core_cm7.h ****   #if (__ICACHE_PRESENT == 1U)
2093:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2094:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2095:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2096:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2097:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2098:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2099:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2100:Drivers/CMSIS/Include/core_cm7.h **** }
2101:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 56


2102:Drivers/CMSIS/Include/core_cm7.h **** 
2103:Drivers/CMSIS/Include/core_cm7.h **** /**
2104:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2105:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2106:Drivers/CMSIS/Include/core_cm7.h ****   */
2107:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2108:Drivers/CMSIS/Include/core_cm7.h **** {
2109:Drivers/CMSIS/Include/core_cm7.h ****   #if (__ICACHE_PRESENT == 1U)
2110:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2111:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2112:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2113:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2114:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2115:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2116:Drivers/CMSIS/Include/core_cm7.h **** }
2117:Drivers/CMSIS/Include/core_cm7.h **** 
2118:Drivers/CMSIS/Include/core_cm7.h **** 
2119:Drivers/CMSIS/Include/core_cm7.h **** /**
2120:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2121:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2122:Drivers/CMSIS/Include/core_cm7.h ****   */
2123:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
2124:Drivers/CMSIS/Include/core_cm7.h **** {
2125:Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2126:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2127:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2128:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2129:Drivers/CMSIS/Include/core_cm7.h **** 
2130:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = (0U << 1U) | 0U;          /* Level 1 data cache */
2131:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2132:Drivers/CMSIS/Include/core_cm7.h **** 
2133:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2134:Drivers/CMSIS/Include/core_cm7.h **** 
2135:Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2136:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2137:Drivers/CMSIS/Include/core_cm7.h ****     do {
2138:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2139:Drivers/CMSIS/Include/core_cm7.h ****       do {
2140:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2141:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2142:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2143:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2144:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2145:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways--);
2146:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets--);
2147:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2148:Drivers/CMSIS/Include/core_cm7.h **** 
2149:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
2150:Drivers/CMSIS/Include/core_cm7.h **** 
2151:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2152:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2153:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2154:Drivers/CMSIS/Include/core_cm7.h **** }
2155:Drivers/CMSIS/Include/core_cm7.h **** 
2156:Drivers/CMSIS/Include/core_cm7.h **** 
2157:Drivers/CMSIS/Include/core_cm7.h **** /**
2158:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable D-Cache
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 57


2159:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off D-Cache
2160:Drivers/CMSIS/Include/core_cm7.h ****   */
2161:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableDCache (void)
2162:Drivers/CMSIS/Include/core_cm7.h **** {
2163:Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2164:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2165:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2166:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2167:Drivers/CMSIS/Include/core_cm7.h **** 
2168:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = (0U << 1U) | 0U;          /* Level 1 data cache */
2169:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2170:Drivers/CMSIS/Include/core_cm7.h **** 
2171:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2172:Drivers/CMSIS/Include/core_cm7.h **** 
2173:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
2174:Drivers/CMSIS/Include/core_cm7.h **** 
2175:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2176:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2177:Drivers/CMSIS/Include/core_cm7.h ****     do {
2178:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2179:Drivers/CMSIS/Include/core_cm7.h ****       do {
2180:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2181:Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2182:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2183:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2184:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2185:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways--);
2186:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets--);
2187:Drivers/CMSIS/Include/core_cm7.h **** 
2188:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2189:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2190:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2191:Drivers/CMSIS/Include/core_cm7.h **** }
2192:Drivers/CMSIS/Include/core_cm7.h **** 
2193:Drivers/CMSIS/Include/core_cm7.h **** 
2194:Drivers/CMSIS/Include/core_cm7.h **** /**
2195:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate D-Cache
2196:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache
2197:Drivers/CMSIS/Include/core_cm7.h ****   */
2198:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache (void)
2199:Drivers/CMSIS/Include/core_cm7.h **** {
2200:Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2201:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2202:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2203:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2204:Drivers/CMSIS/Include/core_cm7.h **** 
2205:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = (0U << 1U) | 0U;          /* Level 1 data cache */
2206:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2207:Drivers/CMSIS/Include/core_cm7.h **** 
2208:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2209:Drivers/CMSIS/Include/core_cm7.h **** 
2210:Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2211:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2212:Drivers/CMSIS/Include/core_cm7.h ****     do {
2213:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2214:Drivers/CMSIS/Include/core_cm7.h ****       do {
2215:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 58


2216:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2217:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2218:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2219:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2220:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways--);
2221:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets--);
2222:Drivers/CMSIS/Include/core_cm7.h **** 
2223:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2224:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2225:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2226:Drivers/CMSIS/Include/core_cm7.h **** }
2227:Drivers/CMSIS/Include/core_cm7.h **** 
2228:Drivers/CMSIS/Include/core_cm7.h **** 
2229:Drivers/CMSIS/Include/core_cm7.h **** /**
2230:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean D-Cache
2231:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache
2232:Drivers/CMSIS/Include/core_cm7.h ****   */
2233:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanDCache (void)
2234:Drivers/CMSIS/Include/core_cm7.h **** {
2235:Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2236:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2237:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2238:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2239:Drivers/CMSIS/Include/core_cm7.h **** 
2240:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = (0U << 1U) | 0U;          /* Level 1 data cache */
2241:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2242:Drivers/CMSIS/Include/core_cm7.h **** 
2243:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2244:Drivers/CMSIS/Include/core_cm7.h **** 
2245:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean D-Cache */
2246:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2247:Drivers/CMSIS/Include/core_cm7.h ****     do {
2248:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2249:Drivers/CMSIS/Include/core_cm7.h ****       do {
2250:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
2251:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
2252:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2253:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2254:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2255:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways--);
2256:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets--);
2257:Drivers/CMSIS/Include/core_cm7.h **** 
2258:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2259:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2260:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2261:Drivers/CMSIS/Include/core_cm7.h **** }
2262:Drivers/CMSIS/Include/core_cm7.h **** 
2263:Drivers/CMSIS/Include/core_cm7.h **** 
2264:Drivers/CMSIS/Include/core_cm7.h **** /**
2265:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean & Invalidate D-Cache
2266:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and Invalidates D-Cache
2267:Drivers/CMSIS/Include/core_cm7.h ****   */
2268:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanInvalidateDCache (void)
2269:Drivers/CMSIS/Include/core_cm7.h **** {
2270:Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2271:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2272:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 59


2273:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2274:Drivers/CMSIS/Include/core_cm7.h **** 
2275:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = (0U << 1U) | 0U;          /* Level 1 data cache */
2276:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2277:Drivers/CMSIS/Include/core_cm7.h **** 
2278:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2279:Drivers/CMSIS/Include/core_cm7.h **** 
2280:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2281:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2282:Drivers/CMSIS/Include/core_cm7.h ****     do {
2283:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2284:Drivers/CMSIS/Include/core_cm7.h ****       do {
2285:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2286:Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2287:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2288:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2289:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2290:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways--);
2291:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets--);
2292:Drivers/CMSIS/Include/core_cm7.h **** 
2293:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2294:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2295:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2296:Drivers/CMSIS/Include/core_cm7.h **** }
2297:Drivers/CMSIS/Include/core_cm7.h **** 
2298:Drivers/CMSIS/Include/core_cm7.h **** 
2299:Drivers/CMSIS/Include/core_cm7.h **** /**
2300:Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Invalidate by address
2301:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache for the given address
2302:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2303:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2304:Drivers/CMSIS/Include/core_cm7.h **** */
2305:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2306:Drivers/CMSIS/Include/core_cm7.h **** {
2307:Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2308:Drivers/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2309:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t)addr;
2310:Drivers/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32U;                /* in Cortex-M7 size of cache line is fixed to 8 words 
2311:Drivers/CMSIS/Include/core_cm7.h **** 
2312:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2313:Drivers/CMSIS/Include/core_cm7.h **** 
2314:Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2315:Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCIMVAC = op_addr;
2316:Drivers/CMSIS/Include/core_cm7.h ****       op_addr += linesize;
2317:Drivers/CMSIS/Include/core_cm7.h ****       op_size -= linesize;
2318:Drivers/CMSIS/Include/core_cm7.h ****     }
2319:Drivers/CMSIS/Include/core_cm7.h **** 
2320:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2321:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2322:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2323:Drivers/CMSIS/Include/core_cm7.h **** }
2324:Drivers/CMSIS/Include/core_cm7.h **** 
2325:Drivers/CMSIS/Include/core_cm7.h **** 
2326:Drivers/CMSIS/Include/core_cm7.h **** /**
2327:Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean by address
2328:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache for the given address
2329:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 60


2330:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2331:Drivers/CMSIS/Include/core_cm7.h **** */
2332:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
2333:Drivers/CMSIS/Include/core_cm7.h **** {
2334:Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1)
2335:Drivers/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2336:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t) addr;
2337:Drivers/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32U;                /* in Cortex-M7 size of cache line is fixed to 8 words 
2338:Drivers/CMSIS/Include/core_cm7.h **** 
2339:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2340:Drivers/CMSIS/Include/core_cm7.h **** 
2341:Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2342:Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCCMVAC = op_addr;
2343:Drivers/CMSIS/Include/core_cm7.h ****       op_addr += linesize;
2344:Drivers/CMSIS/Include/core_cm7.h ****       op_size -= linesize;
2345:Drivers/CMSIS/Include/core_cm7.h ****     }
2346:Drivers/CMSIS/Include/core_cm7.h **** 
2347:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2348:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2349:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2350:Drivers/CMSIS/Include/core_cm7.h **** }
2351:Drivers/CMSIS/Include/core_cm7.h **** 
2352:Drivers/CMSIS/Include/core_cm7.h **** 
2353:Drivers/CMSIS/Include/core_cm7.h **** /**
2354:Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean and Invalidate by address
2355:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and invalidates D_Cache for the given address
2356:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2357:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2358:Drivers/CMSIS/Include/core_cm7.h **** */
2359:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanInvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2360:Drivers/CMSIS/Include/core_cm7.h **** {
2361:Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2362:Drivers/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2363:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t) addr;
2364:Drivers/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32U;                /* in Cortex-M7 size of cache line is fixed to 8 words 
2365:Drivers/CMSIS/Include/core_cm7.h **** 
2366:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2367:Drivers/CMSIS/Include/core_cm7.h **** 
2368:Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2369:Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCCIMVAC = op_addr;
2370:Drivers/CMSIS/Include/core_cm7.h ****       op_addr += linesize;
2371:Drivers/CMSIS/Include/core_cm7.h ****       op_size -= linesize;
2372:Drivers/CMSIS/Include/core_cm7.h ****     }
2373:Drivers/CMSIS/Include/core_cm7.h **** 
2374:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2375:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2376:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2377:Drivers/CMSIS/Include/core_cm7.h **** }
2378:Drivers/CMSIS/Include/core_cm7.h **** 
2379:Drivers/CMSIS/Include/core_cm7.h **** 
2380:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_CacheFunctions */
2381:Drivers/CMSIS/Include/core_cm7.h **** 
2382:Drivers/CMSIS/Include/core_cm7.h **** 
2383:Drivers/CMSIS/Include/core_cm7.h **** 
2384:Drivers/CMSIS/Include/core_cm7.h **** /* ##################################    SysTick function  ########################################
2385:Drivers/CMSIS/Include/core_cm7.h **** /**
2386:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 61


2387:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2388:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure the System.
2389:Drivers/CMSIS/Include/core_cm7.h ****   @{
2390:Drivers/CMSIS/Include/core_cm7.h ****  */
2391:Drivers/CMSIS/Include/core_cm7.h **** 
2392:Drivers/CMSIS/Include/core_cm7.h **** #if (__Vendor_SysTickConfig == 0U)
2393:Drivers/CMSIS/Include/core_cm7.h **** 
2394:Drivers/CMSIS/Include/core_cm7.h **** /**
2395:Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Tick Configuration
2396:Drivers/CMSIS/Include/core_cm7.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2397:Drivers/CMSIS/Include/core_cm7.h ****            Counter is in free running mode to generate periodic interrupts.
2398:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2399:Drivers/CMSIS/Include/core_cm7.h ****   \return          0  Function succeeded.
2400:Drivers/CMSIS/Include/core_cm7.h ****   \return          1  Function failed.
2401:Drivers/CMSIS/Include/core_cm7.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2402:Drivers/CMSIS/Include/core_cm7.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2403:Drivers/CMSIS/Include/core_cm7.h ****            must contain a vendor-specific implementation of this function.
2404:Drivers/CMSIS/Include/core_cm7.h ****  */
2405:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
2406:Drivers/CMSIS/Include/core_cm7.h **** {
2407:Drivers/CMSIS/Include/core_cm7.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 360              		.loc 2 2407 0
 361 0000 0138     		subs	r0, r0, #1
 362              	.LVL30:
 363 0002 B0F1807F 		cmp	r0, #16777216
 364 0006 0AD2     		bcs	.L25
2408:Drivers/CMSIS/Include/core_cm7.h ****   {
2409:Drivers/CMSIS/Include/core_cm7.h ****     return (1UL);                                                   /* Reload value impossible */
2410:Drivers/CMSIS/Include/core_cm7.h ****   }
2411:Drivers/CMSIS/Include/core_cm7.h **** 
2412:Drivers/CMSIS/Include/core_cm7.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 365              		.loc 2 2412 0
 366 0008 064B     		ldr	r3, .L26
 367 000a 5860     		str	r0, [r3, #4]
 368              	.LVL31:
 369              	.LBB80:
 370              	.LBB81:
1910:Drivers/CMSIS/Include/core_cm7.h ****   }
 371              		.loc 2 1910 0
 372 000c 064A     		ldr	r2, .L26+4
 373 000e F021     		movs	r1, #240
 374 0010 82F82310 		strb	r1, [r2, #35]
 375              	.LVL32:
 376              	.LBE81:
 377              	.LBE80:
2413:Drivers/CMSIS/Include/core_cm7.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
2414:Drivers/CMSIS/Include/core_cm7.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 378              		.loc 2 2414 0
 379 0014 0020     		movs	r0, #0
 380              	.LVL33:
 381 0016 9860     		str	r0, [r3, #8]
2415:Drivers/CMSIS/Include/core_cm7.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 382              		.loc 2 2415 0
 383 0018 0722     		movs	r2, #7
 384 001a 1A60     		str	r2, [r3]
 385 001c 7047     		bx	lr
 386              	.L25:
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 62


2409:Drivers/CMSIS/Include/core_cm7.h ****   }
 387              		.loc 2 2409 0
 388 001e 0120     		movs	r0, #1
 389              	.LVL34:
 390              	.LBE79:
 391              	.LBE78:
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 392              		.loc 1 248 0
 393 0020 7047     		bx	lr
 394              	.L27:
 395 0022 00BF     		.align	2
 396              	.L26:
 397 0024 10E000E0 		.word	-536813552
 398 0028 00ED00E0 		.word	-536810240
 399              		.cfi_endproc
 400              	.LFE143:
 402              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 403              		.align	1
 404              		.global	HAL_MPU_Disable
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-sp-d16
 410              	HAL_MPU_Disable:
 411              	.LFB144:
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @}
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *  @brief   Cortex control functions 
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @verbatim   
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================  
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities. 
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @endverbatim
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Disables the MPU
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 412              		.loc 1 275 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 63


 416              		@ link register save eliminated.
 417              	.LBB82:
 418              	.LBB83:
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 419              		.loc 3 440 0
 420              		.syntax unified
 421              	@ 440 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 422 0000 BFF35F8F 		dmb 0xF
 423              	@ 0 "" 2
 424              		.thumb
 425              		.syntax unified
 426              	.LBE83:
 427              	.LBE82:
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   __DMB();
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable fault exceptions */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 428              		.loc 1 280 0
 429 0004 044A     		ldr	r2, .L29
 430 0006 536A     		ldr	r3, [r2, #36]
 431 0008 23F48033 		bic	r3, r3, #65536
 432 000c 5362     		str	r3, [r2, #36]
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->CTRL = 0;
 433              		.loc 1 283 0
 434 000e 034B     		ldr	r3, .L29+4
 435 0010 0022     		movs	r2, #0
 436 0012 5A60     		str	r2, [r3, #4]
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 437              		.loc 1 284 0
 438 0014 7047     		bx	lr
 439              	.L30:
 440 0016 00BF     		.align	2
 441              	.L29:
 442 0018 00ED00E0 		.word	-536810240
 443 001c 90ED00E0 		.word	-536810096
 444              		.cfi_endproc
 445              	.LFE144:
 447              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 448              		.align	1
 449              		.global	HAL_MPU_Enable
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv5-sp-d16
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 64


 455              	HAL_MPU_Enable:
 456              	.LFB145:
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Enables the MPU
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  MPU_Control Specifies the control mode of the MPU during hard fault, 
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          NMI, FAULTMASK and privileged access to the default memory 
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 457              		.loc 1 298 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462              	.LVL35:
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Enable the MPU */
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 463              		.loc 1 300 0
 464 0000 40F00100 		orr	r0, r0, #1
 465              	.LVL36:
 466 0004 054B     		ldr	r3, .L32
 467 0006 5860     		str	r0, [r3, #4]
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Enable fault exceptions */
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 468              		.loc 1 303 0
 469 0008 054A     		ldr	r2, .L32+4
 470 000a 536A     		ldr	r3, [r2, #36]
 471 000c 43F48033 		orr	r3, r3, #65536
 472 0010 5362     		str	r3, [r2, #36]
 473              	.LBB84:
 474              	.LBB85:
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 475              		.loc 3 429 0
 476              		.syntax unified
 477              	@ 429 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 478 0012 BFF34F8F 		dsb 0xF
 479              	@ 0 "" 2
 480              		.thumb
 481              		.syntax unified
 482              	.LBE85:
 483              	.LBE84:
 484              	.LBB86:
 485              	.LBB87:
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 486              		.loc 3 418 0
 487              		.syntax unified
 488              	@ 418 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 489 0016 BFF36F8F 		isb 0xF
 490              	@ 0 "" 2
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 65


 491              		.thumb
 492              		.syntax unified
 493              	.LBE87:
 494              	.LBE86:
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   __DSB();
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   __ISB();
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 495              		.loc 1 308 0
 496 001a 7047     		bx	lr
 497              	.L33:
 498              		.align	2
 499              	.L32:
 500 001c 90ED00E0 		.word	-536810096
 501 0020 00ED00E0 		.word	-536810240
 502              		.cfi_endproc
 503              	.LFE145:
 505              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 506              		.align	1
 507              		.global	HAL_MPU_ConfigRegion
 508              		.syntax unified
 509              		.thumb
 510              		.thumb_func
 511              		.fpu fpv5-sp-d16
 513              	HAL_MPU_ConfigRegion:
 514              	.LFB146:
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Initializes and configures the Region and the memory to be protected.
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                the initialization and configuration information.
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 515              		.loc 1 317 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520              	.LVL37:
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set the Region number */
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 521              		.loc 1 323 0
 522 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 523 0002 134B     		ldr	r3, .L38
 524 0004 9A60     		str	r2, [r3, #8]
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   if ((MPU_Init->Enable) != RESET)
 525              		.loc 1 325 0
 526 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 527 0008 23B9     		cbnz	r3, .L37
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 66


 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     /* Check the parameters */
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   else
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RBAR = 0x00;
 528              		.loc 1 350 0
 529 000a 114B     		ldr	r3, .L38
 530 000c 0022     		movs	r2, #0
 531 000e DA60     		str	r2, [r3, #12]
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RASR = 0x00;
 532              		.loc 1 351 0
 533 0010 1A61     		str	r2, [r3, #16]
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 534              		.loc 1 353 0
 535 0012 7047     		bx	lr
 536              	.L37:
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 537              		.loc 1 337 0
 538 0014 4368     		ldr	r3, [r0, #4]
 539 0016 0E4A     		ldr	r2, .L38
 540 0018 D360     		str	r3, [r2, #12]
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 541              		.loc 1 338 0
 542 001a 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 543              		.loc 1 339 0
 544 001c C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 545 001e 1B06     		lsls	r3, r3, #24
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 546              		.loc 1 338 0
 547 0020 43EA0173 		orr	r3, r3, r1, lsl #28
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 548              		.loc 1 340 0
 549 0024 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 550              		.loc 1 339 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 67


 551 0026 43EAC143 		orr	r3, r3, r1, lsl #19
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 552              		.loc 1 341 0
 553 002a 417B     		ldrb	r1, [r0, #13]	@ zero_extendqisi2
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 554              		.loc 1 340 0
 555 002c 43EA8143 		orr	r3, r3, r1, lsl #18
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 556              		.loc 1 342 0
 557 0030 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 558              		.loc 1 341 0
 559 0032 43EA4143 		orr	r3, r3, r1, lsl #17
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 560              		.loc 1 343 0
 561 0036 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 562              		.loc 1 342 0
 563 0038 43EA0143 		orr	r3, r3, r1, lsl #16
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 564              		.loc 1 344 0
 565 003c 417A     		ldrb	r1, [r0, #9]	@ zero_extendqisi2
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 566              		.loc 1 343 0
 567 003e 43EA0123 		orr	r3, r3, r1, lsl #8
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 568              		.loc 1 345 0
 569 0042 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 570              		.loc 1 344 0
 571 0044 43EA4103 		orr	r3, r3, r1, lsl #1
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 572              		.loc 1 346 0
 573 0048 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 574              		.loc 1 345 0
 575 004a 0B43     		orrs	r3, r3, r1
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 576              		.loc 1 338 0
 577 004c 1361     		str	r3, [r2, #16]
 578 004e 7047     		bx	lr
 579              	.L39:
 580              		.align	2
 581              	.L38:
 582 0050 90ED00E0 		.word	-536810096
 583              		.cfi_endproc
 584              	.LFE146:
 586              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 587              		.align	1
 588              		.global	HAL_NVIC_GetPriorityGrouping
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu fpv5-sp-d16
 594              	HAL_NVIC_GetPriorityGrouping:
 595              	.LFB147:
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #endif /* __MPU_PRESENT */
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 68


 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 596              		.loc 1 361 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601              	.LBB88:
 602              	.LBB89:
1825:Drivers/CMSIS/Include/core_cm7.h **** }
 603              		.loc 2 1825 0
 604 0000 024B     		ldr	r3, .L41
 605 0002 D868     		ldr	r0, [r3, #12]
 606              	.LBE89:
 607              	.LBE88:
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 608              		.loc 1 364 0
 609 0004 C0F30220 		ubfx	r0, r0, #8, #3
 610 0008 7047     		bx	lr
 611              	.L42:
 612 000a 00BF     		.align	2
 613              	.L41:
 614 000c 00ED00E0 		.word	-536810240
 615              		.cfi_endproc
 616              	.LFE147:
 618              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 619              		.align	1
 620              		.global	HAL_NVIC_GetPriority
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
 624              		.fpu fpv5-sp-d16
 626              	HAL_NVIC_GetPriority:
 627              	.LFB148:
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param   PriorityGroup the priority grouping bits length.
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      4 bits for subpriority
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      3 bits for subpriority
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      2 bits for subpriority
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      1 bits for subpriority
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 69


 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      0 bits for subpriority
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  pPreemptPriority Pointer on the Preemptive priority value (starting from 0).
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  pSubPriority Pointer on the Subpriority value (starting from 0).
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 628              		.loc 1 388 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633              	.LVL38:
 634 0000 70B4     		push	{r4, r5, r6}
 635              	.LCFI3:
 636              		.cfi_def_cfa_offset 12
 637              		.cfi_offset 4, -12
 638              		.cfi_offset 5, -8
 639              		.cfi_offset 6, -4
 640              	.LVL39:
 641              	.LBB90:
 642              	.LBB91:
1931:Drivers/CMSIS/Include/core_cm7.h ****   {
 643              		.loc 2 1931 0
 644 0002 0028     		cmp	r0, #0
 645              	.LVL40:
 646 0004 1DDB     		blt	.L49
1937:Drivers/CMSIS/Include/core_cm7.h ****   }
 647              		.loc 2 1937 0
 648 0006 134C     		ldr	r4, .L50
 649 0008 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
 650 000a 0009     		lsrs	r0, r0, #4
 651              	.L45:
 652              	.LVL41:
 653              	.LBE91:
 654              	.LBE90:
 655              	.LBB93:
 656              	.LBB94:
1982:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
 657              		.loc 2 1982 0
 658 000c 01F00701 		and	r1, r1, #7
 659              	.LVL42:
1986:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 660              		.loc 2 1986 0
 661 0010 C1F10704 		rsb	r4, r1, #7
 662 0014 042C     		cmp	r4, #4
 663 0016 28BF     		it	cs
 664 0018 0424     		movcs	r4, #4
 665              	.LVL43:
1987:Drivers/CMSIS/Include/core_cm7.h **** 
 666              		.loc 2 1987 0
 667 001a 0D1D     		adds	r5, r1, #4
 668 001c 062D     		cmp	r5, #6
 669 001e 16D9     		bls	.L47
 670 0020 0339     		subs	r1, r1, #3
 671              	.LVL44:
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 70


 672              	.L46:
1989:Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 673              		.loc 2 1989 0
 674 0022 20FA01F6 		lsr	r6, r0, r1
 675 0026 4FF0FF35 		mov	r5, #-1
 676              	.LVL45:
 677 002a 05FA04F4 		lsl	r4, r5, r4
 678              	.LVL46:
 679 002e 26EA0404 		bic	r4, r6, r4
 680 0032 1460     		str	r4, [r2]
1990:Drivers/CMSIS/Include/core_cm7.h **** }
 681              		.loc 2 1990 0
 682 0034 05FA01F1 		lsl	r1, r5, r1
 683              	.LVL47:
 684 0038 20EA0100 		bic	r0, r0, r1
 685 003c 1860     		str	r0, [r3]
 686              	.LVL48:
 687              	.LBE94:
 688              	.LBE93:
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 689              		.loc 1 393 0
 690 003e 70BC     		pop	{r4, r5, r6}
 691              	.LCFI4:
 692              		.cfi_remember_state
 693              		.cfi_restore 6
 694              		.cfi_restore 5
 695              		.cfi_restore 4
 696              		.cfi_def_cfa_offset 0
 697 0040 7047     		bx	lr
 698              	.LVL49:
 699              	.L49:
 700              	.LCFI5:
 701              		.cfi_restore_state
 702              	.LBB96:
 703              	.LBB92:
1933:Drivers/CMSIS/Include/core_cm7.h ****   }
 704              		.loc 2 1933 0
 705 0042 00F00F00 		and	r0, r0, #15
 706 0046 044C     		ldr	r4, .L50+4
 707 0048 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
 708 004a 0009     		lsrs	r0, r0, #4
 709 004c DEE7     		b	.L45
 710              	.LVL50:
 711              	.L47:
 712              	.LBE92:
 713              	.LBE96:
 714              	.LBB97:
 715              	.LBB95:
1987:Drivers/CMSIS/Include/core_cm7.h **** 
 716              		.loc 2 1987 0
 717 004e 0021     		movs	r1, #0
 718              	.LVL51:
 719 0050 E7E7     		b	.L46
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 71


 720              	.L51:
 721 0052 00BF     		.align	2
 722              	.L50:
 723 0054 00E400E0 		.word	-536812544
 724 0058 14ED00E0 		.word	-536810220
 725              	.LBE95:
 726              	.LBE97:
 727              		.cfi_endproc
 728              	.LFE148:
 730              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 731              		.align	1
 732              		.global	HAL_NVIC_SetPendingIRQ
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 736              		.fpu fpv5-sp-d16
 738              	HAL_NVIC_SetPendingIRQ:
 739              	.LFB149:
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 740              		.loc 1 403 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              		@ link register save eliminated.
 745              	.LVL52:
 746              	.LBB98:
 747              	.LBB99:
1871:Drivers/CMSIS/Include/core_cm7.h **** }
 748              		.loc 2 1871 0
 749 0000 00F01F02 		and	r2, r0, #31
 750 0004 4009     		lsrs	r0, r0, #5
 751              	.LVL53:
 752 0006 0123     		movs	r3, #1
 753 0008 9340     		lsls	r3, r3, r2
 754 000a 4030     		adds	r0, r0, #64
 755 000c 014A     		ldr	r2, .L53
 756 000e 42F82030 		str	r3, [r2, r0, lsl #2]
 757              	.LVL54:
 758              	.LBE99:
 759              	.LBE98:
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set interrupt pending */
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 760              		.loc 1 409 0
 761 0012 7047     		bx	lr
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 72


 762              	.L54:
 763              		.align	2
 764              	.L53:
 765 0014 00E100E0 		.word	-536813312
 766              		.cfi_endproc
 767              	.LFE149:
 769              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 770              		.align	1
 771              		.global	HAL_NVIC_GetPendingIRQ
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
 775              		.fpu fpv5-sp-d16
 777              	HAL_NVIC_GetPendingIRQ:
 778              	.LFB150:
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC 
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 779              		.loc 1 421 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 0
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              		@ link register save eliminated.
 784              	.LVL55:
 785              	.LBB100:
 786              	.LBB101:
1860:Drivers/CMSIS/Include/core_cm7.h **** }
 787              		.loc 2 1860 0
 788 0000 4309     		lsrs	r3, r0, #5
 789 0002 4033     		adds	r3, r3, #64
 790 0004 044A     		ldr	r2, .L56
 791 0006 52F82330 		ldr	r3, [r2, r3, lsl #2]
 792 000a 00F01F00 		and	r0, r0, #31
 793              	.LVL56:
 794 000e 23FA00F0 		lsr	r0, r3, r0
 795              	.LVL57:
 796              	.LBE101:
 797              	.LBE100:
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 798              		.loc 1 427 0
 799 0012 00F00100 		and	r0, r0, #1
 800 0016 7047     		bx	lr
 801              	.L57:
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 73


 802              		.align	2
 803              	.L56:
 804 0018 00E100E0 		.word	-536813312
 805              		.cfi_endproc
 806              	.LFE150:
 808              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 809              		.align	1
 810              		.global	HAL_NVIC_ClearPendingIRQ
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 814              		.fpu fpv5-sp-d16
 816              	HAL_NVIC_ClearPendingIRQ:
 817              	.LFB151:
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 818              		.loc 1 437 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823              	.LVL58:
 824              	.LBB102:
 825              	.LBB103:
1882:Drivers/CMSIS/Include/core_cm7.h **** }
 826              		.loc 2 1882 0
 827 0000 00F01F02 		and	r2, r0, #31
 828 0004 4009     		lsrs	r0, r0, #5
 829              	.LVL59:
 830 0006 0123     		movs	r3, #1
 831 0008 9340     		lsls	r3, r3, r2
 832 000a 6030     		adds	r0, r0, #96
 833 000c 014A     		ldr	r2, .L59
 834 000e 42F82030 		str	r3, [r2, r0, lsl #2]
 835              	.LVL60:
 836              	.LBE103:
 837              	.LBE102:
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Clear pending interrupt */
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 838              		.loc 1 443 0
 839 0012 7047     		bx	lr
 840              	.L60:
 841              		.align	2
 842              	.L59:
 843 0014 00E100E0 		.word	-536813312
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 74


 844              		.cfi_endproc
 845              	.LFE151:
 847              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 848              		.align	1
 849              		.global	HAL_NVIC_GetActive
 850              		.syntax unified
 851              		.thumb
 852              		.thumb_func
 853              		.fpu fpv5-sp-d16
 855              	HAL_NVIC_GetActive:
 856              	.LFB152:
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param IRQn External interrupt number
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 857              		.loc 1 454 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              		@ link register save eliminated.
 862              	.LVL61:
 863              	.LBB104:
 864              	.LBB105:
1895:Drivers/CMSIS/Include/core_cm7.h **** }
 865              		.loc 2 1895 0
 866 0000 4309     		lsrs	r3, r0, #5
 867 0002 8033     		adds	r3, r3, #128
 868 0004 044A     		ldr	r2, .L62
 869 0006 52F82330 		ldr	r3, [r2, r3, lsl #2]
 870 000a 00F01F00 		and	r0, r0, #31
 871              	.LVL62:
 872 000e 23FA00F0 		lsr	r0, r3, r0
 873              	.LVL63:
 874              	.LBE105:
 875              	.LBE104:
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 876              		.loc 1 460 0
 877 0012 00F00100 		and	r0, r0, #1
 878 0016 7047     		bx	lr
 879              	.L63:
 880              		.align	2
 881              	.L62:
 882 0018 00E100E0 		.word	-536813312
 883              		.cfi_endproc
 884              	.LFE152:
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 75


 886              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 887              		.align	1
 888              		.global	HAL_SYSTICK_CLKSourceConfig
 889              		.syntax unified
 890              		.thumb
 891              		.thumb_func
 892              		.fpu fpv5-sp-d16
 894              	HAL_SYSTICK_CLKSourceConfig:
 895              	.LFB153:
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  CLKSource specifies the SysTick clock source.
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 896              		.loc 1 471 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901              	.LVL64:
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 902              		.loc 1 474 0
 903 0000 0428     		cmp	r0, #4
 904 0002 05D0     		beq	.L67
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   else
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 905              		.loc 1 480 0
 906 0004 054A     		ldr	r2, .L68
 907 0006 1368     		ldr	r3, [r2]
 908 0008 23F00403 		bic	r3, r3, #4
 909 000c 1360     		str	r3, [r2]
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 910              		.loc 1 482 0
 911 000e 7047     		bx	lr
 912              	.L67:
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 913              		.loc 1 476 0
 914 0010 024A     		ldr	r2, .L68
 915 0012 1368     		ldr	r3, [r2]
 916 0014 43F00403 		orr	r3, r3, #4
 917 0018 1360     		str	r3, [r2]
 918 001a 7047     		bx	lr
 919              	.L69:
 920              		.align	2
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 76


 921              	.L68:
 922 001c 10E000E0 		.word	-536813552
 923              		.cfi_endproc
 924              	.LFE153:
 926              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 927              		.align	1
 928              		.weak	HAL_SYSTICK_Callback
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu fpv5-sp-d16
 934              	HAL_SYSTICK_Callback:
 935              	.LFB155:
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 936              		.loc 1 498 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		@ link register save eliminated.
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    */
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 941              		.loc 1 502 0
 942 0000 7047     		bx	lr
 943              		.cfi_endproc
 944              	.LFE155:
 946              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 947              		.align	1
 948              		.global	HAL_SYSTICK_IRQHandler
 949              		.syntax unified
 950              		.thumb
 951              		.thumb_func
 952              		.fpu fpv5-sp-d16
 954              	HAL_SYSTICK_IRQHandler:
 955              	.LFB154:
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 956              		.loc 1 489 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 0
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 77


 961              	.LCFI6:
 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 3, -8
 964              		.cfi_offset 14, -4
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 965              		.loc 1 490 0
 966 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 967              	.LVL65:
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 968              		.loc 1 491 0
 969 0006 08BD     		pop	{r3, pc}
 970              		.cfi_endproc
 971              	.LFE154:
 973              		.text
 974              	.Letext0:
 975              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 976              		.file 5 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\machine\\_default
 977              		.file 6 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 978              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 979              		.file 8 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 980              		.file 9 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 981              		.file 10 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 982              		.file 11 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\
 983              		.file 12 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 984              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s 			page 78


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_cortex.c
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:18     .text.HAL_NVIC_SetPriorityGrouping:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:25     .text.HAL_NVIC_SetPriorityGrouping:00000000 HAL_NVIC_SetPriorityGrouping
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:68     .text.HAL_NVIC_SetPriorityGrouping:0000001c $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:74     .text.HAL_NVIC_SetPriority:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:81     .text.HAL_NVIC_SetPriority:00000000 HAL_NVIC_SetPriority
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:185    .text.HAL_NVIC_SetPriority:00000058 $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:194    .text.HAL_NVIC_EnableIRQ:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:201    .text.HAL_NVIC_EnableIRQ:00000000 HAL_NVIC_EnableIRQ
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:227    .text.HAL_NVIC_EnableIRQ:00000014 $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:232    .text.HAL_NVIC_DisableIRQ:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:239    .text.HAL_NVIC_DisableIRQ:00000000 HAL_NVIC_DisableIRQ
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:266    .text.HAL_NVIC_DisableIRQ:00000014 $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:271    .text.HAL_NVIC_SystemReset:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:278    .text.HAL_NVIC_SystemReset:00000000 HAL_NVIC_SystemReset
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:333    .text.HAL_NVIC_SystemReset:0000001c $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:343    .text.HAL_SYSTICK_Config:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:350    .text.HAL_SYSTICK_Config:00000000 HAL_SYSTICK_Config
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:397    .text.HAL_SYSTICK_Config:00000024 $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:403    .text.HAL_MPU_Disable:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:410    .text.HAL_MPU_Disable:00000000 HAL_MPU_Disable
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:442    .text.HAL_MPU_Disable:00000018 $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:448    .text.HAL_MPU_Enable:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:455    .text.HAL_MPU_Enable:00000000 HAL_MPU_Enable
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:500    .text.HAL_MPU_Enable:0000001c $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:506    .text.HAL_MPU_ConfigRegion:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:513    .text.HAL_MPU_ConfigRegion:00000000 HAL_MPU_ConfigRegion
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:582    .text.HAL_MPU_ConfigRegion:00000050 $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:587    .text.HAL_NVIC_GetPriorityGrouping:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:594    .text.HAL_NVIC_GetPriorityGrouping:00000000 HAL_NVIC_GetPriorityGrouping
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:614    .text.HAL_NVIC_GetPriorityGrouping:0000000c $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:619    .text.HAL_NVIC_GetPriority:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:626    .text.HAL_NVIC_GetPriority:00000000 HAL_NVIC_GetPriority
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:723    .text.HAL_NVIC_GetPriority:00000054 $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:731    .text.HAL_NVIC_SetPendingIRQ:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:738    .text.HAL_NVIC_SetPendingIRQ:00000000 HAL_NVIC_SetPendingIRQ
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:765    .text.HAL_NVIC_SetPendingIRQ:00000014 $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:770    .text.HAL_NVIC_GetPendingIRQ:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:777    .text.HAL_NVIC_GetPendingIRQ:00000000 HAL_NVIC_GetPendingIRQ
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:804    .text.HAL_NVIC_GetPendingIRQ:00000018 $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:809    .text.HAL_NVIC_ClearPendingIRQ:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:816    .text.HAL_NVIC_ClearPendingIRQ:00000000 HAL_NVIC_ClearPendingIRQ
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:843    .text.HAL_NVIC_ClearPendingIRQ:00000014 $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:848    .text.HAL_NVIC_GetActive:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:855    .text.HAL_NVIC_GetActive:00000000 HAL_NVIC_GetActive
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:882    .text.HAL_NVIC_GetActive:00000018 $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:887    .text.HAL_SYSTICK_CLKSourceConfig:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:894    .text.HAL_SYSTICK_CLKSourceConfig:00000000 HAL_SYSTICK_CLKSourceConfig
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:922    .text.HAL_SYSTICK_CLKSourceConfig:0000001c $d
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:927    .text.HAL_SYSTICK_Callback:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:934    .text.HAL_SYSTICK_Callback:00000000 HAL_SYSTICK_Callback
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:947    .text.HAL_SYSTICK_IRQHandler:00000000 $t
C:\Users\milek\AppData\Local\Temp\ccYrDbP9.s:954    .text.HAL_SYSTICK_IRQHandler:00000000 HAL_SYSTICK_IRQHandler

NO UNDEFINED SYMBOLS
