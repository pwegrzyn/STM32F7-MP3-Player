ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ff.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ld_word,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	ld_word:
  25              	.LFB143:
  26              		.file 1 "Middlewares/Third_Party/FatFs/src/ff.c"
   1:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------------------------------------------/
   2:Middlewares/Third_Party/FatFs/src/ff.c **** /  FatFs - Generic FAT file system module  R0.12c                             /
   3:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
   4:Middlewares/Third_Party/FatFs/src/ff.c **** /
   5:Middlewares/Third_Party/FatFs/src/ff.c **** / Copyright (C) 2017, ChaN, all right reserved.
   6:Middlewares/Third_Party/FatFs/src/ff.c **** /
   7:Middlewares/Third_Party/FatFs/src/ff.c **** / FatFs module is an open source software. Redistribution and use of FatFs in
   8:Middlewares/Third_Party/FatFs/src/ff.c **** / source and binary forms, with or without modification, are permitted provided
   9:Middlewares/Third_Party/FatFs/src/ff.c **** / that the following condition is met:
  10:Middlewares/Third_Party/FatFs/src/ff.c **** /
  11:Middlewares/Third_Party/FatFs/src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  12:Middlewares/Third_Party/FatFs/src/ff.c **** /    this condition and the following disclaimer.
  13:Middlewares/Third_Party/FatFs/src/ff.c **** /
  14:Middlewares/Third_Party/FatFs/src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  15:Middlewares/Third_Party/FatFs/src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  16:Middlewares/Third_Party/FatFs/src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  17:Middlewares/Third_Party/FatFs/src/ff.c **** / by use of this software.
  18:Middlewares/Third_Party/FatFs/src/ff.c **** /----------------------------------------------------------------------------*/
  19:Middlewares/Third_Party/FatFs/src/ff.c **** 
  20:Middlewares/Third_Party/FatFs/src/ff.c **** 
  21:Middlewares/Third_Party/FatFs/src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
  22:Middlewares/Third_Party/FatFs/src/ff.c **** #include "diskio.h"		/* Declarations of device I/O functions */
  23:Middlewares/Third_Party/FatFs/src/ff.c **** 
  24:Middlewares/Third_Party/FatFs/src/ff.c **** 
  25:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
  26:Middlewares/Third_Party/FatFs/src/ff.c **** 
  27:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Definitions
  28:Middlewares/Third_Party/FatFs/src/ff.c **** 
  29:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
  30:Middlewares/Third_Party/FatFs/src/ff.c **** 
  31:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FATFS != 68300	/* Revision ID */
  32:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong include file (ff.h).
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 2


  33:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
  34:Middlewares/Third_Party/FatFs/src/ff.c **** 
  35:Middlewares/Third_Party/FatFs/src/ff.c **** 
  36:Middlewares/Third_Party/FatFs/src/ff.c **** /* DBCS code ranges and SBCS upper conversion tables */
  37:Middlewares/Third_Party/FatFs/src/ff.c **** 
  38:Middlewares/Third_Party/FatFs/src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
  39:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
  40:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
  41:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
  42:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
  43:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
  44:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
  45:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
  46:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
  47:Middlewares/Third_Party/FatFs/src/ff.c **** 
  48:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
  49:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  50:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  51:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  52:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  53:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80
  54:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  55:Middlewares/Third_Party/FatFs/src/ff.c **** 
  56:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
  57:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  58:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  59:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x41
  60:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x5A
  61:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x61
  62:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0x7A
  63:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3S	0x81
  64:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3E	0xFE
  65:Middlewares/Third_Party/FatFs/src/ff.c **** 
  66:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
  67:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  68:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  69:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  70:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  71:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0xA1
  72:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  73:Middlewares/Third_Party/FatFs/src/ff.c **** 
  74:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. */
  75:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  76:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
  77:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  78:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
  79:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  80:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  81:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  82:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  83:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  84:Middlewares/Third_Party/FatFs/src/ff.c **** 
  85:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic */
  86:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  87:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  88:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  89:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 3


  90:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  91:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  92:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  93:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  94:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  95:Middlewares/Third_Party/FatFs/src/ff.c **** 
  96:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 737	/* Greek */
  97:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  98:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  99:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \
 100:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96, \
 101:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 102:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 103:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 104:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xEF,0xF5,0xF0,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 105:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 106:Middlewares/Third_Party/FatFs/src/ff.c **** 
 107:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 771	/* KBL */
 108:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 109:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 110:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 111:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 112:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 113:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 114:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDC,0xDE,0xDE, \
 115:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 116:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFE,0xFF}
 117:Middlewares/Third_Party/FatFs/src/ff.c **** 
 118:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic */
 119:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 120:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F, \
 121:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 122:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 123:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 124:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 125:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xA5,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 126:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF, \
 127:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 128:Middlewares/Third_Party/FatFs/src/ff.c **** 
 129:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 850	/* Latin 1 */
 130:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 131:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x49,0x49,0x49,0x41,0x41, \
 132:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x92,0x92,0x4F,0x4F,0x4F,0x55,0x55,0x59,0x4F,0x55,0x4F,0x9C,0x4F,0x9E,0x9F, \
 133:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 134:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0x41,0x41,0x41,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 135:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x41,0x41,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 136:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0x45,0x45,0x45,0x49,0x49,0x49,0x49,0xD9,0xDA,0xDB,0xDC,0xDD,0x49,0xDF, \
 137:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x4F,0xE1,0x4F,0x4F,0x4F,0x4F,0xE6,0xE8,0xE8,0x55,0x55,0x55,0x59,0x59,0xEE,0xEF, \
 138:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 139:Middlewares/Third_Party/FatFs/src/ff.c **** 
 140:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 */
 141:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 142:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F, \
 143:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0xAC, \
 144:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF, \
 145:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBD,0xBF, \
 146:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 4


 147:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD2,0xD3,0xD2,0xD5,0xD6,0xD7,0xB7,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 148:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF, \
 149:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}
 150:Middlewares/Third_Party/FatFs/src/ff.c **** 
 151:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic */
 152:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 153:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F, \
 154:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \
 155:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF, \
 156:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB6,0xB6,0xB8,0xB8,0xB9,0xBA,0xBB,0xBC,0xBE,0xBE,0xBF, \
 157:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 158:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD3,0xD3,0xD5,0xD5,0xD7,0xD7,0xDD,0xD9,0xDA,0xDB,0xDC,0xDD,0xE0,0xDF, \
 159:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF, \
 160:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}
 161:Middlewares/Third_Party/FatFs/src/ff.c **** 
 162:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish */
 163:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 164:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F, \
 165:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \
 166:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 167:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 168:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 169:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0x49,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 170:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0xED,0xEE,0xEF, \
 171:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 172:Middlewares/Third_Party/FatFs/src/ff.c **** 
 173:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 860	/* Portuguese */
 174:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 175:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x8F,0x8E,0x91,0x86,0x80,0x89,0x89,0x92,0x8B,0x8C,0x98,0x8E,0x8F, \
 176:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x8C,0x99,0xA9,0x96,0x9D,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 177:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x86,0x8B,0x9F,0x96,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 178:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 179:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 180:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 181:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 182:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 183:Middlewares/Third_Party/FatFs/src/ff.c **** 
 184:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 861	/* Icelandic */
 185:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 186:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x8B,0x8B,0x8D,0x8E,0x8F, \
 187:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x8D,0x55,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 188:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA4,0xA5,0xA6,0xA7,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 189:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 190:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 191:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 192:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 193:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 194:Middlewares/Third_Party/FatFs/src/ff.c **** 
 195:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew */
 196:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 197:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 198:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 199:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 200:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 201:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 202:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 203:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 5


 204:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 205:Middlewares/Third_Party/FatFs/src/ff.c **** 
 206:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 863	/* Canadian-French */
 207:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 208:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x41,0x8F, \
 209:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x45,0x45,0x4F,0x45,0x49,0x55,0x55,0x98,0x4F,0x55,0x9B,0x9C,0x55,0x55,0x9F, \
 210:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0x4F,0x55,0xA4,0xA5,0xA6,0xA7,0x49,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 211:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 212:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 213:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 214:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 215:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 216:Middlewares/Third_Party/FatFs/src/ff.c **** 
 217:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 864	/* Arabic */
 218:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 219:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 220:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 221:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 222:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 223:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 224:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 225:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 226:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 227:Middlewares/Third_Party/FatFs/src/ff.c **** 
 228:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 865	/* Nordic */
 229:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 230:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 231:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 232:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 233:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 234:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 235:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 236:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 237:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 238:Middlewares/Third_Party/FatFs/src/ff.c **** 
 239:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 866	/* Russian */
 240:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 241:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 242:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 243:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 244:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 245:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 246:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 247:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 248:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 249:Middlewares/Third_Party/FatFs/src/ff.c **** 
 250:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 869	/* Greek 2 */
 251:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 252:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 253:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x86,0x9C,0x8D,0x8F,0x90, \
 254:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x90,0x92,0x95,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 255:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 256:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 257:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xA4,0xA5,0xA6,0xD9,0xDA,0xDB,0xDC,0xA7,0xA8,0xDF, \
 258:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA9,0xAA,0xAC,0xAD,0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xCF,0xCF,0xD0,0xEF, \
 259:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xD1,0xD2,0xD3,0xF5,0xD4,0xF7,0xF8,0xF9,0xD5,0x96,0x95,0x98,0xFE,0xFF}
 260:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 6


 261:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 262:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 263:Middlewares/Third_Party/FatFs/src/ff.c **** #error Cannot enable LFN without valid code page.
 264:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 265:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 266:Middlewares/Third_Party/FatFs/src/ff.c **** 
 267:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 268:Middlewares/Third_Party/FatFs/src/ff.c **** #error Unknown code page
 269:Middlewares/Third_Party/FatFs/src/ff.c **** 
 270:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 271:Middlewares/Third_Party/FatFs/src/ff.c **** 
 272:Middlewares/Third_Party/FatFs/src/ff.c **** 
 273:Middlewares/Third_Party/FatFs/src/ff.c **** /* Character code support macros */
 274:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 275:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 276:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 277:Middlewares/Third_Party/FatFs/src/ff.c **** 
 278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S != 0	/* Code page is DBCS */
 279:Middlewares/Third_Party/FatFs/src/ff.c **** 
 280:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 281:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 282:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* One 1st byte area */
 283:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 284:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 285:Middlewares/Third_Party/FatFs/src/ff.c **** 
 286:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 287:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 288:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Two 2nd byte areas */
 289:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 290:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 291:Middlewares/Third_Party/FatFs/src/ff.c **** 
 292:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Code page is SBCS */
 293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 294:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	0
 295:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	0
 296:Middlewares/Third_Party/FatFs/src/ff.c **** 
 297:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _DF1S */
 298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 299:Middlewares/Third_Party/FatFs/src/ff.c **** 
 300:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file attribute bits for internal use */
 301:Middlewares/Third_Party/FatFs/src/ff.c **** #define	AM_VOL		0x08	/* Volume label */
 302:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_LFN		0x0F	/* LFN entry */
 303:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_MASK		0x3F	/* Mask of defined bits */
 304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 305:Middlewares/Third_Party/FatFs/src/ff.c **** 
 306:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file access control and file status flags for internal use */
 307:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_SEEKEND	0x20	/* Seek to end of the file on file open */
 308:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_MODIFIED	0x40	/* File has been modified */
 309:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_DIRTY	0x80	/* FIL.buf[] needs to be written-back */
 310:Middlewares/Third_Party/FatFs/src/ff.c **** 
 311:Middlewares/Third_Party/FatFs/src/ff.c **** 
 312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Name status flags in fn[] */
 313:Middlewares/Third_Party/FatFs/src/ff.c **** #define NSFLAG		11		/* Index of the name status byte */
 314:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 315:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
 316:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 317:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 7


 318:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 319:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 320:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NOLFN	0x40	/* Do not find LFN */
 321:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NONAME	0x80	/* Not followed */
 322:Middlewares/Third_Party/FatFs/src/ff.c **** 
 323:Middlewares/Third_Party/FatFs/src/ff.c **** 
 324:Middlewares/Third_Party/FatFs/src/ff.c **** /* Limits and boundaries */
 325:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR		0x200000		/* Max size of FAT directory */
 326:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR_EX	0x10000000		/* Max size of exFAT directory */
 327:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_FAT12	0xFF5			/* Max FAT12 clusters (differs from specs, but correct for real DOS/Windo
 328:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT16	0xFFF5			/* Max FAT16 clusters (differs from specs, but correct for real DOS/Wind
 329:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT32	0x0FFFFFF5		/* Max FAT32 clusters (not specified, practical limit) */
 330:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_EXFAT	0x7FFFFFFD		/* Max exFAT clusters (differs from specs, implementation limit) */
 331:Middlewares/Third_Party/FatFs/src/ff.c **** 
 332:Middlewares/Third_Party/FatFs/src/ff.c **** 
 333:Middlewares/Third_Party/FatFs/src/ff.c **** /* FatFs refers the FAT structure as simple byte array instead of structure member
 334:Middlewares/Third_Party/FatFs/src/ff.c **** / because the C structure is not binary compatible between different platforms */
 335:Middlewares/Third_Party/FatFs/src/ff.c **** 
 336:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_JmpBoot			0		/* x86 jump instruction (3-byte) */
 337:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_OEMName			3		/* OEM name (8-byte) */
 338:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (WORD) */
 339:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (BYTE) */
 340:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (WORD) */
 341:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATs			16		/* Number of FATs (BYTE) */
 342:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootEntCnt		17		/* Size of root directory area for FAT12/16 [entry] (WORD) */
 343:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec16		19		/* Volume size (16-bit) [sector] (WORD) */
 344:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_Media			21		/* Media descriptor byte (BYTE) */
 345:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz16			22		/* FAT size (16-bit) [sector] (WORD) */
 346:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerTrk		24		/* Track size for int13h [sector] (WORD) */
 347:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumHeads		26		/* Number of heads for int13h (WORD) */
 348:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_HiddSec			28		/* Volume offset from top of the drive (DWORD) */
 349:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec32		32		/* Volume size (32-bit) [sector] (DWORD) */
 350:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum			36		/* Physical drive number for int13h (BYTE) */
 351:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres			37		/* Error flag (BYTE) */
 352:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (BYTE) */
 353:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID			39		/* Volume serial number (DWORD) */
 354:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab			43		/* Volume label string (8-byte) */
 355:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType		54		/* File system type string (8-byte) */
 356:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode			62		/* Boot code (448-byte) */
 357:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_55AA				510		/* Signature word (WORD) */
 358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 359:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz32			36		/* FAT32: FAT size [sector] (DWORD) */
 360:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ExtFlags32		40		/* FAT32: Extended flags (WORD) */
 361:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVer32			42		/* FAT32: File system version (WORD) */
 362:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClus32		44		/* FAT32: Root directory cluster (DWORD) */
 363:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSInfo32		48		/* FAT32: Offset of FSINFO sector (WORD) */
 364:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BkBootSec32		50		/* FAT32: Offset of backup boot sector (WORD) */
 365:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum32			64		/* FAT32: Physical drive number for int13h (BYTE) */
 366:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres32			65		/* FAT32: Error flag (BYTE) */
 367:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig32		66		/* FAT32: Extended boot signature (BYTE) */
 368:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID32			67		/* FAT32: Volume serial number (DWORD) */
 369:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab32			71		/* FAT32: Volume label string (8-byte) */
 370:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType32		82		/* FAT32: File system type string (8-byte) */
 371:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode32		90		/* FAT32: Boot code (420-byte) */
 372:Middlewares/Third_Party/FatFs/src/ff.c **** 
 373:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ZeroedEx		11		/* exFAT: MBZ field (53-byte) */
 374:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolOfsEx		64		/* exFAT: Volume offset from top of the drive [sector] (QWORD) */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 8


 375:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSecEx		72		/* exFAT: Volume size [sector] (QWORD) */
 376:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatOfsEx		80		/* exFAT: FAT offset from top of the volume [sector] (DWORD) */
 377:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatSzEx			84		/* exFAT: FAT size [sector] (DWORD) */
 378:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DataOfsEx		88		/* exFAT: Data offset from top of the volume [sector] (DWORD) */
 379:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumClusEx		92		/* exFAT: Number of clusters (DWORD) */
 380:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClusEx		96		/* exFAT: Root directory start cluster (DWORD) */
 381:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolIDEx			100		/* exFAT: Volume serial number (DWORD) */
 382:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVerEx			104		/* exFAT: File system version (WORD) */
 383:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolFlagEx		106		/* exFAT: Volume flags (BYTE) */
 384:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ActFatEx		107		/* exFAT: Active FAT flags (BYTE) */
 385:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSecEx	108		/* exFAT: Log2 of sector size in unit of byte (BYTE) */
 386:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClusEx	109		/* exFAT: Log2 of cluster size in unit of sector (BYTE) */
 387:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATsEx		110		/* exFAT: Number of FATs (BYTE) */
 388:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DrvNumEx		111		/* exFAT: Physical drive number for int13h (BYTE) */
 389:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_PercInUseEx		112		/* exFAT: Percent in use (BYTE) */
 390:Middlewares/Third_Party/FatFs/src/ff.c **** #define	BPB_RsvdEx			113		/* exFAT: Reserved (7-byte) */
 391:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCodeEx		120		/* exFAT: Boot code (390-byte) */
 392:Middlewares/Third_Party/FatFs/src/ff.c **** 
 393:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Name			0		/* Short file name (11-byte) */
 394:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Attr			11		/* Attribute (BYTE) */
 395:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (BYTE) */
 396:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_CrtTime10		13		/* Created time sub-second (BYTE) */
 397:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtTime			14		/* Created time (DWORD) */
 398:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (WORD) */
 399:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (WORD) */
 400:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_ModTime			22		/* Modified time (DWORD) */
 401:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (WORD) */
 402:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FileSize		28		/* File size (DWORD) */
 403:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Ord			0		/* LFN: LFN order and LLE flag (BYTE) */
 404:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Attr			11		/* LFN: LFN attribute (BYTE) */
 405:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Type			12		/* LFN: Entry type (BYTE) */
 406:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Chksum			13		/* LFN: Checksum of the SFN (BYTE) */
 407:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_FstClusLO		26		/* LFN: MBZ field (WORD) */
 408:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Type			0		/* exFAT: Type of exFAT directory entry (BYTE) */
 409:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumLabel		1		/* exFAT: Number of volume label characters (BYTE) */
 410:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Label			2		/* exFAT: Volume label (11-WORD) */
 411:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CaseSum		4		/* exFAT: Sum of case conversion table (DWORD) */
 412:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumSec			1		/* exFAT: Number of secondary entries (BYTE) */
 413:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_SetSum			2		/* exFAT: Sum of the set of directory entries (WORD) */
 414:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Attr			4		/* exFAT: File attribute (WORD) */
 415:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime		8		/* exFAT: Created time (DWORD) */
 416:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime		12		/* exFAT: Modified time (DWORD) */
 417:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTime		16		/* exFAT: Last accessed time (DWORD) */
 418:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime10		20		/* exFAT: Created time subsecond (BYTE) */
 419:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime10		21		/* exFAT: Modified time subsecond (BYTE) */
 420:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTZ			22		/* exFAT: Created timezone (BYTE) */
 421:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTZ			23		/* exFAT: Modified timezone (BYTE) */
 422:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTZ			24		/* exFAT: Last accessed timezone (BYTE) */
 423:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_GenFlags		33		/* exFAT: General secondary flags (WORD) */
 424:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumName		35		/* exFAT: Number of file name characters (BYTE) */
 425:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NameHash		36		/* exFAT: Hash of file name (WORD) */
 426:Middlewares/Third_Party/FatFs/src/ff.c **** #define XDIR_ValidFileSize	40		/* exFAT: Valid file size (QWORD) */
 427:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FstClus		52		/* exFAT: First cluster of the file data (DWORD) */
 428:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FileSize		56		/* exFAT: File/Directory size (QWORD) */
 429:Middlewares/Third_Party/FatFs/src/ff.c **** 
 430:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZDIRE				32		/* Size of a directory entry */
 431:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark set to DIR_Name[0] */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 9


 432:Middlewares/Third_Party/FatFs/src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
 433:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 434:Middlewares/Third_Party/FatFs/src/ff.c **** 
 435:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_LeadSig			0		/* FAT32 FSI: Leading signature (DWORD) */
 436:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_StrucSig		484		/* FAT32 FSI: Structure signature (DWORD) */
 437:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Free_Count		488		/* FAT32 FSI: Number of free clusters (DWORD) */
 438:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Nxt_Free		492		/* FAT32 FSI: Last allocated cluster (DWORD) */
 439:Middlewares/Third_Party/FatFs/src/ff.c **** 
 440:Middlewares/Third_Party/FatFs/src/ff.c **** #define MBR_Table			446		/* MBR: Offset of partition table in the MBR */
 441:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 442:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_Boot			0		/* MBR PTE: Boot indicator */
 443:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StHead			1		/* MBR PTE: Start head */
 444:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StSec			2		/* MBR PTE: Start sector */
 445:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StCyl			3		/* MBR PTE: Start cylinder */
 446:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_System			4		/* MBR PTE: System ID */
 447:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdHead			5		/* MBR PTE: End head */
 448:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdSec			6		/* MBR PTE: End sector */
 449:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdCyl			7		/* MBR PTE: End cylinder */
 450:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StLba			8		/* MBR PTE: Start in LBA */
 451:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_SizLba			12		/* MBR PTE: Size in LBA */
 452:Middlewares/Third_Party/FatFs/src/ff.c **** 
 453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 454:Middlewares/Third_Party/FatFs/src/ff.c **** /* Post process after fatal error on file operation */
 455:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 456:Middlewares/Third_Party/FatFs/src/ff.c **** 
 457:Middlewares/Third_Party/FatFs/src/ff.c **** 
 458:Middlewares/Third_Party/FatFs/src/ff.c **** /* Reentrancy related */
 459:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 460:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 461:Middlewares/Third_Party/FatFs/src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 462:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 463:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 464:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 465:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 466:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)
 467:Middlewares/Third_Party/FatFs/src/ff.c **** #define LEAVE_FF(fs, res)	return res
 468:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 469:Middlewares/Third_Party/FatFs/src/ff.c **** 
 470:Middlewares/Third_Party/FatFs/src/ff.c **** 
 471:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of volume - partition conversion */
 472:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
 473:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) VolToPart[vol].pd	/* Get physical drive number */
 474:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) VolToPart[vol].pt	/* Get partition index */
 475:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 476:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) (BYTE)(vol)	/* Each logical drive is bound to the same physical drive number */
 477:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) 0			/* Find first valid partition or in SFD */
 478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 479:Middlewares/Third_Party/FatFs/src/ff.c **** 
 480:Middlewares/Third_Party/FatFs/src/ff.c **** 
 481:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of sector size */
 482:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 483:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong sector size configuration
 484:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 485:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS == _MIN_SS
 486:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
 487:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 488:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 10


 489:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 490:Middlewares/Third_Party/FatFs/src/ff.c **** 
 491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 492:Middlewares/Third_Party/FatFs/src/ff.c **** /* Timestamp */
 493:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_NORTC == 1
 494:Middlewares/Third_Party/FatFs/src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 495:Middlewares/Third_Party/FatFs/src/ff.c **** #error Invalid _FS_NORTC settings
 496:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 497:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 498:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 499:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	get_fattime()
 500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 501:Middlewares/Third_Party/FatFs/src/ff.c **** 
 502:Middlewares/Third_Party/FatFs/src/ff.c **** 
 503:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock controls */
 504:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 505:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_READONLY
 506:Middlewares/Third_Party/FatFs/src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 507:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 508:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
 509:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 510:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clu;		/* Object ID 2, containing directory (0:root) */
 511:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs;		/* Object ID 3, offset in the directory */
 512:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 513:Middlewares/Third_Party/FatFs/src/ff.c **** } FILESEM;
 514:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 515:Middlewares/Third_Party/FatFs/src/ff.c **** 
 516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 517:Middlewares/Third_Party/FatFs/src/ff.c **** 
 518:Middlewares/Third_Party/FatFs/src/ff.c **** 
 519:Middlewares/Third_Party/FatFs/src/ff.c **** 
 520:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 521:Middlewares/Third_Party/FatFs/src/ff.c **** 
 522:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Work Area
 523:Middlewares/Third_Party/FatFs/src/ff.c **** 
 524:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 525:Middlewares/Third_Party/FatFs/src/ff.c **** 
 526:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remark: Variables defined here without initial value shall be guaranteed
 527:Middlewares/Third_Party/FatFs/src/ff.c **** /  zero/null at start-up. If not, the linker option or start-up routine is
 528:Middlewares/Third_Party/FatFs/src/ff.c **** /  not compliance with C standard. */
 529:Middlewares/Third_Party/FatFs/src/ff.c **** 
 530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 10
 531:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _VOLUMES setting
 532:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 533:Middlewares/Third_Party/FatFs/src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 534:Middlewares/Third_Party/FatFs/src/ff.c **** static WORD Fsid;				/* File system mount ID */
 535:Middlewares/Third_Party/FatFs/src/ff.c **** 
 536:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
 537:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE CurrVol;			/* Current drive */
 538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 539:Middlewares/Third_Party/FatFs/src/ff.c **** 
 540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 541:Middlewares/Third_Party/FatFs/src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 542:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 543:Middlewares/Third_Party/FatFs/src/ff.c **** 
 544:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 0		/* Non-LFN configuration */
 545:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 11


 546:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 547:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 548:Middlewares/Third_Party/FatFs/src/ff.c **** 
 549:Middlewares/Third_Party/FatFs/src/ff.c **** #else					/* LFN configuration */
 550:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 551:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _MAX_LFN value
 552:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 553:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAXDIRB(nc)	((nc + 44U) / 15 * SZDIRE)
 554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 555:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1		/* LFN enabled with static working buffer */
 556:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 557:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE	DirBuf[MAXDIRB(_MAX_LFN)];	/* Directory entry block scratchpad buffer */
 558:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 559:Middlewares/Third_Party/FatFs/src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];	/* LFN enabled with static working buffer */
 560:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
 561:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 562:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 563:Middlewares/Third_Party/FatFs/src/ff.c **** 
 564:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 2 	/* LFN enabled with dynamic working buffer on the stack */
 565:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 566:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1]; BYTE dbuf[MAXDIRB(_MAX_LFN)];
 567:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; (fs)->dirbuf = dbuf; }
 568:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 569:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 570:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1];
 571:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; }
 572:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 574:Middlewares/Third_Party/FatFs/src/ff.c **** 
 575:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 3 	/* LFN enabled with dynamic working buffer on the heap */
 576:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 577:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 578:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2 + MAXDIRB(_MAX_LFN)); if (!lfn) LEAVE_FF
 579:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 580:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 581:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 582:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2); if (!lfn) LEAVE_FF(fs, FR_NOT_ENOUGH_C
 583:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 586:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 587:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _USE_LFN setting
 588:Middlewares/Third_Party/FatFs/src/ff.c **** 
 589:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* else _USE_LFN == 0 */
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 
 592:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 593:Middlewares/Third_Party/FatFs/src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for SBCS extended characters */
 594:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 595:Middlewares/Third_Party/FatFs/src/ff.c **** 
 596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 597:Middlewares/Third_Party/FatFs/src/ff.c **** 
 598:Middlewares/Third_Party/FatFs/src/ff.c **** 
 599:Middlewares/Third_Party/FatFs/src/ff.c **** 
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 
 601:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 602:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 12


 603:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Functions
 604:Middlewares/Third_Party/FatFs/src/ff.c **** 
 605:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 
 608:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 609:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load/Store multi-byte word in the FAT structure                       */
 610:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 611:Middlewares/Third_Party/FatFs/src/ff.c **** 
 612:Middlewares/Third_Party/FatFs/src/ff.c **** static
 613:Middlewares/Third_Party/FatFs/src/ff.c **** WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
 614:Middlewares/Third_Party/FatFs/src/ff.c **** {
  27              		.loc 1 614 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 615:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD rv;
 616:Middlewares/Third_Party/FatFs/src/ff.c **** 
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[1];
  33              		.loc 1 617 0
  34 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  35              	.LVL1:
 618:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  36              		.loc 1 618 0
  37 0002 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  38              	.LVL2:
 619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 620:Middlewares/Third_Party/FatFs/src/ff.c **** }
  39              		.loc 1 620 0
  40 0004 40EA0220 		orr	r0, r0, r2, lsl #8
  41              	.LVL3:
  42 0008 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE143:
  46              		.section	.text.ld_dword,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv5-sp-d16
  53              	ld_dword:
  54              	.LFB144:
 621:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622:Middlewares/Third_Party/FatFs/src/ff.c **** static
 623:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
 624:Middlewares/Third_Party/FatFs/src/ff.c **** {
  55              		.loc 1 624 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL4:
 625:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rv;
 626:Middlewares/Third_Party/FatFs/src/ff.c **** 
 627:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[3];
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 13


  61              		.loc 1 627 0
  62 0000 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
  63              	.LVL5:
 628:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
  64              		.loc 1 628 0
  65 0002 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  66 0004 43EA0222 		orr	r2, r3, r2, lsl #8
  67              	.LVL6:
 629:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
  68              		.loc 1 629 0
  69 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  70 000a 43EA0223 		orr	r3, r3, r2, lsl #8
  71              	.LVL7:
 630:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  72              		.loc 1 630 0
  73 000e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  74              	.LVL8:
 631:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 632:Middlewares/Third_Party/FatFs/src/ff.c **** }
  75              		.loc 1 632 0
  76 0010 40EA0320 		orr	r0, r0, r3, lsl #8
  77              	.LVL9:
  78 0014 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE144:
  82              		.section	.text.st_word,"ax",%progbits
  83              		.align	1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv5-sp-d16
  89              	st_word:
  90              	.LFB145:
 633:Middlewares/Third_Party/FatFs/src/ff.c **** 
 634:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 635:Middlewares/Third_Party/FatFs/src/ff.c **** static
 636:Middlewares/Third_Party/FatFs/src/ff.c **** QWORD ld_qword (const BYTE* ptr)	/* Load an 8-byte little-endian word */
 637:Middlewares/Third_Party/FatFs/src/ff.c **** {
 638:Middlewares/Third_Party/FatFs/src/ff.c **** 	QWORD rv;
 639:Middlewares/Third_Party/FatFs/src/ff.c **** 
 640:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[7];
 641:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[6];
 642:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[5];
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[4];
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[3];
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
 647:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 649:Middlewares/Third_Party/FatFs/src/ff.c **** }
 650:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 651:Middlewares/Third_Party/FatFs/src/ff.c **** 
 652:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 653:Middlewares/Third_Party/FatFs/src/ff.c **** static
 654:Middlewares/Third_Party/FatFs/src/ff.c **** void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
 655:Middlewares/Third_Party/FatFs/src/ff.c **** {
  91              		.loc 1 655 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 14


  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.LVL10:
 656:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
  97              		.loc 1 656 0
  98 0000 0170     		strb	r1, [r0]
  99              	.LVL11:
 657:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 100              		.loc 1 657 0
 101 0002 090A     		lsrs	r1, r1, #8
 102              	.LVL12:
 103 0004 4170     		strb	r1, [r0, #1]
 658:Middlewares/Third_Party/FatFs/src/ff.c **** }
 104              		.loc 1 658 0
 105 0006 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE145:
 109              		.section	.text.st_dword,"ax",%progbits
 110              		.align	1
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv5-sp-d16
 116              	st_dword:
 117              	.LFB146:
 659:Middlewares/Third_Party/FatFs/src/ff.c **** 
 660:Middlewares/Third_Party/FatFs/src/ff.c **** static
 661:Middlewares/Third_Party/FatFs/src/ff.c **** void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
 662:Middlewares/Third_Party/FatFs/src/ff.c **** {
 118              		.loc 1 662 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL13:
 663:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 124              		.loc 1 663 0
 125 0000 0170     		strb	r1, [r0]
 126              	.LVL14:
 664:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 127              		.loc 1 664 0
 128 0002 C1F30723 		ubfx	r3, r1, #8, #8
 129 0006 4370     		strb	r3, [r0, #1]
 130              	.LVL15:
 665:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 131              		.loc 1 665 0
 132 0008 C1F30743 		ubfx	r3, r1, #16, #8
 133 000c 8370     		strb	r3, [r0, #2]
 134              	.LVL16:
 666:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 135              		.loc 1 666 0
 136 000e 090E     		lsrs	r1, r1, #24
 137              	.LVL17:
 138 0010 C170     		strb	r1, [r0, #3]
 667:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 15


 139              		.loc 1 667 0
 140 0012 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE146:
 144              		.section	.text.mem_cpy,"ax",%progbits
 145              		.align	1
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv5-sp-d16
 151              	mem_cpy:
 152              	.LFB147:
 668:Middlewares/Third_Party/FatFs/src/ff.c **** 
 669:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 670:Middlewares/Third_Party/FatFs/src/ff.c **** static
 671:Middlewares/Third_Party/FatFs/src/ff.c **** void st_qword (BYTE* ptr, QWORD val)	/* Store an 8-byte word in little-endian */
 672:Middlewares/Third_Party/FatFs/src/ff.c **** {
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 675:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 677:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 678:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 681:Middlewares/Third_Party/FatFs/src/ff.c **** }
 682:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 683:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
 684:Middlewares/Third_Party/FatFs/src/ff.c **** 
 685:Middlewares/Third_Party/FatFs/src/ff.c **** 
 686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 687:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 688:Middlewares/Third_Party/FatFs/src/ff.c **** /* String functions                                                      */
 689:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 690:Middlewares/Third_Party/FatFs/src/ff.c **** 
 691:Middlewares/Third_Party/FatFs/src/ff.c **** /* Copy memory to memory */
 692:Middlewares/Third_Party/FatFs/src/ff.c **** static
 693:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
 153              		.loc 1 693 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158              	.LVL18:
 694:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 695:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 696:Middlewares/Third_Party/FatFs/src/ff.c **** 
 697:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cnt) {
 159              		.loc 1 697 0
 160 0000 1346     		mov	r3, r2
 161 0002 2AB1     		cbz	r2, .L5
 162              	.LVL19:
 163              	.L7:
 698:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 699:Middlewares/Third_Party/FatFs/src/ff.c **** 			*d++ = *s++;
 164              		.loc 1 699 0 discriminator 1
 165 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 16


 166 0006 0270     		strb	r2, [r0]
 167              	.LVL20:
 168 0008 0130     		adds	r0, r0, #1
 169              	.LVL21:
 170 000a 0131     		adds	r1, r1, #1
 171              	.LVL22:
 700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (--cnt);
 172              		.loc 1 700 0 discriminator 1
 173 000c 013B     		subs	r3, r3, #1
 174              	.LVL23:
 175 000e F9D1     		bne	.L7
 176              	.L5:
 701:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 702:Middlewares/Third_Party/FatFs/src/ff.c **** }
 177              		.loc 1 702 0
 178 0010 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE147:
 182              		.section	.text.mem_set,"ax",%progbits
 183              		.align	1
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv5-sp-d16
 189              	mem_set:
 190              	.LFB148:
 703:Middlewares/Third_Party/FatFs/src/ff.c **** 
 704:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill memory block */
 705:Middlewares/Third_Party/FatFs/src/ff.c **** static
 706:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
 191              		.loc 1 706 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL24:
 197              	.L9:
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 
 709:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 710:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
 198              		.loc 1 710 0 discriminator 1
 199 0000 0170     		strb	r1, [r0]
 200              	.LVL25:
 201 0002 0130     		adds	r0, r0, #1
 202              	.LVL26:
 711:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt);
 203              		.loc 1 711 0 discriminator 1
 204 0004 013A     		subs	r2, r2, #1
 205              	.LVL27:
 206 0006 FBD1     		bne	.L9
 712:Middlewares/Third_Party/FatFs/src/ff.c **** }
 207              		.loc 1 712 0
 208 0008 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE148:
 212              		.section	.text.mem_cmp,"ax",%progbits
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 17


 213              		.align	1
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv5-sp-d16
 219              	mem_cmp:
 220              	.LFB149:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 
 714:Middlewares/Third_Party/FatFs/src/ff.c **** /* Compare memory block */
 715:Middlewares/Third_Party/FatFs/src/ff.c **** static
 716:Middlewares/Third_Party/FatFs/src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {	/* ZR:same, NZ:different */
 221              		.loc 1 716 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL28:
 227 0000 30B4     		push	{r4, r5}
 228              	.LCFI0:
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 4, -8
 231              		.cfi_offset 5, -4
 232              	.LVL29:
 233              	.L12:
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 719:Middlewares/Third_Party/FatFs/src/ff.c **** 
 720:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 		r = *d++ - *s++;
 234              		.loc 1 721 0 discriminator 2
 235 0002 451C     		adds	r5, r0, #1
 236              	.LVL30:
 237 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 238              	.LVL31:
 239 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 240 0008 1B1A     		subs	r3, r3, r0
 241              	.LVL32:
 722:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 242              		.loc 1 722 0 discriminator 2
 243 000a 013A     		subs	r2, r2, #1
 244              	.LVL33:
 245 000c 04D0     		beq	.L10
 246 000e 4C1C     		adds	r4, r1, #1
 247              	.LVL34:
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 248              		.loc 1 721 0 discriminator 1
 249 0010 2846     		mov	r0, r5
 250 0012 2146     		mov	r1, r4
 251              		.loc 1 722 0 discriminator 1
 252 0014 002B     		cmp	r3, #0
 253 0016 F4D0     		beq	.L12
 254              	.LVL35:
 255              	.L10:
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 724:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 725:Middlewares/Third_Party/FatFs/src/ff.c **** }
 256              		.loc 1 725 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 18


 257 0018 1846     		mov	r0, r3
 258 001a 30BC     		pop	{r4, r5}
 259              	.LCFI1:
 260              		.cfi_restore 5
 261              		.cfi_restore 4
 262              		.cfi_def_cfa_offset 0
 263              	.LVL36:
 264 001c 7047     		bx	lr
 265              		.cfi_endproc
 266              	.LFE149:
 268              		.section	.text.chk_chr,"ax",%progbits
 269              		.align	1
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-sp-d16
 275              	chk_chr:
 276              	.LFB150:
 726:Middlewares/Third_Party/FatFs/src/ff.c **** 
 727:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if chr is contained in the string */
 728:Middlewares/Third_Party/FatFs/src/ff.c **** static
 729:Middlewares/Third_Party/FatFs/src/ff.c **** int chk_chr (const char* str, int chr) {	/* NZ:contained, ZR:not contained */
 277              		.loc 1 729 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 282              	.LVL37:
 730:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str && *str != chr) str++;
 283              		.loc 1 730 0
 284 0000 00E0     		b	.L15
 285              	.L17:
 286              		.loc 1 730 0 is_stmt 0 discriminator 3
 287 0002 0130     		adds	r0, r0, #1
 288              	.LVL38:
 289              	.L15:
 290              		.loc 1 730 0 discriminator 1
 291 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 292 0006 0BB1     		cbz	r3, .L16
 293              		.loc 1 730 0 discriminator 2
 294 0008 8B42     		cmp	r3, r1
 295 000a FAD1     		bne	.L17
 296              	.L16:
 731:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 732:Middlewares/Third_Party/FatFs/src/ff.c **** }
 297              		.loc 1 732 0 is_stmt 1
 298 000c 1846     		mov	r0, r3
 299              	.LVL39:
 300 000e 7047     		bx	lr
 301              		.cfi_endproc
 302              	.LFE150:
 304              		.section	.text.chk_lock,"ax",%progbits
 305              		.align	1
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-sp-d16
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 19


 311              	chk_lock:
 312              	.LFB153:
 733:Middlewares/Third_Party/FatFs/src/ff.c **** 
 734:Middlewares/Third_Party/FatFs/src/ff.c **** 
 735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 737:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 738:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 739:Middlewares/Third_Party/FatFs/src/ff.c **** /* Request/Release grant to access the volume                            */
 740:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 741:Middlewares/Third_Party/FatFs/src/ff.c **** static
 742:Middlewares/Third_Party/FatFs/src/ff.c **** int lock_fs (
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 744:Middlewares/Third_Party/FatFs/src/ff.c **** )
 745:Middlewares/Third_Party/FatFs/src/ff.c **** {
 746:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 747:Middlewares/Third_Party/FatFs/src/ff.c **** }
 748:Middlewares/Third_Party/FatFs/src/ff.c **** 
 749:Middlewares/Third_Party/FatFs/src/ff.c **** 
 750:Middlewares/Third_Party/FatFs/src/ff.c **** static
 751:Middlewares/Third_Party/FatFs/src/ff.c **** void unlock_fs (
 752:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 753:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res		/* Result code to be returned */
 754:Middlewares/Third_Party/FatFs/src/ff.c **** )
 755:Middlewares/Third_Party/FatFs/src/ff.c **** {
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 758:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 759:Middlewares/Third_Party/FatFs/src/ff.c **** }
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 
 761:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 762:Middlewares/Third_Party/FatFs/src/ff.c **** 
 763:Middlewares/Third_Party/FatFs/src/ff.c **** 
 764:Middlewares/Third_Party/FatFs/src/ff.c **** 
 765:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 766:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 767:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock control functions                                           */
 768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 769:Middlewares/Third_Party/FatFs/src/ff.c **** 
 770:Middlewares/Third_Party/FatFs/src/ff.c **** static
 771:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 772:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 773:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 774:Middlewares/Third_Party/FatFs/src/ff.c **** )
 775:Middlewares/Third_Party/FatFs/src/ff.c **** {
 313              		.loc 1 775 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318              	.LVL40:
 319 0000 30B4     		push	{r4, r5}
 320              	.LCFI2:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 4, -8
 323              		.cfi_offset 5, -4
 324              	.LVL41:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 20


 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, be;
 777:Middlewares/Third_Party/FatFs/src/ff.c **** 
 778:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Search file semaphore table */
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
 325              		.loc 1 779 0
 326 0002 0025     		movs	r5, #0
 327 0004 2B46     		mov	r3, r5
 328 0006 01E0     		b	.L19
 329              	.LVL42:
 330              	.L25:
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 			be = 1;
 331              		.loc 1 785 0
 332 0008 0125     		movs	r5, #1
 333              	.LVL43:
 334              	.L20:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 335              		.loc 1 779 0 discriminator 2
 336 000a 0133     		adds	r3, r3, #1
 337              	.LVL44:
 338              	.L19:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 339              		.loc 1 779 0 is_stmt 0 discriminator 1
 340 000c 012B     		cmp	r3, #1
 341 000e 15D8     		bhi	.L21
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 342              		.loc 1 780 0 is_stmt 1
 343 0010 1A01     		lsls	r2, r3, #4
 344 0012 174C     		ldr	r4, .L32
 345 0014 A258     		ldr	r2, [r4, r2]
 346 0016 002A     		cmp	r2, #0
 347 0018 F6D0     		beq	.L25
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 348              		.loc 1 781 0
 349 001a 0468     		ldr	r4, [r0]
 350 001c A242     		cmp	r2, r4
 351 001e F4D1     		bne	.L20
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 352              		.loc 1 782 0 discriminator 1
 353 0020 134A     		ldr	r2, .L32
 354 0022 02EB0312 		add	r2, r2, r3, lsl #4
 355 0026 5468     		ldr	r4, [r2, #4]
 356 0028 8268     		ldr	r2, [r0, #8]
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 357              		.loc 1 781 0 discriminator 1
 358 002a 9442     		cmp	r4, r2
 359 002c EDD1     		bne	.L20
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 360              		.loc 1 783 0
 361 002e 104A     		ldr	r2, .L32
 362 0030 02EB0312 		add	r2, r2, r3, lsl #4
 363 0034 9468     		ldr	r4, [r2, #8]
 364 0036 4269     		ldr	r2, [r0, #20]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 21


 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 365              		.loc 1 782 0
 366 0038 9442     		cmp	r4, r2
 367 003a E6D1     		bne	.L20
 368              	.L21:
 786:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {	/* The object is not opened */
 369              		.loc 1 788 0
 370 003c 022B     		cmp	r3, #2
 371 003e 0AD0     		beq	.L30
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 792:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 793:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 372              		.loc 1 793 0
 373 0040 A1B9     		cbnz	r1, .L27
 374              		.loc 1 793 0 is_stmt 0 discriminator 2
 375 0042 0B4A     		ldr	r2, .L32
 376 0044 02EB0313 		add	r3, r2, r3, lsl #4
 377              	.LVL45:
 378 0048 9B89     		ldrh	r3, [r3, #12]
 379 004a B3F5807F 		cmp	r3, #256
 380 004e 09D0     		beq	.L31
 381              		.loc 1 793 0
 382 0050 0020     		movs	r0, #0
 383              	.LVL46:
 384              	.L24:
 794:Middlewares/Third_Party/FatFs/src/ff.c **** }
 385              		.loc 1 794 0 is_stmt 1
 386 0052 30BC     		pop	{r4, r5}
 387              	.LCFI3:
 388              		.cfi_remember_state
 389              		.cfi_restore 5
 390              		.cfi_restore 4
 391              		.cfi_def_cfa_offset 0
 392 0054 7047     		bx	lr
 393              	.LVL47:
 394              	.L30:
 395              	.LCFI4:
 396              		.cfi_restore_state
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 397              		.loc 1 789 0
 398 0056 0229     		cmp	r1, #2
 399 0058 08BF     		it	eq
 400 005a 45F00105 		orreq	r5, r5, #1
 401              	.LVL48:
 402 005e 1DB1     		cbz	r5, .L26
 403 0060 0020     		movs	r0, #0
 404              	.LVL49:
 405 0062 F6E7     		b	.L24
 406              	.LVL50:
 407              	.L31:
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 408              		.loc 1 793 0
 409 0064 1020     		movs	r0, #16
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 22


 410              	.LVL51:
 411 0066 F4E7     		b	.L24
 412              	.LVL52:
 413              	.L26:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 414              		.loc 1 789 0
 415 0068 1220     		movs	r0, #18
 416              	.LVL53:
 417 006a F2E7     		b	.L24
 418              	.LVL54:
 419              	.L27:
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 420              		.loc 1 793 0
 421 006c 1020     		movs	r0, #16
 422              	.LVL55:
 423 006e F0E7     		b	.L24
 424              	.L33:
 425              		.align	2
 426              	.L32:
 427 0070 00000000 		.word	.LANCHOR0
 428              		.cfi_endproc
 429              	.LFE153:
 431              		.section	.text.enq_lock,"ax",%progbits
 432              		.align	1
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu fpv5-sp-d16
 438              	enq_lock:
 439              	.LFB154:
 795:Middlewares/Third_Party/FatFs/src/ff.c **** 
 796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 797:Middlewares/Third_Party/FatFs/src/ff.c **** static
 798:Middlewares/Third_Party/FatFs/src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 799:Middlewares/Third_Party/FatFs/src/ff.c **** {
 440              		.loc 1 799 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445              	.LVL56:
 800:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 801:Middlewares/Third_Party/FatFs/src/ff.c **** 
 802:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 446              		.loc 1 802 0
 447 0000 0020     		movs	r0, #0
 448 0002 00E0     		b	.L35
 449              	.LVL57:
 450              	.L37:
 451              		.loc 1 802 0 is_stmt 0 discriminator 4
 452 0004 0130     		adds	r0, r0, #1
 453              	.LVL58:
 454              	.L35:
 455              		.loc 1 802 0 discriminator 1
 456 0006 0128     		cmp	r0, #1
 457 0008 04D8     		bhi	.L36
 458              		.loc 1 802 0 discriminator 3
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 23


 459 000a 0301     		lsls	r3, r0, #4
 460 000c 034A     		ldr	r2, .L38
 461 000e D358     		ldr	r3, [r2, r3]
 462 0010 002B     		cmp	r3, #0
 463 0012 F7D1     		bne	.L37
 464              	.L36:
 803:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 804:Middlewares/Third_Party/FatFs/src/ff.c **** }
 465              		.loc 1 804 0 is_stmt 1
 466 0014 0238     		subs	r0, r0, #2
 467              	.LVL59:
 468 0016 18BF     		it	ne
 469 0018 0120     		movne	r0, #1
 470              	.LVL60:
 471 001a 7047     		bx	lr
 472              	.L39:
 473              		.align	2
 474              	.L38:
 475 001c 00000000 		.word	.LANCHOR0
 476              		.cfi_endproc
 477              	.LFE154:
 479              		.section	.text.inc_lock,"ax",%progbits
 480              		.align	1
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 484              		.fpu fpv5-sp-d16
 486              	inc_lock:
 487              	.LFB155:
 805:Middlewares/Third_Party/FatFs/src/ff.c **** 
 806:Middlewares/Third_Party/FatFs/src/ff.c **** 
 807:Middlewares/Third_Party/FatFs/src/ff.c **** static
 808:Middlewares/Third_Party/FatFs/src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 809:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 810:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 811:Middlewares/Third_Party/FatFs/src/ff.c **** )
 812:Middlewares/Third_Party/FatFs/src/ff.c **** {
 488              		.loc 1 812 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493              	.LVL61:
 494 0000 70B4     		push	{r4, r5, r6}
 495              	.LCFI5:
 496              		.cfi_def_cfa_offset 12
 497              		.cfi_offset 4, -12
 498              		.cfi_offset 5, -8
 499              		.cfi_offset 6, -4
 500              	.LVL62:
 813:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 501              		.loc 1 816 0
 502 0002 0023     		movs	r3, #0
 503 0004 00E0     		b	.L41
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 24


 504              	.LVL63:
 505              	.L42:
 506              		.loc 1 816 0 is_stmt 0 discriminator 2
 507 0006 0133     		adds	r3, r3, #1
 508              	.LVL64:
 509              	.L41:
 510              		.loc 1 816 0 discriminator 1
 511 0008 012B     		cmp	r3, #1
 512 000a 13D8     		bhi	.L43
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 513              		.loc 1 817 0 is_stmt 1
 514 000c 1A01     		lsls	r2, r3, #4
 515 000e 244C     		ldr	r4, .L58
 516 0010 A458     		ldr	r4, [r4, r2]
 517 0012 0268     		ldr	r2, [r0]
 518 0014 9442     		cmp	r4, r2
 519 0016 F6D1     		bne	.L42
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 520              		.loc 1 818 0 discriminator 1
 521 0018 214A     		ldr	r2, .L58
 522 001a 02EB0312 		add	r2, r2, r3, lsl #4
 523 001e 5468     		ldr	r4, [r2, #4]
 524 0020 8268     		ldr	r2, [r0, #8]
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 525              		.loc 1 817 0 discriminator 1
 526 0022 9442     		cmp	r4, r2
 527 0024 EFD1     		bne	.L42
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].ofs == dp->dptr) break;
 528              		.loc 1 819 0
 529 0026 1E4A     		ldr	r2, .L58
 530 0028 02EB0312 		add	r2, r2, r3, lsl #4
 531 002c 9468     		ldr	r4, [r2, #8]
 532 002e 4269     		ldr	r2, [r0, #20]
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 533              		.loc 1 818 0
 534 0030 9442     		cmp	r4, r2
 535 0032 E8D1     		bne	.L42
 536              	.L43:
 820:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 822:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 537              		.loc 1 822 0
 538 0034 022B     		cmp	r3, #2
 539 0036 29D0     		beq	.L57
 540              	.LVL65:
 541              	.L46:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 829:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 830:Middlewares/Third_Party/FatFs/src/ff.c **** 
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 542              		.loc 1 831 0
 543 0038 21B1     		cbz	r1, .L50
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 25


 544              		.loc 1 831 0 is_stmt 0 discriminator 1
 545 003a 194A     		ldr	r2, .L58
 546 003c 02EB0312 		add	r2, r2, r3, lsl #4
 547 0040 9289     		ldrh	r2, [r2, #12]
 548 0042 52BB     		cbnz	r2, .L54
 549              	.L50:
 832:Middlewares/Third_Party/FatFs/src/ff.c **** 
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 550              		.loc 1 833 0 is_stmt 1
 551 0044 21BB     		cbnz	r1, .L55
 552              		.loc 1 833 0 is_stmt 0 discriminator 1
 553 0046 164A     		ldr	r2, .L58
 554 0048 02EB0312 		add	r2, r2, r3, lsl #4
 555 004c 9189     		ldrh	r1, [r2, #12]
 556              	.LVL66:
 557 004e 0131     		adds	r1, r1, #1
 558 0050 89B2     		uxth	r1, r1
 559              	.L51:
 560              		.loc 1 833 0 discriminator 4
 561 0052 134A     		ldr	r2, .L58
 562 0054 02EB0312 		add	r2, r2, r3, lsl #4
 563 0058 9181     		strh	r1, [r2, #12]	@ movhi
 834:Middlewares/Third_Party/FatFs/src/ff.c **** 
 835:Middlewares/Third_Party/FatFs/src/ff.c **** 	return i + 1;
 564              		.loc 1 835 0 is_stmt 1 discriminator 4
 565 005a 581C     		adds	r0, r3, #1
 566              	.L40:
 836:Middlewares/Third_Party/FatFs/src/ff.c **** }
 567              		.loc 1 836 0
 568 005c 70BC     		pop	{r4, r5, r6}
 569              	.LCFI6:
 570              		.cfi_remember_state
 571              		.cfi_restore 6
 572              		.cfi_restore 5
 573              		.cfi_restore 4
 574              		.cfi_def_cfa_offset 0
 575 005e 7047     		bx	lr
 576              	.LVL67:
 577              	.L48:
 578              	.LCFI7:
 579              		.cfi_restore_state
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 580              		.loc 1 823 0 discriminator 4
 581 0060 0133     		adds	r3, r3, #1
 582              	.LVL68:
 583              	.L45:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 584              		.loc 1 823 0 is_stmt 0 discriminator 1
 585 0062 012B     		cmp	r3, #1
 586 0064 04D8     		bhi	.L47
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 587              		.loc 1 823 0 discriminator 3
 588 0066 1A01     		lsls	r2, r3, #4
 589 0068 0D4C     		ldr	r4, .L58
 590 006a A258     		ldr	r2, [r4, r2]
 591 006c 002A     		cmp	r2, #0
 592 006e F7D1     		bne	.L48
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 26


 593              	.L47:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 594              		.loc 1 824 0 is_stmt 1
 595 0070 022B     		cmp	r3, #2
 596 0072 10D0     		beq	.L53
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 597              		.loc 1 825 0
 598 0074 0668     		ldr	r6, [r0]
 599 0076 0A4D     		ldr	r5, .L58
 600 0078 1C01     		lsls	r4, r3, #4
 601 007a 2A19     		adds	r2, r5, r4
 602 007c 2E51     		str	r6, [r5, r4]
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 603              		.loc 1 826 0
 604 007e 8468     		ldr	r4, [r0, #8]
 605 0080 5460     		str	r4, [r2, #4]
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 606              		.loc 1 827 0
 607 0082 4069     		ldr	r0, [r0, #20]
 608              	.LVL69:
 609 0084 9060     		str	r0, [r2, #8]
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 610              		.loc 1 828 0
 611 0086 0020     		movs	r0, #0
 612 0088 9081     		strh	r0, [r2, #12]	@ movhi
 613 008a D5E7     		b	.L46
 614              	.LVL70:
 615              	.L57:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 616              		.loc 1 823 0
 617 008c 0023     		movs	r3, #0
 618              	.LVL71:
 619 008e E8E7     		b	.L45
 620              	.LVL72:
 621              	.L55:
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622              		.loc 1 833 0
 623 0090 4FF48071 		mov	r1, #256
 624              	.LVL73:
 625 0094 DDE7     		b	.L51
 626              	.LVL74:
 627              	.L53:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 628              		.loc 1 824 0
 629 0096 0020     		movs	r0, #0
 630              	.LVL75:
 631 0098 E0E7     		b	.L40
 632              	.L54:
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 
 633              		.loc 1 831 0
 634 009a 0020     		movs	r0, #0
 635 009c DEE7     		b	.L40
 636              	.L59:
 637 009e 00BF     		.align	2
 638              	.L58:
 639 00a0 00000000 		.word	.LANCHOR0
 640              		.cfi_endproc
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 27


 641              	.LFE155:
 643              		.section	.text.dec_lock,"ax",%progbits
 644              		.align	1
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 648              		.fpu fpv5-sp-d16
 650              	dec_lock:
 651              	.LFB156:
 837:Middlewares/Third_Party/FatFs/src/ff.c **** 
 838:Middlewares/Third_Party/FatFs/src/ff.c **** 
 839:Middlewares/Third_Party/FatFs/src/ff.c **** static
 840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 842:Middlewares/Third_Party/FatFs/src/ff.c **** )
 843:Middlewares/Third_Party/FatFs/src/ff.c **** {
 652              		.loc 1 843 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657              	.LVL76:
 844:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD n;
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 658              		.loc 1 848 0
 659 0000 0138     		subs	r0, r0, #1
 660              	.LVL77:
 661 0002 0128     		cmp	r0, #1
 662 0004 15D8     		bhi	.L63
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 663              		.loc 1 849 0
 664 0006 0D4B     		ldr	r3, .L66
 665 0008 03EB0013 		add	r3, r3, r0, lsl #4
 666 000c 9B89     		ldrh	r3, [r3, #12]
 667              	.LVL78:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 668              		.loc 1 850 0
 669 000e B3F5807F 		cmp	r3, #256
 670 0012 03D0     		beq	.L64
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 671              		.loc 1 851 0
 672 0014 1BB1     		cbz	r3, .L62
 673              		.loc 1 851 0 is_stmt 0 discriminator 1
 674 0016 013B     		subs	r3, r3, #1
 675              	.LVL79:
 676 0018 9BB2     		uxth	r3, r3
 677              	.LVL80:
 678 001a 00E0     		b	.L62
 679              	.L64:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 680              		.loc 1 850 0 is_stmt 1
 681 001c 0023     		movs	r3, #0
 682              	.LVL81:
 683              	.L62:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 28


 852:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 684              		.loc 1 852 0
 685 001e 074A     		ldr	r2, .L66
 686 0020 02EB0012 		add	r2, r2, r0, lsl #4
 687 0024 9381     		strh	r3, [r2, #12]	@ movhi
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 688              		.loc 1 853 0
 689 0026 33B9     		cbnz	r3, .L65
 690              		.loc 1 853 0 is_stmt 0 discriminator 1
 691 0028 0301     		lsls	r3, r0, #4
 692              	.LVL82:
 693 002a 0020     		movs	r0, #0
 694              	.LVL83:
 695 002c 034A     		ldr	r2, .L66
 696              	.LVL84:
 697 002e D050     		str	r0, [r2, r3]
 698 0030 7047     		bx	lr
 699              	.LVL85:
 700              	.L63:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 855:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 856:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 701              		.loc 1 856 0 is_stmt 1
 702 0032 0220     		movs	r0, #2
 703              	.LVL86:
 704 0034 7047     		bx	lr
 705              	.LVL87:
 706              	.L65:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 707              		.loc 1 854 0
 708 0036 0020     		movs	r0, #0
 709              	.LVL88:
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 859:Middlewares/Third_Party/FatFs/src/ff.c **** }
 710              		.loc 1 859 0
 711 0038 7047     		bx	lr
 712              	.L67:
 713 003a 00BF     		.align	2
 714              	.L66:
 715 003c 00000000 		.word	.LANCHOR0
 716              		.cfi_endproc
 717              	.LFE156:
 719              		.section	.text.clear_lock,"ax",%progbits
 720              		.align	1
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu fpv5-sp-d16
 726              	clear_lock:
 727              	.LFB157:
 860:Middlewares/Third_Party/FatFs/src/ff.c **** 
 861:Middlewares/Third_Party/FatFs/src/ff.c **** 
 862:Middlewares/Third_Party/FatFs/src/ff.c **** static
 863:Middlewares/Third_Party/FatFs/src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs
 865:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 29


 866:Middlewares/Third_Party/FatFs/src/ff.c **** {
 728              		.loc 1 866 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 733              	.LVL89:
 867:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 868:Middlewares/Third_Party/FatFs/src/ff.c **** 
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 734              		.loc 1 869 0
 735 0000 0023     		movs	r3, #0
 736 0002 03E0     		b	.L73
 737              	.LVL90:
 738              	.L80:
 739              	.LCFI8:
 740              		.cfi_def_cfa_offset 4
 741              		.cfi_offset 4, -4
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 871:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 872:Middlewares/Third_Party/FatFs/src/ff.c **** }
 742              		.loc 1 872 0
 743 0004 5DF8044B 		ldr	r4, [sp], #4
 744              	.LCFI9:
 745              		.cfi_restore 4
 746              		.cfi_def_cfa_offset 0
 747 0008 7047     		bx	lr
 748              	.L79:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 749              		.loc 1 869 0
 750 000a 0133     		adds	r3, r3, #1
 751              	.LVL91:
 752              	.L73:
 753 000c 012B     		cmp	r3, #1
 754 000e 11D8     		bhi	.L78
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 755              		.loc 1 870 0
 756 0010 1A01     		lsls	r2, r3, #4
 757 0012 0949     		ldr	r1, .L81
 758 0014 8A58     		ldr	r2, [r1, r2]
 759 0016 8242     		cmp	r2, r0
 760 0018 F7D1     		bne	.L79
 866:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 761              		.loc 1 866 0
 762 001a 10B4     		push	{r4}
 763              	.LCFI10:
 764              		.cfi_def_cfa_offset 4
 765              		.cfi_offset 4, -4
 766              	.L74:
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 767              		.loc 1 870 0 discriminator 1
 768 001c 1A01     		lsls	r2, r3, #4
 769 001e 0024     		movs	r4, #0
 770 0020 8C50     		str	r4, [r1, r2]
 771              	.L70:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 772              		.loc 1 869 0 discriminator 2
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 30


 773 0022 0133     		adds	r3, r3, #1
 774              	.LVL92:
 775 0024 012B     		cmp	r3, #1
 776 0026 EDD8     		bhi	.L80
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 777              		.loc 1 870 0
 778 0028 1A01     		lsls	r2, r3, #4
 779 002a 0349     		ldr	r1, .L81
 780 002c 8A58     		ldr	r2, [r1, r2]
 781 002e 8242     		cmp	r2, r0
 782 0030 F7D1     		bne	.L70
 783 0032 F3E7     		b	.L74
 784              	.L78:
 785              	.LCFI11:
 786              		.cfi_def_cfa_offset 0
 787              		.cfi_restore 4
 788 0034 7047     		bx	lr
 789              	.L82:
 790 0036 00BF     		.align	2
 791              	.L81:
 792 0038 00000000 		.word	.LANCHOR0
 793              		.cfi_endproc
 794              	.LFE157:
 796              		.section	.text.clust2sect,"ax",%progbits
 797              		.align	1
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 801              		.fpu fpv5-sp-d16
 803              	clust2sect:
 804              	.LFB161:
 873:Middlewares/Third_Party/FatFs/src/ff.c **** 
 874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_LOCK != 0 */
 875:Middlewares/Third_Party/FatFs/src/ff.c **** 
 876:Middlewares/Third_Party/FatFs/src/ff.c **** 
 877:Middlewares/Third_Party/FatFs/src/ff.c **** 
 878:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 879:Middlewares/Third_Party/FatFs/src/ff.c **** /* Move/Flush disk access window in the file system object               */
 880:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 881:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 882:Middlewares/Third_Party/FatFs/src/ff.c **** static
 883:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 884:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs			/* File system object */
 885:Middlewares/Third_Party/FatFs/src/ff.c **** )
 886:Middlewares/Third_Party/FatFs/src/ff.c **** {
 887:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 888:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nf;
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 890:Middlewares/Third_Party/FatFs/src/ff.c **** 
 891:Middlewares/Third_Party/FatFs/src/ff.c **** 
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 896:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 0;
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 31


 899:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 903:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 904:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 907:Middlewares/Third_Party/FatFs/src/ff.c **** }
 908:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 
 911:Middlewares/Third_Party/FatFs/src/ff.c **** static
 912:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERROR */
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sector		/* Sector number to make appearance in the fs->win[] */
 915:Middlewares/Third_Party/FatFs/src/ff.c **** )
 916:Middlewares/Third_Party/FatFs/src/ff.c **** {
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 921:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 922:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 923:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 928:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = sector;
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 931:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 932:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 933:Middlewares/Third_Party/FatFs/src/ff.c **** }
 934:Middlewares/Third_Party/FatFs/src/ff.c **** 
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 936:Middlewares/Third_Party/FatFs/src/ff.c **** 
 937:Middlewares/Third_Party/FatFs/src/ff.c **** 
 938:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 939:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 940:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize file system and strage device                             */
 941:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 942:Middlewares/Third_Party/FatFs/src/ff.c **** 
 943:Middlewares/Third_Party/FatFs/src/ff.c **** static
 944:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_fs (	/* FR_OK:succeeded, !=0:error */
 945:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 946:Middlewares/Third_Party/FatFs/src/ff.c **** )
 947:Middlewares/Third_Party/FatFs/src/ff.c **** {
 948:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 949:Middlewares/Third_Party/FatFs/src/ff.c **** 
 950:Middlewares/Third_Party/FatFs/src/ff.c **** 
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = sync_window(fs);
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 953:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 955:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 32


 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win, 0, SS(fs));
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 962:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = fs->volbase + 1;
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 972:Middlewares/Third_Party/FatFs/src/ff.c **** }
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 974:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 976:Middlewares/Third_Party/FatFs/src/ff.c **** 
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 
 978:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 979:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get sector# from cluster#                                             */
 980:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 
 982:Middlewares/Third_Party/FatFs/src/ff.c **** static
 983:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
 984:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 986:Middlewares/Third_Party/FatFs/src/ff.c **** )
 987:Middlewares/Third_Party/FatFs/src/ff.c **** {
 805              		.loc 1 987 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              		@ link register save eliminated.
 810              	.LVL93:
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 811              		.loc 1 988 0
 812 0000 0239     		subs	r1, r1, #2
 813              	.LVL94:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 814              		.loc 1 989 0
 815 0002 036A     		ldr	r3, [r0, #32]
 816 0004 023B     		subs	r3, r3, #2
 817 0006 8B42     		cmp	r3, r1
 818 0008 04D9     		bls	.L85
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 819              		.loc 1 990 0
 820 000a 4389     		ldrh	r3, [r0, #10]
 821 000c 406B     		ldr	r0, [r0, #52]
 822              	.LVL95:
 823 000e 01FB0300 		mla	r0, r1, r3, r0
 824 0012 7047     		bx	lr
 825              	.LVL96:
 826              	.L85:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 33


 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 827              		.loc 1 989 0
 828 0014 0020     		movs	r0, #0
 829              	.LVL97:
 991:Middlewares/Third_Party/FatFs/src/ff.c **** }
 830              		.loc 1 991 0
 831 0016 7047     		bx	lr
 832              		.cfi_endproc
 833              	.LFE161:
 835              		.section	.text.clmt_clust,"ax",%progbits
 836              		.align	1
 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 840              		.fpu fpv5-sp-d16
 842              	clmt_clust:
 843              	.LFB166:
 992:Middlewares/Third_Party/FatFs/src/ff.c **** 
 993:Middlewares/Third_Party/FatFs/src/ff.c **** 
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 
 995:Middlewares/Third_Party/FatFs/src/ff.c **** 
 996:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 997:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 999:Middlewares/Third_Party/FatFs/src/ff.c **** 
1000:Middlewares/Third_Party/FatFs/src/ff.c **** static
1001:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
1002:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Corresponding object */
1003:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst	/* Cluster number to get the value */
1004:Middlewares/Third_Party/FatFs/src/ff.c **** )
1005:Middlewares/Third_Party/FatFs/src/ff.c **** {
1006:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
1007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val;
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1009:Middlewares/Third_Party/FatFs/src/ff.c **** 
1010:Middlewares/Third_Party/FatFs/src/ff.c **** 
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
1013:Middlewares/Third_Party/FatFs/src/ff.c **** 
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
1016:Middlewares/Third_Party/FatFs/src/ff.c **** 
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1018:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 34


1032:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1036:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1037:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1038:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->objsize) {
1039:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD cofs = clst - obj->sclust;	/* Offset from start cluster */
1040:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD clen = (DWORD)((obj->objsize - 1) / SS(fs)) / fs->csize;	/* Number of clusters - 1 */
1041:Middlewares/Third_Party/FatFs/src/ff.c **** 
1042:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 2) {	/* Is there no valid chain on the FAT? */
1043:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cofs <= clen) {
1044:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = (cofs == clen) ? 0x7FFFFFFF : clst + 1;	/* Generate the value */
1045:Middlewares/Third_Party/FatFs/src/ff.c **** 						break;
1046:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1048:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 3 && cofs < obj->n_cont) {	/* Is it in the 1st fragment? */
1049:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = clst + 1; 	/* Generate the value */
1050:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1051:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1052:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat != 2) {	/* Get value from FAT if FAT chain is valid */
1053:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->n_frag != 0) {	/* Is it on the growing edge? */
1054:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = 0x7FFFFFFF;	/* Generate EOC */
1055:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
1056:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1057:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x7FFFFFFF;
1058:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1059:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1060:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1061:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1062:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* go to default */
1063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1064:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = 1;	/* Internal error */
1066:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1067:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1068:Middlewares/Third_Party/FatFs/src/ff.c **** 
1069:Middlewares/Third_Party/FatFs/src/ff.c **** 	return val;
1070:Middlewares/Third_Party/FatFs/src/ff.c **** }
1071:Middlewares/Third_Party/FatFs/src/ff.c **** 
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 
1075:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1076:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1077:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Change value of a FAT entry                              */
1078:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 
1080:Middlewares/Third_Party/FatFs/src/ff.c **** static
1081:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
1082:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
1083:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,		/* FAT index number (cluster number) to be changed */
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val		/* New value to be set to the entry */
1085:Middlewares/Third_Party/FatFs/src/ff.c **** )
1086:Middlewares/Third_Party/FatFs/src/ff.c **** {
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 35


1089:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INT_ERR;
1090:Middlewares/Third_Party/FatFs/src/ff.c **** 
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 
1107:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :	/* WORD aligned items */
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1113:Middlewares/Third_Party/FatFs/src/ff.c **** 
1114:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :	/* DWORD aligned items */
1115:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1116:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1117:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1120:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
1122:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + clst * 4 % SS(fs), val);
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1127:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1128:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1129:Middlewares/Third_Party/FatFs/src/ff.c **** }
1130:Middlewares/Third_Party/FatFs/src/ff.c **** 
1131:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1132:Middlewares/Third_Party/FatFs/src/ff.c **** 
1133:Middlewares/Third_Party/FatFs/src/ff.c **** 
1134:Middlewares/Third_Party/FatFs/src/ff.c **** 
1135:Middlewares/Third_Party/FatFs/src/ff.c **** 
1136:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
1137:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1138:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Accessing FAT and Allocation Bitmap                            */
1139:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1140:Middlewares/Third_Party/FatFs/src/ff.c **** 
1141:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1142:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find a contiguous free cluster block */
1143:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1144:Middlewares/Third_Party/FatFs/src/ff.c **** 
1145:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 36


1146:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD find_bitmap (	/* 0:Not found, 2..:Cluster block found, 0xFFFFFFFF:Disk error */
1147:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to scan from */
1149:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl	/* Number of contiguous clusters to find (1..) */
1150:Middlewares/Third_Party/FatFs/src/ff.c **** )
1151:Middlewares/Third_Party/FatFs/src/ff.c **** {
1152:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm, bv;
1153:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1154:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val, scl, ctr;
1155:Middlewares/Third_Party/FatFs/src/ff.c **** 
1156:Middlewares/Third_Party/FatFs/src/ff.c **** 
1157:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit in the bitmap corresponds to cluster #2 */
1158:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) clst = 0;
1159:Middlewares/Third_Party/FatFs/src/ff.c **** 	scl = val = clst; ctr = 0;
1160:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1161:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fs->database + val / 8 / SS(fs)) != FR_OK) return 0xFFFFFFFF;	/* (assuming bi
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = val / 8 % SS(fs); bm = 1 << (val % 8);
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 				bv = fs->win[i] & bm; bm <<= 1;		/* Get bit value */
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++val >= fs->n_fatent - 2) {	/* Next cluster (with wrap-around) */
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = 0; bm = 0; i = SS(fs);
1168:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!bv) {	/* Is it a free cluster? */
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (++ctr == ncl) return scl + 2;	/* Check if run length is sufficient for required */
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 					scl = val; ctr = 0;		/* Encountered a cluster in-use, restart to scan */
1173:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (val == clst) return 0;	/* All cluster scanned? */
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm);
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1179:Middlewares/Third_Party/FatFs/src/ff.c **** }
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 
1182:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1183:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set/Clear a block of allocation bitmap */
1184:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 
1186:Middlewares/Third_Party/FatFs/src/ff.c **** static
1187:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT change_bitmap (
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1189:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to change from */
1190:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl,	/* Number of clusters to be changed */
1191:Middlewares/Third_Party/FatFs/src/ff.c **** 	int bv		/* bit value to be set (0 or 1) */
1192:Middlewares/Third_Party/FatFs/src/ff.c **** )
1193:Middlewares/Third_Party/FatFs/src/ff.c **** {
1194:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm;
1195:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1196:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect;
1197:Middlewares/Third_Party/FatFs/src/ff.c **** 
1198:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit corresponds to cluster #2 */
1199:Middlewares/Third_Party/FatFs/src/ff.c **** 	sect = fs->database + clst / 8 / SS(fs);	/* Sector address (assuming bitmap is located top of the 
1200:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = clst / 8 % SS(fs);						/* Byte offset in the sector */
1201:Middlewares/Third_Party/FatFs/src/ff.c **** 	bm = 1 << (clst % 8);						/* Bit mask in the byte */
1202:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 37


1203:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect++) != FR_OK) return FR_DISK_ERR;
1204:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1205:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1206:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (bv == (int)((fs->win[i] & bm) != 0)) return FR_INT_ERR;	/* Is the bit expected value? */
1207:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->win[i] ^= bm;	/* Flip the bit */
1208:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
1209:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--ncl == 0) return FR_OK;	/* All bits processed? */
1210:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm <<= 1);		/* Next bit */
1211:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1212:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));		/* Next byte */
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1215:Middlewares/Third_Party/FatFs/src/ff.c **** }
1216:Middlewares/Third_Party/FatFs/src/ff.c **** 
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 
1218:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1219:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the first fragment of the FAT chain    */
1220:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 
1222:Middlewares/Third_Party/FatFs/src/ff.c **** static
1223:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_first_frag (
1224:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj	/* Pointer to the corresponding object */
1225:Middlewares/Third_Party/FatFs/src/ff.c **** )
1226:Middlewares/Third_Party/FatFs/src/ff.c **** {
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, n;
1229:Middlewares/Third_Party/FatFs/src/ff.c **** 
1230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (obj->stat == 3) {	/* Has the object been changed 'fragmented'? */
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (cl = obj->sclust, n = obj->n_cont; n; cl++, n--) {	/* Create cluster chain on the FAT */
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(obj->fs, cl, cl + 1);
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = 0;	/* Change status 'FAT chain is valid' */
1236:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1238:Middlewares/Third_Party/FatFs/src/ff.c **** }
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 
1241:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1242:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the last fragment of the FAT chain     */
1243:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1244:Middlewares/Third_Party/FatFs/src/ff.c **** 
1245:Middlewares/Third_Party/FatFs/src/ff.c **** static
1246:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_last_frag (
1247:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Pointer to the corresponding object */
1248:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD lcl,	/* Last cluster of the fragment */
1249:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD term	/* Value to set the last FAT entry */
1250:Middlewares/Third_Party/FatFs/src/ff.c **** )
1251:Middlewares/Third_Party/FatFs/src/ff.c **** {
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1253:Middlewares/Third_Party/FatFs/src/ff.c **** 
1254:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (obj->n_frag > 0) {	/* Create the last chain on the FAT */
1255:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(obj->fs, lcl - obj->n_frag + 1, (obj->n_frag > 1) ? lcl - obj->n_frag + 2 : term);
1256:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->n_frag--;
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1259:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 38


1260:Middlewares/Third_Party/FatFs/src/ff.c **** }
1261:Middlewares/Third_Party/FatFs/src/ff.c **** 
1262:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT && !_FS_READONLY */
1263:Middlewares/Third_Party/FatFs/src/ff.c **** 
1264:Middlewares/Third_Party/FatFs/src/ff.c **** 
1265:Middlewares/Third_Party/FatFs/src/ff.c **** 
1266:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1267:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1268:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1269:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1270:Middlewares/Third_Party/FatFs/src/ff.c **** static
1271:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
1272:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1273:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,			/* Cluster to remove a chain from */
1274:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD pclst			/* Previous cluster of clst (0:an entire chain) */
1275:Middlewares/Third_Party/FatFs/src/ff.c **** )
1276:Middlewares/Third_Party/FatFs/src/ff.c **** {
1277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
1278:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nxt;
1279:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1280:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD scl = clst, ecl = clst;
1282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1283:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1284:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rt[2];
1285:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 
1289:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Mark the previous cluster 'EOC' on the FAT if it exists */
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (pclst && (!_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1294:Middlewares/Third_Party/FatFs/src/ff.c **** 
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Remove the chain */
1296:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
1301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1304:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
1308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1309:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1310:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1311:Middlewares/Third_Party/FatFs/src/ff.c **** 			ecl = nxt;
1312:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* End of contiguous cluster block */
1313:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1314:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
1315:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, ecl - scl + 1, 0);	/* Mark the cluster block 'free' on the bitmap 
1316:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) return res;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 39


1317:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1318:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1319:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1320:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[0] = clust2sect(fs, scl);					/* Start sector */
1321:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1322:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Inform device the block can be erased */
1323:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1324:Middlewares/Third_Party/FatFs/src/ff.c **** 			scl = ecl = nxt;
1325:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1326:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = nxt;					/* Next cluster */
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
1329:Middlewares/Third_Party/FatFs/src/ff.c **** 
1330:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1331:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
1332:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pclst == 0) {	/* Does the object have no chain? */
1333:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 0;		/* Change the object status 'initial' */
1334:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 3 && pclst >= obj->sclust && pclst <= obj->sclust + obj->n_cont) {	/* Did the c
1336:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 2;	/* Change the object status 'contiguous' */
1337:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1338:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1340:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1341:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1342:Middlewares/Third_Party/FatFs/src/ff.c **** }
1343:Middlewares/Third_Party/FatFs/src/ff.c **** 
1344:Middlewares/Third_Party/FatFs/src/ff.c **** 
1345:Middlewares/Third_Party/FatFs/src/ff.c **** 
1346:Middlewares/Third_Party/FatFs/src/ff.c **** 
1347:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1348:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Stretch a chain or Create a new chain                  */
1349:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1350:Middlewares/Third_Party/FatFs/src/ff.c **** static
1351:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1352:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1353:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
1354:Middlewares/Third_Party/FatFs/src/ff.c **** )
1355:Middlewares/Third_Party/FatFs/src/ff.c **** {
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Create a new chain */
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
1364:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1365:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {				/* Stretch current chain */
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(obj, clst);			/* Check the cluster status */
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
1371:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1372:Middlewares/Third_Party/FatFs/src/ff.c **** 
1373:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 40


1374:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
1375:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = find_bitmap(fs, scl, 1);				/* Find a free cluster */
1376:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0 || ncl == 0xFFFFFFFF) return ncl;	/* No free cluster or hard error? */
1377:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = change_bitmap(fs, ncl, 1, 1);			/* Mark the cluster 'in use' */
1378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_INT_ERR) return 1;
1379:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_DISK_ERR) return 0xFFFFFFFF;
1380:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (clst == 0) {							/* Is it a new chain? */
1381:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 2;							/* Set status 'contiguous' */
1382:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {									/* It is a stretched chain */
1383:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 2 && ncl != scl + 1) {	/* Is the chain got fragmented? */
1384:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_cont = scl - obj->sclust;	/* Set size of the contiguous part */
1385:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 3;						/* Change status 'just fragmented' */
1386:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1387:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1388:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (obj->stat != 2) {	/* Is the file non-contiguous? */
1389:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == clst + 1) {	/* Is the cluster next to previous one? */
1390:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_frag = obj->n_frag ? obj->n_frag + 1 : 2;	/* Increment size of last framgent */
1391:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* New fragment */
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->n_frag == 0) obj->n_frag = 1;
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_last_frag(obj, clst, ncl);	/* Fill last fragment on the FAT and link it to new one *
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) obj->n_frag = 1;
1395:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1397:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
1398:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1399:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = scl;	/* Start cluster */
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl++;							/* Next cluster */
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
1406:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			cs = get_fat(obj, ncl);			/* Get the cluster status */
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
1411:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, ncl, 0xFFFFFFFF);	/* Mark the new cluster 'EOC' */
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
1415:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1416:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1417:Middlewares/Third_Party/FatFs/src/ff.c **** 
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
1422:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
1424:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1425:Middlewares/Third_Party/FatFs/src/ff.c **** 
1426:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ncl;		/* Return new cluster number or error status */
1427:Middlewares/Third_Party/FatFs/src/ff.c **** }
1428:Middlewares/Third_Party/FatFs/src/ff.c **** 
1429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1430:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 41


1431:Middlewares/Third_Party/FatFs/src/ff.c **** 
1432:Middlewares/Third_Party/FatFs/src/ff.c **** 
1433:Middlewares/Third_Party/FatFs/src/ff.c **** 
1434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
1435:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1436:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1437:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1438:Middlewares/Third_Party/FatFs/src/ff.c **** 
1439:Middlewares/Third_Party/FatFs/src/ff.c **** static
1440:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1441:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1442:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File offset to be converted to cluster# */
1443:Middlewares/Third_Party/FatFs/src/ff.c **** )
1444:Middlewares/Third_Party/FatFs/src/ff.c **** {
 844              		.loc 1 1444 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 0
 847              		@ frame_needed = 0, uses_anonymous_args = 0
 848              		@ link register save eliminated.
 849              	.LVL98:
1445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, ncl, *tbl;
1446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = fp->obj.fs;
 850              		.loc 1 1446 0
 851 0000 0268     		ldr	r2, [r0]
 852              	.LVL99:
1447:Middlewares/Third_Party/FatFs/src/ff.c **** 
1448:Middlewares/Third_Party/FatFs/src/ff.c **** 
1449:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
 853              		.loc 1 1449 0
 854 0002 C36A     		ldr	r3, [r0, #44]
 855 0004 0433     		adds	r3, r3, #4
 856              	.LVL100:
1450:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 857              		.loc 1 1450 0
 858 0006 490A     		lsrs	r1, r1, #9
 859              	.LVL101:
 860 0008 5289     		ldrh	r2, [r2, #10]
 861              	.LVL102:
 862 000a B1FBF2F1 		udiv	r1, r1, r2
 863              	.LVL103:
 864              	.L89:
1451:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 865              		.loc 1 1452 0
 866 000e 1868     		ldr	r0, [r3]
 867              	.LVL104:
1453:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 868              		.loc 1 1453 0
 869 0010 30B1     		cbz	r0, .L86
1454:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 870              		.loc 1 1454 0
 871 0012 8142     		cmp	r1, r0
 872 0014 02D3     		bcc	.L88
1455:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 873              		.loc 1 1455 0
 874 0016 091A     		subs	r1, r1, r0
 875              	.LVL105:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 42


 876 0018 0833     		adds	r3, r3, #8
 877              	.LVL106:
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 878              		.loc 1 1452 0
 879 001a F8E7     		b	.L89
 880              	.LVL107:
 881              	.L88:
1456:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1457:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
 882              		.loc 1 1457 0
 883 001c 5868     		ldr	r0, [r3, #4]
 884              	.LVL108:
 885 001e 0844     		add	r0, r0, r1
 886              	.L86:
1458:Middlewares/Third_Party/FatFs/src/ff.c **** }
 887              		.loc 1 1458 0
 888 0020 7047     		bx	lr
 889              		.cfi_endproc
 890              	.LFE166:
 892              		.section	.text.ld_clust,"ax",%progbits
 893              		.align	1
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv5-sp-d16
 899              	ld_clust:
 900              	.LFB170:
1459:Middlewares/Third_Party/FatFs/src/ff.c **** 
1460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FASTSEEK */
1461:Middlewares/Third_Party/FatFs/src/ff.c **** 
1462:Middlewares/Third_Party/FatFs/src/ff.c **** 
1463:Middlewares/Third_Party/FatFs/src/ff.c **** 
1464:Middlewares/Third_Party/FatFs/src/ff.c **** 
1465:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1466:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Set directory index                              */
1467:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 
1469:Middlewares/Third_Party/FatFs/src/ff.c **** static
1470:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
1471:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1472:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* Offset of directory table */
1473:Middlewares/Third_Party/FatFs/src/ff.c **** )
1474:Middlewares/Third_Party/FatFs/src/ff.c **** {
1475:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1477:Middlewares/Third_Party/FatFs/src/ff.c **** 
1478:Middlewares/Third_Party/FatFs/src/ff.c **** 
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE)
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
1481:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;				/* Set current offset */
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
1486:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
1487:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1488:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 43


1489:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
1492:Middlewares/Third_Party/FatFs/src/ff.c **** 
1493:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {			/* Dynamic table (sub-directory or root-directory in FAT32+) */
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
1500:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = clust2sect(fs, clst);
1502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->clust = clst;					/* Current cluster# */
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
1507:Middlewares/Third_Party/FatFs/src/ff.c **** 
1508:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1509:Middlewares/Third_Party/FatFs/src/ff.c **** }
1510:Middlewares/Third_Party/FatFs/src/ff.c **** 
1511:Middlewares/Third_Party/FatFs/src/ff.c **** 
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 
1513:Middlewares/Third_Party/FatFs/src/ff.c **** 
1514:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1515:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Move directory table index next                  */
1516:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1517:Middlewares/Third_Party/FatFs/src/ff.c **** 
1518:Middlewares/Third_Party/FatFs/src/ff.c **** static
1519:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1521:Middlewares/Third_Party/FatFs/src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1522:Middlewares/Third_Party/FatFs/src/ff.c **** )
1523:Middlewares/Third_Party/FatFs/src/ff.c **** {
1524:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
1525:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1526:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1527:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1529:Middlewares/Third_Party/FatFs/src/ff.c **** 
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	ofs = dp->dptr + SZDIRE;	/* Next entry */
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
1532:Middlewares/Third_Party/FatFs/src/ff.c **** 
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs % SS(fs) == 0) {	/* Sector changed? */
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
1535:Middlewares/Third_Party/FatFs/src/ff.c **** 
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->clust) {		/* Static table */
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1540:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1541:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {					/* Dynamic table */
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {		/* Cluster changed? */
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 44


1546:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
1547:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) {								/* If no stretch, report EOT */
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
1550:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_EXFAT) dp->obj.stat |= 4;			/* The directory needs to be updated */
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
1562:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect -= n;							/* Restore window offset */
1564:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1565:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
1567:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->clust = clst;		/* Initialize data for new cluster */
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
1571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1573:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;						/* Current entry */
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 
1577:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1578:Middlewares/Third_Party/FatFs/src/ff.c **** }
1579:Middlewares/Third_Party/FatFs/src/ff.c **** 
1580:Middlewares/Third_Party/FatFs/src/ff.c **** 
1581:Middlewares/Third_Party/FatFs/src/ff.c **** 
1582:Middlewares/Third_Party/FatFs/src/ff.c **** 
1583:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1584:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1585:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Reserve a block of directory entries             */
1586:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1587:Middlewares/Third_Party/FatFs/src/ff.c **** 
1588:Middlewares/Third_Party/FatFs/src/ff.c **** static
1589:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
1590:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent		/* Number of contiguous entries to allocate */
1592:Middlewares/Third_Party/FatFs/src/ff.c **** )
1593:Middlewares/Third_Party/FatFs/src/ff.c **** {
1594:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1595:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1597:Middlewares/Third_Party/FatFs/src/ff.c **** 
1598:Middlewares/Third_Party/FatFs/src/ff.c **** 
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 45


1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1605:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name
1607:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1608:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
1609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1611:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 1);
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1617:Middlewares/Third_Party/FatFs/src/ff.c **** 
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1620:Middlewares/Third_Party/FatFs/src/ff.c **** }
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 
1622:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1623:Middlewares/Third_Party/FatFs/src/ff.c **** 
1624:Middlewares/Third_Party/FatFs/src/ff.c **** 
1625:Middlewares/Third_Party/FatFs/src/ff.c **** 
1626:Middlewares/Third_Party/FatFs/src/ff.c **** 
1627:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1628:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT: Directory handling - Load/Store start cluster number             */
1629:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 
1631:Middlewares/Third_Party/FatFs/src/ff.c **** static
1632:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
1633:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir	/* Pointer to the key entry */
1635:Middlewares/Third_Party/FatFs/src/ff.c **** )
1636:Middlewares/Third_Party/FatFs/src/ff.c **** {
 901              		.loc 1 1636 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              	.LVL109:
 906 0000 70B5     		push	{r4, r5, r6, lr}
 907              	.LCFI12:
 908              		.cfi_def_cfa_offset 16
 909              		.cfi_offset 4, -16
 910              		.cfi_offset 5, -12
 911              		.cfi_offset 6, -8
 912              		.cfi_offset 14, -4
 913 0002 0646     		mov	r6, r0
 914 0004 0D46     		mov	r5, r1
1637:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl;
1638:Middlewares/Third_Party/FatFs/src/ff.c **** 
1639:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = ld_word(dir + DIR_FstClusLO);
 915              		.loc 1 1639 0
 916 0006 01F11A00 		add	r0, r1, #26
 917              	.LVL110:
 918 000a FFF7FEFF 		bl	ld_word
 919              	.LVL111:
1640:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 46


 920              		.loc 1 1640 0
 921 000e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 922 0010 032B     		cmp	r3, #3
 923 0012 00D0     		beq	.L93
 924              	.LVL112:
 925              	.L90:
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
1642:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1643:Middlewares/Third_Party/FatFs/src/ff.c **** 
1644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl;
1645:Middlewares/Third_Party/FatFs/src/ff.c **** }
 926              		.loc 1 1645 0
 927 0014 70BD     		pop	{r4, r5, r6, pc}
 928              	.LVL113:
 929              	.L93:
 930 0016 0446     		mov	r4, r0
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 931              		.loc 1 1641 0
 932 0018 05F11400 		add	r0, r5, #20
 933              	.LVL114:
 934 001c FFF7FEFF 		bl	ld_word
 935              	.LVL115:
 936 0020 44EA0040 		orr	r0, r4, r0, lsl #16
 937              	.LVL116:
1644:Middlewares/Third_Party/FatFs/src/ff.c **** }
 938              		.loc 1 1644 0
 939 0024 F6E7     		b	.L90
 940              		.cfi_endproc
 941              	.LFE170:
 943              		.section	.text.st_clust,"ax",%progbits
 944              		.align	1
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 948              		.fpu fpv5-sp-d16
 950              	st_clust:
 951              	.LFB171:
1646:Middlewares/Third_Party/FatFs/src/ff.c **** 
1647:Middlewares/Third_Party/FatFs/src/ff.c **** 
1648:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1649:Middlewares/Third_Party/FatFs/src/ff.c **** static
1650:Middlewares/Third_Party/FatFs/src/ff.c **** void st_clust (
1651:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1652:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,	/* Pointer to the key entry */
1653:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl	/* Value to be set */
1654:Middlewares/Third_Party/FatFs/src/ff.c **** )
1655:Middlewares/Third_Party/FatFs/src/ff.c **** {
 952              		.loc 1 1655 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              	.LVL117:
 957 0000 70B5     		push	{r4, r5, r6, lr}
 958              	.LCFI13:
 959              		.cfi_def_cfa_offset 16
 960              		.cfi_offset 4, -16
 961              		.cfi_offset 5, -12
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 47


 962              		.cfi_offset 6, -8
 963              		.cfi_offset 14, -4
 964 0002 0646     		mov	r6, r0
 965 0004 0C46     		mov	r4, r1
 966 0006 1546     		mov	r5, r2
1656:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + DIR_FstClusLO, (WORD)cl);
 967              		.loc 1 1656 0
 968 0008 91B2     		uxth	r1, r2
 969              	.LVL118:
 970 000a 04F11A00 		add	r0, r4, #26
 971              	.LVL119:
 972 000e FFF7FEFF 		bl	st_word
 973              	.LVL120:
1657:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 974              		.loc 1 1657 0
 975 0012 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 976 0014 032B     		cmp	r3, #3
 977 0016 00D0     		beq	.L97
 978              	.L94:
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1660:Middlewares/Third_Party/FatFs/src/ff.c **** }
 979              		.loc 1 1660 0
 980 0018 70BD     		pop	{r4, r5, r6, pc}
 981              	.LVL121:
 982              	.L97:
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 983              		.loc 1 1658 0
 984 001a 290C     		lsrs	r1, r5, #16
 985 001c 04F11400 		add	r0, r4, #20
 986 0020 FFF7FEFF 		bl	st_word
 987              	.LVL122:
 988              		.loc 1 1660 0
 989 0024 F8E7     		b	.L94
 990              		.cfi_endproc
 991              	.LFE171:
 993              		.section	.text.pick_lfn,"ax",%progbits
 994              		.align	1
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 998              		.fpu fpv5-sp-d16
 1000              	pick_lfn:
 1001              	.LFB173:
1661:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1662:Middlewares/Third_Party/FatFs/src/ff.c **** 
1663:Middlewares/Third_Party/FatFs/src/ff.c **** 
1664:Middlewares/Third_Party/FatFs/src/ff.c **** 
1665:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1666:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1667:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: LFN handling                                                  */
1668:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1669:Middlewares/Third_Party/FatFs/src/ff.c **** static
1670:Middlewares/Third_Party/FatFs/src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1671:Middlewares/Third_Party/FatFs/src/ff.c **** 
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 
1673:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 48


1674:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Compare a part of file name with an LFN entry */
1675:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1676:Middlewares/Third_Party/FatFs/src/ff.c **** static
1677:Middlewares/Third_Party/FatFs/src/ff.c **** int cmp_lfn (				/* 1:matched, 0:not matched */
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
1680:Middlewares/Third_Party/FatFs/src/ff.c **** )
1681:Middlewares/Third_Party/FatFs/src/ff.c **** {
1682:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1684:Middlewares/Third_Party/FatFs/src/ff.c **** 
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1689:Middlewares/Third_Party/FatFs/src/ff.c **** 
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = uc;
1697:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1698:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1699:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1700:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1701:Middlewares/Third_Party/FatFs/src/ff.c **** 
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different len
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN matched */
1705:Middlewares/Third_Party/FatFs/src/ff.c **** }
1706:Middlewares/Third_Party/FatFs/src/ff.c **** 
1707:Middlewares/Third_Party/FatFs/src/ff.c **** 
1708:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
1709:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1710:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Pick a part of file name from an LFN entry */
1711:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1712:Middlewares/Third_Party/FatFs/src/ff.c **** static
1713:Middlewares/Third_Party/FatFs/src/ff.c **** int pick_lfn (			/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
1714:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
1715:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the LFN entry */
1716:Middlewares/Third_Party/FatFs/src/ff.c **** )
1717:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1002              		.loc 1 1717 0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 0
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006              	.LVL123:
 1007 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1008              	.LCFI14:
 1009              		.cfi_def_cfa_offset 24
 1010              		.cfi_offset 4, -24
 1011              		.cfi_offset 5, -20
 1012              		.cfi_offset 6, -16
 1013              		.cfi_offset 7, -12
 1014              		.cfi_offset 8, -8
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 49


 1015              		.cfi_offset 14, -4
 1016 0004 0746     		mov	r7, r0
 1017 0006 0E46     		mov	r6, r1
1718:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1719:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1720:Middlewares/Third_Party/FatFs/src/ff.c **** 
1721:Middlewares/Third_Party/FatFs/src/ff.c **** 
1722:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
 1018              		.loc 1 1722 0
 1019 0008 01F11A00 		add	r0, r1, #26
 1020              	.LVL124:
 1021 000c FFF7FEFF 		bl	ld_word
 1022              	.LVL125:
 1023 0010 60BB     		cbnz	r0, .L104
1723:Middlewares/Third_Party/FatFs/src/ff.c **** 
1724:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
 1024              		.loc 1 1724 0
 1025 0012 3578     		ldrb	r5, [r6]	@ zero_extendqisi2
 1026 0014 25F04005 		bic	r5, r5, #64
 1027 0018 013D     		subs	r5, r5, #1
 1028 001a 05EB4503 		add	r3, r5, r5, lsl #1
 1029 001e 05EB8305 		add	r5, r5, r3, lsl #2
 1030              	.LVL126:
1725:Middlewares/Third_Party/FatFs/src/ff.c **** 
1726:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
 1031              		.loc 1 1726 0
 1032 0022 4FF00108 		mov	r8, #1
 1033 0026 0024     		movs	r4, #0
 1034 0028 04E0     		b	.L100
 1035              	.LVL127:
 1036              	.L101:
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1728:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1731:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1732:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
 1037              		.loc 1 1732 0
 1038 002a 4FF6FF73 		movw	r3, #65535
 1039 002e 9842     		cmp	r0, r3
 1040 0030 21D1     		bne	.L106
 1041              	.LVL128:
 1042              	.L102:
1726:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 1043              		.loc 1 1726 0 discriminator 2
 1044 0032 0134     		adds	r4, r4, #1
 1045              	.LVL129:
 1046              	.L100:
1726:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 1047              		.loc 1 1726 0 is_stmt 0 discriminator 1
 1048 0034 0C2C     		cmp	r4, #12
 1049 0036 0ED8     		bhi	.L110
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 1050              		.loc 1 1727 0 is_stmt 1
 1051 0038 124B     		ldr	r3, .L111
 1052 003a 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1053 003c 3044     		add	r0, r0, r6
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 50


 1054 003e FFF7FEFF 		bl	ld_word
 1055              	.LVL130:
1728:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
 1056              		.loc 1 1728 0
 1057 0042 B8F1000F 		cmp	r8, #0
 1058 0046 F0D0     		beq	.L101
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
 1059              		.loc 1 1729 0
 1060 0048 FE2D     		cmp	r5, #254
 1061 004a 12D8     		bhi	.L105
 1062              	.LVL131:
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1063              		.loc 1 1730 0
 1064 004c 27F81500 		strh	r0, [r7, r5, lsl #1]	@ movhi
 1065 0050 8046     		mov	r8, r0
 1066 0052 0135     		adds	r5, r5, #1
 1067              	.LVL132:
 1068 0054 EDE7     		b	.L102
 1069              	.LVL133:
 1070              	.L110:
1733:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
 1071              		.loc 1 1736 0
 1072 0056 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1073 0058 13F0400F 		tst	r3, #64
 1074 005c 0DD0     		beq	.L107
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
 1075              		.loc 1 1737 0
 1076 005e FE2D     		cmp	r5, #254
 1077 0060 0DD8     		bhi	.L108
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
 1078              		.loc 1 1738 0
 1079 0062 0023     		movs	r3, #0
 1080 0064 27F81530 		strh	r3, [r7, r5, lsl #1]	@ movhi
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 
1741:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN is valid */
 1081              		.loc 1 1741 0
 1082 0068 0120     		movs	r0, #1
 1083 006a 00E0     		b	.L98
 1084              	.LVL134:
 1085              	.L104:
1722:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1086              		.loc 1 1722 0
 1087 006c 0020     		movs	r0, #0
 1088              	.L98:
1742:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1089              		.loc 1 1742 0
 1090 006e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1091              	.LVL135:
 1092              	.L105:
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
 1093              		.loc 1 1729 0
 1094 0072 0020     		movs	r0, #0
 1095              	.LVL136:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 51


 1096 0074 FBE7     		b	.L98
 1097              	.LVL137:
 1098              	.L106:
1732:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1099              		.loc 1 1732 0
 1100 0076 0020     		movs	r0, #0
 1101              	.LVL138:
 1102 0078 F9E7     		b	.L98
 1103              	.L107:
1741:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1104              		.loc 1 1741 0
 1105 007a 0120     		movs	r0, #1
 1106 007c F7E7     		b	.L98
 1107              	.L108:
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
 1108              		.loc 1 1737 0
 1109 007e 0020     		movs	r0, #0
 1110 0080 F5E7     		b	.L98
 1111              	.L112:
 1112 0082 00BF     		.align	2
 1113              	.L111:
 1114 0084 00000000 		.word	.LANCHOR1
 1115              		.cfi_endproc
 1116              	.LFE173:
 1118              		.section	.text.put_lfn,"ax",%progbits
 1119              		.align	1
 1120              		.syntax unified
 1121              		.thumb
 1122              		.thumb_func
 1123              		.fpu fpv5-sp-d16
 1125              	put_lfn:
 1126              	.LFB174:
1743:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 
1746:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1747:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1748:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create an entry of LFN entries */
1749:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1750:Middlewares/Third_Party/FatFs/src/ff.c **** static
1751:Middlewares/Third_Party/FatFs/src/ff.c **** void put_lfn (
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to the LFN */
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,			/* Pointer to the LFN entry to be created */
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord,			/* LFN order (1-20) */
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum			/* Checksum of the corresponding SFN */
1756:Middlewares/Third_Party/FatFs/src/ff.c **** )
1757:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1127              		.loc 1 1757 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131              	.LVL139:
 1132 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1133              	.LCFI15:
 1134              		.cfi_def_cfa_offset 32
 1135              		.cfi_offset 3, -32
 1136              		.cfi_offset 4, -28
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 52


 1137              		.cfi_offset 5, -24
 1138              		.cfi_offset 6, -20
 1139              		.cfi_offset 7, -16
 1140              		.cfi_offset 8, -12
 1141              		.cfi_offset 9, -8
 1142              		.cfi_offset 14, -4
 1143 0004 8046     		mov	r8, r0
 1144 0006 0F46     		mov	r7, r1
 1145 0008 9146     		mov	r9, r2
1758:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1759:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1760:Middlewares/Third_Party/FatFs/src/ff.c **** 
1761:Middlewares/Third_Party/FatFs/src/ff.c **** 
1762:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set checksum */
 1146              		.loc 1 1762 0
 1147 000a 4B73     		strb	r3, [r1, #13]
1763:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
 1148              		.loc 1 1763 0
 1149 000c 0F23     		movs	r3, #15
 1150              	.LVL140:
 1151 000e CB72     		strb	r3, [r1, #11]
1764:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Type] = 0;
 1152              		.loc 1 1764 0
 1153 0010 0024     		movs	r4, #0
 1154 0012 0C73     		strb	r4, [r1, #12]
1765:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + LDIR_FstClusLO, 0);
 1155              		.loc 1 1765 0
 1156 0014 2146     		mov	r1, r4
 1157              	.LVL141:
 1158 0016 07F11A00 		add	r0, r7, #26
 1159              	.LVL142:
 1160 001a FFF7FEFF 		bl	st_word
 1161              	.LVL143:
1766:Middlewares/Third_Party/FatFs/src/ff.c **** 
1767:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
 1162              		.loc 1 1767 0
 1163 001e 09F1FF36 		add	r6, r9, #-1
 1164 0022 06EB4603 		add	r3, r6, r6, lsl #1
 1165 0026 06EB8306 		add	r6, r6, r3, lsl #2
 1166              	.LVL144:
1768:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = wc = 0;
 1167              		.loc 1 1768 0
 1168 002a 2546     		mov	r5, r4
 1169 002c 02E0     		b	.L116
 1170              	.LVL145:
 1171              	.L115:
1769:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
1771:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
1772:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
1773:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
 1172              		.loc 1 1773 0
 1173 002e 0134     		adds	r4, r4, #1
 1174              	.LVL146:
 1175 0030 0C2C     		cmp	r4, #12
 1176 0032 11D8     		bhi	.L121
 1177              	.LVL147:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 53


 1178              	.L116:
1770:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
 1179              		.loc 1 1770 0
 1180 0034 4FF6FF73 		movw	r3, #65535
 1181 0038 9D42     		cmp	r5, r3
 1182 003a 02D0     		beq	.L114
 1183              	.LVL148:
1770:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
 1184              		.loc 1 1770 0 is_stmt 0 discriminator 1
 1185 003c 38F81650 		ldrh	r5, [r8, r6, lsl #1]
 1186              	.LVL149:
 1187 0040 0136     		adds	r6, r6, #1
 1188              	.LVL150:
 1189              	.L114:
1771:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
 1190              		.loc 1 1771 0 is_stmt 1
 1191 0042 0C4B     		ldr	r3, .L122
 1192 0044 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1193 0046 2946     		mov	r1, r5
 1194 0048 3844     		add	r0, r0, r7
 1195 004a FFF7FEFF 		bl	st_word
 1196              	.LVL151:
1772:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
 1197              		.loc 1 1772 0
 1198 004e 002D     		cmp	r5, #0
 1199 0050 EDD1     		bne	.L115
 1200 0052 4FF6FF75 		movw	r5, #65535
 1201              	.LVL152:
 1202 0056 EAE7     		b	.L115
 1203              	.LVL153:
 1204              	.L121:
1774:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
 1205              		.loc 1 1774 0
 1206 0058 4FF6FF73 		movw	r3, #65535
 1207 005c 9D42     		cmp	r5, r3
 1208 005e 02D0     		beq	.L117
 1209              		.loc 1 1774 0 is_stmt 0 discriminator 2
 1210 0060 38F81630 		ldrh	r3, [r8, r6, lsl #1]
 1211 0064 0BB9     		cbnz	r3, .L118
 1212              	.L117:
 1213              		.loc 1 1774 0 discriminator 3
 1214 0066 49F04009 		orr	r9, r9, #64
 1215              	.LVL154:
 1216              	.L118:
1775:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
 1217              		.loc 1 1775 0 is_stmt 1
 1218 006a 87F80090 		strb	r9, [r7]
1776:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1219              		.loc 1 1776 0
 1220 006e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1221              	.LVL155:
 1222              	.L123:
 1223 0072 00BF     		.align	2
 1224              	.L122:
 1225 0074 00000000 		.word	.LANCHOR1
 1226              		.cfi_endproc
 1227              	.LFE174:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 54


 1229              		.section	.text.gen_numname,"ax",%progbits
 1230              		.align	1
 1231              		.syntax unified
 1232              		.thumb
 1233              		.thumb_func
 1234              		.fpu fpv5-sp-d16
 1236              	gen_numname:
 1237              	.LFB175:
1777:Middlewares/Third_Party/FatFs/src/ff.c **** 
1778:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1779:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1780:Middlewares/Third_Party/FatFs/src/ff.c **** 
1781:Middlewares/Third_Party/FatFs/src/ff.c **** 
1782:Middlewares/Third_Party/FatFs/src/ff.c **** 
1783:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && !_FS_READONLY
1784:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1785:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create a Numbered SFN                                        */
1786:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 
1788:Middlewares/Third_Party/FatFs/src/ff.c **** static
1789:Middlewares/Third_Party/FatFs/src/ff.c **** void gen_numname (
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1793:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT seq			/* Sequence number */
1794:Middlewares/Third_Party/FatFs/src/ff.c **** )
1795:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1238              		.loc 1 1795 0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 8
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 1242              	.LVL156:
 1243 0000 70B5     		push	{r4, r5, r6, lr}
 1244              	.LCFI16:
 1245              		.cfi_def_cfa_offset 16
 1246              		.cfi_offset 4, -16
 1247              		.cfi_offset 5, -12
 1248              		.cfi_offset 6, -8
 1249              		.cfi_offset 14, -4
 1250 0002 82B0     		sub	sp, sp, #8
 1251              	.LCFI17:
 1252              		.cfi_def_cfa_offset 24
 1253 0004 0546     		mov	r5, r0
 1254 0006 1646     		mov	r6, r2
 1255 0008 1C46     		mov	r4, r3
1796:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns[8], c;
1797:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
1798:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1799:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sr;
1800:Middlewares/Third_Party/FatFs/src/ff.c **** 
1801:Middlewares/Third_Party/FatFs/src/ff.c **** 
1802:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dst, src, 11);
 1256              		.loc 1 1802 0
 1257 000a 0B22     		movs	r2, #11
 1258              	.LVL157:
 1259 000c FFF7FEFF 		bl	mem_cpy
 1260              	.LVL158:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 55


1803:Middlewares/Third_Party/FatFs/src/ff.c **** 
1804:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number 
 1261              		.loc 1 1804 0
 1262 0010 052C     		cmp	r4, #5
 1263 0012 11D8     		bhi	.L125
 1264              	.LVL159:
 1265              	.L126:
1805:Middlewares/Third_Party/FatFs/src/ff.c **** 		sr = seq;
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
 1266              		.loc 1 1808 0
 1267 0014 0722     		movs	r2, #7
 1268 0016 1DE0     		b	.L132
 1269              	.LVL160:
 1270              	.L128:
 1271              		.loc 1 1808 0 is_stmt 0 discriminator 2
 1272 0018 0132     		adds	r2, r2, #1
 1273              	.LVL161:
 1274              	.L127:
 1275              		.loc 1 1808 0 discriminator 1
 1276 001a 0F2A     		cmp	r2, #15
 1277 001c 0CD8     		bhi	.L125
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
 1278              		.loc 1 1809 0 is_stmt 1
 1279 001e 03F00101 		and	r1, r3, #1
 1280 0022 01EB4404 		add	r4, r1, r4, lsl #1
 1281              	.LVL162:
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
 1282              		.loc 1 1810 0
 1283 0026 5B08     		lsrs	r3, r3, #1
 1284              	.LVL163:
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
 1285              		.loc 1 1811 0
 1286 0028 14F4803F 		tst	r4, #65536
 1287 002c F4D0     		beq	.L128
 1288              		.loc 1 1811 0 is_stmt 0 discriminator 1
 1289 002e 84F48834 		eor	r4, r4, #69632
 1290              	.LVL164:
 1291 0032 84F02104 		eor	r4, r4, #33
 1292              	.LVL165:
 1293 0036 EFE7     		b	.L128
 1294              	.LVL166:
 1295              	.L125:
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
 1296              		.loc 1 1806 0 is_stmt 1
 1297 0038 3388     		ldrh	r3, [r6]
 1298 003a 002B     		cmp	r3, #0
 1299 003c EAD0     		beq	.L126
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
 1300              		.loc 1 1807 0
 1301 003e 0236     		adds	r6, r6, #2
 1302              	.LVL167:
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
 1303              		.loc 1 1808 0
 1304 0040 0022     		movs	r2, #0
 1305 0042 EAE7     		b	.L127
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 56


 1306              	.LVL168:
 1307              	.L131:
1812:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1813:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq = (UINT)sr;
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* itoa (hexdecimal) */
1818:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = 7;
1819:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)((seq % 16) + '0');
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
 1308              		.loc 1 1822 0
 1309 0044 531E     		subs	r3, r2, #1
 1310              	.LVL169:
 1311 0046 02A8     		add	r0, sp, #8
 1312 0048 0244     		add	r2, r2, r0
 1313 004a 02F8081C 		strb	r1, [r2, #-8]
 1314              	.LVL170:
1823:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
1824:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (seq);
 1315              		.loc 1 1824 0
 1316 004e 2409     		lsrs	r4, r4, #4
 1317              	.LVL171:
 1318 0050 09D0     		beq	.L142
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
 1319              		.loc 1 1822 0
 1320 0052 1A46     		mov	r2, r3
 1321              	.LVL172:
 1322              	.L132:
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
 1323              		.loc 1 1820 0
 1324 0054 04F00F03 		and	r3, r4, #15
 1325 0058 03F13001 		add	r1, r3, #48
 1326              	.LVL173:
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
 1327              		.loc 1 1821 0
 1328 005c 3929     		cmp	r1, #57
 1329 005e F1D9     		bls	.L131
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
 1330              		.loc 1 1821 0 is_stmt 0 discriminator 1
 1331 0060 03F13701 		add	r1, r3, #55
 1332              	.LVL174:
 1333 0064 EEE7     		b	.L131
 1334              	.LVL175:
 1335              	.L142:
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 	ns[i] = '~';
 1336              		.loc 1 1825 0 is_stmt 1
 1337 0066 7E21     		movs	r1, #126
 1338              	.LVL176:
 1339 0068 0246     		mov	r2, r0
 1340              	.LVL177:
 1341 006a 1A44     		add	r2, r2, r3
 1342 006c 02F8081C 		strb	r1, [r2, #-8]
 1343              	.LVL178:
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 57


1827:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Append the number */
1828:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
 1344              		.loc 1 1828 0
 1345 0070 00E0     		b	.L133
 1346              	.LVL179:
 1347              	.L135:
 1348              		.loc 1 1828 0 is_stmt 0 discriminator 2
 1349 0072 0134     		adds	r4, r4, #1
 1350              	.LVL180:
 1351              	.L133:
 1352              		.loc 1 1828 0 discriminator 1
 1353 0074 9C42     		cmp	r4, r3
 1354 0076 09D2     		bcs	.L137
 1355              		.loc 1 1828 0 discriminator 3
 1356 0078 2A5D     		ldrb	r2, [r5, r4]	@ zero_extendqisi2
 1357 007a 202A     		cmp	r2, #32
 1358 007c F9D1     		bne	.L135
 1359 007e 05E0     		b	.L137
 1360              	.L139:
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(dst[j])) {
1830:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (j == i - 1) break;
1831:Middlewares/Third_Party/FatFs/src/ff.c **** 			j++;
1832:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1833:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1834:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
 1361              		.loc 1 1835 0 is_stmt 1
 1362 0080 2021     		movs	r1, #32
 1363              	.L136:
 1364              		.loc 1 1835 0 is_stmt 0 discriminator 4
 1365 0082 621C     		adds	r2, r4, #1
 1366              	.LVL181:
 1367 0084 2955     		strb	r1, [r5, r4]
1836:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
 1368              		.loc 1 1836 0 is_stmt 1 discriminator 4
 1369 0086 072A     		cmp	r2, #7
 1370 0088 08D8     		bhi	.L143
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
 1371              		.loc 1 1835 0
 1372 008a 1446     		mov	r4, r2
 1373              	.LVL182:
 1374              	.L137:
 1375 008c 072B     		cmp	r3, #7
 1376 008e F7D8     		bhi	.L139
 1377              	.LVL183:
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
 1378              		.loc 1 1835 0 is_stmt 0 discriminator 1
 1379 0090 02AA     		add	r2, sp, #8
 1380 0092 1A44     		add	r2, r2, r3
 1381 0094 12F8081C 		ldrb	r1, [r2, #-8]	@ zero_extendqisi2
 1382 0098 0133     		adds	r3, r3, #1
 1383              	.LVL184:
 1384 009a F2E7     		b	.L136
 1385              	.LVL185:
 1386              	.L143:
1837:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1387              		.loc 1 1837 0 is_stmt 1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 58


 1388 009c 02B0     		add	sp, sp, #8
 1389              	.LCFI18:
 1390              		.cfi_def_cfa_offset 16
 1391              		@ sp needed
 1392 009e 70BD     		pop	{r4, r5, r6, pc}
 1393              		.cfi_endproc
 1394              	.LFE175:
 1396              		.section	.text.sum_sfn,"ax",%progbits
 1397              		.align	1
 1398              		.syntax unified
 1399              		.thumb
 1400              		.thumb_func
 1401              		.fpu fpv5-sp-d16
 1403              	sum_sfn:
 1404              	.LFB176:
1838:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 && !_FS_READONLY */
1839:Middlewares/Third_Party/FatFs/src/ff.c **** 
1840:Middlewares/Third_Party/FatFs/src/ff.c **** 
1841:Middlewares/Third_Party/FatFs/src/ff.c **** 
1842:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1843:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1844:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Calculate checksum of an SFN entry                           */
1845:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1846:Middlewares/Third_Party/FatFs/src/ff.c **** 
1847:Middlewares/Third_Party/FatFs/src/ff.c **** static
1848:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE sum_sfn (
1849:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1850:Middlewares/Third_Party/FatFs/src/ff.c **** )
1851:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1405              		.loc 1 1851 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409              		@ link register save eliminated.
 1410              	.LVL186:
 1411 0000 0146     		mov	r1, r0
 1412              	.LVL187:
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
1853:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n = 11;
 1413              		.loc 1 1853 0
 1414 0002 0B22     		movs	r2, #11
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
 1415              		.loc 1 1852 0
 1416 0004 0020     		movs	r0, #0
 1417              	.LVL188:
 1418              	.L145:
1854:Middlewares/Third_Party/FatFs/src/ff.c **** 
1855:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1856:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = (sum >> 1) + (sum << 7) + *dir++;
 1419              		.loc 1 1856 0 discriminator 1
 1420 0006 C301     		lsls	r3, r0, #7
 1421 0008 43EA5003 		orr	r3, r3, r0, lsr #1
 1422              	.LVL189:
 1423 000c 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1424              	.LVL190:
 1425 000e 50FA83F3 		uxtab	r3, r0, r3
 1426 0012 D8B2     		uxtb	r0, r3
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 59


 1427              	.LVL191:
 1428 0014 0131     		adds	r1, r1, #1
 1429              	.LVL192:
1857:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--n);
 1430              		.loc 1 1857 0 discriminator 1
 1431 0016 013A     		subs	r2, r2, #1
 1432              	.LVL193:
 1433 0018 F5D1     		bne	.L145
1858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1859:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1434              		.loc 1 1859 0
 1435 001a 7047     		bx	lr
 1436              		.cfi_endproc
 1437              	.LFE176:
 1439              		.section	.text.get_achar,"ax",%progbits
 1440              		.align	1
 1441              		.syntax unified
 1442              		.thumb
 1443              		.thumb_func
 1444              		.fpu fpv5-sp-d16
 1446              	get_achar:
 1447              	.LFB182:
1860:Middlewares/Third_Party/FatFs/src/ff.c **** 
1861:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1862:Middlewares/Third_Party/FatFs/src/ff.c **** 
1863:Middlewares/Third_Party/FatFs/src/ff.c **** 
1864:Middlewares/Third_Party/FatFs/src/ff.c **** 
1865:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1866:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1867:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Checksum                                                       */
1868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1869:Middlewares/Third_Party/FatFs/src/ff.c **** 
1870:Middlewares/Third_Party/FatFs/src/ff.c **** static
1871:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xdir_sum (			/* Get checksum of the directoly block */
1872:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Directory entry block to be calculated */
1873:Middlewares/Third_Party/FatFs/src/ff.c **** )
1874:Middlewares/Third_Party/FatFs/src/ff.c **** {
1875:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, szblk;
1876:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum;
1877:Middlewares/Third_Party/FatFs/src/ff.c **** 
1878:Middlewares/Third_Party/FatFs/src/ff.c **** 
1879:Middlewares/Third_Party/FatFs/src/ff.c **** 	szblk = (dir[XDIR_NumSec] + 1) * SZDIRE;
1880:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = sum = 0; i < szblk; i++) {
1881:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == XDIR_SetSum) {	/* Skip sum field */
1882:Middlewares/Third_Party/FatFs/src/ff.c **** 			i++;
1883:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1884:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + dir[i];
1885:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1886:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1887:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1888:Middlewares/Third_Party/FatFs/src/ff.c **** }
1889:Middlewares/Third_Party/FatFs/src/ff.c **** 
1890:Middlewares/Third_Party/FatFs/src/ff.c **** 
1891:Middlewares/Third_Party/FatFs/src/ff.c **** 
1892:Middlewares/Third_Party/FatFs/src/ff.c **** static
1893:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xname_sum (		/* Get check sum (to be used as hash) of the name */
1894:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* name	/* File name to be calculated */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 60


1895:Middlewares/Third_Party/FatFs/src/ff.c **** )
1896:Middlewares/Third_Party/FatFs/src/ff.c **** {
1897:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
1898:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum = 0;
1899:Middlewares/Third_Party/FatFs/src/ff.c **** 
1900:Middlewares/Third_Party/FatFs/src/ff.c **** 
1901:Middlewares/Third_Party/FatFs/src/ff.c **** 	while ((chr = *name++) != 0) {
1902:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = ff_wtoupper(chr);		/* File name needs to be ignored case */
1903:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr & 0xFF);
1904:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr >> 8);
1905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1907:Middlewares/Third_Party/FatFs/src/ff.c **** }
1908:Middlewares/Third_Party/FatFs/src/ff.c **** 
1909:Middlewares/Third_Party/FatFs/src/ff.c **** 
1910:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _USE_MKFS
1911:Middlewares/Third_Party/FatFs/src/ff.c **** static
1912:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD xsum32 (
1913:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE  dat,	/* Data to be sumed */
1914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sum	/* Previous value */
1915:Middlewares/Third_Party/FatFs/src/ff.c **** )
1916:Middlewares/Third_Party/FatFs/src/ff.c **** {
1917:Middlewares/Third_Party/FatFs/src/ff.c **** 	sum = ((sum & 1) ? 0x80000000 : 0) + (sum >> 1) + dat;
1918:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1919:Middlewares/Third_Party/FatFs/src/ff.c **** }
1920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1921:Middlewares/Third_Party/FatFs/src/ff.c **** 
1922:Middlewares/Third_Party/FatFs/src/ff.c **** 
1923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1924:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1925:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get object information from a directory block */
1926:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 
1928:Middlewares/Third_Party/FatFs/src/ff.c **** static
1929:Middlewares/Third_Party/FatFs/src/ff.c **** void get_xdir_info (
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block 85+C0+C1s */
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Buffer to store the extracted file information */
1932:Middlewares/Third_Party/FatFs/src/ff.c **** )
1933:Middlewares/Third_Party/FatFs/src/ff.c **** {
1934:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT di, si;
1935:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
1936:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1937:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nc;
1938:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1939:Middlewares/Third_Party/FatFs/src/ff.c **** 
1940:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get file name */
1941:Middlewares/Third_Party/FatFs/src/ff.c **** 	di = 0;
1942:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2; di < dirb[XDIR_NumName]; si += 2, di++) {
1944:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1945:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ld_word(dirb + si);					/* Get a character */
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) { di = 0; break; }	/* Buffer overflow --> inaccessible object name */
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di] = w;						/* Store it */
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1949:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2, nc = 0; nc < dirb[XDIR_NumName]; si += 2, nc++) {
1951:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 61


1952:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(ld_word(dirb + si), 0);	/* Get a character and Unicode -> OEM */
1953:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {				/* Is it a double byte char? (always false at SBCS cfg) */
1954:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[di++] = (char)(w >> 8);	/* Put 1st byte of the DBC */
1955:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1956:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == 0 || di >= _MAX_LFN) { di = 0; break; }	/* Invalid char or buffer overflow --> inaccessi
1957:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di++] = (char)w;
1958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1960:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) fno->fname[di++] = '?';	/* Inaccessible object name? */
1961:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[di] = 0;						/* Terminate file name */
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[0] = 0;							/* No SFN */
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dirb[XDIR_Attr];					/* Attribute */
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = (fno->fattrib & AM_DIR) ? 0 : ld_qword(dirb + XDIR_FileSize);	/* Size */
1966:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = ld_word(dirb + XDIR_ModTime + 0);	/* Time */
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fdate = ld_word(dirb + XDIR_ModTime + 2);	/* Date */
1968:Middlewares/Third_Party/FatFs/src/ff.c **** }
1969:Middlewares/Third_Party/FatFs/src/ff.c **** 
1970:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1971:Middlewares/Third_Party/FatFs/src/ff.c **** 
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 
1973:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1974:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get a directry entry block */
1975:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1976:Middlewares/Third_Party/FatFs/src/ff.c **** 
1977:Middlewares/Third_Party/FatFs/src/ff.c **** static
1978:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_xdir (	/* FR_INT_ERR: invalid entry block */
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the reading direcotry object pointing the 85 entry */
1980:Middlewares/Third_Party/FatFs/src/ff.c **** )
1981:Middlewares/Third_Party/FatFs/src/ff.c **** {
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1983:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, sz_ent;
1984:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the on-memory direcotry entry block 85+C0+C1s */
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load 85 entry */
1988:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0x85) return FR_INT_ERR;
1991:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + 0, dp->dir, SZDIRE);
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_ent = (dirb[XDIR_NumSec] + 1) * SZDIRE;
1993:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_ent < 3 * SZDIRE || sz_ent > 19 * SZDIRE) return FR_INT_ERR;
1994:Middlewares/Third_Party/FatFs/src/ff.c **** 
1995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C0 entry */
1996:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_next(dp, 0);
1997:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1998:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1999:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2000:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0xC0) return FR_INT_ERR;
2001:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + SZDIRE, dp->dir, SZDIRE);
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (MAXDIRB(dirb[XDIR_NumName]) > sz_ent) return FR_INT_ERR;
2003:Middlewares/Third_Party/FatFs/src/ff.c **** 
2004:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C1 entries */
2005:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SZDIRE * 2;	/* C1 offset */
2006:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2008:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 62


2009:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2010:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->dir[XDIR_Type] != 0xC1) return FR_INT_ERR;
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < MAXDIRB(_MAX_LFN)) mem_cpy(dirb + i, dp->dir, SZDIRE);
2013:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while ((i += SZDIRE) < sz_ent);
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Sanity check (do it when accessible object name) */
2016:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i <= MAXDIRB(_MAX_LFN)) {
2017:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (xdir_sum(dirb) != ld_word(dirb + XDIR_SetSum)) return FR_INT_ERR;
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2019:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2020:Middlewares/Third_Party/FatFs/src/ff.c **** }
2021:Middlewares/Third_Party/FatFs/src/ff.c **** 
2022:Middlewares/Third_Party/FatFs/src/ff.c **** 
2023:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY || _FS_RPATH != 0
2024:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2025:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Load the object's directory entry block */
2026:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2027:Middlewares/Third_Party/FatFs/src/ff.c **** static
2028:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_obj_dir (
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Blank directory object to be used to access containing direcotry */
2030:Middlewares/Third_Party/FatFs/src/ff.c **** 	const _FDID* obj	/* Object with its containing directory information */
2031:Middlewares/Third_Party/FatFs/src/ff.c **** )
2032:Middlewares/Third_Party/FatFs/src/ff.c **** {
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2034:Middlewares/Third_Party/FatFs/src/ff.c **** 
2035:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Open object containing directory */
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.fs = obj->fs;
2037:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.sclust = obj->c_scl;
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.stat = (BYTE)obj->c_size;
2039:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.objsize = obj->c_size & 0xFFFFFF00;
2040:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->blk_ofs = obj->c_ofs;
2041:Middlewares/Third_Party/FatFs/src/ff.c **** 
2042:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);	/* Goto object's entry block */
2043:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2044:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_xdir(dp);		/* Load the object's entry block */
2045:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2046:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2047:Middlewares/Third_Party/FatFs/src/ff.c **** }
2048:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2049:Middlewares/Third_Party/FatFs/src/ff.c **** 
2050:Middlewares/Third_Party/FatFs/src/ff.c **** 
2051:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2052:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2053:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Store the directory block to the media */
2054:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2055:Middlewares/Third_Party/FatFs/src/ff.c **** static
2056:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT store_xdir (
2057:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Pointer to the direcotry object */
2058:Middlewares/Third_Party/FatFs/src/ff.c **** )
2059:Middlewares/Third_Party/FatFs/src/ff.c **** {
2060:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2061:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent;
2062:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the direcotry entry block 85+C0+C1s */
2063:Middlewares/Third_Party/FatFs/src/ff.c **** 
2064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create set sum */
2065:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_SetSum, xdir_sum(dirb));
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 63


2066:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = dirb[XDIR_NumSec] + 1;
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Store the set of directory to the volume */
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (res == FR_OK) {
2071:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2073:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(dp->dir, dirb, SZDIRE);
2074:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.fs->wflag = 1;
2075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (--nent == 0) break;
2076:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb += SZDIRE;
2077:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2078:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2079:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (res == FR_OK || res == FR_DISK_ERR) ? res : FR_INT_ERR;
2080:Middlewares/Third_Party/FatFs/src/ff.c **** }
2081:Middlewares/Third_Party/FatFs/src/ff.c **** 
2082:Middlewares/Third_Party/FatFs/src/ff.c **** 
2083:Middlewares/Third_Party/FatFs/src/ff.c **** 
2084:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2085:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Create a new directory enrty block */
2086:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2087:Middlewares/Third_Party/FatFs/src/ff.c **** 
2088:Middlewares/Third_Party/FatFs/src/ff.c **** static
2089:Middlewares/Third_Party/FatFs/src/ff.c **** void create_xdir (
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block buffer */
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn	/* Pointer to the nul terminated file name */
2092:Middlewares/Third_Party/FatFs/src/ff.c **** )
2093:Middlewares/Third_Party/FatFs/src/ff.c **** {
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE nb, nc;
2096:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2097:Middlewares/Third_Party/FatFs/src/ff.c **** 
2098:Middlewares/Third_Party/FatFs/src/ff.c **** 
2099:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create 85+C0 entry */
2100:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dirb, 0, 2 * SZDIRE);
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type] = 0x85;
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type + SZDIRE] = 0xC0;
2103:Middlewares/Third_Party/FatFs/src/ff.c **** 
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create C1 entries */
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	nc = 0; nb = 1; chr = 1; i = SZDIRE * 2;
2106:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb[i++] = 0xC1; dirb[i++] = 0;	/* Entry type C1 */
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill name field */
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chr && (chr = lfn[nc]) != 0) nc++;	/* Get a character if exist */
2110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirb + i, chr); 		/* Store it */
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while ((i += 2) % SZDIRE != 0);
2112:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb++;
2113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (lfn[nc]);	/* Fill next entry if any char follows */
2114:Middlewares/Third_Party/FatFs/src/ff.c **** 
2115:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumName] = nc;	/* Set name length */
2116:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumSec] = nb;		/* Set block length */
2117:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_NameHash, xname_sum(lfn));	/* Set name hash */
2118:Middlewares/Third_Party/FatFs/src/ff.c **** }
2119:Middlewares/Third_Party/FatFs/src/ff.c **** 
2120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
2121:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
2122:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 64


2123:Middlewares/Third_Party/FatFs/src/ff.c **** 
2124:Middlewares/Third_Party/FatFs/src/ff.c **** 
2125:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
2126:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2127:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read an object from the directory                                     */
2128:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2129:Middlewares/Third_Party/FatFs/src/ff.c **** 
2130:Middlewares/Third_Party/FatFs/src/ff.c **** static
2131:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_read (
2132:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
2133:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
2134:Middlewares/Third_Party/FatFs/src/ff.c **** )
2135:Middlewares/Third_Party/FatFs/src/ff.c **** {
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2138:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
2139:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2140:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
2141:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
2149:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2150:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_USE_LABEL && vol) {
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x83) break;	/* Volume label entry? */
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x85) {		/* Start of the file entry block? */
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->blk_ofs = dp->dptr;	/* Get location of the block */
2157:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_xdir(dp);	/* Load the entry block */
2158:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
2159:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->obj.attr = fs->dirbuf[XDIR_Attr] & AM_MASK;	/* Get attribute */
2160:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2161:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2163:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2164:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else
2165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2166:Middlewares/Third_Party/FatFs/src/ff.c **** 		{	/* On the FAT12/16/32 volume */
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
2168:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid 
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF;
2171:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (a == AM_LFN) {			/* An LFN entry is found */
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;
2177:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2178:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check LFN validity and capture it */
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 65


2180:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ord || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
2182:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
2183:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2184:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2185:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2186:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2187:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != DDEM && c != '.' && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a 
2189:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2191:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2192:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2195:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2196:Middlewares/Third_Party/FatFs/src/ff.c **** 
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
2198:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2199:Middlewares/Third_Party/FatFs/src/ff.c **** }
2200:Middlewares/Third_Party/FatFs/src/ff.c **** 
2201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
2202:Middlewares/Third_Party/FatFs/src/ff.c **** 
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 
2205:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2206:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Find an object in the directory                  */
2207:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 
2209:Middlewares/Third_Party/FatFs/src/ff.c **** static
2210:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
2211:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the directory object with the file name */
2212:Middlewares/Third_Party/FatFs/src/ff.c **** )
2213:Middlewares/Third_Party/FatFs/src/ff.c **** {
2214:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2216:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
2217:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2218:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, ord, sum;
2219:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2220:Middlewares/Third_Party/FatFs/src/ff.c **** 
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
2222:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2223:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2224:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2225:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE nc;
2226:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT di, ni;
2227:Middlewares/Third_Party/FatFs/src/ff.c **** 		WORD hash = xname_sum(fs->lfnbuf);		/* Hash value of the name to find */
2228:Middlewares/Third_Party/FatFs/src/ff.c **** 
2229:Middlewares/Third_Party/FatFs/src/ff.c **** 		while ((res = dir_read(dp, 0)) == FR_OK) {	/* Read an item */
2230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 255
2231:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->dirbuf[XDIR_NumName] > _MAX_LFN) continue;			/* Skip comparison if inaccessible object n
2232:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->dirbuf + XDIR_NameHash) != hash) continue;	/* Skip comparison if hash mismatched
2234:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (nc = fs->dirbuf[XDIR_NumName], di = SZDIRE * 2, ni = 0; nc; nc--, di += 2, ni++) {	/* Compa
2235:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((di % SZDIRE) == 0) di += 2;
2236:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ff_wtoupper(ld_word(fs->dirbuf + di)) != ff_wtoupper(fs->lfnbuf[ni])) break;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 66


2237:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2238:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nc == 0 && !fs->lfnbuf[ni]) break;	/* Name matched? */
2239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2240:Middlewares/Third_Party/FatFs/src/ff.c **** 		return res;
2241:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2243:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2244:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2245:Middlewares/Third_Party/FatFs/src/ff.c **** 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2246:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2247:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
2251:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
2252:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2256:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
2263:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2264:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0x
2266:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2267:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!ord && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2271:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2272:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2273:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
2275:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
2276:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);	/* Next entry */
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
2279:Middlewares/Third_Party/FatFs/src/ff.c **** 
2280:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2281:Middlewares/Third_Party/FatFs/src/ff.c **** }
2282:Middlewares/Third_Party/FatFs/src/ff.c **** 
2283:Middlewares/Third_Party/FatFs/src/ff.c **** 
2284:Middlewares/Third_Party/FatFs/src/ff.c **** 
2285:Middlewares/Third_Party/FatFs/src/ff.c **** 
2286:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2287:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2288:Middlewares/Third_Party/FatFs/src/ff.c **** /* Register an object to the directory                                   */
2289:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2290:Middlewares/Third_Party/FatFs/src/ff.c **** 
2291:Middlewares/Third_Party/FatFs/src/ff.c **** static
2292:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DI
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 67


2294:Middlewares/Third_Party/FatFs/src/ff.c **** )
2295:Middlewares/Third_Party/FatFs/src/ff.c **** {
2296:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2298:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2299:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n, nlen, nent;
2300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sn[12], sum;
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 
2302:Middlewares/Third_Party/FatFs/src/ff.c **** 
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 
2306:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2309:Middlewares/Third_Party/FatFs/src/ff.c **** 
2310:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (nlen + 14) / 15 + 2;	/* Number of entries to allocate (85+C0+C1s) */
2311:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_alloc(dp, nent);		/* Allocate entries */
2312:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2313:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->blk_ofs = dp->dptr - SZDIRE * (nent - 1);	/* Set the allocated entry block offset */
2314:Middlewares/Third_Party/FatFs/src/ff.c **** 
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.sclust != 0 && (dp->obj.stat & 4)) {	/* Has the sub-directory been stretched? */
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.objsize += (DWORD)fs->csize * SS(fs);	/* Increase the directory size by cluster size */
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_first_frag(&dp->obj);				/* Fill first fragment on the FAT if needed */
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_last_frag(&dp->obj, dp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if neede
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2321:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = load_obj_dir(&dj, &dp->obj);				/* Load the object status */
2322:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_FileSize, dp->obj.objsize);		/* Update the allocation status */
2324:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_ValidFileSize, dp->obj.objsize);
2325:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbuf[XDIR_GenFlags] = dp->obj.stat | 1;
2326:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = store_xdir(&dj);							/* Store the object status */
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2334:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, dp->fn, 12);
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 
2348:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create an SFN with/without LFNs. */
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 68


2351:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dp->sect);
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 
2365:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non LFN configuration */
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
2368:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set SFN entry */
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
2376:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
2378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2380:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2381:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2384:Middlewares/Third_Party/FatFs/src/ff.c **** }
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 
2386:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 
2390:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE == 0
2391:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2392:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remove an object from the directory                                   */
2393:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 
2395:Middlewares/Third_Party/FatFs/src/ff.c **** static
2396:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
2398:Middlewares/Third_Party/FatFs/src/ff.c **** )
2399:Middlewares/Third_Party/FatFs/src/ff.c **** {
2400:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2402:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD last = dp->dptr;
2404:Middlewares/Third_Party/FatFs/src/ff.c **** 
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);	/* Goto top of the entry blo
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 69


2408:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Mark an entry 'deleted' */
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[XDIR_Type] &= 0x7F;
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* On the FAT12/16/32 volume */
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[DIR_Name] = DDEM;
2415:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
2418:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
2420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
2421:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2422:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Non LFN configuration */
2423:Middlewares/Third_Party/FatFs/src/ff.c **** 
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(fs, dp->sect);
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
2428:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2430:Middlewares/Third_Party/FatFs/src/ff.c **** 
2431:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2432:Middlewares/Third_Party/FatFs/src/ff.c **** }
2433:Middlewares/Third_Party/FatFs/src/ff.c **** 
2434:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY && _FS_MINIMIZE == 0 */
2435:Middlewares/Third_Party/FatFs/src/ff.c **** 
2436:Middlewares/Third_Party/FatFs/src/ff.c **** 
2437:Middlewares/Third_Party/FatFs/src/ff.c **** 
2438:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
2439:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2440:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get file information from directory entry                             */
2441:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2442:Middlewares/Third_Party/FatFs/src/ff.c **** 
2443:Middlewares/Third_Party/FatFs/src/ff.c **** static
2444:Middlewares/Third_Party/FatFs/src/ff.c **** void get_fileinfo (		/* No return code */
2445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
2447:Middlewares/Third_Party/FatFs/src/ff.c **** )
2448:Middlewares/Third_Party/FatFs/src/ff.c **** {
2449:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
2450:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c;
2451:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
2452:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, lfv;
2454:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2455:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2456:Middlewares/Third_Party/FatFs/src/ff.c **** 
2457:Middlewares/Third_Party/FatFs/src/ff.c **** 
2458:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[0] = 0;		/* Invaidate file info */
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
2460:Middlewares/Third_Party/FatFs/src/ff.c **** 
2461:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2462:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2463:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2464:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_xdir_info(fs->dirbuf, fno);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 70


2465:Middlewares/Third_Party/FatFs/src/ff.c **** 		return;
2466:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2467:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2468:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = j = 0;
2471:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
2472:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2473:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
2475:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
2476:Middlewares/Third_Party/FatFs/src/ff.c **** 					fno->fname[i++] = (char)(w >> 8);
2477:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2479:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i >= _MAX_LFN) { i = 0; break; }	/* No LFN if buffer overflow */
2480:Middlewares/Third_Party/FatFs/src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
2481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[i] = 0;	/* Terminate the LFN */
2483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2484:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2485:Middlewares/Third_Party/FatFs/src/ff.c **** 
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfv = fno->fname[i];	/* LFN is exist if non-zero */
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2492:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!lfv) fno->fname[j] = '.';
2494:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->altname[j++] = '.';
2495:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2496:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
2497:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dp->dir[i])) {
2498:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = c << 8 | dp->dir[i++];
2499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2500:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
2501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
2502:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2503:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->altname[j] = c;
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!lfv) {
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[j] = c;
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 		j++;
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!lfv) {
2513:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j] = 0;
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is ex
2515:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[j] = 0;	/* Terminate the SFN */
2517:Middlewares/Third_Party/FatFs/src/ff.c **** 
2518:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non-LFN configuration */
2519:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 71


2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
2525:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
2526:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2527:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[j] = 0;
2528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2529:Middlewares/Third_Party/FatFs/src/ff.c **** 
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dp->dir[DIR_Attr];				/* Attribute */
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
2532:Middlewares/Third_Party/FatFs/src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
2533:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
2534:Middlewares/Third_Party/FatFs/src/ff.c **** }
2535:Middlewares/Third_Party/FatFs/src/ff.c **** 
2536:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 
2538:Middlewares/Third_Party/FatFs/src/ff.c **** 
2539:Middlewares/Third_Party/FatFs/src/ff.c **** 
2540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
2541:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2542:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pattern matching                                                      */
2543:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2544:Middlewares/Third_Party/FatFs/src/ff.c **** 
2545:Middlewares/Third_Party/FatFs/src/ff.c **** static
2546:Middlewares/Third_Party/FatFs/src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
2547:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
2548:Middlewares/Third_Party/FatFs/src/ff.c **** )
2549:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1448              		.loc 1 2549 0
 1449              		.cfi_startproc
 1450              		@ args = 0, pretend = 0, frame = 0
 1451              		@ frame_needed = 0, uses_anonymous_args = 0
 1452              		@ link register save eliminated.
 1453              	.LVL194:
2550:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2551:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2552:Middlewares/Third_Party/FatFs/src/ff.c **** 
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
 1454              		.loc 1 2553 0
 1455 0000 0368     		ldr	r3, [r0]
 1456 0002 5A1C     		adds	r2, r3, #1
 1457 0004 0260     		str	r2, [r0]
 1458 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1459              	.LVL195:
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
 1460              		.loc 1 2554 0
 1461 0008 A0F16103 		sub	r3, r0, #97
 1462 000c 9BB2     		uxth	r3, r3
 1463 000e 192B     		cmp	r3, #25
 1464 0010 01D8     		bhi	.L147
 1465              		.loc 1 2554 0 is_stmt 0 discriminator 1
 1466 0012 2038     		subs	r0, r0, #32
 1467              	.LVL196:
 1468 0014 80B2     		uxth	r0, r0
 1469              	.LVL197:
 1470              	.L147:
2555:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 72


2556:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
 1471              		.loc 1 2556 0 is_stmt 1
 1472 0016 7F28     		cmp	r0, #127
 1473 0018 02D9     		bls	.L148
 1474              		.loc 1 2556 0 is_stmt 0 discriminator 1
 1475 001a 8038     		subs	r0, r0, #128
 1476              	.LVL198:
 1477 001c 014B     		ldr	r3, .L149
 1478 001e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 1479              	.LVL199:
 1480              	.L148:
2557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2558:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr)) {		/* Get DBC 2nd byte if needed */
2559:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
2560:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 	return chr;
2563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
2565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2566:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1481              		.loc 1 2566 0 is_stmt 1
 1482 0020 7047     		bx	lr
 1483              	.L150:
 1484 0022 00BF     		.align	2
 1485              	.L149:
 1486 0024 00000000 		.word	.LANCHOR2
 1487              		.cfi_endproc
 1488              	.LFE182:
 1490              		.section	.text.pattern_matching,"ax",%progbits
 1491              		.align	1
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1495              		.fpu fpv5-sp-d16
 1497              	pattern_matching:
 1498              	.LFB183:
2567:Middlewares/Third_Party/FatFs/src/ff.c **** 
2568:Middlewares/Third_Party/FatFs/src/ff.c **** 
2569:Middlewares/Third_Party/FatFs/src/ff.c **** static
2570:Middlewares/Third_Party/FatFs/src/ff.c **** int pattern_matching (	/* 0:not matched, 1:matched */
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
2572:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
2573:Middlewares/Third_Party/FatFs/src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 	int inf				/* Infinite search (* specified) */
2575:Middlewares/Third_Party/FatFs/src/ff.c **** )
2576:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1499              		.loc 1 2576 0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 16
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 1503              	.LVL200:
 1504 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1505              	.LCFI19:
 1506              		.cfi_def_cfa_offset 24
 1507              		.cfi_offset 4, -24
 1508              		.cfi_offset 5, -20
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 73


 1509              		.cfi_offset 6, -16
 1510              		.cfi_offset 7, -12
 1511              		.cfi_offset 8, -8
 1512              		.cfi_offset 14, -4
 1513 0004 84B0     		sub	sp, sp, #16
 1514              	.LCFI20:
 1515              		.cfi_def_cfa_offset 40
 1516 0006 0746     		mov	r7, r0
 1517 0008 0191     		str	r1, [sp, #4]
 1518 000a 1446     		mov	r4, r2
 1519 000c 9846     		mov	r8, r3
 1520              	.LVL201:
 1521              	.L152:
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *pp, *np;
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR pc, nc;
2579:Middlewares/Third_Party/FatFs/src/ff.c **** 	int nm, nx;
2580:Middlewares/Third_Party/FatFs/src/ff.c **** 
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
 1522              		.loc 1 2582 0
 1523 000e 651E     		subs	r5, r4, #1
 1524              	.LVL202:
 1525 0010 4CB1     		cbz	r4, .L168
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
 1526              		.loc 1 2583 0
 1527 0012 01A8     		add	r0, sp, #4
 1528 0014 FFF7FEFF 		bl	get_achar
 1529              	.LVL203:
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
 1530              		.loc 1 2582 0
 1531 0018 2C46     		mov	r4, r5
 1532              		.loc 1 2583 0
 1533 001a 0028     		cmp	r0, #0
 1534 001c F7D1     		bne	.L152
 1535 001e 0020     		movs	r0, #0
 1536              	.LVL204:
 1537              	.L151:
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
2597:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_achar(&nam);			/* nam++ */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 74


2604:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 
2606:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 0;
2607:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1538              		.loc 1 2607 0
 1539 0020 04B0     		add	sp, sp, #16
 1540              	.LCFI21:
 1541              		.cfi_remember_state
 1542              		.cfi_def_cfa_offset 24
 1543              		@ sp needed
 1544 0022 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1545              	.LVL205:
 1546              	.L168:
 1547              	.LCFI22:
 1548              		.cfi_restore_state
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1549              		.loc 1 2585 0
 1550 0026 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1551 0028 33BB     		cbnz	r3, .L161
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1552              		.loc 1 2585 0 is_stmt 0 discriminator 1
 1553 002a B8F1000F 		cmp	r8, #0
 1554 002e 23D0     		beq	.L161
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1555              		.loc 1 2585 0
 1556 0030 0120     		movs	r0, #1
 1557 0032 F5E7     		b	.L151
 1558              	.LVL206:
 1559              	.L172:
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
 1560              		.loc 1 2591 0 is_stmt 1
 1561 0034 2346     		mov	r3, r4
 1562 0036 2246     		mov	r2, r4
 1563 0038 05E0     		b	.L158
 1564              	.LVL207:
 1565              	.L170:
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
 1566              		.loc 1 2593 0 discriminator 1
 1567 003a 0132     		adds	r2, r2, #1
 1568              	.LVL208:
 1569              	.L157:
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
 1570              		.loc 1 2594 0
 1571 003c 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 1572 003e 2A29     		cmp	r1, #42
 1573 0040 18BF     		it	ne
 1574 0042 3F29     		cmpne	r1, #63
 1575 0044 07D1     		bne	.L169
 1576              	.LVL209:
 1577              	.L158:
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
 1578              		.loc 1 2593 0
 1579 0046 0399     		ldr	r1, [sp, #12]
 1580 0048 481C     		adds	r0, r1, #1
 1581 004a 0390     		str	r0, [sp, #12]
 1582 004c 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 1583 004e 3F2D     		cmp	r5, #63
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 75


 1584 0050 F3D0     		beq	.L170
 1585 0052 0123     		movs	r3, #1
 1586              	.LVL210:
 1587 0054 F2E7     		b	.L157
 1588              	.LVL211:
 1589              	.L169:
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
 1590              		.loc 1 2595 0
 1591 0056 0299     		ldr	r1, [sp, #8]
 1592 0058 FFF7D2FF 		bl	pattern_matching
 1593              	.LVL212:
 1594 005c 28BB     		cbnz	r0, .L165
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1595              		.loc 1 2596 0
 1596 005e 029B     		ldr	r3, [sp, #8]
 1597 0060 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 1598              	.LVL213:
 1599              	.L159:
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
 1600              		.loc 1 2603 0
 1601 0062 01A8     		add	r0, sp, #4
 1602 0064 FFF7FEFF 		bl	get_achar
 1603              	.LVL214:
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1604              		.loc 1 2604 0
 1605 0068 0036     		adds	r6, r6, #0
 1606              	.LVL215:
 1607 006a 18BF     		it	ne
 1608 006c 0126     		movne	r6, #1
 1609 006e B8F1000F 		cmp	r8, #0
 1610 0072 08BF     		it	eq
 1611 0074 0026     		moveq	r6, #0
 1612 0076 B6B1     		cbz	r6, .L171
 1613              	.L161:
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
 1614              		.loc 1 2588 0
 1615 0078 0397     		str	r7, [sp, #12]
 1616 007a 019B     		ldr	r3, [sp, #4]
 1617 007c 0293     		str	r3, [sp, #8]
 1618              	.L160:
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
 1619              		.loc 1 2590 0
 1620 007e 039B     		ldr	r3, [sp, #12]
 1621 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1622 0082 2A2B     		cmp	r3, #42
 1623 0084 18BF     		it	ne
 1624 0086 3F2B     		cmpne	r3, #63
 1625 0088 D4D0     		beq	.L172
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
 1626              		.loc 1 2598 0
 1627 008a 03A8     		add	r0, sp, #12
 1628 008c FFF7FEFF 		bl	get_achar
 1629              	.LVL216:
 1630 0090 0546     		mov	r5, r0
 1631              	.LVL217:
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
 1632              		.loc 1 2599 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 76


 1633 0092 02A8     		add	r0, sp, #8
 1634 0094 FFF7FEFF 		bl	get_achar
 1635              	.LVL218:
 1636 0098 0646     		mov	r6, r0
 1637              	.LVL219:
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
 1638              		.loc 1 2600 0
 1639 009a 8542     		cmp	r5, r0
 1640 009c E1D1     		bne	.L159
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1641              		.loc 1 2601 0
 1642 009e 002D     		cmp	r5, #0
 1643 00a0 EDD1     		bne	.L160
 1644 00a2 0120     		movs	r0, #1
 1645              	.LVL220:
 1646 00a4 BCE7     		b	.L151
 1647              	.LVL221:
 1648              	.L171:
2606:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1649              		.loc 1 2606 0
 1650 00a6 2046     		mov	r0, r4
 1651 00a8 BAE7     		b	.L151
 1652              	.L165:
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
 1653              		.loc 1 2595 0
 1654 00aa 0120     		movs	r0, #1
 1655 00ac B8E7     		b	.L151
 1656              		.cfi_endproc
 1657              	.LFE183:
 1659              		.section	.text.get_ldnumber,"ax",%progbits
 1660              		.align	1
 1661              		.syntax unified
 1662              		.thumb
 1663              		.thumb_func
 1664              		.fpu fpv5-sp-d16
 1666              	get_ldnumber:
 1667              	.LFB186:
2608:Middlewares/Third_Party/FatFs/src/ff.c **** 
2609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 
2613:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2614:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pick a top segment and create the object name in directory form       */
2615:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2616:Middlewares/Third_Party/FatFs/src/ff.c **** 
2617:Middlewares/Third_Party/FatFs/src/ff.c **** static
2618:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
2619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2620:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
2621:Middlewares/Third_Party/FatFs/src/ff.c **** )
2622:Middlewares/Third_Party/FatFs/src/ff.c **** {
2623:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2624:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, cf;
2625:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
2626:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, ni, si, di;
2627:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *p;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 77


2628:Middlewares/Third_Party/FatFs/src/ff.c **** 
2629:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create LFN in Unicode */
2630:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; lfn = dp->obj.fs->lfnbuf; si = di = 0;
2631:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = p[si++];					/* Get a character */
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ') break;				/* Break if end of the path name */
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == '/' || w == '\\') {	/* Break if a separator is found */
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
2639:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2640:Middlewares/Third_Party/FatFs/src/ff.c **** 		w &= 0xFF;
2641:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2642:Middlewares/Third_Party/FatFs/src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(b)) return FR_INVALID_NAME;	/* Reject invalid sequence */
2645:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
2647:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
2648:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) return FR_INVALID_NAME;	/* Reject illegal characters
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
2651:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
2653:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2654:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') ||
2656:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)		/* Create dot name for SFN entry */
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2662:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2663:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2664:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di) {						/* Snip off trailing spaces and dots if exist */
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
2666:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
2668:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
2671:Middlewares/Third_Party/FatFs/src/ff.c **** 
2672:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create SFN in directory form */
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dp->fn, ' ', 11);
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
2677:Middlewares/Third_Party/FatFs/src/ff.c **** 
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = b = 0; ni = 8;
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 78


2685:Middlewares/Third_Party/FatFs/src/ff.c **** 
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
2689:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2690:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
2694:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 
2696:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
2697:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
2700:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2702:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* Is this DBC? (always false at SBCS cfg) */
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= ni - 1) {
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2709:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2710:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2711:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2714:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
2717:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2718:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2721:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2722:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2723:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2724:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it
2728:Middlewares/Third_Party/FatFs/src/ff.c **** 
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2739:Middlewares/Third_Party/FatFs/src/ff.c **** 
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 
2741:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* _USE_LFN != 0 : Non-LFN configuration */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 79


2742:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c, d, *sfn;
2743:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ni, si, i;
2744:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *p;
2745:Middlewares/Third_Party/FatFs/src/ff.c **** 
2746:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create file name in directory form */
2747:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; sfn = dp->fn;
2748:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
2749:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = 0; ni = 8;
2750:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2751:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2752:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2753:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (BYTE)p[si++];
2754:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != '.' || si >= 3) break;
2755:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2756:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2757:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2758:Middlewares/Third_Party/FatFs/src/ff.c **** 		*path = p + si;								/* Return pointer to the next segment */
2759:Middlewares/Third_Party/FatFs/src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of the path
2760:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2761:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2762:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2763:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)p[si++];
2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2768:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2769:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {		/* End of body or over size? */
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
2773:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
2774:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2775:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
2776:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2777:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
2778:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2779:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_DF1S
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII only cfg) */
2781:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2782:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false at SBCS cfg.) */
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = d;
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2793:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = p + si;						/* Return pointer to the next segment */
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
2797:Middlewares/Third_Party/FatFs/src/ff.c **** 
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 80


2799:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LFN != 0 */
2803:Middlewares/Third_Party/FatFs/src/ff.c **** }
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 
2805:Middlewares/Third_Party/FatFs/src/ff.c **** 
2806:Middlewares/Third_Party/FatFs/src/ff.c **** 
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 
2808:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2809:Middlewares/Third_Party/FatFs/src/ff.c **** /* Follow a file path                                                    */
2810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 
2812:Middlewares/Third_Party/FatFs/src/ff.c **** static
2813:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2814:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
2815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2816:Middlewares/Third_Party/FatFs/src/ff.c **** )
2817:Middlewares/Third_Party/FatFs/src/ff.c **** {
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2819:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns;
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj = &dp->obj;
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 
2824:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2825:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path != '/' && *path != '\\') {	/* Without heading separator */
2826:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = fs->cdir;				/* Start from current directory */
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2828:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 	{										/* With heading separator */
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj->n_frag = 0;	/* Invalidate last fragment counter of the object */
2835:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2836:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT && obj->sclust) {	/* Retrieve the sub-directory status if needed */
2837:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_scl = fs->cdc_scl;
2840:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_size = fs->cdc_size;
2841:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_ofs = fs->cdc_ofs;
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_obj_dir(&dj, obj);
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->objsize = ld_dword(fs->dirbuf + XDIR_FileSize);
2845:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2846:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2847:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2848:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 
2854:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 81


2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2862:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
2865:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;
2866:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {							/* Could not find the object */
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2870:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2871:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
2873:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(obj->attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
2876:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2877:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2878:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {		/* Save containing directory information for next dir */
2879:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_scl = obj->sclust;
2880:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
2881:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_ofs = dp->blk_ofs;
2882:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Open next directory */
2883:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2884:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
2885:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
2886:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2887:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
2889:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 
2893:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2894:Middlewares/Third_Party/FatFs/src/ff.c **** }
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 
2899:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2900:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get logical drive number from path name                               */
2901:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 
2903:Middlewares/Third_Party/FatFs/src/ff.c **** static
2904:Middlewares/Third_Party/FatFs/src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2906:Middlewares/Third_Party/FatFs/src/ff.c **** )
2907:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1668              		.loc 1 2907 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 0
 1671              		@ frame_needed = 0, uses_anonymous_args = 0
 1672              		@ link register save eliminated.
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 82


 1673              	.LVL222:
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol = -1;
2911:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char* const volid[] = {_VOLUME_STRS};
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *sp;
2914:Middlewares/Third_Party/FatFs/src/ff.c **** 	char c;
2915:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR tc;
2916:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2917:Middlewares/Third_Party/FatFs/src/ff.c **** 
2918:Middlewares/Third_Party/FatFs/src/ff.c **** 
2919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 1674              		.loc 1 2919 0
 1675 0000 0168     		ldr	r1, [r0]
 1676 0002 09B1     		cbz	r1, .L185
2920:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 1677              		.loc 1 2920 0
 1678 0004 0A46     		mov	r2, r1
 1679 0006 03E0     		b	.L174
 1680              	.L185:
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1681              		.loc 1 2910 0
 1682 0008 4FF0FF33 		mov	r3, #-1
 1683 000c 09E0     		b	.L182
 1684              	.LVL223:
 1685              	.L176:
 1686              		.loc 1 2920 0 discriminator 3
 1687 000e 0132     		adds	r2, r2, #1
 1688              	.LVL224:
 1689              	.L174:
 1690              		.loc 1 2920 0 is_stmt 0 discriminator 1
 1691 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1692 0012 3A2B     		cmp	r3, #58
 1693 0014 18BF     		it	ne
 1694 0016 1F2B     		cmpne	r3, #31
 1695 0018 F9D8     		bhi	.L176
2921:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 1696              		.loc 1 2921 0 is_stmt 1
 1697 001a 3A2B     		cmp	r3, #58
 1698 001c 03D0     		beq	.L186
2922:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = *tp++ - '0';
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2926:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = ++tt;
2928:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2929:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2930:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID
2931:Middlewares/Third_Party/FatFs/src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
2932:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; tt++;
2933:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
2934:Middlewares/Third_Party/FatFs/src/ff.c **** 					sp = volid[i]; tp = *path;
2935:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {	/* Compare a string drive id with path name */
2936:Middlewares/Third_Party/FatFs/src/ff.c **** 						c = *sp++; tc = *tp++;
2937:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 83


2938:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (c && (TCHAR)c == tc);
2939:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2940:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2941:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = tt;
2943:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2944:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2946:Middlewares/Third_Party/FatFs/src/ff.c **** 			return vol;
2947:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2948:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
2949:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = CurrVol;	/* Current drive */
 1699              		.loc 1 2949 0
 1700 001e 0D4B     		ldr	r3, .L187
 1701 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1702              	.LVL225:
 1703              	.L182:
2950:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2951:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = 0;		/* Drive 0 */
2952:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2953:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2954:Middlewares/Third_Party/FatFs/src/ff.c **** 	return vol;
2955:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1704              		.loc 1 2955 0
 1705 0022 1846     		mov	r0, r3
 1706              	.LVL226:
 1707 0024 7047     		bx	lr
 1708              	.LVL227:
 1709              	.L186:
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
 1710              		.loc 1 2907 0
 1711 0026 10B4     		push	{r4}
 1712              	.LCFI23:
 1713              		.cfi_def_cfa_offset 4
 1714              		.cfi_offset 4, -4
 1715              	.LVL228:
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 1716              		.loc 1 2923 0
 1717 0028 4C1C     		adds	r4, r1, #1
 1718              	.LVL229:
 1719 002a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1720 002c 303B     		subs	r3, r3, #48
 1721              	.LVL230:
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1722              		.loc 1 2924 0
 1723 002e 092B     		cmp	r3, #9
 1724 0030 98BF     		it	ls
 1725 0032 A242     		cmpls	r2, r4
 1726 0034 07D1     		bne	.L179
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
 1727              		.loc 1 2925 0
 1728 0036 012B     		cmp	r3, #1
 1729 0038 08D8     		bhi	.L180
 1730              	.LVL231:
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1731              		.loc 1 2927 0
 1732 003a 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 84


 1733              	.LVL232:
 1734 003c 0260     		str	r2, [r0]
 1735              	.LVL233:
 1736              	.L173:
 1737              		.loc 1 2955 0
 1738 003e 1846     		mov	r0, r3
 1739              	.LVL234:
 1740 0040 5DF8044B 		ldr	r4, [sp], #4
 1741              	.LCFI24:
 1742              		.cfi_remember_state
 1743              		.cfi_restore 4
 1744              		.cfi_def_cfa_offset 0
 1745              	.LVL235:
 1746 0044 7047     		bx	lr
 1747              	.LVL236:
 1748              	.L179:
 1749              	.LCFI25:
 1750              		.cfi_restore_state
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1751              		.loc 1 2910 0
 1752 0046 4FF0FF33 		mov	r3, #-1
 1753              	.LVL237:
 1754 004a F8E7     		b	.L173
 1755              	.LVL238:
 1756              	.L180:
 1757 004c 4FF0FF33 		mov	r3, #-1
 1758              	.LVL239:
 1759 0050 F5E7     		b	.L173
 1760              	.L188:
 1761 0052 00BF     		.align	2
 1762              	.L187:
 1763 0054 00000000 		.word	.LANCHOR3
 1764              		.cfi_endproc
 1765              	.LFE186:
 1767              		.section	.text.putc_init,"ax",%progbits
 1768              		.align	1
 1769              		.syntax unified
 1770              		.thumb
 1771              		.thumb_func
 1772              		.fpu fpv5-sp-d16
 1774              	putc_init:
 1775              	.LFB214:
2956:Middlewares/Third_Party/FatFs/src/ff.c **** 
2957:Middlewares/Third_Party/FatFs/src/ff.c **** 
2958:Middlewares/Third_Party/FatFs/src/ff.c **** 
2959:Middlewares/Third_Party/FatFs/src/ff.c **** 
2960:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2961:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
2962:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2963:Middlewares/Third_Party/FatFs/src/ff.c **** 
2964:Middlewares/Third_Party/FatFs/src/ff.c **** static
2965:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
2966:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
2967:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
2968:Middlewares/Third_Party/FatFs/src/ff.c **** )
2969:Middlewares/Third_Party/FatFs/src/ff.c **** {
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 85


2971:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
2972:Middlewares/Third_Party/FatFs/src/ff.c **** 
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed 
2974:Middlewares/Third_Party/FatFs/src/ff.c **** 
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->win[BS_JmpBoot] == 0xE9 || (fs->win[BS_JmpBoot] == 0xEB && fs->win[BS_JmpBoot + 2] == 0x90
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
2978:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2979:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2980:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;
2981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2982:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 2;
2983:Middlewares/Third_Party/FatFs/src/ff.c **** }
2984:Middlewares/Third_Party/FatFs/src/ff.c **** 
2985:Middlewares/Third_Party/FatFs/src/ff.c **** 
2986:Middlewares/Third_Party/FatFs/src/ff.c **** 
2987:Middlewares/Third_Party/FatFs/src/ff.c **** 
2988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2989:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
2990:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2991:Middlewares/Third_Party/FatFs/src/ff.c **** 
2992:Middlewares/Third_Party/FatFs/src/ff.c **** static
2993:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2994:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2996:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* !=0: Check write protection for write access */
2997:Middlewares/Third_Party/FatFs/src/ff.c **** )
2998:Middlewares/Third_Party/FatFs/src/ff.c **** {
2999:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
3000:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3001:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
3002:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
3003:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD nrsv;
3004:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
3006:Middlewares/Third_Party/FatFs/src/ff.c **** 
3007:Middlewares/Third_Party/FatFs/src/ff.c **** 
3008:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = 0;
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3012:Middlewares/Third_Party/FatFs/src/ff.c **** 
3013:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check if the file system object is valid or not */
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
3016:Middlewares/Third_Party/FatFs/src/ff.c **** 
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
3019:Middlewares/Third_Party/FatFs/src/ff.c **** 
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
3026:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 86


3028:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3029:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3030:Middlewares/Third_Party/FatFs/src/ff.c **** 
3031:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The file system object is not valid. */
3032:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
3033:Middlewares/Third_Party/FatFs/src/ff.c **** 
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
3039:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
3042:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3043:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS					/* Get sector size (multiple sector size cfg only) */
3044:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
3045:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (SS(fs) > _MAX_SS || SS(fs) < _MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
3046:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3047:Middlewares/Third_Party/FatFs/src/ff.c **** 
3048:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning rules, FDISK and SFD. */
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	bsect = 0;
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
3055:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3056:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = LD2PT(vol);					/* Partition number: 0:auto, 1-4:forced */
3057:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i) i--;
3058:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {							/* Find an FAT volume */
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			bsect = br[i];
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
3062:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
3065:Middlewares/Third_Party/FatFs/src/ff.c **** 
3066:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* An FAT volume is found (bsect). Following code initializes the file system object */
3067:Middlewares/Third_Party/FatFs/src/ff.c **** 
3068:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3069:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1) {
3070:Middlewares/Third_Party/FatFs/src/ff.c **** 		QWORD maxlba;
3071:Middlewares/Third_Party/FatFs/src/ff.c **** 
3072:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = BPB_ZeroedEx; i < BPB_ZeroedEx + 53 && fs->win[i] == 0; i++) ;	/* Check zero filler */
3073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < BPB_ZeroedEx + 53) return FR_NO_FILESYSTEM;
3074:Middlewares/Third_Party/FatFs/src/ff.c **** 
3075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_FSVerEx) != 0x100) return FR_NO_FILESYSTEM;	/* Check exFAT revision (Mu
3076:Middlewares/Third_Party/FatFs/src/ff.c **** 
3077:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (1 << fs->win[BPB_BytsPerSecEx] != SS(fs)) {	/* (BPB_BytsPerSecEx must be equal to the physica
3078:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_NO_FILESYSTEM;
3079:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3080:Middlewares/Third_Party/FatFs/src/ff.c **** 
3081:Middlewares/Third_Party/FatFs/src/ff.c **** 		maxlba = ld_qword(fs->win + BPB_TotSecEx) + bsect;	/* Last LBA + 1 of the volume */
3082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba >= 0x100000000) return FR_NO_FILESYSTEM;	/* (It cannot be handled in 32-bit LBA) */
3083:Middlewares/Third_Party/FatFs/src/ff.c **** 
3084:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = ld_dword(fs->win + BPB_FatSzEx);	/* Number of sectors per FAT */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 87


3085:Middlewares/Third_Party/FatFs/src/ff.c **** 
3086:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATsEx];			/* Number of FATs */
3087:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1) return FR_NO_FILESYSTEM;	/* (Supports only 1 FAT) */
3088:Middlewares/Third_Party/FatFs/src/ff.c **** 
3089:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = 1 << fs->win[BPB_SecPerClusEx];		/* Cluster size */
3090:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0)	return FR_NO_FILESYSTEM;	/* (Must be 1..32768) */
3091:Middlewares/Third_Party/FatFs/src/ff.c **** 
3092:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = ld_dword(fs->win + BPB_NumClusEx);		/* Number of clusters */
3093:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst > MAX_EXFAT) return FR_NO_FILESYSTEM;	/* (Too many clusters) */
3094:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;
3095:Middlewares/Third_Party/FatFs/src/ff.c **** 
3096:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3097:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;
3098:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + ld_dword(fs->win + BPB_DataOfsEx);
3099:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + ld_dword(fs->win + BPB_FatOfsEx);
3100:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba < (QWORD)fs->database + nclst * fs->csize) return FR_NO_FILESYSTEM;	/* (Volume size mu
3101:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = ld_dword(fs->win + BPB_RootClusEx);
3102:Middlewares/Third_Party/FatFs/src/ff.c **** 
3103:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Check if bitmap location is in assumption (at the first cluster) */
3104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, clust2sect(fs, fs->dirbase)) != FR_OK) return FR_DISK_ERR;
3105:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < SS(fs); i += SZDIRE) {
3106:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->win[i] == 0x81 && ld_dword(fs->win + i + 20) == 2) break;	/* 81 entry with cluster #2? *
3107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3108:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == SS(fs)) return FR_NO_FILESYSTEM;
3109:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3110:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3111:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3112:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_EXFAT;			/* FAT sub-type */
3113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
3114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
3137:Middlewares/Third_Party/FatFs/src/ff.c **** 
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine the FAT sub type */
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 88


3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
3146:Middlewares/Third_Party/FatFs/src/ff.c **** 
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
3157:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
3162:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 
3165:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3166:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get FSINFO if available */
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3168:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
3169:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo32 == 1 */
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
3173:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
3178:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3179:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
3181:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3182:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
3184:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3187:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* (_FS_NOFSINFO & 3) != 3 */
3188:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = fmt;		/* FAT sub-type */
3192:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
3193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
3195:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->dirbuf = DirBuf;	/* Static directory block scratchpad buuffer */
3197:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3198:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 89


3199:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
3200:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->cdir = 0;			/* Initialize current directory */
3201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3202:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0			/* Clear file lock semaphores */
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 	clear_lock(fs);
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3205:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3206:Middlewares/Third_Party/FatFs/src/ff.c **** }
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 
3210:Middlewares/Third_Party/FatFs/src/ff.c **** 
3211:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3212:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if the file/directory object is valid or not                    */
3213:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 
3215:Middlewares/Third_Party/FatFs/src/ff.c **** static
3216:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,		/* Pointer to the _OBJ, the 1st member in the FIL/DIR object, to check validity */
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fs		/* Pointer to pointer to the owner file system object to return */
3219:Middlewares/Third_Party/FatFs/src/ff.c **** )
3220:Middlewares/Third_Party/FatFs/src/ff.c **** {
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!obj || !obj->fs || !obj->fs->fs_type || obj->fs->id != obj->id || (disk_status(obj->fs->drv) 
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INVALID_OBJECT;	/* The object is invalid */
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = obj->fs;			/* Owner file sytem object */
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		ENTER_FF(obj->fs);		/* Lock file system */
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;			/* Valid object */
3230:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3232:Middlewares/Third_Party/FatFs/src/ff.c **** }
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 
3235:Middlewares/Third_Party/FatFs/src/ff.c **** 
3236:Middlewares/Third_Party/FatFs/src/ff.c **** 
3237:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------------------------------------
3238:Middlewares/Third_Party/FatFs/src/ff.c **** 
3239:Middlewares/Third_Party/FatFs/src/ff.c ****    Public Functions (FatFs API)
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 
3241:Middlewares/Third_Party/FatFs/src/ff.c **** ----------------------------------------------------------------------------*/
3242:Middlewares/Third_Party/FatFs/src/ff.c **** 
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 
3245:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3246:Middlewares/Third_Party/FatFs/src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
3247:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3248:Middlewares/Third_Party/FatFs/src/ff.c **** 
3249:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mount (
3250:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
3251:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
3252:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
3253:Middlewares/Third_Party/FatFs/src/ff.c **** )
3254:Middlewares/Third_Party/FatFs/src/ff.c **** {
3255:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 90


3256:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3257:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3258:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *rp = path;
3259:Middlewares/Third_Party/FatFs/src/ff.c **** 
3260:Middlewares/Third_Party/FatFs/src/ff.c **** 
3261:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&rp);
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
3265:Middlewares/Third_Party/FatFs/src/ff.c **** 
3266:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cfs) {
3267:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3268:Middlewares/Third_Party/FatFs/src/ff.c **** 		clear_lock(cfs);
3269:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3270:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
3271:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
3272:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs) {
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
3278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
3280:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
3283:Middlewares/Third_Party/FatFs/src/ff.c **** 
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
3285:Middlewares/Third_Party/FatFs/src/ff.c **** 
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3288:Middlewares/Third_Party/FatFs/src/ff.c **** }
3289:Middlewares/Third_Party/FatFs/src/ff.c **** 
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 
3293:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3294:Middlewares/Third_Party/FatFs/src/ff.c **** /* Open or Create a File                                                 */
3295:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 
3297:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_open (
3298:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
3299:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
3300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
3301:Middlewares/Third_Party/FatFs/src/ff.c **** )
3302:Middlewares/Third_Party/FatFs/src/ff.c **** {
3303:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3305:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3306:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3307:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw, cl, bcs, clst, sc;
3308:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs;
3309:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3310:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3311:Middlewares/Third_Party/FatFs/src/ff.c **** 
3312:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 91


3313:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
3314:Middlewares/Third_Party/FatFs/src/ff.c **** 
3315:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= _FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_A
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3321:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3322:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3326:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3327:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3328:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3331:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3333:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create or Open a file */
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
3336:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
3337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3338:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
3339:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&dj);
3341:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3342:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
3344:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3345:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {								/* Any object is already existing */
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
3348:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
3350:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3351:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
3353:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
3354:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3355:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3356:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get current allocation info */
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.fs = fs;
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3361:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.n_frag = 0;
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Initialize directory entry block */
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_CrtTime, dw);	/* Set created time */
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_CrtTime10] = 0;
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, dw);	/* Set modified time */
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_ModTime10] = 0;
3367:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_ARC;				/* Reset attribute */
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, 0);		/* Reset file allocation info */
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_FileSize, 0);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 92


3370:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_ValidFileSize, 0);
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 1;
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK && fp->obj.sclust) {		/* Remove the cluster chain if exist */
3374:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&fp->obj, fp->obj.sclust, 0);
3375:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->last_clst = fp->obj.sclust - 1;		/* Reuse the cluster hole */
3376:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3377:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
3378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3379:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
3380:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean directory info */
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_CrtTime, dw);	/* Set created time */
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3388:Middlewares/Third_Party/FatFs/src/ff.c **** 
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cl) {							/* Remove the cluster chain if exist */
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3399:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {	/* Open an existing file */
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Following succeeded */
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* R/O violation */
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
3407:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3408:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3409:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
3415:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
3416:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3418:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
3419:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3420:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3421:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* R/O configuration */
3422:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3426:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 93


3427:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3429:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3430:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3431:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3432:Middlewares/Third_Party/FatFs/src/ff.c **** 
3433:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3435:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3436:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_scl = dj.obj.sclust;							/* Get containing directory info */
3437:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3438:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_ofs = dj.blk_ofs;
3439:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
3440:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3441:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3442:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3443:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3444:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3445:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
3447:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3448:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->cltbl = 0;			/* Disable fast seek mode */
3450:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.fs = fs;	 	/* Validate the file object */
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
3457:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3458:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fp->buf, 0, _MAX_SS);	/* Clear sector buffer */
3460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is sp
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
3469:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
3474:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3475:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->sect = sc + (DWORD)(ofs / SS(fs));
3476:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3477:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_read(fs->drv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
3478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3480:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3482:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 94


3484:Middlewares/Third_Party/FatFs/src/ff.c **** 
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3486:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3487:Middlewares/Third_Party/FatFs/src/ff.c **** 
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
3489:Middlewares/Third_Party/FatFs/src/ff.c **** 
3490:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3491:Middlewares/Third_Party/FatFs/src/ff.c **** }
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 
3494:Middlewares/Third_Party/FatFs/src/ff.c **** 
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 
3496:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3497:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read File                                                             */
3498:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 
3500:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_read (
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 	/* Pointer to the file object */
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* buff,	/* Pointer to data buffer */
3503:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btr,	/* Number of bytes to read */
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* br	/* Pointer to number of bytes read */
3505:Middlewares/Third_Party/FatFs/src/ff.c **** )
3506:Middlewares/Third_Party/FatFs/src/ff.c **** {
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3509:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3510:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, cc, csect;
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *rbuff = (BYTE*)buff;
3513:Middlewares/Third_Party/FatFs/src/ff.c **** 
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	*br = 0;	/* Clear read byte counter */
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
3530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3534:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst < 2) ABORT(fs, FR_INT_ERR);
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 95


3541:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
3542:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3546:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3552:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
3553:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->wflag && fs->winsect - sect < cc) {
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3562:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3566:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect) {			/* Load data sector if not in cache */
3568:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3576:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3578:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
3581:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3584:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3586:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 
3589:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3590:Middlewares/Third_Party/FatFs/src/ff.c **** }
3591:Middlewares/Third_Party/FatFs/src/ff.c **** 
3592:Middlewares/Third_Party/FatFs/src/ff.c **** 
3593:Middlewares/Third_Party/FatFs/src/ff.c **** 
3594:Middlewares/Third_Party/FatFs/src/ff.c **** 
3595:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3596:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3597:Middlewares/Third_Party/FatFs/src/ff.c **** /* Write File                                                            */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 96


3598:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3599:Middlewares/Third_Party/FatFs/src/ff.c **** 
3600:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_write (
3601:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
3602:Middlewares/Third_Party/FatFs/src/ff.c **** 	const void* buff,	/* Pointer to the data to be written */
3603:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btw,			/* Number of bytes to write */
3604:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
3605:Middlewares/Third_Party/FatFs/src/ff.c **** )
3606:Middlewares/Third_Party/FatFs/src/ff.c **** {
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3608:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3609:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3610:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wcnt, cc, csect;
3611:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
3618:Middlewares/Third_Party/FatFs/src/ff.c **** 
3619:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check fptr wrap-around (file size cannot reach 4GiB on FATxx) */
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((!_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
3633:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3634:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* On the middle or end of the file */
3635:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3639:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3650:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back s
3652:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 97


3655:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3657:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3661:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3666:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3667:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3668:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3669:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct writ
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
3671:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 0;
3672:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3673:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write *
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3677:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3678:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3679:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3683:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->winsect = sect;
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3688:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect && 		/* Fill sector cache with file data */
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3694:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
3699:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
3703:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3705:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
3706:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA_MODIFIED;				/* Set file change flag */
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 98


3712:Middlewares/Third_Party/FatFs/src/ff.c **** }
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 
3716:Middlewares/Third_Party/FatFs/src/ff.c **** 
3717:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3718:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize the File                                                  */
3719:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 
3721:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_sync (
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3723:Middlewares/Third_Party/FatFs/src/ff.c **** )
3724:Middlewares/Third_Party/FatFs/src/ff.c **** {
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
3728:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3729:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3730:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3731:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3732:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3733:Middlewares/Third_Party/FatFs/src/ff.c **** 
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3736:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
3737:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
3740:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3741:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3742:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3743:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Update the directory entry */
3744:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();				/* Modified time */
3745:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3747:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_first_frag(&fp->obj);	/* Fill first fragment on the FAT if needed */
3748:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if nee
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3752:Middlewares/Third_Party/FatFs/src/ff.c **** 					INIT_NAMBUF(fs);
3753:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_obj_dir(&dj, &fp->obj);	/* Load directory entry block */
3754:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
3755:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_Attr] |= AM_ARC;				/* Set archive bit */
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_GenFlags] = fp->obj.stat | 1;	/* Update file allocation info */
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_FstClus, fp->obj.sclust);
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_FileSize, fp->obj.objsize);
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_ValidFileSize, fp->obj.objsize);
3760:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_ModTime, tm);		/* Update modified time */
3761:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_ModTime10] = 0;
3762:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_AccTime, 0);
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&dj);	/* Restore it to the directory */
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = sync_fs(fs);
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag &= (BYTE)~FA_MODIFIED;
3767:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 99


3769:Middlewares/Third_Party/FatFs/src/ff.c **** 					FREE_NAMBUF();
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3772:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3773:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, fp->dir_sect);
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3783:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3786:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3789:Middlewares/Third_Party/FatFs/src/ff.c **** 
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3791:Middlewares/Third_Party/FatFs/src/ff.c **** }
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 
3793:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 
3796:Middlewares/Third_Party/FatFs/src/ff.c **** 
3797:Middlewares/Third_Party/FatFs/src/ff.c **** 
3798:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3799:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close File                                                            */
3800:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 
3802:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_close (
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object to be closed */
3804:Middlewares/Third_Party/FatFs/src/ff.c **** )
3805:Middlewares/Third_Party/FatFs/src/ff.c **** {
3806:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3807:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3808:Middlewares/Third_Party/FatFs/src/ff.c **** 
3809:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
3812:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = validate(&fp->obj, &fs);	/* Lock volume */
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3816:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(fp->obj.lockid);	/* Decrement file open counter */
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
3819:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.fs = 0;			/* Invalidate file object */
3822:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3823:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
3825:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 100


3826:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3829:Middlewares/Third_Party/FatFs/src/ff.c **** }
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 
3834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 1
3835:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3836:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
3837:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3838:Middlewares/Third_Party/FatFs/src/ff.c **** 
3839:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdrive (
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Drive number */
3842:Middlewares/Third_Party/FatFs/src/ff.c **** )
3843:Middlewares/Third_Party/FatFs/src/ff.c **** {
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3845:Middlewares/Third_Party/FatFs/src/ff.c **** 
3846:Middlewares/Third_Party/FatFs/src/ff.c **** 
3847:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3848:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3850:Middlewares/Third_Party/FatFs/src/ff.c **** 
3851:Middlewares/Third_Party/FatFs/src/ff.c **** 	CurrVol = (BYTE)vol;	/* Set it as current volume */
3852:Middlewares/Third_Party/FatFs/src/ff.c **** 
3853:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3854:Middlewares/Third_Party/FatFs/src/ff.c **** }
3855:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3856:Middlewares/Third_Party/FatFs/src/ff.c **** 
3857:Middlewares/Third_Party/FatFs/src/ff.c **** 
3858:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdir (
3859:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3860:Middlewares/Third_Party/FatFs/src/ff.c **** )
3861:Middlewares/Third_Party/FatFs/src/ff.c **** {
3862:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3863:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3865:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3866:Middlewares/Third_Party/FatFs/src/ff.c **** 
3867:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
3869:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3872:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
3874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
3875:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
3876:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_scl = dj.obj.c_scl;
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_size = dj.obj.c_size;
3880:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_ofs = dj.obj.c_ofs;
3881:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3882:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 101


3883:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {	/* It is a sub-directory */
3885:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
3887:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Sub-directory cluster */
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_scl = dj.obj.sclust;						/* Save containing directory information */
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_ofs = dj.blk_ofs;
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3892:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3893:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_clust(fs, dj.dir);					/* Sub-directory cluster */
3895:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3896:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3898:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3899:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3900:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3901:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3902:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3903:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3904:Middlewares/Third_Party/FatFs/src/ff.c **** 
3905:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3906:Middlewares/Third_Party/FatFs/src/ff.c **** }
3907:Middlewares/Third_Party/FatFs/src/ff.c **** 
3908:Middlewares/Third_Party/FatFs/src/ff.c **** 
3909:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 2
3910:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getcwd (
3911:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3912:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len		/* Size of path */
3913:Middlewares/Third_Party/FatFs/src/ff.c **** )
3914:Middlewares/Third_Party/FatFs/src/ff.c **** {
3915:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3916:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3918:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n;
3919:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ccl;
3920:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *tp;
3921:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO fno;
3922:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3923:Middlewares/Third_Party/FatFs/src/ff.c **** 
3924:Middlewares/Third_Party/FatFs/src/ff.c **** 
3925:Middlewares/Third_Party/FatFs/src/ff.c **** 	*buff = 0;
3926:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume((const TCHAR**)&buff, &fs, 0);	/* Get current volume */
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3931:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3932:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root path)
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.sclust = fs->cdir;				/* Start to follow upper directory from current directory */
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
3936:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dj.sect);
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3939:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 102


3940:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 0);
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3942:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {							/* Find the entry links to the child directory */
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_read(&dj, 0);
3944:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
3946:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_next(&dj, 0);
3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (res == FR_OK);
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = 0; fno.fname[n]; n++) ;
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < n + 3) {
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NOT_ENOUGH_CORE; break;
3954:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (n) buff[--i] = fno.fname[--n];
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 				buff[--i] = '/';
3957:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3958:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3959:Middlewares/Third_Party/FatFs/src/ff.c **** 		tp = buff;
3960:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3961:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
3963:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
3964:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == len) {					/* Root-directory */
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
3967:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
3968:Middlewares/Third_Party/FatFs/src/ff.c **** 				do		/* Add stacked path str */
3969:Middlewares/Third_Party/FatFs/src/ff.c **** 					*tp++ = buff[i++];
3970:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
3971:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3972:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3973:Middlewares/Third_Party/FatFs/src/ff.c **** 		*tp = 0;
3974:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3975:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3976:Middlewares/Third_Party/FatFs/src/ff.c **** 
3977:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3978:Middlewares/Third_Party/FatFs/src/ff.c **** }
3979:Middlewares/Third_Party/FatFs/src/ff.c **** 
3980:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 2 */
3981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 1 */
3982:Middlewares/Third_Party/FatFs/src/ff.c **** 
3983:Middlewares/Third_Party/FatFs/src/ff.c **** 
3984:Middlewares/Third_Party/FatFs/src/ff.c **** 
3985:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3986:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3987:Middlewares/Third_Party/FatFs/src/ff.c **** /* Seek File R/W Pointer                                                 */
3988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3989:Middlewares/Third_Party/FatFs/src/ff.c **** 
3990:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_lseek (
3991:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
3992:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File pointer from top of file */
3993:Middlewares/Third_Party/FatFs/src/ff.c **** )
3994:Middlewares/Third_Party/FatFs/src/ff.c **** {
3995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3996:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 103


3997:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, bcs, nsect;
3998:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ifptr;
3999:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4000:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
4001:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4002:Middlewares/Third_Party/FatFs/src/ff.c **** 
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
4004:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
4005:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
4006:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && fs->fs_type == FS_EXFAT) {
4007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if needed
4008:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4009:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
4011:Middlewares/Third_Party/FatFs/src/ff.c **** 
4012:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
4015:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
4019:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4020:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get a fragment */
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
4022:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 						pcl = cl; ncl++;
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
4030:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (cl < fs->n_fatent);	/* Repeat until end of chain */
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* Fast seek */
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs > fp->obj.objsize) ofs = fp->obj.objsize;	/* Clip offset at the file size */
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
4047:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
4048:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4049:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 104


4054:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_read(fs->drv, fp->buf, dsc, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Load current sec
4056:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sect = dsc;
4058:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4059:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4060:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
4062:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4063:Middlewares/Third_Party/FatFs/src/ff.c **** 
4064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Normal Seek */
4065:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4067:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type != FS_EXFAT && ofs >= 0x100000000) ofs = 0xFFFFFFFF;	/* Clip at 4GiB-1 if at FATx
4068:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs > fp->obj.objsize && (_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, cl
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
4071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 		ifptr = fp->fptr;
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
4081:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
4082:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;					/* start from the first cluster */
4083:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4090:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
4092:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst != 0) {
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
4096:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->obj.objsize = fp->fptr;
4100:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag |= FA_MODIFIED;
4101:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4106:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4107:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
4110:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 105


4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr += ofs;
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_READONLY && fp->fptr > fp->obj.objsize) {		/* Set file change flag if the file size is e
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
4126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
4128:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4129:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4133:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4134:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4135:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
4136:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = nsect;
4138:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4139:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4140:Middlewares/Third_Party/FatFs/src/ff.c **** 
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4142:Middlewares/Third_Party/FatFs/src/ff.c **** }
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 
4144:Middlewares/Third_Party/FatFs/src/ff.c **** 
4145:Middlewares/Third_Party/FatFs/src/ff.c **** 
4146:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1
4147:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4148:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory Object                                             */
4149:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4150:Middlewares/Third_Party/FatFs/src/ff.c **** 
4151:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_opendir (
4152:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
4153:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4154:Middlewares/Third_Party/FatFs/src/ff.c **** )
4155:Middlewares/Third_Party/FatFs/src/ff.c **** {
4156:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4157:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4158:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj;
4159:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj = &dp->obj;
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 106


4168:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
4174:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4175:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4176:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_scl = obj->sclust;							/* Get containing directory inforamation */
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_ofs = dp->blk_ofs;
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
4180:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4184:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
4186:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* This object is a file */
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->id = fs->id;
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
4194:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = 0;	/* Root directory need not to be locked */
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4202:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) obj->fs = 0;		/* Invalidate the directory object if function faild */
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4212:Middlewares/Third_Party/FatFs/src/ff.c **** }
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 
4214:Middlewares/Third_Party/FatFs/src/ff.c **** 
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 
4217:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4218:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close Directory                                                       */
4219:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 
4221:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_closedir (
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
4223:Middlewares/Third_Party/FatFs/src/ff.c **** )
4224:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 107


4225:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);			/* Check validity of the file object */
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4231:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.lockid) {				/* Decrement sub-directory open counter */
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
4234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4235:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
4236:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.fs = 0;			/* Invalidate directory object */
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4240:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
4241:Middlewares/Third_Party/FatFs/src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
4242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4245:Middlewares/Third_Party/FatFs/src/ff.c **** }
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 
4247:Middlewares/Third_Party/FatFs/src/ff.c **** 
4248:Middlewares/Third_Party/FatFs/src/ff.c **** 
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 
4250:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4251:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read Directory Entries in Sequence                                    */
4252:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4253:Middlewares/Third_Party/FatFs/src/ff.c **** 
4254:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_readdir (
4255:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
4256:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4257:Middlewares/Third_Party/FatFs/src/ff.c **** )
4258:Middlewares/Third_Party/FatFs/src/ff.c **** {
4259:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4260:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4262:Middlewares/Third_Party/FatFs/src/ff.c **** 
4263:Middlewares/Third_Party/FatFs/src/ff.c **** 
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			INIT_NAMBUF(fs);
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 			FREE_NAMBUF();
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4280:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4281:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 108


4282:Middlewares/Third_Party/FatFs/src/ff.c **** 
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 
4285:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND
4286:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4287:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find Next File                                                        */
4288:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 
4290:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findnext (
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
4293:Middlewares/Third_Party/FatFs/src/ff.c **** )
4294:Middlewares/Third_Party/FatFs/src/ff.c **** {
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4296:Middlewares/Third_Party/FatFs/src/ff.c **** 
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 
4298:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
4301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
4302:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && _USE_FIND == 2
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->altname, 0, 0)) break;	/* Test for alternative name if exist *
4304:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4307:Middlewares/Third_Party/FatFs/src/ff.c **** }
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 
4311:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find First File                                                       */
4313:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 
4315:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findfirst (
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
4319:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
4320:Middlewares/Third_Party/FatFs/src/ff.c **** )
4321:Middlewares/Third_Party/FatFs/src/ff.c **** {
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4323:Middlewares/Third_Party/FatFs/src/ff.c **** 
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
4326:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4330:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4331:Middlewares/Third_Party/FatFs/src/ff.c **** }
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 
4333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FIND */
4334:Middlewares/Third_Party/FatFs/src/ff.c **** 
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 
4337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE == 0
4338:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 109


4339:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get File Status                                                       */
4340:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 
4342:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_stat (
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4345:Middlewares/Third_Party/FatFs/src/ff.c **** )
4346:Middlewares/Third_Party/FatFs/src/ff.c **** {
4347:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4348:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4349:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 
4351:Middlewares/Third_Party/FatFs/src/ff.c **** 
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &dj.obj.fs, 0);
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
4356:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
4360:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
4362:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4363:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.obj.fs, res);
4368:Middlewares/Third_Party/FatFs/src/ff.c **** }
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 
4372:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4373:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4374:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Number of Free Clusters                                           */
4375:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4376:Middlewares/Third_Party/FatFs/src/ff.c **** 
4377:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getfree (
4378:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4379:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
4380:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
4381:Middlewares/Third_Party/FatFs/src/ff.c **** )
4382:Middlewares/Third_Party/FatFs/src/ff.c **** {
4383:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4384:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4385:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nfree, clst, sect, stat;
4386:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
4387:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
4388:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4389:Middlewares/Third_Party/FatFs/src/ff.c **** 
4390:Middlewares/Third_Party/FatFs/src/ff.c **** 
4391:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
4395:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 110


4396:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) {
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
4398:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4399:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get number of free clusters */
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			nfree = 0;
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 					stat = get_fat(&obj, clst);
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
4409:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4410:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* exFAT: Scan bitmap table */
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 					BYTE bm;
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 					UINT b;
4414:Middlewares/Third_Party/FatFs/src/ff.c **** 
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent - 2;
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					sect = fs->database;
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0;
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0 && (res = move_window(fs, sect++)) != FR_OK) break;
4420:Middlewares/Third_Party/FatFs/src/ff.c **** 						for (b = 8, bm = fs->win[i]; b && clst; b--, clst--) {
4421:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!(bm & 1)) nfree++;
4422:Middlewares/Third_Party/FatFs/src/ff.c **** 							bm >>= 1;
4423:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4424:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = (i + 1) % SS(fs);
4425:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (clst);
4426:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4427:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4428:Middlewares/Third_Party/FatFs/src/ff.c **** 				{	/* FAT16/32: Sector alighed FAT entries */
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent; sect = fs->fatbase;
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
4431:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0) {
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
4437:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_FAT16) {
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							if ((ld_dword(p) & 0x0FFFFFFF) == 0) nfree++;
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (--clst);
4446:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4447:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = nfree;			/* Return the free clusters */
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4452:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 111


4453:Middlewares/Third_Party/FatFs/src/ff.c **** 
4454:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4455:Middlewares/Third_Party/FatFs/src/ff.c **** }
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 
4457:Middlewares/Third_Party/FatFs/src/ff.c **** 
4458:Middlewares/Third_Party/FatFs/src/ff.c **** 
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 
4460:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4461:Middlewares/Third_Party/FatFs/src/ff.c **** /* Truncate File                                                         */
4462:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 
4464:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_truncate (
4465:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4466:Middlewares/Third_Party/FatFs/src/ff.c **** )
4467:Middlewares/Third_Party/FatFs/src/ff.c **** {
4468:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4469:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4470:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl;
4471:Middlewares/Third_Party/FatFs/src/ff.c **** 
4472:Middlewares/Third_Party/FatFs/src/ff.c **** 
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
4476:Middlewares/Third_Party/FatFs/src/ff.c **** 
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
4481:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = get_fat(&fp->obj, fp->clust);
4483:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->obj.objsize = fp->fptr;	/* Set file size to current R/W point */
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
4492:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (fp->flag & FA_DIRTY)) {
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) ABORT(fs, res);
4502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4503:Middlewares/Third_Party/FatFs/src/ff.c **** 
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4505:Middlewares/Third_Party/FatFs/src/ff.c **** }
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 
4507:Middlewares/Third_Party/FatFs/src/ff.c **** 
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 
4509:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 112


4510:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4511:Middlewares/Third_Party/FatFs/src/ff.c **** /* Delete a File/Directory                                               */
4512:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4513:Middlewares/Third_Party/FatFs/src/ff.c **** 
4514:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_unlink (
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
4516:Middlewares/Third_Party/FatFs/src/ff.c **** )
4517:Middlewares/Third_Party/FatFs/src/ff.c **** {
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj, sdj;
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dclst = 0;
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4522:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4524:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4525:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4526:Middlewares/Third_Party/FatFs/src/ff.c **** 
4527:Middlewares/Third_Party/FatFs/src/ff.c **** 
4528:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4533:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
4534:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
4535:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
4536:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4537:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4538:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Check if it is an open object */
4539:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
4543:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_RDO) {
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
4546:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4547:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4548:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4549:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4550:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj.fs = fs;
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.sclust = dclst = ld_dword(fs->dirbuf + XDIR_FstClus);
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4556:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4557:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 					dclst = ld_clust(fs, dj.dir);
4559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4560:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
4561:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dclst == fs->cdir) {		 		/* Is it the current directory? */
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
4564:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4566:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 113


4567:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.fs = fs;						/* Open the sub-directory */
4568:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
4569:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4570:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_EXFAT) {
4571:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.objsize = obj.objsize;
4572:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.stat = obj.stat;
4573:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4574:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 0);
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
4580:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4581:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4582:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4583:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4585:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
4587:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&obj, dclst, 0);
4589:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&dj.obj, dclst, 0);
4591:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4592:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(fs);
4594:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4595:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4597:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4598:Middlewares/Third_Party/FatFs/src/ff.c **** 
4599:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4600:Middlewares/Third_Party/FatFs/src/ff.c **** }
4601:Middlewares/Third_Party/FatFs/src/ff.c **** 
4602:Middlewares/Third_Party/FatFs/src/ff.c **** 
4603:Middlewares/Third_Party/FatFs/src/ff.c **** 
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 
4605:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4606:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory                                                    */
4607:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4608:Middlewares/Third_Party/FatFs/src/ff.c **** 
4609:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkdir (
4610:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
4611:Middlewares/Third_Party/FatFs/src/ff.c **** )
4612:Middlewares/Third_Party/FatFs/src/ff.c **** {
4613:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4614:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4615:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4616:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
4617:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
4618:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dsc, dcl, pcl, tm;
4619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4620:Middlewares/Third_Party/FatFs/src/ff.c **** 
4621:Middlewares/Third_Party/FatFs/src/ff.c **** 
4622:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 114


4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
4629:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
4630:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
4631:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
4645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
4666:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4668:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* Initialize directory entry block */
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, tm);	/* Created time */
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, dcl);	/* Table start cluster */
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FileSize, (DWORD)dj.obj.objsize);	/* File size needs to be valid */
4673:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ValidFileSize, (DWORD)dj.obj.objsize);
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 3;				/* Initialize the object flag (contiguous) */
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4678:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4679:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = dj.dir;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 115


4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4685:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4688:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(&dj.obj, dcl, 0);		/* Could not register, remove cluster chain */
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4697:Middlewares/Third_Party/FatFs/src/ff.c **** }
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 
4700:Middlewares/Third_Party/FatFs/src/ff.c **** 
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 
4702:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4703:Middlewares/Third_Party/FatFs/src/ff.c **** /* Rename a File/Directory                                               */
4704:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4705:Middlewares/Third_Party/FatFs/src/ff.c **** 
4706:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_rename (
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object name to be renamed */
4708:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
4709:Middlewares/Third_Party/FatFs/src/ff.c **** )
4710:Middlewares/Third_Party/FatFs/src/ff.c **** {
4711:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR djo, djn;
4713:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[_FS_EXFAT ? SZDIRE * 2 : 24], *dir;
4715:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw;
4716:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4717:Middlewares/Third_Party/FatFs/src/ff.c **** 
4718:Middlewares/Third_Party/FatFs/src/ff.c **** 
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	get_ldnumber(&path_new);						/* Snip drive number of new name off */
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
4726:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
4729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4730:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Object to be renamed is found */
4732:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {	/* At exFAT */
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 				BYTE nf, nn;
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 				WORD nh;
4736:Middlewares/Third_Party/FatFs/src/ff.c **** 
4737:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, fs->dirbuf, SZDIRE * 2);	/* Save 85+C0 entry of old object */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 116


4738:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof djo);
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4740:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4741:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4742:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4743:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4744:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4745:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4746:Middlewares/Third_Party/FatFs/src/ff.c **** 						nf = fs->dirbuf[XDIR_NumSec]; nn = fs->dirbuf[XDIR_NumName];
4747:Middlewares/Third_Party/FatFs/src/ff.c **** 						nh = ld_word(fs->dirbuf + XDIR_NameHash);
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(fs->dirbuf, buf, SZDIRE * 2);
4749:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_NumSec] = nf; fs->dirbuf[XDIR_NumName] = nn;
4750:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_word(fs->dirbuf + XDIR_NameHash, nh);
4751:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4752:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&djn);
4753:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4754:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4755:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4756:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4757:Middlewares/Third_Party/FatFs/src/ff.c **** 			{	/* At FAT12/FAT16/FAT32 */
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about the object except name */
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4763:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4767:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
4775:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
4776:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = move_window(fs, dw);
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
4783:Middlewares/Third_Party/FatFs/src/ff.c **** 							}
4784:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4785:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4786:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4787:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4792:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4793:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4794:Middlewares/Third_Party/FatFs/src/ff.c **** /* End of the critical section */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 117


4795:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4796:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4797:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4798:Middlewares/Third_Party/FatFs/src/ff.c **** 
4799:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4800:Middlewares/Third_Party/FatFs/src/ff.c **** }
4801:Middlewares/Third_Party/FatFs/src/ff.c **** 
4802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
4803:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
4804:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
4805:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
4806:Middlewares/Third_Party/FatFs/src/ff.c **** 
4807:Middlewares/Third_Party/FatFs/src/ff.c **** 
4808:Middlewares/Third_Party/FatFs/src/ff.c **** 
4809:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_CHMOD && !_FS_READONLY
4810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4811:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Attribute                                                      */
4812:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4813:Middlewares/Third_Party/FatFs/src/ff.c **** 
4814:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chmod (
4815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4816:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE attr,			/* Attribute bits */
4817:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mask			/* Attribute mask to change */
4818:Middlewares/Third_Party/FatFs/src/ff.c **** )
4819:Middlewares/Third_Party/FatFs/src/ff.c **** {
4820:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4821:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4822:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4823:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4824:Middlewares/Third_Party/FatFs/src/ff.c **** 
4825:Middlewares/Third_Party/FatFs/src/ff.c **** 
4826:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4827:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4828:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4829:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4830:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4831:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4832:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4833:Middlewares/Third_Party/FatFs/src/ff.c **** 			mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
4834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4835:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4836:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->dirbuf[XDIR_Attr] = (attr & mask) | (fs->dirbuf[XDIR_Attr] & (BYTE)~mask);	/* Apply attribu
4837:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4838:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4839:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4840:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4841:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[DIR_Attr] = (attr & mask) | (dj.dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change 
4842:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4843:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4844:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4845:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4846:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4847:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4848:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4849:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4850:Middlewares/Third_Party/FatFs/src/ff.c **** 
4851:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 118


4852:Middlewares/Third_Party/FatFs/src/ff.c **** }
4853:Middlewares/Third_Party/FatFs/src/ff.c **** 
4854:Middlewares/Third_Party/FatFs/src/ff.c **** 
4855:Middlewares/Third_Party/FatFs/src/ff.c **** 
4856:Middlewares/Third_Party/FatFs/src/ff.c **** 
4857:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4858:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Timestamp                                                      */
4859:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4860:Middlewares/Third_Party/FatFs/src/ff.c **** 
4861:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_utime (
4862:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
4863:Middlewares/Third_Party/FatFs/src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
4864:Middlewares/Third_Party/FatFs/src/ff.c **** )
4865:Middlewares/Third_Party/FatFs/src/ff.c **** {
4866:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4867:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4868:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4869:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4870:Middlewares/Third_Party/FatFs/src/ff.c **** 
4871:Middlewares/Third_Party/FatFs/src/ff.c **** 
4872:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4873:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4874:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4875:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4876:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4877:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4878:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4879:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4880:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4881:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(fs->dirbuf + XDIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4882:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4883:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4884:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4885:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4886:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(dj.dir + DIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4887:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4889:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4890:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4891:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4892:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4893:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4894:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4895:Middlewares/Third_Party/FatFs/src/ff.c **** 
4896:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4897:Middlewares/Third_Party/FatFs/src/ff.c **** }
4898:Middlewares/Third_Party/FatFs/src/ff.c **** 
4899:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_CHMOD && !_FS_READONLY */
4900:Middlewares/Third_Party/FatFs/src/ff.c **** 
4901:Middlewares/Third_Party/FatFs/src/ff.c **** 
4902:Middlewares/Third_Party/FatFs/src/ff.c **** 
4903:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LABEL
4904:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4905:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Volume Label                                                      */
4906:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4907:Middlewares/Third_Party/FatFs/src/ff.c **** 
4908:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getlabel (
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 119


4909:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4910:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
4911:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
4912:Middlewares/Third_Party/FatFs/src/ff.c **** )
4913:Middlewares/Third_Party/FatFs/src/ff.c **** {
4914:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4915:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4917:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT si, di;
4918:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE || _FS_EXFAT
4919:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
4920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4921:Middlewares/Third_Party/FatFs/src/ff.c **** 
4922:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4923:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4924:Middlewares/Third_Party/FatFs/src/ff.c **** 
4925:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume label */
4926:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && label) {
4927:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs; dj.obj.sclust = 0;	/* Open root directory */
4928:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
4929:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4930:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	res = dir_read(&dj, 1);			/* Find a volume label entry */
4931:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	if (res == FR_OK) {
4932:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4933:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4934:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (si = di = 0; si < dj.dir[XDIR_NumLabel]; si++) {	/* Extract volume label from 83 entry */
4935:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ld_word(dj.dir + XDIR_Label + si * 2);
4936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4937:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = w;
4938:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4939:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ff_convert(w, 0);	/* Unicode -> OEM */
4940:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (w == 0) w = '?';	/* Replace wrong character */
4941:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_DF1S && w >= 0x100) label[di++] = (char)(w >> 8);
4942:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = (char)w;
4943:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4944:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4945:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[di] = 0;
4946:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4947:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4948:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4949:Middlewares/Third_Party/FatFs/src/ff.c **** 					si = di = 0;		/* Extract volume label from AM_VOL entry with code comversion */
4950:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4951:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4952:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = (si < 11) ? dj.dir[si++] : ' ';
4953:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsDBCS1(w) && si < 11 && IsDBCS2(dj.dir[si])) {
4954:Middlewares/Third_Party/FatFs/src/ff.c **** 							w = w << 8 | dj.dir[si++];
4955:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4956:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = ff_convert(w, 1);	/* OEM -> Unicode */
4957:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4958:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = dj.dir[si++];
4959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4960:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (di < 11);
4961:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {				/* Truncate trailing spaces */
4962:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di] = 0;
4963:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (di == 0) break;
4964:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (label[--di] == ' ');
4965:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 120


4966:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4967:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {	/* No label entry and return nul string */
4969:Middlewares/Third_Party/FatFs/src/ff.c **** 			label[0] = 0;
4970:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4971:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4972:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4973:Middlewares/Third_Party/FatFs/src/ff.c **** 
4974:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume serial number */
4975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && vsn) {
4976:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, fs->volbase);
4977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4978:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (fs->fs_type) {
4979:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_EXFAT:
4980:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BPB_VolIDEx; break;
4981:Middlewares/Third_Party/FatFs/src/ff.c **** 
4982:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_FAT32:
4983:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID32; break;
4984:Middlewares/Third_Party/FatFs/src/ff.c **** 
4985:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
4986:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID;
4987:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4988:Middlewares/Third_Party/FatFs/src/ff.c **** 			*vsn = ld_dword(fs->win + di);
4989:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4990:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4991:Middlewares/Third_Party/FatFs/src/ff.c **** 
4992:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4993:Middlewares/Third_Party/FatFs/src/ff.c **** }
4994:Middlewares/Third_Party/FatFs/src/ff.c **** 
4995:Middlewares/Third_Party/FatFs/src/ff.c **** 
4996:Middlewares/Third_Party/FatFs/src/ff.c **** 
4997:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4999:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set Volume Label                                                      */
5000:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5001:Middlewares/Third_Party/FatFs/src/ff.c **** 
5002:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_setlabel (
5003:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
5004:Middlewares/Third_Party/FatFs/src/ff.c **** )
5005:Middlewares/Third_Party/FatFs/src/ff.c **** {
5006:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
5008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5009:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE dirvn[22];
5010:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, slen;
5011:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
5012:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char badchr[] = "\"*+,.:;<=>\?[]|\x7F";
5013:Middlewares/Third_Party/FatFs/src/ff.c **** 
5014:Middlewares/Third_Party/FatFs/src/ff.c **** 
5015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
5016:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&label, &fs, FA_WRITE);
5017:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
5018:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
5019:Middlewares/Third_Party/FatFs/src/ff.c **** 
5020:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get length of given volume label */
5021:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (slen = 0; (UINT)label[slen] >= ' '; slen++) ;	/* Get name length */
5022:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 121


5023:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5024:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
5025:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = j = 0; i < slen; ) {	/* Create volume label in directory form */
5026:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = label[i++];
5027:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
5028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(w)) {
5029:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5030:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5031:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 1);
5032:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w == 0 || chk_chr(badchr, w) || j == 22) {	/* Check validity check validity of the volume la
5034:Middlewares/Third_Party/FatFs/src/ff.c **** 				LEAVE_FF(fs, FR_INVALID_NAME);
5035:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5036:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirvn + j, w); j += 2;
5037:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5038:Middlewares/Third_Party/FatFs/src/ff.c **** 		slen = j;
5039:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5040:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5041:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
5042:Middlewares/Third_Party/FatFs/src/ff.c **** 		for ( ; slen && label[slen - 1] == ' '; slen--) ;	/* Remove trailing spaces */
5043:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (slen) {		/* Is there a volume label to be set? */
5044:Middlewares/Third_Party/FatFs/src/ff.c **** 			dirvn[0] = 0; i = j = 0;	/* Create volume label in directory form */
5045:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
5046:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5047:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(label[i++]), 0);
5048:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5049:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (BYTE)label[i++];
5050:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsDBCS1(w)) {
5051:Middlewares/Third_Party/FatFs/src/ff.c **** 					w = (j < 10 && i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5052:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5053:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
5054:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
5055:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5056:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
5057:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
5058:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
5059:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5060:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
5061:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5062:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5064:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0 || chk_chr(badchr, w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) {	/* Reject invalid ch
5065:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
5066:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x100) dirvn[j++] = (BYTE)(w >> 8);
5068:Middlewares/Third_Party/FatFs/src/ff.c **** 				dirvn[j++] = (BYTE)w;
5069:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (i < slen);
5070:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j < 11) dirvn[j++] = ' ';	/* Fill remaining name field */
5071:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dirvn[0] == DDEM) LEAVE_FF(fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
5072:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5073:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5074:Middlewares/Third_Party/FatFs/src/ff.c **** 
5075:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set volume label */
5076:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.sclust = 0;		/* Open root directory */
5077:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
5078:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5079:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);	/* Get volume label entry */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 122


5080:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
5081:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5082:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);	/* Change the volume label */
5083:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5084:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5085:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {
5086:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dj.dir, dirvn, 11);	/* Change the volume label */
5087:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5088:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Name] = DDEM;	/* Remove the volume label */
5089:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5090:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5091:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
5092:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(fs);
5093:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* No volume label entry is found or error */
5094:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {
5095:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
5096:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {	/* Create a volume label entry */
5097:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry */
5098:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
5099:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZDIRE);	/* Clear the entry */
5100:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5101:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_Type] = 0x83;		/* Create 83 entry */
5102:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);
5103:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5104:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
5105:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[DIR_Attr] = AM_VOL;		/* Create volume label entry */
5106:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir, dirvn, 11);
5107:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
5108:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
5109:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(fs);
5110:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5111:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5112:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5113:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5114:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5115:Middlewares/Third_Party/FatFs/src/ff.c **** 
5116:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5117:Middlewares/Third_Party/FatFs/src/ff.c **** }
5118:Middlewares/Third_Party/FatFs/src/ff.c **** 
5119:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
5120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LABEL */
5121:Middlewares/Third_Party/FatFs/src/ff.c **** 
5122:Middlewares/Third_Party/FatFs/src/ff.c **** 
5123:Middlewares/Third_Party/FatFs/src/ff.c **** 
5124:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_EXPAND && !_FS_READONLY
5125:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5126:Middlewares/Third_Party/FatFs/src/ff.c **** /* Allocate a Contiguous Blocks to the File                              */
5127:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5128:Middlewares/Third_Party/FatFs/src/ff.c **** 
5129:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_expand (
5130:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
5131:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t fsz,	/* File size to be expanded to */
5132:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt		/* Operation mode 0:Find and prepare or 1:Find and allocate */
5133:Middlewares/Third_Party/FatFs/src/ff.c **** )
5134:Middlewares/Third_Party/FatFs/src/ff.c **** {
5135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 123


5137:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n, clst, stcl, scl, ncl, tcl, lclst;
5138:Middlewares/Third_Party/FatFs/src/ff.c **** 
5139:Middlewares/Third_Party/FatFs/src/ff.c **** 
5140:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5141:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5142:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fsz == 0 || fp->obj.objsize != 0 || !(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);
5143:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5144:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type != FS_EXFAT && fsz >= 0x100000000) LEAVE_FF(fs, FR_DENIED);	/* Check if in size li
5145:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5146:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (DWORD)fs->csize * SS(fs);	/* Cluster size */
5147:Middlewares/Third_Party/FatFs/src/ff.c **** 	tcl = (DWORD)(fsz / n) + ((fsz & (n - 1)) ? 1 : 0);	/* Number of clusters required */
5148:Middlewares/Third_Party/FatFs/src/ff.c **** 	stcl = fs->last_clst; lclst = 0;
5149:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stcl < 2 || stcl >= fs->n_fatent) stcl = 2;
5150:Middlewares/Third_Party/FatFs/src/ff.c **** 
5151:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5152:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
5153:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = find_bitmap(fs, stcl, tcl);			/* Find a contiguous cluster block */
5154:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0) res = FR_DENIED;				/* No contiguous cluster block was found */
5155:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0xFFFFFFFF) res = FR_DISK_ERR;
5156:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5157:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5158:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, tcl, 1);	/* Mark the cluster block 'in use' */
5159:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl + tcl - 1;
5160:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5161:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5162:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5163:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5164:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5166:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
5167:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst = stcl; ncl = 0;
5168:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {	/* Find a contiguous cluster block */
5169:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = get_fat(&fp->obj, clst);
5170:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (++clst >= fs->n_fatent) clst = 2;
5171:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 1) { res = FR_INT_ERR; break; }
5172:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
5173:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0) {	/* Is it a free cluster? */
5174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++ncl == tcl) break;	/* Break if a contiguous cluster block is found */
5175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5176:Middlewares/Third_Party/FatFs/src/ff.c **** 				scl = clst; ncl = 0;		/* Not a free cluster */
5177:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == stcl) { res = FR_DENIED; break; }	/* No contiguous cluster? */
5179:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5180:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5181:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5182:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (clst = scl, n = tcl; n; clst++, n--) {	/* Create a cluster chain on the FAT */
5183:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fs, clst, (n == 1) ? 0xFFFFFFFF : clst + 1);
5184:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
5185:Middlewares/Third_Party/FatFs/src/ff.c **** 					lclst = clst;
5186:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5187:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5188:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5189:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5190:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5191:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5192:Middlewares/Third_Party/FatFs/src/ff.c **** 
5193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 124


5194:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = lclst;		/* Set suggested start cluster to start next */
5195:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt) {	/* Is it allocated now? */
5196:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = scl;		/* Update object allocation information */
5197:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fsz;
5198:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT) fp->obj.stat = 2;	/* Set status 'contiguous chain' */
5199:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
5200:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clst <= fs->n_fatent - 2) {	/* Update FSINFO */
5201:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst -= tcl;
5202:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
5203:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5204:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5205:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5206:Middlewares/Third_Party/FatFs/src/ff.c **** 
5207:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5208:Middlewares/Third_Party/FatFs/src/ff.c **** }
5209:Middlewares/Third_Party/FatFs/src/ff.c **** 
5210:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_EXPAND && !_FS_READONLY */
5211:Middlewares/Third_Party/FatFs/src/ff.c **** 
5212:Middlewares/Third_Party/FatFs/src/ff.c **** 
5213:Middlewares/Third_Party/FatFs/src/ff.c **** 
5214:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FORWARD
5215:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5216:Middlewares/Third_Party/FatFs/src/ff.c **** /* Forward data to the stream directly                                   */
5217:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5218:Middlewares/Third_Party/FatFs/src/ff.c **** 
5219:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_forward (
5220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
5221:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
5222:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
5223:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
5224:Middlewares/Third_Party/FatFs/src/ff.c **** )
5225:Middlewares/Third_Party/FatFs/src/ff.c **** {
5226:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
5229:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
5230:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, csect;
5231:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dbuf;
5232:Middlewares/Third_Party/FatFs/src/ff.c **** 
5233:Middlewares/Third_Party/FatFs/src/ff.c **** 
5234:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
5235:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5236:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5237:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
5238:Middlewares/Third_Party/FatFs/src/ff.c **** 
5239:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
5240:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
5241:Middlewares/Third_Party/FatFs/src/ff.c **** 
5242:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream goes busy */
5243:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
5244:Middlewares/Third_Party/FatFs/src/ff.c **** 		csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
5245:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {				/* On the sector boundary? */
5246:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {						/* On the cluster boundary? */
5247:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
5248:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust : get_fat(&fp->obj, fp->clust);
5249:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) ABORT(fs, FR_INT_ERR);
5250:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 125


5251:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
5252:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5253:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5254:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(fs, fp->clust);			/* Get current data sector */
5255:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!sect) ABORT(fs, FR_INT_ERR);
5256:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect += csect;
5257:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
5258:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window to the file dat
5259:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fs->win;
5260:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5261:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->sect != sect) {		/* Fill sector cache with file data */
5262:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5263:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
5264:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5265:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
5266:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5267:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5268:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5269:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5270:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fp->buf;
5271:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5272:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->sect = sect;
5273:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
5274:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btf) rcnt = btf;					/* Clip it by btr if needed */
5275:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = (*func)(dbuf + ((UINT)fp->fptr % SS(fs)), rcnt);	/* Forward the file data */
5276:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!rcnt) ABORT(fs, FR_INT_ERR);
5277:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5278:Middlewares/Third_Party/FatFs/src/ff.c **** 
5279:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
5280:Middlewares/Third_Party/FatFs/src/ff.c **** }
5281:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FORWARD */
5282:Middlewares/Third_Party/FatFs/src/ff.c **** 
5283:Middlewares/Third_Party/FatFs/src/ff.c **** 
5284:Middlewares/Third_Party/FatFs/src/ff.c **** 
5285:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_MKFS && !_FS_READONLY
5286:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5287:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create an FAT/exFAT volume                                            */
5288:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5289:Middlewares/Third_Party/FatFs/src/ff.c **** 
5290:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkfs (
5291:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
5292:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt,			/* Format option */
5293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD au,			/* Size of allocation unit (cluster) [byte] */
5294:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work,			/* Pointer to working buffer */
5295:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len			/* Size of working buffer */
5296:Middlewares/Third_Party/FatFs/src/ff.c **** )
5297:Middlewares/Third_Party/FatFs/src/ff.c **** {
5298:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
5299:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_rootdir = 512;	/* Number of root directory entries for FAT12/16 volume */
5300:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst[] = {1, 4, 16, 64, 256, 512, 0};	/* Cluster size boundary for FAT12/16 volum
5301:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst32[] = {1, 2, 4, 8, 16, 32, 0};	/* Cluster size boundary for FAT32 volume (12
5302:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, sys, *buf, *pte, pdrv, part;
5303:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ss;
5304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD szb_buf, sz_buf, sz_blk, n_clst, pau, sect, nsect, n;
5305:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD b_vol, b_fat, b_data;				/* Base LBA for volume, fat, data */
5306:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_vol, sz_rsv, sz_fat, sz_dir;	/* Size for volume, fat, dir, data */
5307:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 126


5308:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
5309:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5310:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM || _FS_EXFAT
5311:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tbl[3];
5312:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5313:Middlewares/Third_Party/FatFs/src/ff.c **** 
5314:Middlewares/Third_Party/FatFs/src/ff.c **** 
5315:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check mounted drive and clear work area */
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);					/* Get target logical drive */
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
5320:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
5321:Middlewares/Third_Party/FatFs/src/ff.c **** 
5322:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check physical drive status */
5323:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5326:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
5327:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &ss) != RES_OK) return FR_DISK_ERR;
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ss > _MAX_SS || ss < _MIN_SS || (ss & (ss - 1))) return FR_DISK_ERR;
5330:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5331:Middlewares/Third_Party/FatFs/src/ff.c **** 	ss = _MAX_SS;
5332:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((au != 0 && au < ss) || au > 0x1000000 || (au & (au - 1))) return FR_INVALID_PARAMETER;	/* Che
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get working buffer */
5337:Middlewares/Third_Party/FatFs/src/ff.c **** 	buf = (BYTE*)work;		/* Working buffer */
5338:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_buf = len / ss;		/* Size of working buffer (sector) */
5339:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
5341:Middlewares/Third_Party/FatFs/src/ff.c **** 
5342:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine where the volume to be located (b_vol, sz_vol) */
5343:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get partition information from partition table in the MBR */
5345:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Load MBR */
5346:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(buf + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;	/* Check if MBR is valid */
5347:Middlewares/Third_Party/FatFs/src/ff.c **** 		pte = buf + (MBR_Table + (part - 1) * SZ_PTE);
5348:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!pte[PTE_System]) return FR_MKFS_ABORTED;	/* No partition? */
5349:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = ld_dword(pte + PTE_StLba);		/* Get volume start sector */
5350:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol = ld_dword(pte + PTE_SizLba);	/* Get volume size */
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5352:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a single-partition in this function */
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_vol) != RES_OK) return FR_DISK_ERR;
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
5357:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_vol < 128) return FR_MKFS_ABORTED;	/* Check if volume size is >=128s */
5359:Middlewares/Third_Party/FatFs/src/ff.c **** 
5360:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Pre-determine the FAT type */
5361:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
5362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT && (opt & FM_EXFAT)) {	/* exFAT possible? */
5363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_EXFAT || sz_vol >= 0x4000000 || au > 128) {	/* exFAT only, vol >= 64Ms 
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_EXFAT; break;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 127


5365:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (au > 128) return FR_INVALID_PARAMETER;	/* Too large au for FAT/FAT32 */
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
5371:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5372:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_FAT)) return FR_INVALID_PARAMETER;	/* no-FAT? */
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
5375:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
5376:Middlewares/Third_Party/FatFs/src/ff.c **** 
5377:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_EXFAT) {	/* Create an exFAT volume */
5379:Middlewares/Third_Party/FatFs/src/ff.c **** 		DWORD szb_bit, szb_case, sum, nb, cl;
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 		WCHAR ch, si;
5381:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT j, st;
5382:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE b;
5383:Middlewares/Third_Party/FatFs/src/ff.c **** 
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x1000) return FR_MKFS_ABORTED;	/* Too small volume? */
5385:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5386:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area may be erased *
5387:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5388:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5389:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine FAT location, data location and number of clusters */
5390:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!au) {	/* au auto-selection */
5391:Middlewares/Third_Party/FatFs/src/ff.c **** 			au = 8;
5392:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x80000) au = 64;		/* >= 512Ks */
5393:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x4000000) au = 256;	/* >= 64Ms */
5394:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5395:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat = b_vol + 32;										/* FAT start at offset 32 */
5396:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_fat = ((sz_vol / au + 2) * 4 + ss - 1) / ss;			/* Number of FAT sectors */
5397:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_data = (b_fat + sz_fat + sz_blk - 1) & ~(sz_blk - 1);	/* Align data area to the erase block bou
5398:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (b_data >= sz_vol / 2) return FR_MKFS_ABORTED;		/* Too small volume? */
5399:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_clst = (sz_vol - (b_data - b_vol)) / au;				/* Number of clusters */
5400:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst <16) return FR_MKFS_ABORTED;					/* Too few clusters? */
5401:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst > MAX_EXFAT) return FR_MKFS_ABORTED;			/* Too many clusters? */
5402:Middlewares/Third_Party/FatFs/src/ff.c **** 
5403:Middlewares/Third_Party/FatFs/src/ff.c **** 		szb_bit = (n_clst + 7) / 8;						/* Size of allocation bitmap */
5404:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = (szb_bit + au * ss - 1) / (au * ss);	/* Number of allocation bitmap clusters */
5405:Middlewares/Third_Party/FatFs/src/ff.c **** 
5406:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a compressed up-case table */
5407:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * tbl[0];	/* Table start sector */
5408:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = 0;						/* Table checksum to be stored in the 82 entry */
5409:Middlewares/Third_Party/FatFs/src/ff.c **** 		st = si = i = j = szb_case = 0;
5410:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5411:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (st) {
5412:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 0:
5413:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = ff_wtoupper(si);	/* Get an up-case char */
5414:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ch != si) {
5415:Middlewares/Third_Party/FatFs/src/ff.c **** 					si++; break;		/* Store the up-case char if exist */
5416:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5417:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (j = 1; (WCHAR)(si + j) && (WCHAR)(si + j) == ff_wtoupper((WCHAR)(si + j)); j++) ;	/* Get r
5418:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (j >= 128) {
5419:Middlewares/Third_Party/FatFs/src/ff.c **** 					ch = 0xFFFF; st = 2; break;	/* Compress the no-case block if run is >= 128 */
5420:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5421:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 1;			/* Do not compress short run */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 128


5422:Middlewares/Third_Party/FatFs/src/ff.c **** 				/* go to next case */
5423:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 1:
5424:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = si++;		/* Fill the short run */
5425:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--j == 0) st = 0;
5426:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
5427:Middlewares/Third_Party/FatFs/src/ff.c **** 
5428:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
5429:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = (WCHAR)j; si += j;	/* Number of chars to skip */
5430:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 0;
5431:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5432:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 0] = (BYTE)ch, sum);		/* Put it into the write buffer */
5433:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 1] = (BYTE)(ch >> 8), sum);
5434:Middlewares/Third_Party/FatFs/src/ff.c **** 			i += 2; szb_case += 2;
5435:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!si || i == szb_buf) {		/* Write buffered data when buffer full or end of process */
5436:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (i + ss - 1) / ss;
5437:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5438:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; i = 0;
5439:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5440:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (si);
5441:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[1] = (szb_case + au * ss - 1) / (au * ss);	/* Number of up-case table clusters */
5442:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[2] = 1;										/* Number of root dir clusters */
5443:Middlewares/Third_Party/FatFs/src/ff.c **** 
5444:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the allocation bitmap */
5445:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data; nsect = (szb_bit + ss - 1) / ss;	/* Start of bitmap and number of sectors */
5446:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb = tbl[0] + tbl[1] + tbl[2];					/* Number of clusters in-use by system */
5447:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5448:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf);
5449:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; nb >= 8 && i < szb_buf; buf[i++] = 0xFF, nb -= 8) ;
5450:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (b = 1; nb && i < szb_buf; buf[i] |= b, b <<= 1, nb--) ;
5451:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;		/* Write the buffered data */
5452:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5453:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5454:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5455:Middlewares/Third_Party/FatFs/src/ff.c **** 
5456:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the FAT */
5457:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat; nsect = sz_fat;	/* Start of FAT and number of FAT sectors */
5458:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = nb = cl = 0;
5459:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5460:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf); i = 0;	/* Clear work area and reset write index */
5461:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl == 0) {	/* Set entry 0 and 1 */
5462:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFF8); i += 4; cl++;
5463:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFFF); i += 4; cl++;
5464:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5465:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {			/* Create chains of bitmap, up-case and root dir */
5466:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (nb && i < szb_buf) {			/* Create a chain */
5467:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(buf + i, (nb > 1) ? cl + 1 : 0xFFFFFFFF);
5468:Middlewares/Third_Party/FatFs/src/ff.c **** 					i += 4; cl++; nb--;
5469:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5470:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!nb && j < 3) nb = tbl[j++];	/* Next chain */
5471:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nb && i < szb_buf);
5472:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;	/* Write the buffered data */
5473:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5474:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5475:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5476:Middlewares/Third_Party/FatFs/src/ff.c **** 
5477:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the root directory */
5478:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, szb_buf);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 129


5479:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 0 + 0] = 0x83;		/* 83 entry (volume label) */
5480:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 1 + 0] = 0x81;		/* 81 entry (allocation bitmap) */
5481:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 20, 2);
5482:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 24, szb_bit);
5483:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 2 + 0] = 0x82;		/* 82 entry (up-case table) */
5484:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 4, sum);
5485:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 20, 2 + tbl[0]);
5486:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 24, szb_case);
5487:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * (tbl[0] + tbl[1]);	nsect = au;	/* Start of the root directory and number of 
5488:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill root directory sectors */
5489:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5490:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5491:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5492:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5493:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5494:Middlewares/Third_Party/FatFs/src/ff.c **** 
5495:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create two set of the exFAT VBR blocks */
5496:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_vol;
5497:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; n < 2; n++) {
5498:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Main record (+0) */
5499:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5500:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11);	/* Boot jump code (x86), OEM name */
5501:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolOfsEx, b_vol);					/* Volume offset in the physical drive [sector] */
5502:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSecEx, sz_vol);					/* Volume size [sector] */
5503:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatOfsEx, b_fat - b_vol);			/* FAT offset [sector] */
5504:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatSzEx, sz_fat);					/* FAT size [sector] */
5505:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_DataOfsEx, b_data - b_vol);			/* Data offset [sector] */
5506:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_NumClusEx, n_clst);					/* Number of clusters */
5507:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClusEx, 2 + tbl[0] + tbl[1]);	/* Root dir cluster # */
5508:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolIDEx, GET_FATTIME());				/* VSN */
5509:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSVerEx, 0x100);						/* File system version (1.00) */
5510:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_BytsPerSecEx] = 0, i = ss; i >>= 1; buf[BPB_BytsPerSecEx]++) ;	/* Log2 of sector si
5511:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_SecPerClusEx] = 0, i = au; i >>= 1; buf[BPB_SecPerClusEx]++) ;	/* Log2 of cluster s
5512:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_NumFATsEx] = 1;					/* Number of FATs */
5513:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_DrvNumEx] = 0x80;				/* Drive number (for int13) */
5514:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_BootCodeEx, 0xFEEB);	/* Boot code (x86) */
5515:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);			/* Signature (placed here regardless of sector size) */
5516:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = sum = 0; i < ss; i++) {		/* VBR checksum */
5517:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i != BPB_VolFlagEx && i != BPB_VolFlagEx + 1 && i != BPB_PercInUseEx) sum = xsum32(buf[i], 
5518:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5519:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5520:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Extended bootstrap record (+1..+8) */
5521:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5522:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + ss - 2, 0xAA55);	/* Signature (placed at end of sector) */
5523:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 1; j < 9; j++) {
5524:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5525:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5526:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5527:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* OEM/Reserved record (+9..+10) */
5528:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5529:Middlewares/Third_Party/FatFs/src/ff.c **** 			for ( ; j < 11; j++) {
5530:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5531:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5532:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5533:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Sum record (+11) */
5534:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < ss; i += 4) st_dword(buf + i, sum);		/* Fill with checksum value */
5535:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 130


5536:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5537:Middlewares/Third_Party/FatFs/src/ff.c **** 
5538:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5539:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
5540:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* Create an FAT12/16/32 volume */
5541:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 			pau = au;
5543:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {	/* FAT32 volume */
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5548:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;	/* Number of clusters */
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
5554:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
5562:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fmt = FS_FAT12;
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
5565:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n + ss - 1) / ss;		/* FAT size [sector] */
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
5569:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_fat = b_vol + sz_rsv;						/* FAT base */
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
5572:Middlewares/Third_Party/FatFs/src/ff.c **** 
5573:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Align data base to erase block boundary (for flash memory media) */
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = ((b_data + sz_blk - 1) & ~(sz_blk - 1)) - b_data;	/* Next nearest erase block from current d
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
5577:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat += n / n_fats;
5579:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5580:Middlewares/Third_Party/FatFs/src/ff.c **** 
5581:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Determine number of clusters and final check of validity of the FAT sub-type */
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol < b_data + pau * 16 - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
5584:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5588:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT16) {
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 131


5593:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
5594:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((opt & FM_FAT32)) {
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5600:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 				if  (n_clst <= MAX_FAT12) {	/* Too few clusters for FAT16 */
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5604:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5605:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT12 && n_clst > MAX_FAT12) return FR_MKFS_ABORTED;	/* Too many clusters for FAT1
5607:Middlewares/Third_Party/FatFs/src/ff.c **** 
5608:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Ok, it is the valid cluster configuration */
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (1);
5611:Middlewares/Third_Party/FatFs/src/ff.c **** 
5612:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area can be erased *
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5615:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5616:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FAT VBR */
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, ss);
5618:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
5625:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
5626:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSec32, sz_vol);		/* Volume size in 32-bit LBA */
5628:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_Media] = 0xF8;							/* Media descriptor byte */
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
5642:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID, GET_FATTIME());	/* VSN */
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
5648:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BS_55AA, 0xAA55);					/* Signature (offset is fixed here regardless of sector size)
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 132


5650:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
5651:Middlewares/Third_Party/FatFs/src/ff.c **** 
5652:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FSINFO record if needed */
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
5663:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5664:Middlewares/Third_Party/FatFs/src/ff.c **** 
5665:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize FAT area */
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, (UINT)szb_buf);
5667:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < n_fats; i++) {			/* Initialize FATs each */
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
5673:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, (fmt == FS_FAT12) ? 0xFFFFF8 : 0xFFFFFFF8);	/* Entry 0 and 1 */
5675:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5676:Middlewares/Third_Party/FatFs/src/ff.c **** 			nsect = sz_fat;		/* Number of FAT sectors */
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {	/* Fill FAT sectors */
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (nsect > sz_buf) ? sz_buf : nsect;
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
5683:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5684:Middlewares/Third_Party/FatFs/src/ff.c **** 
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize root directory (fill with zero) */
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 		nsect = (fmt == FS_FAT32) ? pau : sz_dir;	/* Number of root directory sectors */
5687:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5693:Middlewares/Third_Party/FatFs/src/ff.c **** 
5694:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine system ID in the partition table */
5695:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_FS_EXFAT && fmt == FS_EXFAT) {
5696:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x07;			/* HPFS/NTFS/exFAT */
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x10000) {
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
5703:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = (fmt == FS_FAT16) ? 0x04 : 0x01;	/* FAT16 (<64KS) : FAT12 (<64KS) */
5705:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5706:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 133


5707:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5708:Middlewares/Third_Party/FatFs/src/ff.c **** 
5709:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Update partition information */
5710:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {	/* Created in the existing partition */
5711:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update system ID in the partition table */
5712:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Read the MBR */
5713:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[MBR_Table + (part - 1) * SZ_PTE + PTE_System] = sys;		/* Set system ID */
5714:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it back to the MBR */
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Created as a new single partition */
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_SFD)) {	/* Create partition table if in FDISK format */
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
5719:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_Boot] = 0;					/* Boot indicator */
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
5732:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5733:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) return FR_DISK_ERR;
5736:Middlewares/Third_Party/FatFs/src/ff.c **** 
5737:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
5738:Middlewares/Third_Party/FatFs/src/ff.c **** }
5739:Middlewares/Third_Party/FatFs/src/ff.c **** 
5740:Middlewares/Third_Party/FatFs/src/ff.c **** 
5741:Middlewares/Third_Party/FatFs/src/ff.c **** 
5742:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
5743:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5744:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create partition table on the physical drive                          */
5745:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5746:Middlewares/Third_Party/FatFs/src/ff.c **** 
5747:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_fdisk (
5748:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
5749:Middlewares/Third_Party/FatFs/src/ff.c **** 	const DWORD* szt,	/* Pointer to the size table for each partitions */
5750:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work			/* Pointer to the working buffer */
5751:Middlewares/Third_Party/FatFs/src/ff.c **** )
5752:Middlewares/Third_Party/FatFs/src/ff.c **** {
5753:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
5754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
5755:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5756:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
5757:Middlewares/Third_Party/FatFs/src/ff.c **** 
5758:Middlewares/Third_Party/FatFs/src/ff.c **** 
5759:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5760:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5761:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5762:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
5763:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 134


5764:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine the CHS without any consideration of the drive geometry */
5765:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
5766:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n == 256) n--;
5767:Middlewares/Third_Party/FatFs/src/ff.c **** 	e_hd = n - 1;
5768:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_cyl = 63 * n;
5769:Middlewares/Third_Party/FatFs/src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
5770:Middlewares/Third_Party/FatFs/src/ff.c **** 
5771:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create partition table */
5772:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
5773:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
5774:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
5775:Middlewares/Third_Party/FatFs/src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;	/* Number of cylinder
5776:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!p_cyl) continue;
5777:Middlewares/Third_Party/FatFs/src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
5778:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
5779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
5780:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 1;
5781:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_part += 63; sz_part -= 63;
5782:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5783:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 0;
5784:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5785:Middlewares/Third_Party/FatFs/src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;	/* End cylinder */
5786:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
5787:Middlewares/Third_Party/FatFs/src/ff.c **** 
5788:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Set partition table */
5789:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[1] = s_hd;						/* Start head */
5790:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
5791:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
5792:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[4] = 0x07;						/* System type (temporary setting) */
5793:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[5] = e_hd;						/* End head */
5794:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
5795:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
5796:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 8, s_part);			/* Start sector in LBA */
5797:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 12, sz_part);			/* Number of sectors */
5798:Middlewares/Third_Party/FatFs/src/ff.c **** 
5799:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Next partition */
5800:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_cyl += p_cyl;
5801:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5802:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(p, 0xAA55);
5803:Middlewares/Third_Party/FatFs/src/ff.c **** 
5804:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Write it to the MBR */
5805:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
5806:Middlewares/Third_Party/FatFs/src/ff.c **** }
5807:Middlewares/Third_Party/FatFs/src/ff.c **** 
5808:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _MULTI_PARTITION */
5809:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
5810:Middlewares/Third_Party/FatFs/src/ff.c **** 
5811:Middlewares/Third_Party/FatFs/src/ff.c **** 
5812:Middlewares/Third_Party/FatFs/src/ff.c **** 
5813:Middlewares/Third_Party/FatFs/src/ff.c **** 
5814:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_STRFUNC
5815:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5816:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get a string from the file                                            */
5817:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5818:Middlewares/Third_Party/FatFs/src/ff.c **** 
5819:Middlewares/Third_Party/FatFs/src/ff.c **** TCHAR* f_gets (
5820:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 135


5821:Middlewares/Third_Party/FatFs/src/ff.c **** 	int len,		/* Size of string buffer (characters) */
5822:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp			/* Pointer to the file object */
5823:Middlewares/Third_Party/FatFs/src/ff.c **** )
5824:Middlewares/Third_Party/FatFs/src/ff.c **** {
5825:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
5826:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
5827:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
5828:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rc;
5829:Middlewares/Third_Party/FatFs/src/ff.c **** 
5830:Middlewares/Third_Party/FatFs/src/ff.c **** 
5831:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
5832:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
5834:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5835:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5836:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5837:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {
5838:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
5839:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence (0x80-0x7FF) */
5840:Middlewares/Third_Party/FatFs/src/ff.c **** 				f_read(fp, s, 1, &rc);
5841:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (rc != 1) break;
5842:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
5843:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0x80) c = '?';	/* Reject invalid code range */
5844:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5845:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence (0x800-0xFFFF) */
5846:Middlewares/Third_Party/FatFs/src/ff.c **** 					f_read(fp, s, 2, &rc);
5847:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (rc != 2) break;
5848:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
5849:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c < 0x800) c = '?';	/* Reject invalid code range */
5850:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {			/* Reject four-byte sequence */
5851:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = '?';
5852:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5853:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5854:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5855:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
5856:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5857:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5858:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[1] + (s[0] << 8);
5859:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
5860:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5861:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5862:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0] + (s[1] << 8);
5863:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character in ANSI/OEM */
5864:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5865:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5866:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5867:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {
5868:Middlewares/Third_Party/FatFs/src/ff.c **** 			f_read(fp, s, 1, &rc);
5869:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (rc != 1) break;
5870:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (c << 8) + s[0];
5871:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5872:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
5873:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
5874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5875:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character without conversion */
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5877:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 136


5878:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5879:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
5882:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
5884:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5885:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;
5886:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
5887:Middlewares/Third_Party/FatFs/src/ff.c **** }
5888:Middlewares/Third_Party/FatFs/src/ff.c **** 
5889:Middlewares/Third_Party/FatFs/src/ff.c **** 
5890:Middlewares/Third_Party/FatFs/src/ff.c **** 
5891:Middlewares/Third_Party/FatFs/src/ff.c **** 
5892:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5893:Middlewares/Third_Party/FatFs/src/ff.c **** #include <stdarg.h>
5894:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5895:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a character to the file                                           */
5896:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5897:Middlewares/Third_Party/FatFs/src/ff.c **** 
5898:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
5899:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fp;		/* Ptr to the writing file */
5900:Middlewares/Third_Party/FatFs/src/ff.c **** 	int idx, nchr;	/* Write index of buf[] (-1:error), number of chars written */
5901:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[64];	/* Write buffer */
5902:Middlewares/Third_Party/FatFs/src/ff.c **** } putbuff;
5903:Middlewares/Third_Party/FatFs/src/ff.c **** 
5904:Middlewares/Third_Party/FatFs/src/ff.c **** 
5905:Middlewares/Third_Party/FatFs/src/ff.c **** static
5906:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_bfd (		/* Buffered write with code conversion */
5907:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5908:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c
5909:Middlewares/Third_Party/FatFs/src/ff.c **** )
5910:Middlewares/Third_Party/FatFs/src/ff.c **** {
5911:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
5912:Middlewares/Third_Party/FatFs/src/ff.c **** 	int i;
5913:Middlewares/Third_Party/FatFs/src/ff.c **** 
5914:Middlewares/Third_Party/FatFs/src/ff.c **** 
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n') {	 /* LF -> CRLF conversion */
5916:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
5917:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5918:Middlewares/Third_Party/FatFs/src/ff.c **** 
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = pb->idx;		/* Write index of pb->buf[] */
5920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
5921:Middlewares/Third_Party/FatFs/src/ff.c **** 
5922:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
5924:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
5925:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)c;
5926:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5927:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
5928:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
5929:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* 16-bit */
5930:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
5931:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
5932:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5933:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
5934:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 137


5935:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
5936:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5937:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5938:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
5939:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5940:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5941:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character in ANSI/OEM */
5942:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
5943:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!c) c = '?';
5944:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c >= 0x100)
5945:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
5946:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5947:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5948:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character without conversion */
5949:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5950:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5951:Middlewares/Third_Party/FatFs/src/ff.c **** 
5952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
5953:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
5955:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->idx = i;
5957:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
5958:Middlewares/Third_Party/FatFs/src/ff.c **** }
5959:Middlewares/Third_Party/FatFs/src/ff.c **** 
5960:Middlewares/Third_Party/FatFs/src/ff.c **** 
5961:Middlewares/Third_Party/FatFs/src/ff.c **** static
5962:Middlewares/Third_Party/FatFs/src/ff.c **** int putc_flush (		/* Flush left characters in the buffer */
5963:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb
5964:Middlewares/Third_Party/FatFs/src/ff.c **** )
5965:Middlewares/Third_Party/FatFs/src/ff.c **** {
5966:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
5967:Middlewares/Third_Party/FatFs/src/ff.c **** 
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb->idx >= 0	/* Flush buffered characters to the file */
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
5971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
5972:Middlewares/Third_Party/FatFs/src/ff.c **** }
5973:Middlewares/Third_Party/FatFs/src/ff.c **** 
5974:Middlewares/Third_Party/FatFs/src/ff.c **** 
5975:Middlewares/Third_Party/FatFs/src/ff.c **** static
5976:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_init (		/* Initialize write buffer */
5977:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5978:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp
5979:Middlewares/Third_Party/FatFs/src/ff.c **** )
5980:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1776              		.loc 1 5980 0
 1777              		.cfi_startproc
 1778              		@ args = 0, pretend = 0, frame = 0
 1779              		@ frame_needed = 0, uses_anonymous_args = 0
 1780              		@ link register save eliminated.
 1781              	.LVL240:
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->fp = fp;
 1782              		.loc 1 5981 0
 1783 0000 0160     		str	r1, [r0]
5982:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr = pb->idx = 0;
 1784              		.loc 1 5982 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 138


 1785 0002 0023     		movs	r3, #0
 1786 0004 4360     		str	r3, [r0, #4]
 1787 0006 8360     		str	r3, [r0, #8]
5983:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1788              		.loc 1 5983 0
 1789 0008 7047     		bx	lr
 1790              		.cfi_endproc
 1791              	.LFE214:
 1793              		.section	.text.lock_fs,"ax",%progbits
 1794              		.align	1
 1795              		.syntax unified
 1796              		.thumb
 1797              		.thumb_func
 1798              		.fpu fpv5-sp-d16
 1800              	lock_fs:
 1801              	.LFB151:
 745:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 1802              		.loc 1 745 0
 1803              		.cfi_startproc
 1804              		@ args = 0, pretend = 0, frame = 0
 1805              		@ frame_needed = 0, uses_anonymous_args = 0
 1806              	.LVL241:
 1807 0000 08B5     		push	{r3, lr}
 1808              	.LCFI26:
 1809              		.cfi_def_cfa_offset 8
 1810              		.cfi_offset 3, -8
 1811              		.cfi_offset 14, -4
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1812              		.loc 1 746 0
 1813 0002 30B1     		cbz	r0, .L192
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1814              		.loc 1 746 0 is_stmt 0 discriminator 1
 1815 0004 0069     		ldr	r0, [r0, #16]
 1816              	.LVL242:
 1817 0006 FFF7FEFF 		bl	ff_req_grant
 1818              	.LVL243:
 1819 000a 0346     		mov	r3, r0
 1820 000c 10B1     		cbz	r0, .L190
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1821              		.loc 1 746 0
 1822 000e 0123     		movs	r3, #1
 1823 0010 00E0     		b	.L190
 1824              	.LVL244:
 1825              	.L192:
 1826 0012 0023     		movs	r3, #0
 1827              	.LVL245:
 1828              	.L190:
 747:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1829              		.loc 1 747 0 is_stmt 1
 1830 0014 1846     		mov	r0, r3
 1831 0016 08BD     		pop	{r3, pc}
 1832              		.cfi_endproc
 1833              	.LFE151:
 1835              		.section	.text.validate,"ax",%progbits
 1836              		.align	1
 1837              		.syntax unified
 1838              		.thumb
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 139


 1839              		.thumb_func
 1840              		.fpu fpv5-sp-d16
 1842              	validate:
 1843              	.LFB189:
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 1844              		.loc 1 3220 0
 1845              		.cfi_startproc
 1846              		@ args = 0, pretend = 0, frame = 0
 1847              		@ frame_needed = 0, uses_anonymous_args = 0
 1848              	.LVL246:
 1849 0000 38B5     		push	{r3, r4, r5, lr}
 1850              	.LCFI27:
 1851              		.cfi_def_cfa_offset 16
 1852              		.cfi_offset 3, -16
 1853              		.cfi_offset 4, -12
 1854              		.cfi_offset 5, -8
 1855              		.cfi_offset 14, -4
 1856 0002 0D46     		mov	r5, r1
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1857              		.loc 1 3223 0
 1858 0004 40B1     		cbz	r0, .L195
 1859 0006 0446     		mov	r4, r0
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1860              		.loc 1 3223 0 is_stmt 0 discriminator 1
 1861 0008 0368     		ldr	r3, [r0]
 1862 000a 2BB1     		cbz	r3, .L195
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1863              		.loc 1 3223 0 discriminator 2
 1864 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1865 000e 1AB1     		cbz	r2, .L195
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1866              		.loc 1 3223 0 discriminator 3
 1867 0010 D988     		ldrh	r1, [r3, #6]
 1868              	.LVL247:
 1869 0012 8288     		ldrh	r2, [r0, #4]
 1870 0014 9142     		cmp	r1, r2
 1871 0016 03D0     		beq	.L200
 1872              	.LVL248:
 1873              	.L195:
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INVALID_OBJECT;	/* The object is invalid */
 1874              		.loc 1 3224 0 is_stmt 1
 1875 0018 0023     		movs	r3, #0
 1876 001a 2B60     		str	r3, [r5]
 1877              	.LVL249:
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 1878              		.loc 1 3225 0
 1879 001c 0920     		movs	r0, #9
 1880              	.LVL250:
 1881              	.L197:
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1882              		.loc 1 3232 0
 1883 001e 38BD     		pop	{r3, r4, r5, pc}
 1884              	.LVL251:
 1885              	.L200:
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1886              		.loc 1 3223 0 discriminator 4
 1887 0020 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 140


 1888              	.LVL252:
 1889 0022 FFF7FEFF 		bl	disk_status
 1890              	.LVL253:
 1891 0026 10F0010F 		tst	r0, #1
 1892 002a F5D1     		bne	.L195
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		ENTER_FF(obj->fs);		/* Lock file system */
 1893              		.loc 1 3227 0
 1894 002c 2368     		ldr	r3, [r4]
 1895 002e 2B60     		str	r3, [r5]
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;			/* Valid object */
 1896              		.loc 1 3228 0
 1897 0030 2068     		ldr	r0, [r4]
 1898 0032 FFF7FEFF 		bl	lock_fs
 1899              	.LVL254:
 1900 0036 08B1     		cbz	r0, .L201
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1901              		.loc 1 3229 0
 1902 0038 0020     		movs	r0, #0
 1903 003a F0E7     		b	.L197
 1904              	.L201:
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;			/* Valid object */
 1905              		.loc 1 3228 0
 1906 003c 0F20     		movs	r0, #15
 1907 003e EEE7     		b	.L197
 1908              		.cfi_endproc
 1909              	.LFE189:
 1911              		.section	.text.sync_window,"ax",%progbits
 1912              		.align	1
 1913              		.syntax unified
 1914              		.thumb
 1915              		.thumb_func
 1916              		.fpu fpv5-sp-d16
 1918              	sync_window:
 1919              	.LFB158:
 886:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 1920              		.loc 1 886 0
 1921              		.cfi_startproc
 1922              		@ args = 0, pretend = 0, frame = 0
 1923              		@ frame_needed = 0, uses_anonymous_args = 0
 1924              	.LVL255:
 1925 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1926              	.LCFI28:
 1927              		.cfi_def_cfa_offset 24
 1928              		.cfi_offset 3, -24
 1929              		.cfi_offset 4, -20
 1930              		.cfi_offset 5, -16
 1931              		.cfi_offset 6, -12
 1932              		.cfi_offset 7, -8
 1933              		.cfi_offset 14, -4
 1934              	.LVL256:
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1935              		.loc 1 892 0
 1936 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1937 0004 0BB9     		cbnz	r3, .L210
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1938              		.loc 1 889 0
 1939 0006 0020     		movs	r0, #0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 141


 1940              	.LVL257:
 1941              	.L203:
 907:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1942              		.loc 1 907 0
 1943 0008 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1944              	.LVL258:
 1945              	.L210:
 1946 000a 0446     		mov	r4, r0
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 1947              		.loc 1 893 0
 1948 000c 856B     		ldr	r5, [r0, #56]
 1949              	.LVL259:
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 1950              		.loc 1 894 0
 1951 000e 00F13C07 		add	r7, r0, #60
 1952 0012 0123     		movs	r3, #1
 1953 0014 2A46     		mov	r2, r5
 1954 0016 3946     		mov	r1, r7
 1955 0018 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 1956              	.LVL260:
 1957 001a FFF7FEFF 		bl	disk_write
 1958              	.LVL261:
 1959 001e A8B9     		cbnz	r0, .L207
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 1960              		.loc 1 897 0
 1961 0020 0023     		movs	r3, #0
 1962 0022 E370     		strb	r3, [r4, #3]
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 1963              		.loc 1 898 0
 1964 0024 E36A     		ldr	r3, [r4, #44]
 1965 0026 EB1A     		subs	r3, r5, r3
 1966 0028 626A     		ldr	r2, [r4, #36]
 1967 002a 9342     		cmp	r3, r2
 1968 002c 10D2     		bcs	.L208
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1969              		.loc 1 899 0
 1970 002e A678     		ldrb	r6, [r4, #2]	@ zero_extendqisi2
 1971              	.LVL262:
 1972              	.L204:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1973              		.loc 1 899 0 is_stmt 0 discriminator 1
 1974 0030 012E     		cmp	r6, #1
 1975 0032 09D9     		bls	.L211
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 1976              		.loc 1 900 0 is_stmt 1 discriminator 3
 1977 0034 636A     		ldr	r3, [r4, #36]
 1978 0036 1D44     		add	r5, r5, r3
 1979              	.LVL263:
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1980              		.loc 1 901 0 discriminator 3
 1981 0038 0123     		movs	r3, #1
 1982 003a 2A46     		mov	r2, r5
 1983 003c 3946     		mov	r1, r7
 1984 003e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1985 0040 FFF7FEFF 		bl	disk_write
 1986              	.LVL264:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 142


 1987              		.loc 1 899 0 discriminator 3
 1988 0044 013E     		subs	r6, r6, #1
 1989              	.LVL265:
 1990 0046 F3E7     		b	.L204
 1991              	.L211:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1992              		.loc 1 889 0
 1993 0048 0020     		movs	r0, #0
 1994 004a DDE7     		b	.L203
 1995              	.LVL266:
 1996              	.L207:
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1997              		.loc 1 895 0
 1998 004c 0120     		movs	r0, #1
 1999 004e DBE7     		b	.L203
 2000              	.L208:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2001              		.loc 1 889 0
 2002 0050 0020     		movs	r0, #0
 2003 0052 D9E7     		b	.L203
 2004              		.cfi_endproc
 2005              	.LFE158:
 2007              		.section	.text.move_window,"ax",%progbits
 2008              		.align	1
 2009              		.syntax unified
 2010              		.thumb
 2011              		.thumb_func
 2012              		.fpu fpv5-sp-d16
 2014              	move_window:
 2015              	.LFB159:
 916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 2016              		.loc 1 916 0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 0
 2019              		@ frame_needed = 0, uses_anonymous_args = 0
 2020              	.LVL267:
 2021 0000 70B5     		push	{r4, r5, r6, lr}
 2022              	.LCFI29:
 2023              		.cfi_def_cfa_offset 16
 2024              		.cfi_offset 4, -16
 2025              		.cfi_offset 5, -12
 2026              		.cfi_offset 6, -8
 2027              		.cfi_offset 14, -4
 2028              	.LVL268:
 920:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 2029              		.loc 1 920 0
 2030 0002 836B     		ldr	r3, [r0, #56]
 2031 0004 8B42     		cmp	r3, r1
 2032 0006 12D0     		beq	.L215
 2033 0008 0446     		mov	r4, r0
 2034 000a 0D46     		mov	r5, r1
 922:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2035              		.loc 1 922 0
 2036 000c FFF7FEFF 		bl	sync_window
 2037              	.LVL269:
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 2038              		.loc 1 924 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 143


 2039 0010 0646     		mov	r6, r0
 2040 0012 68B9     		cbnz	r0, .L213
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 2041              		.loc 1 925 0
 2042 0014 0123     		movs	r3, #1
 2043 0016 2A46     		mov	r2, r5
 2044 0018 04F13C01 		add	r1, r4, #60
 2045 001c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2046              	.LVL270:
 2047 001e FFF7FEFF 		bl	disk_read
 2048              	.LVL271:
 2049 0022 10B1     		cbz	r0, .L214
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2050              		.loc 1 927 0
 2051 0024 0126     		movs	r6, #1
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 2052              		.loc 1 926 0
 2053 0026 4FF0FF35 		mov	r5, #-1
 2054              	.LVL272:
 2055              	.L214:
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2056              		.loc 1 929 0
 2057 002a A563     		str	r5, [r4, #56]
 2058 002c 00E0     		b	.L213
 2059              	.LVL273:
 2060              	.L215:
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2061              		.loc 1 917 0
 2062 002e 0026     		movs	r6, #0
 2063              	.LVL274:
 2064              	.L213:
 933:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2065              		.loc 1 933 0
 2066 0030 3046     		mov	r0, r6
 2067 0032 70BD     		pop	{r4, r5, r6, pc}
 2068              		.cfi_endproc
 2069              	.LFE159:
 2071              		.section	.text.check_fs,"ax",%progbits
 2072              		.align	1
 2073              		.syntax unified
 2074              		.thumb
 2075              		.thumb_func
 2076              		.fpu fpv5-sp-d16
 2078              	check_fs:
 2079              	.LFB187:
2969:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 2080              		.loc 1 2969 0
 2081              		.cfi_startproc
 2082              		@ args = 0, pretend = 0, frame = 0
 2083              		@ frame_needed = 0, uses_anonymous_args = 0
 2084              	.LVL275:
 2085 0000 10B5     		push	{r4, lr}
 2086              	.LCFI30:
 2087              		.cfi_def_cfa_offset 8
 2088              		.cfi_offset 4, -8
 2089              		.cfi_offset 14, -4
 2090 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 144


2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 2091              		.loc 1 2970 0
 2092 0004 0023     		movs	r3, #0
 2093 0006 C370     		strb	r3, [r0, #3]
 2094 0008 4FF0FF33 		mov	r3, #-1
 2095 000c 8363     		str	r3, [r0, #56]
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2096              		.loc 1 2971 0
 2097 000e FFF7FEFF 		bl	move_window
 2098              	.LVL276:
 2099 0012 18BB     		cbnz	r0, .L221
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2100              		.loc 1 2973 0
 2101 0014 04F23A20 		addw	r0, r4, #570
 2102 0018 FFF7FEFF 		bl	ld_word
 2103              	.LVL277:
 2104 001c 4AF65523 		movw	r3, #43605
 2105 0020 9842     		cmp	r0, r3
 2106 0022 1DD1     		bne	.L222
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 2107              		.loc 1 2975 0
 2108 0024 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 2109 0028 E92B     		cmp	r3, #233
 2110 002a 05D0     		beq	.L220
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 2111              		.loc 1 2975 0 is_stmt 0 discriminator 1
 2112 002c E36B     		ldr	r3, [r4, #60]
 2113 002e 03F0FF13 		and	r3, r3, #16711935
 2114 0032 0F4A     		ldr	r2, .L227
 2115 0034 9342     		cmp	r3, r2
 2116 0036 15D1     		bne	.L223
 2117              	.L220:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 2118              		.loc 1 2976 0 is_stmt 1
 2119 0038 04F17200 		add	r0, r4, #114
 2120 003c FFF7FEFF 		bl	ld_dword
 2121              	.LVL278:
 2122 0040 20F07F40 		bic	r0, r0, #-16777216
 2123 0044 0B4B     		ldr	r3, .L227+4
 2124 0046 9842     		cmp	r0, r3
 2125 0048 0ED0     		beq	.L224
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2126              		.loc 1 2977 0
 2127 004a 04F18E00 		add	r0, r4, #142
 2128 004e FFF7FEFF 		bl	ld_dword
 2129              	.LVL279:
 2130 0052 094B     		ldr	r3, .L227+8
 2131 0054 9842     		cmp	r0, r3
 2132 0056 09D1     		bne	.L225
 2133 0058 0020     		movs	r0, #0
 2134 005a 02E0     		b	.L219
 2135              	.L221:
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2136              		.loc 1 2971 0
 2137 005c 0420     		movs	r0, #4
 2138 005e 00E0     		b	.L219
 2139              	.L222:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 145


2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2140              		.loc 1 2973 0
 2141 0060 0320     		movs	r0, #3
 2142              	.L219:
2983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2143              		.loc 1 2983 0
 2144 0062 10BD     		pop	{r4, pc}
 2145              	.LVL280:
 2146              	.L223:
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2147              		.loc 1 2982 0
 2148 0064 0220     		movs	r0, #2
 2149 0066 FCE7     		b	.L219
 2150              	.L224:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 2151              		.loc 1 2976 0
 2152 0068 0020     		movs	r0, #0
 2153 006a FAE7     		b	.L219
 2154              	.L225:
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2155              		.loc 1 2982 0
 2156 006c 0220     		movs	r0, #2
 2157 006e F8E7     		b	.L219
 2158              	.L228:
 2159              		.align	2
 2160              	.L227:
 2161 0070 EB009000 		.word	9437419
 2162 0074 46415400 		.word	5521734
 2163 0078 46415433 		.word	861159750
 2164              		.cfi_endproc
 2165              	.LFE187:
 2167              		.section	.text.find_volume,"ax",%progbits
 2168              		.align	1
 2169              		.syntax unified
 2170              		.thumb
 2171              		.thumb_func
 2172              		.fpu fpv5-sp-d16
 2174              	find_volume:
 2175              	.LFB188:
2998:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
 2176              		.loc 1 2998 0
 2177              		.cfi_startproc
 2178              		@ args = 0, pretend = 0, frame = 16
 2179              		@ frame_needed = 0, uses_anonymous_args = 0
 2180              	.LVL281:
 2181 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2182              	.LCFI31:
 2183              		.cfi_def_cfa_offset 32
 2184              		.cfi_offset 4, -32
 2185              		.cfi_offset 5, -28
 2186              		.cfi_offset 6, -24
 2187              		.cfi_offset 7, -20
 2188              		.cfi_offset 8, -16
 2189              		.cfi_offset 9, -12
 2190              		.cfi_offset 10, -8
 2191              		.cfi_offset 14, -4
 2192 0004 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 146


 2193              	.LCFI32:
 2194              		.cfi_def_cfa_offset 48
 2195 0006 0E46     		mov	r6, r1
 2196 0008 1746     		mov	r7, r2
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
 2197              		.loc 1 3009 0
 2198 000a 0023     		movs	r3, #0
 2199 000c 0B60     		str	r3, [r1]
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 2200              		.loc 1 3010 0
 2201 000e FFF7FEFF 		bl	get_ldnumber
 2202              	.LVL282:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2203              		.loc 1 3011 0
 2204 0012 051E     		subs	r5, r0, #0
 2205 0014 C0F24C81 		blt	.L247
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 2206              		.loc 1 3014 0
 2207 0018 BB4B     		ldr	r3, .L279
 2208 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 2209              	.LVL283:
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2210              		.loc 1 3015 0
 2211 001e 002C     		cmp	r4, #0
 2212 0020 00F04881 		beq	.L248
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
 2213              		.loc 1 3017 0
 2214 0024 2046     		mov	r0, r4
 2215              	.LVL284:
 2216 0026 FFF7FEFF 		bl	lock_fs
 2217              	.LVL285:
 2218 002a 0028     		cmp	r0, #0
 2219 002c 00F04681 		beq	.L249
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2220              		.loc 1 3018 0
 2221 0030 3460     		str	r4, [r6]
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
 2222              		.loc 1 3020 0
 2223 0032 07F0FE07 		and	r7, r7, #254
 2224              	.LVL286:
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
 2225              		.loc 1 3021 0
 2226 0036 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2227 0038 73B1     		cbz	r3, .L231
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 2228              		.loc 1 3022 0
 2229 003a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2230 003c FFF7FEFF 		bl	disk_status
 2231              	.LVL287:
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 2232              		.loc 1 3023 0
 2233 0040 10F0010F 		tst	r0, #1
 2234 0044 08D1     		bne	.L231
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 2235              		.loc 1 3024 0
 2236 0046 002F     		cmp	r7, #0
 2237 0048 00F03A81 		beq	.L250
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 147


3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 2238              		.loc 1 3024 0 is_stmt 0 discriminator 1
 2239 004c 10F0040F 		tst	r0, #4
 2240 0050 40F03881 		bne	.L251
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2241              		.loc 1 3027 0 is_stmt 1
 2242 0054 0020     		movs	r0, #0
 2243              	.LVL288:
 2244 0056 2EE1     		b	.L230
 2245              	.L231:
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 2246              		.loc 1 3034 0
 2247 0058 0023     		movs	r3, #0
 2248 005a 2370     		strb	r3, [r4]
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 2249              		.loc 1 3035 0
 2250 005c E8B2     		uxtb	r0, r5
 2251 005e 6070     		strb	r0, [r4, #1]
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 2252              		.loc 1 3036 0
 2253 0060 FFF7FEFF 		bl	disk_initialize
 2254              	.LVL289:
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 2255              		.loc 1 3037 0
 2256 0064 10F0010F 		tst	r0, #1
 2257 0068 40F02E81 		bne	.L252
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 2258              		.loc 1 3040 0
 2259 006c 1FB1     		cbz	r7, .L232
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 2260              		.loc 1 3040 0 is_stmt 0 discriminator 1
 2261 006e 10F0040F 		tst	r0, #4
 2262 0072 40F02B81 		bne	.L253
 2263              	.L232:
 2264              	.LVL290:
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 2265              		.loc 1 3050 0 is_stmt 1
 2266 0076 0021     		movs	r1, #0
 2267 0078 2046     		mov	r0, r4
 2268              	.LVL291:
 2269 007a FFF7FEFF 		bl	check_fs
 2270              	.LVL292:
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 2271              		.loc 1 3051 0
 2272 007e 0228     		cmp	r0, #2
 2273 0080 00F0B880 		beq	.L254
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 2274              		.loc 1 3049 0
 2275 0084 0026     		movs	r6, #0
 2276              	.LVL293:
 2277              	.L234:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2278              		.loc 1 3063 0
 2279 0086 0428     		cmp	r0, #4
 2280 0088 00F02281 		beq	.L257
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2281              		.loc 1 3064 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 148


 2282 008c 0128     		cmp	r0, #1
 2283 008e 00F22181 		bhi	.L258
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2284              		.loc 1 3116 0
 2285 0092 04F14700 		add	r0, r4, #71
 2286              	.LVL294:
 2287 0096 FFF7FEFF 		bl	ld_word
 2288              	.LVL295:
 2289 009a B0F5007F 		cmp	r0, #512
 2290 009e 40F01B81 		bne	.L259
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 2291              		.loc 1 3118 0
 2292 00a2 04F15200 		add	r0, r4, #82
 2293 00a6 FFF7FEFF 		bl	ld_word
 2294              	.LVL296:
 2295 00aa 0746     		mov	r7, r0
 2296              	.LVL297:
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 2297              		.loc 1 3119 0
 2298 00ac 20B9     		cbnz	r0, .L239
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 2299              		.loc 1 3119 0 is_stmt 0 discriminator 1
 2300 00ae 04F16000 		add	r0, r4, #96
 2301              	.LVL298:
 2302 00b2 FFF7FEFF 		bl	ld_dword
 2303              	.LVL299:
 2304 00b6 0746     		mov	r7, r0
 2305              	.LVL300:
 2306              	.L239:
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2307              		.loc 1 3120 0 is_stmt 1
 2308 00b8 6762     		str	r7, [r4, #36]
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 2309              		.loc 1 3122 0
 2310 00ba 94F84C20 		ldrb	r2, [r4, #76]	@ zero_extendqisi2
 2311 00be A270     		strb	r2, [r4, #2]
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 2312              		.loc 1 3123 0
 2313 00c0 531E     		subs	r3, r2, #1
 2314 00c2 DBB2     		uxtb	r3, r3
 2315 00c4 012B     		cmp	r3, #1
 2316 00c6 00F20981 		bhi	.L260
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2317              		.loc 1 3124 0
 2318 00ca 07FB02F5 		mul	r5, r7, r2
 2319              	.LVL301:
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 2320              		.loc 1 3126 0
 2321 00ce 94F84980 		ldrb	r8, [r4, #73]	@ zero_extendqisi2
 2322 00d2 A4F80A80 		strh	r8, [r4, #10]	@ movhi
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2323              		.loc 1 3127 0
 2324 00d6 B8F1000F 		cmp	r8, #0
 2325 00da 00F00181 		beq	.L261
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2326              		.loc 1 3127 0 is_stmt 0 discriminator 2
 2327 00de 08F1FF33 		add	r3, r8, #-1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 149


 2328 00e2 18EA030F 		tst	r8, r3
 2329 00e6 40F0FD80 		bne	.L262
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 2330              		.loc 1 3129 0 is_stmt 1
 2331 00ea 04F14D00 		add	r0, r4, #77
 2332 00ee FFF7FEFF 		bl	ld_word
 2333              	.LVL302:
 2334 00f2 8246     		mov	r10, r0
 2335 00f4 2081     		strh	r0, [r4, #8]	@ movhi
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2336              		.loc 1 3130 0
 2337 00f6 10F00F0F 		tst	r0, #15
 2338 00fa 40F0F580 		bne	.L263
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 2339              		.loc 1 3132 0
 2340 00fe 04F14F00 		add	r0, r4, #79
 2341 0102 FFF7FEFF 		bl	ld_word
 2342              	.LVL303:
 2343 0106 8146     		mov	r9, r0
 2344              	.LVL304:
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2345              		.loc 1 3133 0
 2346 0108 20B9     		cbnz	r0, .L240
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2347              		.loc 1 3133 0 is_stmt 0 discriminator 1
 2348 010a 04F15C00 		add	r0, r4, #92
 2349              	.LVL305:
 2350 010e FFF7FEFF 		bl	ld_dword
 2351              	.LVL306:
 2352 0112 8146     		mov	r9, r0
 2353              	.LVL307:
 2354              	.L240:
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 2355              		.loc 1 3135 0 is_stmt 1
 2356 0114 04F14A00 		add	r0, r4, #74
 2357              	.LVL308:
 2358 0118 FFF7FEFF 		bl	ld_word
 2359              	.LVL309:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2360              		.loc 1 3136 0
 2361 011c 0146     		mov	r1, r0
 2362 011e 0028     		cmp	r0, #0
 2363 0120 00F0E480 		beq	.L264
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 2364              		.loc 1 3139 0
 2365 0124 4219     		adds	r2, r0, r5
 2366 0126 02EB1A12 		add	r2, r2, r10, lsr #4
 2367              	.LVL310:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2368              		.loc 1 3140 0
 2369 012a 9145     		cmp	r9, r2
 2370 012c C0F0E080 		bcc	.L265
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 2371              		.loc 1 3141 0
 2372 0130 A9EB0203 		sub	r3, r9, r2
 2373 0134 B3FBF8F3 		udiv	r3, r3, r8
 2374              	.LVL311:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 150


3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2375              		.loc 1 3142 0
 2376 0138 002B     		cmp	r3, #0
 2377 013a 00F0DB80 		beq	.L266
 2378              	.LVL312:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2379              		.loc 1 3144 0
 2380 013e 4FF6F570 		movw	r0, #65525
 2381              	.LVL313:
 2382 0142 8342     		cmp	r3, r0
 2383 0144 6ED9     		bls	.L267
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 2384              		.loc 1 3143 0
 2385 0146 4FF00309 		mov	r9, #3
 2386              	.LVL314:
 2387              	.L241:
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2388              		.loc 1 3145 0
 2389 014a 40F6F570 		movw	r0, #4085
 2390 014e 8342     		cmp	r3, r0
 2391 0150 01D8     		bhi	.L242
 2392 0152 4FF00109 		mov	r9, #1
 2393              	.LVL315:
 2394              	.L242:
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2395              		.loc 1 3148 0
 2396 0156 03F10208 		add	r8, r3, #2
 2397 015a C4F82080 		str	r8, [r4, #32]
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 2398              		.loc 1 3149 0
 2399 015e A662     		str	r6, [r4, #40]
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 2400              		.loc 1 3150 0
 2401 0160 8B19     		adds	r3, r1, r6
 2402              	.LVL316:
 2403 0162 E362     		str	r3, [r4, #44]
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 2404              		.loc 1 3151 0
 2405 0164 3244     		add	r2, r2, r6
 2406              	.LVL317:
 2407 0166 6263     		str	r2, [r4, #52]
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 2408              		.loc 1 3152 0
 2409 0168 B9F1030F 		cmp	r9, #3
 2410 016c 5DD0     		beq	.L274
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2411              		.loc 1 3158 0
 2412 016e BAF1000F 		cmp	r10, #0
 2413 0172 00F0C580 		beq	.L271
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2414              		.loc 1 3159 0
 2415 0176 2B44     		add	r3, r3, r5
 2416 0178 2363     		str	r3, [r4, #48]
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2417              		.loc 1 3161 0
 2418 017a B9F1020F 		cmp	r9, #2
 2419 017e 65D0     		beq	.L275
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 151


3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2420              		.loc 1 3161 0 is_stmt 0 discriminator 2
 2421 0180 08EB4802 		add	r2, r8, r8, lsl #1
 2422 0184 08F00103 		and	r3, r8, #1
 2423 0188 03EB5203 		add	r3, r3, r2, lsr #1
 2424              	.LVL318:
 2425              	.L244:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2426              		.loc 1 3163 0 is_stmt 1
 2427 018c 03F2FF13 		addw	r3, r3, #511
 2428              	.LVL319:
 2429 0190 B7EB532F 		cmp	r7, r3, lsr #9
 2430 0194 C0F0B680 		bcc	.L272
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
 2431              		.loc 1 3167 0
 2432 0198 4FF0FF33 		mov	r3, #-1
 2433              	.LVL320:
 2434 019c A361     		str	r3, [r4, #24]
 2435 019e 6361     		str	r3, [r4, #20]
3168:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2436              		.loc 1 3168 0
 2437 01a0 8023     		movs	r3, #128
 2438 01a2 2371     		strb	r3, [r4, #4]
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
 2439              		.loc 1 3170 0
 2440 01a4 B9F1030F 		cmp	r9, #3
 2441 01a8 53D0     		beq	.L276
 2442              	.L246:
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
 2443              		.loc 1 3191 0
 2444 01aa 84F80090 		strb	r9, [r4]
3192:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 2445              		.loc 1 3192 0
 2446 01ae 574A     		ldr	r2, .L279+4
 2447 01b0 1388     		ldrh	r3, [r2]
 2448 01b2 0133     		adds	r3, r3, #1
 2449 01b4 9BB2     		uxth	r3, r3
 2450 01b6 1380     		strh	r3, [r2]	@ movhi
 2451 01b8 E380     		strh	r3, [r4, #6]	@ movhi
3200:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2452              		.loc 1 3200 0
 2453 01ba 0025     		movs	r5, #0
 2454              	.LVL321:
 2455 01bc E561     		str	r5, [r4, #28]
3203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2456              		.loc 1 3203 0
 2457 01be 2046     		mov	r0, r4
 2458 01c0 FFF7FEFF 		bl	clear_lock
 2459              	.LVL322:
3205:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2460              		.loc 1 3205 0
 2461 01c4 2846     		mov	r0, r5
 2462 01c6 76E0     		b	.L230
 2463              	.LVL323:
 2464              	.L255:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2465              		.loc 1 3054 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 152


 2466 01c8 0020     		movs	r0, #0
 2467              	.LVL324:
 2468              	.L235:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2469              		.loc 1 3054 0 is_stmt 0 discriminator 4
 2470 01ca 04AB     		add	r3, sp, #16
 2471 01cc 03EB8503 		add	r3, r3, r5, lsl #2
 2472 01d0 43F8100C 		str	r0, [r3, #-16]
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2473              		.loc 1 3052 0 is_stmt 1 discriminator 4
 2474 01d4 0135     		adds	r5, r5, #1
 2475              	.LVL325:
 2476              	.L233:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2477              		.loc 1 3052 0 is_stmt 0 discriminator 2
 2478 01d6 032D     		cmp	r5, #3
 2479 01d8 0ED8     		bhi	.L277
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 2480              		.loc 1 3053 0 is_stmt 1
 2481 01da 04F13C00 		add	r0, r4, #60
 2482 01de 2B01     		lsls	r3, r5, #4
 2483 01e0 03F5DF73 		add	r3, r3, #446
 2484 01e4 1844     		add	r0, r0, r3
 2485              	.LVL326:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2486              		.loc 1 3054 0
 2487 01e6 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2488 01e8 002B     		cmp	r3, #0
 2489 01ea EDD0     		beq	.L255
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2490              		.loc 1 3054 0 is_stmt 0 discriminator 1
 2491 01ec 0830     		adds	r0, r0, #8
 2492              	.LVL327:
 2493 01ee FFF7FEFF 		bl	ld_dword
 2494              	.LVL328:
 2495 01f2 EAE7     		b	.L235
 2496              	.LVL329:
 2497              	.L254:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2498              		.loc 1 3052 0 is_stmt 1
 2499 01f4 0025     		movs	r5, #0
 2500              	.LVL330:
 2501 01f6 EEE7     		b	.L233
 2502              	.LVL331:
 2503              	.L277:
 2504 01f8 0025     		movs	r5, #0
 2505              	.LVL332:
 2506 01fa 0AE0     		b	.L238
 2507              	.LVL333:
 2508              	.L278:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2509              		.loc 1 3060 0 discriminator 1
 2510 01fc 3146     		mov	r1, r6
 2511 01fe 2046     		mov	r0, r4
 2512 0200 FFF7FEFF 		bl	check_fs
 2513              	.LVL334:
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 153


 2514              		.loc 1 3061 0 discriminator 1
 2515 0204 0128     		cmp	r0, #1
 2516 0206 7FF63EAF 		bls	.L234
 2517              	.LVL335:
 2518              	.L237:
 2519 020a 0135     		adds	r5, r5, #1
 2520              	.LVL336:
 2521 020c 032D     		cmp	r5, #3
 2522 020e 3FF63AAF 		bhi	.L234
 2523              	.LVL337:
 2524              	.L238:
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 2525              		.loc 1 3059 0
 2526 0212 04AB     		add	r3, sp, #16
 2527 0214 03EB8503 		add	r3, r3, r5, lsl #2
 2528 0218 53F8106C 		ldr	r6, [r3, #-16]
 2529              	.LVL338:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2530              		.loc 1 3060 0
 2531 021c 002E     		cmp	r6, #0
 2532 021e EDD1     		bne	.L278
 2533 0220 0320     		movs	r0, #3
 2534 0222 F2E7     		b	.L237
 2535              	.LVL339:
 2536              	.L267:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2537              		.loc 1 3144 0
 2538 0224 4FF00209 		mov	r9, #2
 2539              	.LVL340:
 2540 0228 8FE7     		b	.L241
 2541              	.LVL341:
 2542              	.L274:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2543              		.loc 1 3153 0
 2544 022a 04F16600 		add	r0, r4, #102
 2545 022e FFF7FEFF 		bl	ld_word
 2546              	.LVL342:
 2547 0232 0028     		cmp	r0, #0
 2548 0234 60D1     		bne	.L269
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2549              		.loc 1 3154 0
 2550 0236 BAF1000F 		cmp	r10, #0
 2551 023a 5FD1     		bne	.L270
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 2552              		.loc 1 3155 0
 2553 023c 04F16800 		add	r0, r4, #104
 2554 0240 FFF7FEFF 		bl	ld_dword
 2555              	.LVL343:
 2556 0244 2063     		str	r0, [r4, #48]
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 2557              		.loc 1 3156 0
 2558 0246 4FEA8803 		lsl	r3, r8, #2
 2559              	.LVL344:
 2560 024a 9FE7     		b	.L244
 2561              	.LVL345:
 2562              	.L275:
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 154


 2563              		.loc 1 3161 0 discriminator 1
 2564 024c 4FEA4803 		lsl	r3, r8, #1
 2565 0250 9CE7     		b	.L244
 2566              	.LVL346:
 2567              	.L276:
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
 2568              		.loc 1 3171 0
 2569 0252 04F16C00 		add	r0, r4, #108
 2570 0256 FFF7FEFF 		bl	ld_word
 2571              	.LVL347:
 2572 025a 0128     		cmp	r0, #1
 2573 025c A5D1     		bne	.L246
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
 2574              		.loc 1 3172 0
 2575 025e 711C     		adds	r1, r6, #1
 2576 0260 2046     		mov	r0, r4
 2577 0262 FFF7FEFF 		bl	move_window
 2578              	.LVL348:
 2579 0266 0028     		cmp	r0, #0
 2580 0268 9FD1     		bne	.L246
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2581              		.loc 1 3174 0
 2582 026a 0023     		movs	r3, #0
 2583 026c 2371     		strb	r3, [r4, #4]
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 2584              		.loc 1 3175 0
 2585 026e 04F23A20 		addw	r0, r4, #570
 2586 0272 FFF7FEFF 		bl	ld_word
 2587              	.LVL349:
 2588 0276 4AF65523 		movw	r3, #43605
 2589 027a 9842     		cmp	r0, r3
 2590 027c 95D1     		bne	.L246
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 2591              		.loc 1 3176 0
 2592 027e 04F13C00 		add	r0, r4, #60
 2593 0282 FFF7FEFF 		bl	ld_dword
 2594              	.LVL350:
 2595 0286 224B     		ldr	r3, .L279+8
 2596 0288 9842     		cmp	r0, r3
 2597 028a 8ED1     		bne	.L246
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
 2598              		.loc 1 3177 0
 2599 028c 04F50870 		add	r0, r4, #544
 2600 0290 FFF7FEFF 		bl	ld_dword
 2601              	.LVL351:
 2602 0294 1F4B     		ldr	r3, .L279+12
 2603 0296 9842     		cmp	r0, r3
 2604 0298 87D1     		bne	.L246
3180:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2605              		.loc 1 3180 0
 2606 029a 04F50970 		add	r0, r4, #548
 2607 029e FFF7FEFF 		bl	ld_dword
 2608              	.LVL352:
 2609 02a2 A061     		str	r0, [r4, #24]
3183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2610              		.loc 1 3183 0
 2611 02a4 04F50A70 		add	r0, r4, #552
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 155


 2612 02a8 FFF7FEFF 		bl	ld_dword
 2613              	.LVL353:
 2614 02ac 6061     		str	r0, [r4, #20]
 2615 02ae 7CE7     		b	.L246
 2616              	.LVL354:
 2617              	.L247:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2618              		.loc 1 3011 0
 2619 02b0 0B20     		movs	r0, #11
 2620              	.LVL355:
 2621 02b2 00E0     		b	.L230
 2622              	.LVL356:
 2623              	.L248:
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2624              		.loc 1 3015 0
 2625 02b4 0C20     		movs	r0, #12
 2626              	.LVL357:
 2627              	.L230:
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2628              		.loc 1 3206 0
 2629 02b6 04B0     		add	sp, sp, #16
 2630              	.LCFI33:
 2631              		.cfi_remember_state
 2632              		.cfi_def_cfa_offset 32
 2633              		@ sp needed
 2634 02b8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2635              	.LVL358:
 2636              	.L249:
 2637              	.LCFI34:
 2638              		.cfi_restore_state
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
 2639              		.loc 1 3017 0
 2640 02bc 0F20     		movs	r0, #15
 2641 02be FAE7     		b	.L230
 2642              	.LVL359:
 2643              	.L250:
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2644              		.loc 1 3027 0
 2645 02c0 0020     		movs	r0, #0
 2646              	.LVL360:
 2647 02c2 F8E7     		b	.L230
 2648              	.LVL361:
 2649              	.L251:
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2650              		.loc 1 3025 0
 2651 02c4 0A20     		movs	r0, #10
 2652              	.LVL362:
 2653 02c6 F6E7     		b	.L230
 2654              	.LVL363:
 2655              	.L252:
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2656              		.loc 1 3038 0
 2657 02c8 0320     		movs	r0, #3
 2658              	.LVL364:
 2659 02ca F4E7     		b	.L230
 2660              	.LVL365:
 2661              	.L253:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 156


3041:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2662              		.loc 1 3041 0
 2663 02cc 0A20     		movs	r0, #10
 2664              	.LVL366:
 2665 02ce F2E7     		b	.L230
 2666              	.LVL367:
 2667              	.L257:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2668              		.loc 1 3063 0
 2669 02d0 0120     		movs	r0, #1
 2670              	.LVL368:
 2671 02d2 F0E7     		b	.L230
 2672              	.LVL369:
 2673              	.L258:
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2674              		.loc 1 3064 0
 2675 02d4 0D20     		movs	r0, #13
 2676              	.LVL370:
 2677 02d6 EEE7     		b	.L230
 2678              	.L259:
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2679              		.loc 1 3116 0
 2680 02d8 0D20     		movs	r0, #13
 2681 02da ECE7     		b	.L230
 2682              	.LVL371:
 2683              	.L260:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 2684              		.loc 1 3123 0
 2685 02dc 0D20     		movs	r0, #13
 2686              	.LVL372:
 2687 02de EAE7     		b	.L230
 2688              	.LVL373:
 2689              	.L261:
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2690              		.loc 1 3127 0
 2691 02e0 0D20     		movs	r0, #13
 2692 02e2 E8E7     		b	.L230
 2693              	.L262:
 2694 02e4 0D20     		movs	r0, #13
 2695 02e6 E6E7     		b	.L230
 2696              	.L263:
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2697              		.loc 1 3130 0
 2698 02e8 0D20     		movs	r0, #13
 2699 02ea E4E7     		b	.L230
 2700              	.LVL374:
 2701              	.L264:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2702              		.loc 1 3136 0
 2703 02ec 0D20     		movs	r0, #13
 2704              	.LVL375:
 2705 02ee E2E7     		b	.L230
 2706              	.LVL376:
 2707              	.L265:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2708              		.loc 1 3140 0
 2709 02f0 0D20     		movs	r0, #13
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 157


 2710              	.LVL377:
 2711 02f2 E0E7     		b	.L230
 2712              	.LVL378:
 2713              	.L266:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2714              		.loc 1 3142 0
 2715 02f4 0D20     		movs	r0, #13
 2716              	.LVL379:
 2717 02f6 DEE7     		b	.L230
 2718              	.LVL380:
 2719              	.L269:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2720              		.loc 1 3153 0
 2721 02f8 0D20     		movs	r0, #13
 2722 02fa DCE7     		b	.L230
 2723              	.L270:
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2724              		.loc 1 3154 0
 2725 02fc 0D20     		movs	r0, #13
 2726 02fe DAE7     		b	.L230
 2727              	.LVL381:
 2728              	.L271:
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2729              		.loc 1 3158 0
 2730 0300 0D20     		movs	r0, #13
 2731 0302 D8E7     		b	.L230
 2732              	.LVL382:
 2733              	.L272:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2734              		.loc 1 3163 0
 2735 0304 0D20     		movs	r0, #13
 2736 0306 D6E7     		b	.L230
 2737              	.L280:
 2738              		.align	2
 2739              	.L279:
 2740 0308 00000000 		.word	.LANCHOR4
 2741 030c 00000000 		.word	.LANCHOR5
 2742 0310 52526141 		.word	1096897106
 2743 0314 72724161 		.word	1631679090
 2744              		.cfi_endproc
 2745              	.LFE188:
 2747              		.section	.text.put_fat,"ax",%progbits
 2748              		.align	1
 2749              		.syntax unified
 2750              		.thumb
 2751              		.thumb_func
 2752              		.fpu fpv5-sp-d16
 2754              	put_fat:
 2755              	.LFB163:
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 2756              		.loc 1 1086 0
 2757              		.cfi_startproc
 2758              		@ args = 0, pretend = 0, frame = 0
 2759              		@ frame_needed = 0, uses_anonymous_args = 0
 2760              	.LVL383:
 2761 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2762              	.LCFI35:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 158


 2763              		.cfi_def_cfa_offset 32
 2764              		.cfi_offset 4, -32
 2765              		.cfi_offset 5, -28
 2766              		.cfi_offset 6, -24
 2767              		.cfi_offset 7, -20
 2768              		.cfi_offset 8, -16
 2769              		.cfi_offset 9, -12
 2770              		.cfi_offset 10, -8
 2771              		.cfi_offset 14, -4
 2772              	.LVL384:
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2773              		.loc 1 1091 0
 2774 0004 0129     		cmp	r1, #1
 2775 0006 7AD9     		bls	.L290
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2776              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2777 0008 036A     		ldr	r3, [r0, #32]
 2778 000a 8B42     		cmp	r3, r1
 2779 000c 79D9     		bls	.L291
 2780 000e 1746     		mov	r7, r2
 2781 0010 0C46     		mov	r4, r1
 2782 0012 0646     		mov	r6, r0
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
 2783              		.loc 1 1092 0 is_stmt 1
 2784 0014 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2785 0016 022B     		cmp	r3, #2
 2786 0018 43D0     		beq	.L283
 2787 001a 032B     		cmp	r3, #3
 2788 001c 54D0     		beq	.L284
 2789 001e 012B     		cmp	r3, #1
 2790 0020 01D0     		beq	.L295
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2791              		.loc 1 1089 0
 2792 0022 0225     		movs	r5, #2
 2793 0024 6EE0     		b	.L282
 2794              	.L295:
 2795              	.LVL385:
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2796              		.loc 1 1094 0
 2797 0026 01EB5108 		add	r8, r1, r1, lsr #1
 2798              	.LVL386:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2799              		.loc 1 1095 0
 2800 002a C16A     		ldr	r1, [r0, #44]
 2801              	.LVL387:
 2802 002c 01EB5821 		add	r1, r1, r8, lsr #9
 2803 0030 FFF7FEFF 		bl	move_window
 2804              	.LVL388:
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
 2805              		.loc 1 1096 0
 2806 0034 0546     		mov	r5, r0
 2807 0036 0028     		cmp	r0, #0
 2808 0038 64D1     		bne	.L282
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2809              		.loc 1 1097 0
 2810 003a 06F13C0A 		add	r10, r6, #60
 2811 003e 08F10109 		add	r9, r8, #1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 159


 2812              	.LVL389:
 2813 0042 C8F30808 		ubfx	r8, r8, #0, #9
 2814              	.LVL390:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2815              		.loc 1 1098 0
 2816 0046 14F00104 		ands	r4, r4, #1
 2817              	.LVL391:
 2818 004a 1FD0     		beq	.L286
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2819              		.loc 1 1098 0 is_stmt 0 discriminator 1
 2820 004c 1AF90830 		ldrsb	r3, [r10, r8]
 2821 0050 03F00F03 		and	r3, r3, #15
 2822 0054 3A01     		lsls	r2, r7, #4
 2823 0056 02F47F62 		and	r2, r2, #4080
 2824 005a 1343     		orrs	r3, r3, r2
 2825 005c DBB2     		uxtb	r3, r3
 2826              	.L287:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2827              		.loc 1 1098 0 discriminator 4
 2828 005e 0AF80830 		strb	r3, [r10, r8]
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2829              		.loc 1 1099 0 is_stmt 1 discriminator 4
 2830 0062 0123     		movs	r3, #1
 2831 0064 F370     		strb	r3, [r6, #3]
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2832              		.loc 1 1100 0 discriminator 4
 2833 0066 F16A     		ldr	r1, [r6, #44]
 2834 0068 01EB5921 		add	r1, r1, r9, lsr #9
 2835 006c 3046     		mov	r0, r6
 2836              	.LVL392:
 2837 006e FFF7FEFF 		bl	move_window
 2838              	.LVL393:
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
 2839              		.loc 1 1101 0 discriminator 4
 2840 0072 0546     		mov	r5, r0
 2841 0074 0028     		cmp	r0, #0
 2842 0076 45D1     		bne	.L282
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 2843              		.loc 1 1102 0
 2844 0078 C9F30809 		ubfx	r9, r9, #0, #9
 2845              	.LVL394:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2846              		.loc 1 1103 0
 2847 007c 44B1     		cbz	r4, .L288
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2848              		.loc 1 1103 0 is_stmt 0 discriminator 1
 2849 007e C7F30712 		ubfx	r2, r7, #4, #8
 2850              	.LVL395:
 2851              	.L289:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2852              		.loc 1 1103 0 discriminator 4
 2853 0082 0AF80920 		strb	r2, [r10, r9]
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2854              		.loc 1 1104 0 is_stmt 1 discriminator 4
 2855 0086 0123     		movs	r3, #1
 2856 0088 F370     		strb	r3, [r6, #3]
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 160


 2857              		.loc 1 1105 0 discriminator 4
 2858 008a 3BE0     		b	.L282
 2859              	.LVL396:
 2860              	.L286:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2861              		.loc 1 1098 0 discriminator 2
 2862 008c FBB2     		uxtb	r3, r7
 2863 008e E6E7     		b	.L287
 2864              	.LVL397:
 2865              	.L288:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2866              		.loc 1 1103 0 discriminator 2
 2867 0090 1AF90920 		ldrsb	r2, [r10, r9]
 2868 0094 22F00F02 		bic	r2, r2, #15
 2869 0098 C7F30327 		ubfx	r7, r7, #8, #4
 2870              	.LVL398:
 2871 009c 3A43     		orrs	r2, r2, r7
 2872 009e D2B2     		uxtb	r2, r2
 2873 00a0 EFE7     		b	.L289
 2874              	.LVL399:
 2875              	.L283:
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2876              		.loc 1 1108 0
 2877 00a2 C16A     		ldr	r1, [r0, #44]
 2878              	.LVL400:
 2879 00a4 01EB1421 		add	r1, r1, r4, lsr #8
 2880 00a8 FFF7FEFF 		bl	move_window
 2881              	.LVL401:
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
 2882              		.loc 1 1109 0
 2883 00ac 0546     		mov	r5, r0
 2884 00ae 48BB     		cbnz	r0, .L282
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2885              		.loc 1 1110 0
 2886 00b0 06F13C00 		add	r0, r6, #60
 2887              	.LVL402:
 2888 00b4 6400     		lsls	r4, r4, #1
 2889              	.LVL403:
 2890 00b6 04F4FF74 		and	r4, r4, #510
 2891 00ba B9B2     		uxth	r1, r7
 2892 00bc 2044     		add	r0, r0, r4
 2893 00be FFF7FEFF 		bl	st_word
 2894              	.LVL404:
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2895              		.loc 1 1111 0
 2896 00c2 0123     		movs	r3, #1
 2897 00c4 F370     		strb	r3, [r6, #3]
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2898              		.loc 1 1112 0
 2899 00c6 1DE0     		b	.L282
 2900              	.LVL405:
 2901              	.L284:
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2902              		.loc 1 1118 0
 2903 00c8 C16A     		ldr	r1, [r0, #44]
 2904              	.LVL406:
 2905 00ca 01EBD411 		add	r1, r1, r4, lsr #7
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 161


 2906 00ce FFF7FEFF 		bl	move_window
 2907              	.LVL407:
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2908              		.loc 1 1119 0
 2909 00d2 0546     		mov	r5, r0
 2910 00d4 B0B9     		cbnz	r0, .L282
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2911              		.loc 1 1121 0
 2912 00d6 27F07047 		bic	r7, r7, #-268435456
 2913              	.LVL408:
 2914 00da 06F13C03 		add	r3, r6, #60
 2915 00de A100     		lsls	r1, r4, #2
 2916 00e0 01F4FE71 		and	r1, r1, #508
 2917 00e4 5C18     		adds	r4, r3, r1
 2918              	.LVL409:
 2919 00e6 2046     		mov	r0, r4
 2920              	.LVL410:
 2921 00e8 FFF7FEFF 		bl	ld_dword
 2922              	.LVL411:
 2923 00ec 00F07041 		and	r1, r0, #-268435456
 2924              	.LVL412:
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2925              		.loc 1 1123 0
 2926 00f0 3943     		orrs	r1, r1, r7
 2927              	.LVL413:
 2928 00f2 2046     		mov	r0, r4
 2929 00f4 FFF7FEFF 		bl	st_dword
 2930              	.LVL414:
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2931              		.loc 1 1124 0
 2932 00f8 0123     		movs	r3, #1
 2933 00fa F370     		strb	r3, [r6, #3]
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2934              		.loc 1 1125 0
 2935 00fc 02E0     		b	.L282
 2936              	.LVL415:
 2937              	.L290:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2938              		.loc 1 1089 0
 2939 00fe 0225     		movs	r5, #2
 2940 0100 00E0     		b	.L282
 2941              	.L291:
 2942 0102 0225     		movs	r5, #2
 2943              	.LVL416:
 2944              	.L282:
1129:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2945              		.loc 1 1129 0
 2946 0104 2846     		mov	r0, r5
 2947 0106 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2948              		.cfi_endproc
 2949              	.LFE163:
 2951              		.section	.text.get_fat,"ax",%progbits
 2952              		.align	1
 2953              		.syntax unified
 2954              		.thumb
 2955              		.thumb_func
 2956              		.fpu fpv5-sp-d16
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 162


 2958              	get_fat:
 2959              	.LFB162:
1005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 2960              		.loc 1 1005 0
 2961              		.cfi_startproc
 2962              		@ args = 0, pretend = 0, frame = 0
 2963              		@ frame_needed = 0, uses_anonymous_args = 0
 2964              	.LVL417:
 2965 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2966              	.LCFI36:
 2967              		.cfi_def_cfa_offset 24
 2968              		.cfi_offset 3, -24
 2969              		.cfi_offset 4, -20
 2970              		.cfi_offset 5, -16
 2971              		.cfi_offset 6, -12
 2972              		.cfi_offset 7, -8
 2973              		.cfi_offset 14, -4
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2974              		.loc 1 1008 0
 2975 0002 0668     		ldr	r6, [r0]
 2976              	.LVL418:
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2977              		.loc 1 1011 0
 2978 0004 0129     		cmp	r1, #1
 2979 0006 53D9     		bls	.L302
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2980              		.loc 1 1011 0 is_stmt 0 discriminator 1
 2981 0008 336A     		ldr	r3, [r6, #32]
 2982 000a 8B42     		cmp	r3, r1
 2983 000c 52D9     		bls	.L303
 2984 000e 0C46     		mov	r4, r1
 2985              	.LVL419:
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 2986              		.loc 1 1017 0 is_stmt 1
 2987 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2988 0012 022B     		cmp	r3, #2
 2989 0014 2BD0     		beq	.L298
 2990 0016 032B     		cmp	r3, #3
 2991 0018 39D0     		beq	.L299
 2992 001a 012B     		cmp	r3, #1
 2993 001c 01D0     		beq	.L311
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2994              		.loc 1 1065 0
 2995 001e 0120     		movs	r0, #1
 2996              	.LVL420:
 2997 0020 47E0     		b	.L296
 2998              	.LVL421:
 2999              	.L311:
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 3000              		.loc 1 1019 0
 3001 0022 01EB5105 		add	r5, r1, r1, lsr #1
 3002              	.LVL422:
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
 3003              		.loc 1 1020 0
 3004 0026 F16A     		ldr	r1, [r6, #44]
 3005              	.LVL423:
 3006 0028 01EB5521 		add	r1, r1, r5, lsr #9
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 163


 3007 002c 3046     		mov	r0, r6
 3008              	.LVL424:
 3009 002e FFF7FEFF 		bl	move_window
 3010              	.LVL425:
 3011 0032 0028     		cmp	r0, #0
 3012 0034 40D1     		bne	.L305
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 3013              		.loc 1 1021 0
 3014 0036 6F1C     		adds	r7, r5, #1
 3015              	.LVL426:
 3016 0038 C5F30805 		ubfx	r5, r5, #0, #9
 3017 003c 3544     		add	r5, r5, r6
 3018 003e 95F83C50 		ldrb	r5, [r5, #60]	@ zero_extendqisi2
 3019              	.LVL427:
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
 3020              		.loc 1 1022 0
 3021 0042 F16A     		ldr	r1, [r6, #44]
 3022 0044 01EB5721 		add	r1, r1, r7, lsr #9
 3023 0048 3046     		mov	r0, r6
 3024 004a FFF7FEFF 		bl	move_window
 3025              	.LVL428:
 3026 004e B0BB     		cbnz	r0, .L306
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 3027              		.loc 1 1023 0
 3028 0050 C7F30803 		ubfx	r3, r7, #0, #9
 3029 0054 3344     		add	r3, r3, r6
 3030 0056 93F83C00 		ldrb	r0, [r3, #60]	@ zero_extendqisi2
 3031 005a 45EA0020 		orr	r0, r5, r0, lsl #8
 3032              	.LVL429:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3033              		.loc 1 1024 0
 3034 005e 14F0010F 		tst	r4, #1
 3035 0062 01D0     		beq	.L301
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3036              		.loc 1 1024 0 is_stmt 0 discriminator 1
 3037 0064 0009     		lsrs	r0, r0, #4
 3038              	.LVL430:
 3039 0066 24E0     		b	.L296
 3040              	.LVL431:
 3041              	.L301:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3042              		.loc 1 1024 0 discriminator 2
 3043 0068 C0F30B00 		ubfx	r0, r0, #0, #12
 3044              	.LVL432:
 3045 006c 21E0     		b	.L296
 3046              	.LVL433:
 3047              	.L298:
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
 3048              		.loc 1 1028 0 is_stmt 1
 3049 006e F16A     		ldr	r1, [r6, #44]
 3050              	.LVL434:
 3051 0070 01EB1421 		add	r1, r1, r4, lsr #8
 3052 0074 3046     		mov	r0, r6
 3053              	.LVL435:
 3054 0076 FFF7FEFF 		bl	move_window
 3055              	.LVL436:
 3056 007a 18BB     		cbnz	r0, .L307
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 164


1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3057              		.loc 1 1029 0
 3058 007c 06F13C00 		add	r0, r6, #60
 3059 0080 6100     		lsls	r1, r4, #1
 3060 0082 01F4FF71 		and	r1, r1, #510
 3061 0086 0844     		add	r0, r0, r1
 3062 0088 FFF7FEFF 		bl	ld_word
 3063              	.LVL437:
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3064              		.loc 1 1030 0
 3065 008c 11E0     		b	.L296
 3066              	.LVL438:
 3067              	.L299:
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 3068              		.loc 1 1033 0
 3069 008e F16A     		ldr	r1, [r6, #44]
 3070              	.LVL439:
 3071 0090 01EBD411 		add	r1, r1, r4, lsr #7
 3072 0094 3046     		mov	r0, r6
 3073              	.LVL440:
 3074 0096 FFF7FEFF 		bl	move_window
 3075              	.LVL441:
 3076 009a B0B9     		cbnz	r0, .L308
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3077              		.loc 1 1034 0
 3078 009c 3C36     		adds	r6, r6, #60
 3079              	.LVL442:
 3080 009e A100     		lsls	r1, r4, #2
 3081 00a0 01F4FE70 		and	r0, r1, #508
 3082 00a4 3044     		add	r0, r0, r6
 3083 00a6 FFF7FEFF 		bl	ld_dword
 3084              	.LVL443:
 3085 00aa 20F07040 		bic	r0, r0, #-268435456
 3086              	.LVL444:
1035:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3087              		.loc 1 1035 0
 3088 00ae 00E0     		b	.L296
 3089              	.LVL445:
 3090              	.L302:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3091              		.loc 1 1012 0
 3092 00b0 0120     		movs	r0, #1
 3093              	.LVL446:
 3094              	.L296:
1070:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3095              		.loc 1 1070 0
 3096 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3097              	.LVL447:
 3098              	.L303:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3099              		.loc 1 1012 0
 3100 00b4 0120     		movs	r0, #1
 3101              	.LVL448:
 3102 00b6 FCE7     		b	.L296
 3103              	.LVL449:
 3104              	.L305:
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 165


 3105              		.loc 1 1015 0
 3106 00b8 4FF0FF30 		mov	r0, #-1
 3107 00bc F9E7     		b	.L296
 3108              	.LVL450:
 3109              	.L306:
 3110 00be 4FF0FF30 		mov	r0, #-1
 3111 00c2 F6E7     		b	.L296
 3112              	.LVL451:
 3113              	.L307:
 3114 00c4 4FF0FF30 		mov	r0, #-1
 3115 00c8 F3E7     		b	.L296
 3116              	.L308:
 3117 00ca 4FF0FF30 		mov	r0, #-1
1069:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3118              		.loc 1 1069 0
 3119 00ce F0E7     		b	.L296
 3120              		.cfi_endproc
 3121              	.LFE162:
 3123              		.section	.text.dir_sdi,"ax",%progbits
 3124              		.align	1
 3125              		.syntax unified
 3126              		.thumb
 3127              		.thumb_func
 3128              		.fpu fpv5-sp-d16
 3130              	dir_sdi:
 3131              	.LFB167:
1474:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
 3132              		.loc 1 1474 0
 3133              		.cfi_startproc
 3134              		@ args = 0, pretend = 0, frame = 0
 3135              		@ frame_needed = 0, uses_anonymous_args = 0
 3136              	.LVL452:
 3137 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3138              	.LCFI37:
 3139              		.cfi_def_cfa_offset 24
 3140              		.cfi_offset 4, -24
 3141              		.cfi_offset 5, -20
 3142              		.cfi_offset 6, -16
 3143              		.cfi_offset 7, -12
 3144              		.cfi_offset 8, -8
 3145              		.cfi_offset 14, -4
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3146              		.loc 1 1476 0
 3147 0004 0768     		ldr	r7, [r0]
 3148              	.LVL453:
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 3149              		.loc 1 1479 0
 3150 0006 B1F5001F 		cmp	r1, #2097152
 3151 000a 3BD2     		bcs	.L319
 3152 000c 0646     		mov	r6, r0
 3153 000e 0D46     		mov	r5, r1
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 3154              		.loc 1 1479 0 is_stmt 0 discriminator 1
 3155 0010 11F01F0F 		tst	r1, #31
 3156 0014 39D1     		bne	.L320
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 3157              		.loc 1 1482 0 is_stmt 1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 166


 3158 0016 7161     		str	r1, [r6, #20]
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 3159              		.loc 1 1483 0
 3160 0018 8468     		ldr	r4, [r0, #8]
 3161              	.LVL454:
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 3162              		.loc 1 1484 0
 3163 001a 1CB9     		cbnz	r4, .L314
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 3164              		.loc 1 1484 0 is_stmt 0 discriminator 1
 3165 001c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3166 001e 022B     		cmp	r3, #2
 3167 0020 00D9     		bls	.L314
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 3168              		.loc 1 1485 0 is_stmt 1
 3169 0022 3C6B     		ldr	r4, [r7, #48]
 3170              	.LVL455:
 3171              	.L314:
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 3172              		.loc 1 1489 0
 3173 0024 94B9     		cbnz	r4, .L315
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 3174              		.loc 1 1490 0
 3175 0026 3B89     		ldrh	r3, [r7, #8]
 3176 0028 B3EB551F 		cmp	r3, r5, lsr #5
 3177 002c 2FD9     		bls	.L321
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3178              		.loc 1 1491 0
 3179 002e 3B6B     		ldr	r3, [r7, #48]
 3180 0030 F361     		str	r3, [r6, #28]
 3181              	.LVL456:
 3182              	.L316:
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
 3183              		.loc 1 1503 0
 3184 0032 B461     		str	r4, [r6, #24]
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 3185              		.loc 1 1504 0
 3186 0034 F369     		ldr	r3, [r6, #28]
 3187 0036 93B3     		cbz	r3, .L325
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 3188              		.loc 1 1505 0
 3189 0038 03EB5523 		add	r3, r3, r5, lsr #9
 3190 003c F361     		str	r3, [r6, #28]
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3191              		.loc 1 1506 0
 3192 003e 3C37     		adds	r7, r7, #60
 3193              	.LVL457:
 3194 0040 C5F30805 		ubfx	r5, r5, #0, #9
 3195              	.LVL458:
 3196 0044 3D44     		add	r5, r5, r7
 3197 0046 3562     		str	r5, [r6, #32]
1508:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3198              		.loc 1 1508 0
 3199 0048 0020     		movs	r0, #0
 3200 004a 1CE0     		b	.L313
 3201              	.LVL459:
 3202              	.L315:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 167


1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
 3203              		.loc 1 1494 0
 3204 004c B7F80A80 		ldrh	r8, [r7, #10]
 3205 0050 4FEA4828 		lsl	r8, r8, #9
 3206              	.LVL460:
 3207              	.L317:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 3208              		.loc 1 1495 0
 3209 0054 4545     		cmp	r5, r8
 3210 0056 0FD3     		bcc	.L327
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3211              		.loc 1 1496 0
 3212 0058 2146     		mov	r1, r4
 3213 005a 3046     		mov	r0, r6
 3214 005c FFF7FEFF 		bl	get_fat
 3215              	.LVL461:
 3216 0060 0446     		mov	r4, r0
 3217              	.LVL462:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 3218              		.loc 1 1497 0
 3219 0062 B0F1FF3F 		cmp	r0, #-1
 3220 0066 14D0     		beq	.L322
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 3221              		.loc 1 1498 0
 3222 0068 0128     		cmp	r0, #1
 3223 006a 14D9     		bls	.L323
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 3224              		.loc 1 1498 0 is_stmt 0 discriminator 2
 3225 006c 3B6A     		ldr	r3, [r7, #32]
 3226 006e 8342     		cmp	r3, r0
 3227 0070 13D9     		bls	.L324
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3228              		.loc 1 1499 0 is_stmt 1
 3229 0072 A5EB0805 		sub	r5, r5, r8
 3230              	.LVL463:
 3231 0076 EDE7     		b	.L317
 3232              	.LVL464:
 3233              	.L327:
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3234              		.loc 1 1501 0
 3235 0078 2146     		mov	r1, r4
 3236 007a 3846     		mov	r0, r7
 3237 007c FFF7FEFF 		bl	clust2sect
 3238              	.LVL465:
 3239 0080 F061     		str	r0, [r6, #28]
 3240 0082 D6E7     		b	.L316
 3241              	.LVL466:
 3242              	.L319:
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3243              		.loc 1 1480 0
 3244 0084 0220     		movs	r0, #2
 3245              	.LVL467:
 3246              	.L313:
1509:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3247              		.loc 1 1509 0
 3248 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3249              	.LVL468:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 168


 3250              	.L320:
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3251              		.loc 1 1480 0
 3252 008a 0220     		movs	r0, #2
 3253              	.LVL469:
 3254 008c FBE7     		b	.L313
 3255              	.LVL470:
 3256              	.L321:
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 3257              		.loc 1 1490 0
 3258 008e 0220     		movs	r0, #2
 3259              	.LVL471:
 3260 0090 F9E7     		b	.L313
 3261              	.LVL472:
 3262              	.L322:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 3263              		.loc 1 1497 0
 3264 0092 0120     		movs	r0, #1
 3265              	.LVL473:
 3266 0094 F7E7     		b	.L313
 3267              	.LVL474:
 3268              	.L323:
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 3269              		.loc 1 1498 0
 3270 0096 0220     		movs	r0, #2
 3271              	.LVL475:
 3272 0098 F5E7     		b	.L313
 3273              	.LVL476:
 3274              	.L324:
 3275 009a 0220     		movs	r0, #2
 3276              	.LVL477:
 3277 009c F3E7     		b	.L313
 3278              	.LVL478:
 3279              	.L325:
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 3280              		.loc 1 1504 0
 3281 009e 0220     		movs	r0, #2
 3282 00a0 F1E7     		b	.L313
 3283              		.cfi_endproc
 3284              	.LFE167:
 3286              		.section	.text.create_chain,"ax",%progbits
 3287              		.align	1
 3288              		.syntax unified
 3289              		.thumb
 3290              		.thumb_func
 3291              		.fpu fpv5-sp-d16
 3293              	create_chain:
 3294              	.LFB165:
1355:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
 3295              		.loc 1 1355 0
 3296              		.cfi_startproc
 3297              		@ args = 0, pretend = 0, frame = 0
 3298              		@ frame_needed = 0, uses_anonymous_args = 0
 3299              	.LVL479:
 3300 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3301              	.LCFI38:
 3302              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 169


 3303              		.cfi_offset 4, -24
 3304              		.cfi_offset 5, -20
 3305              		.cfi_offset 6, -16
 3306              		.cfi_offset 7, -12
 3307              		.cfi_offset 8, -8
 3308              		.cfi_offset 14, -4
 3309 0004 0746     		mov	r7, r0
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3310              		.loc 1 1358 0
 3311 0006 0668     		ldr	r6, [r0]
 3312              	.LVL480:
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
 3313              		.loc 1 1361 0
 3314 0008 8846     		mov	r8, r1
 3315 000a 31B9     		cbnz	r1, .L329
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 3316              		.loc 1 1362 0
 3317 000c 7569     		ldr	r5, [r6, #20]
 3318              	.LVL481:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3319              		.loc 1 1363 0
 3320 000e 8DB1     		cbz	r5, .L338
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3321              		.loc 1 1363 0 is_stmt 0 discriminator 2
 3322 0010 336A     		ldr	r3, [r6, #32]
 3323 0012 AB42     		cmp	r3, r5
 3324 0014 0FD8     		bhi	.L330
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3325              		.loc 1 1363 0
 3326 0016 0125     		movs	r5, #1
 3327              	.LVL482:
 3328 0018 0DE0     		b	.L330
 3329              	.LVL483:
 3330              	.L329:
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
 3331              		.loc 1 1366 0 is_stmt 1
 3332 001a FFF7FEFF 		bl	get_fat
 3333              	.LVL484:
 3334 001e 0346     		mov	r3, r0
 3335              	.LVL485:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3336              		.loc 1 1367 0
 3337 0020 0128     		cmp	r0, #1
 3338 0022 4CD9     		bls	.L340
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 3339              		.loc 1 1368 0
 3340 0024 B0F1FF3F 		cmp	r0, #-1
 3341 0028 4ED0     		beq	.L328
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
 3342              		.loc 1 1369 0
 3343 002a 326A     		ldr	r2, [r6, #32]
 3344 002c 8242     		cmp	r2, r0
 3345 002e 4BD8     		bhi	.L328
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3346              		.loc 1 1370 0
 3347 0030 4546     		mov	r5, r8
 3348 0032 00E0     		b	.L330
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 170


 3349              	.LVL486:
 3350              	.L338:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3351              		.loc 1 1363 0
 3352 0034 0125     		movs	r5, #1
 3353              	.LVL487:
 3354              	.L330:
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
 3355              		.loc 1 1400 0
 3356 0036 2C46     		mov	r4, r5
 3357 0038 0CE0     		b	.L334
 3358              	.LVL488:
 3359              	.L332:
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
 3360              		.loc 1 1407 0
 3361 003a 2146     		mov	r1, r4
 3362 003c 3846     		mov	r0, r7
 3363 003e FFF7FEFF 		bl	get_fat
 3364              	.LVL489:
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 3365              		.loc 1 1408 0
 3366 0042 0346     		mov	r3, r0
 3367 0044 70B1     		cbz	r0, .L333
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 3368              		.loc 1 1409 0
 3369 0046 B0F1FF3F 		cmp	r0, #-1
 3370 004a 18BF     		it	ne
 3371 004c 0128     		cmpne	r0, #1
 3372 004e 3BD0     		beq	.L328
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3373              		.loc 1 1410 0
 3374 0050 AC42     		cmp	r4, r5
 3375 0052 38D0     		beq	.L345
 3376              	.LVL490:
 3377              	.L334:
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 3378              		.loc 1 1402 0
 3379 0054 0134     		adds	r4, r4, #1
 3380              	.LVL491:
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
 3381              		.loc 1 1403 0
 3382 0056 336A     		ldr	r3, [r6, #32]
 3383 0058 A342     		cmp	r3, r4
 3384 005a EED8     		bhi	.L332
 3385              	.LVL492:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3386              		.loc 1 1405 0
 3387 005c 012D     		cmp	r5, #1
 3388 005e 30D9     		bls	.L341
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
 3389              		.loc 1 1404 0
 3390 0060 0224     		movs	r4, #2
 3391 0062 EAE7     		b	.L332
 3392              	.LVL493:
 3393              	.L333:
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
 3394              		.loc 1 1412 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 171


 3395 0064 4FF0FF32 		mov	r2, #-1
 3396 0068 2146     		mov	r1, r4
 3397 006a 3046     		mov	r0, r6
 3398              	.LVL494:
 3399 006c FFF7FEFF 		bl	put_fat
 3400              	.LVL495:
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 3401              		.loc 1 1413 0
 3402 0070 0246     		mov	r2, r0
 3403 0072 18F10003 		adds	r3, r8, #0
 3404 0076 18BF     		it	ne
 3405 0078 0123     		movne	r3, #1
 3406 007a 0028     		cmp	r0, #0
 3407 007c 0CBF     		ite	eq
 3408 007e 1846     		moveq	r0, r3
 3409 0080 0020     		movne	r0, #0
 3410              	.LVL496:
 3411 0082 70B9     		cbnz	r0, .L346
 3412              	.L335:
 3413              	.LVL497:
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
 3414              		.loc 1 1418 0
 3415 0084 A2B9     		cbnz	r2, .L336
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 3416              		.loc 1 1419 0
 3417 0086 7461     		str	r4, [r6, #20]
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 3418              		.loc 1 1420 0
 3419 0088 B269     		ldr	r2, [r6, #24]
 3420              	.LVL498:
 3421 008a 336A     		ldr	r3, [r6, #32]
 3422 008c 023B     		subs	r3, r3, #2
 3423 008e 9A42     		cmp	r2, r3
 3424 0090 01D8     		bhi	.L337
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 3425              		.loc 1 1420 0 is_stmt 0 discriminator 1
 3426 0092 013A     		subs	r2, r2, #1
 3427 0094 B261     		str	r2, [r6, #24]
 3428              	.L337:
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 3429              		.loc 1 1421 0 is_stmt 1
 3430 0096 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 3431 0098 43F00103 		orr	r3, r3, #1
 3432 009c 3371     		strb	r3, [r6, #4]
 3433 009e 2346     		mov	r3, r4
 3434 00a0 12E0     		b	.L328
 3435              	.L346:
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3436              		.loc 1 1414 0
 3437 00a2 2246     		mov	r2, r4
 3438 00a4 4146     		mov	r1, r8
 3439 00a6 3046     		mov	r0, r6
 3440 00a8 FFF7FEFF 		bl	put_fat
 3441              	.LVL499:
 3442 00ac 0246     		mov	r2, r0
 3443              	.LVL500:
 3444 00ae E9E7     		b	.L335
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 172


 3445              	.L336:
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3446              		.loc 1 1423 0
 3447 00b0 012A     		cmp	r2, #1
 3448 00b2 01D0     		beq	.L347
 3449 00b4 0123     		movs	r3, #1
 3450 00b6 07E0     		b	.L328
 3451              	.L347:
 3452 00b8 4FF0FF33 		mov	r3, #-1
 3453 00bc 04E0     		b	.L328
 3454              	.LVL501:
 3455              	.L340:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3456              		.loc 1 1367 0
 3457 00be 0123     		movs	r3, #1
 3458 00c0 02E0     		b	.L328
 3459              	.LVL502:
 3460              	.L341:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3461              		.loc 1 1405 0
 3462 00c2 0023     		movs	r3, #0
 3463 00c4 00E0     		b	.L328
 3464              	.LVL503:
 3465              	.L345:
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3466              		.loc 1 1410 0
 3467 00c6 0023     		movs	r3, #0
 3468              	.LVL504:
 3469              	.L328:
1427:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3470              		.loc 1 1427 0
 3471 00c8 1846     		mov	r0, r3
 3472 00ca BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3473              		.cfi_endproc
 3474              	.LFE165:
 3476              		.section	.text.remove_chain,"ax",%progbits
 3477              		.align	1
 3478              		.syntax unified
 3479              		.thumb
 3480              		.thumb_func
 3481              		.fpu fpv5-sp-d16
 3483              	remove_chain:
 3484              	.LFB164:
1276:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 3485              		.loc 1 1276 0
 3486              		.cfi_startproc
 3487              		@ args = 0, pretend = 0, frame = 0
 3488              		@ frame_needed = 0, uses_anonymous_args = 0
 3489              	.LVL505:
 3490 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3491              	.LCFI39:
 3492              		.cfi_def_cfa_offset 24
 3493              		.cfi_offset 3, -24
 3494              		.cfi_offset 4, -20
 3495              		.cfi_offset 5, -16
 3496              		.cfi_offset 6, -12
 3497              		.cfi_offset 7, -8
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 173


 3498              		.cfi_offset 14, -4
 3499 0002 0E46     		mov	r6, r1
 3500              	.LVL506:
1279:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
 3501              		.loc 1 1279 0
 3502 0004 0568     		ldr	r5, [r0]
 3503              	.LVL507:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3504              		.loc 1 1287 0
 3505 0006 0129     		cmp	r1, #1
 3506 0008 2ED9     		bls	.L353
 3507 000a 0746     		mov	r7, r0
 3508 000c 1146     		mov	r1, r2
 3509              	.LVL508:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3510              		.loc 1 1287 0 is_stmt 0 discriminator 2
 3511 000e 2B6A     		ldr	r3, [r5, #32]
 3512 0010 B342     		cmp	r3, r6
 3513 0012 2CD9     		bls	.L354
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 3514              		.loc 1 1290 0 is_stmt 1
 3515 0014 52B1     		cbz	r2, .L352
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
 3516              		.loc 1 1291 0
 3517 0016 4FF0FF32 		mov	r2, #-1
 3518              	.LVL509:
 3519 001a 2846     		mov	r0, r5
 3520              	.LVL510:
 3521 001c FFF7FEFF 		bl	put_fat
 3522              	.LVL511:
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3523              		.loc 1 1292 0
 3524 0020 8446     		mov	ip, r0
 3525 0022 18B1     		cbz	r0, .L352
 3526 0024 25E0     		b	.L349
 3527              	.LVL512:
 3528              	.L351:
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 3529              		.loc 1 1327 0
 3530 0026 2646     		mov	r6, r4
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3531              		.loc 1 1328 0
 3532 0028 A242     		cmp	r2, r4
 3533 002a 22D9     		bls	.L349
 3534              	.LVL513:
 3535              	.L352:
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 3536              		.loc 1 1297 0
 3537 002c 3146     		mov	r1, r6
 3538 002e 3846     		mov	r0, r7
 3539 0030 FFF7FEFF 		bl	get_fat
 3540              	.LVL514:
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 3541              		.loc 1 1298 0
 3542 0034 0446     		mov	r4, r0
 3543 0036 F0B1     		cbz	r0, .L355
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 174


 3544              		.loc 1 1299 0
 3545 0038 0128     		cmp	r0, #1
 3546 003a 1FD0     		beq	.L356
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3547              		.loc 1 1300 0
 3548 003c B0F1FF3F 		cmp	r0, #-1
 3549 0040 1FD0     		beq	.L357
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
 3550              		.loc 1 1302 0
 3551 0042 0022     		movs	r2, #0
 3552 0044 3146     		mov	r1, r6
 3553 0046 2846     		mov	r0, r5
 3554              	.LVL515:
 3555 0048 FFF7FEFF 		bl	put_fat
 3556              	.LVL516:
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3557              		.loc 1 1303 0
 3558 004c 8446     		mov	ip, r0
 3559 004e 80B9     		cbnz	r0, .L349
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
 3560              		.loc 1 1305 0
 3561 0050 AB69     		ldr	r3, [r5, #24]
 3562 0052 2A6A     		ldr	r2, [r5, #32]
 3563 0054 911E     		subs	r1, r2, #2
 3564 0056 8B42     		cmp	r3, r1
 3565 0058 E5D2     		bcs	.L351
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 3566              		.loc 1 1306 0
 3567 005a 0133     		adds	r3, r3, #1
 3568 005c AB61     		str	r3, [r5, #24]
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3569              		.loc 1 1307 0
 3570 005e 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 3571 0060 43F00103 		orr	r3, r3, #1
 3572 0064 2B71     		strb	r3, [r5, #4]
 3573 0066 DEE7     		b	.L351
 3574              	.LVL517:
 3575              	.L353:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3576              		.loc 1 1287 0
 3577 0068 4FF0020C 		mov	ip, #2
 3578 006c 01E0     		b	.L349
 3579              	.LVL518:
 3580              	.L354:
 3581 006e 4FF0020C 		mov	ip, #2
 3582              	.LVL519:
 3583              	.L349:
1342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3584              		.loc 1 1342 0
 3585 0072 6046     		mov	r0, ip
 3586 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3587              	.LVL520:
 3588              	.L355:
1341:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3589              		.loc 1 1341 0
 3590 0076 4FF0000C 		mov	ip, #0
 3591 007a FAE7     		b	.L349
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 175


 3592              	.L356:
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3593              		.loc 1 1299 0
 3594 007c 4FF0020C 		mov	ip, #2
 3595 0080 F7E7     		b	.L349
 3596              	.L357:
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3597              		.loc 1 1300 0
 3598 0082 4FF0010C 		mov	ip, #1
 3599 0086 F4E7     		b	.L349
 3600              		.cfi_endproc
 3601              	.LFE164:
 3603              		.section	.text.dir_next,"ax",%progbits
 3604              		.align	1
 3605              		.syntax unified
 3606              		.thumb
 3607              		.thumb_func
 3608              		.fpu fpv5-sp-d16
 3610              	dir_next:
 3611              	.LFB168:
1523:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
 3612              		.loc 1 1523 0
 3613              		.cfi_startproc
 3614              		@ args = 0, pretend = 0, frame = 0
 3615              		@ frame_needed = 0, uses_anonymous_args = 0
 3616              	.LVL521:
 3617 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3618              	.LCFI40:
 3619              		.cfi_def_cfa_offset 32
 3620              		.cfi_offset 3, -32
 3621              		.cfi_offset 4, -28
 3622              		.cfi_offset 5, -24
 3623              		.cfi_offset 6, -20
 3624              		.cfi_offset 7, -16
 3625              		.cfi_offset 8, -12
 3626              		.cfi_offset 9, -8
 3627              		.cfi_offset 14, -4
1525:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3628              		.loc 1 1525 0
 3629 0004 0668     		ldr	r6, [r0]
 3630              	.LVL522:
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
 3631              		.loc 1 1530 0
 3632 0006 4569     		ldr	r5, [r0, #20]
 3633              	.LVL523:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3634              		.loc 1 1531 0
 3635 0008 C369     		ldr	r3, [r0, #28]
 3636 000a 002B     		cmp	r3, #0
 3637 000c 6ED0     		beq	.L367
 3638 000e 2035     		adds	r5, r5, #32
 3639              	.LVL524:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3640              		.loc 1 1531 0 is_stmt 0 discriminator 2
 3641 0010 B5F5001F 		cmp	r5, #2097152
 3642 0014 6CD2     		bcs	.L368
 3643 0016 8846     		mov	r8, r1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 176


 3644 0018 0446     		mov	r4, r0
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
 3645              		.loc 1 1533 0 is_stmt 1
 3646 001a C5F30807 		ubfx	r7, r5, #0, #9
 3647 001e 3FB9     		cbnz	r7, .L361
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3648              		.loc 1 1534 0
 3649 0020 0133     		adds	r3, r3, #1
 3650 0022 C361     		str	r3, [r0, #28]
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 3651              		.loc 1 1536 0
 3652 0024 8169     		ldr	r1, [r0, #24]
 3653              	.LVL525:
 3654 0026 79B9     		cbnz	r1, .L362
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 3655              		.loc 1 1537 0
 3656 0028 3389     		ldrh	r3, [r6, #8]
 3657 002a B3EB551F 		cmp	r3, r5, lsr #5
 3658 002e 07D9     		bls	.L377
 3659              	.LVL526:
 3660              	.L361:
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 3661              		.loc 1 1574 0
 3662 0030 6561     		str	r5, [r4, #20]
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3663              		.loc 1 1575 0
 3664 0032 06F13C03 		add	r3, r6, #60
 3665 0036 3B44     		add	r3, r3, r7
 3666 0038 2362     		str	r3, [r4, #32]
1577:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3667              		.loc 1 1577 0
 3668 003a 0020     		movs	r0, #0
 3669              	.LVL527:
 3670              	.L360:
1578:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3671              		.loc 1 1578 0
 3672 003c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3673              	.LVL528:
 3674              	.L377:
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3675              		.loc 1 1538 0
 3676 0040 0023     		movs	r3, #0
 3677 0042 C361     		str	r3, [r0, #28]
 3678 0044 0420     		movs	r0, #4
 3679              	.LVL529:
 3680 0046 F9E7     		b	.L360
 3681              	.LVL530:
 3682              	.L362:
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 3683              		.loc 1 1542 0
 3684 0048 7389     		ldrh	r3, [r6, #10]
 3685 004a 013B     		subs	r3, r3, #1
 3686 004c 13EA5523 		ands	r3, r3, r5, lsr #9
 3687 0050 EED1     		bne	.L361
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 3688              		.loc 1 1543 0
 3689 0052 FFF7FEFF 		bl	get_fat
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 177


 3690              	.LVL531:
 3691 0056 8146     		mov	r9, r0
 3692              	.LVL532:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3693              		.loc 1 1544 0
 3694 0058 0128     		cmp	r0, #1
 3695 005a 4BD9     		bls	.L369
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3696              		.loc 1 1545 0
 3697 005c B0F1FF3F 		cmp	r0, #-1
 3698 0060 4AD0     		beq	.L370
1546:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3699              		.loc 1 1546 0
 3700 0062 336A     		ldr	r3, [r6, #32]
 3701 0064 8342     		cmp	r3, r0
 3702 0066 39D8     		bhi	.L363
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
 3703              		.loc 1 1548 0
 3704 0068 B8F1000F 		cmp	r8, #0
 3705 006c 11D0     		beq	.L378
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3706              		.loc 1 1551 0
 3707 006e A169     		ldr	r1, [r4, #24]
 3708 0070 2046     		mov	r0, r4
 3709              	.LVL533:
 3710 0072 FFF7FEFF 		bl	create_chain
 3711              	.LVL534:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3712              		.loc 1 1552 0
 3713 0076 8146     		mov	r9, r0
 3714 0078 0028     		cmp	r0, #0
 3715 007a 3FD0     		beq	.L371
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3716              		.loc 1 1553 0
 3717 007c 0128     		cmp	r0, #1
 3718 007e 3FD0     		beq	.L372
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3719              		.loc 1 1554 0
 3720 0080 B0F1FF3F 		cmp	r0, #-1
 3721 0084 3ED0     		beq	.L373
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 3722              		.loc 1 1557 0
 3723 0086 3046     		mov	r0, r6
 3724              	.LVL535:
 3725 0088 FFF7FEFF 		bl	sync_window
 3726              	.LVL536:
 3727 008c 28B1     		cbz	r0, .L379
 3728 008e 0120     		movs	r0, #1
 3729 0090 D4E7     		b	.L360
 3730              	.LVL537:
 3731              	.L378:
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3732              		.loc 1 1549 0
 3733 0092 0023     		movs	r3, #0
 3734 0094 E361     		str	r3, [r4, #28]
 3735 0096 0420     		movs	r0, #4
 3736              	.LVL538:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 178


 3737 0098 D0E7     		b	.L360
 3738              	.L379:
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
 3739              		.loc 1 1558 0
 3740 009a 4FF40072 		mov	r2, #512
 3741 009e 0021     		movs	r1, #0
 3742 00a0 06F13C00 		add	r0, r6, #60
 3743 00a4 FFF7FEFF 		bl	mem_set
 3744              	.LVL539:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3745              		.loc 1 1559 0
 3746 00a8 4946     		mov	r1, r9
 3747 00aa 3046     		mov	r0, r6
 3748 00ac FFF7FEFF 		bl	clust2sect
 3749              	.LVL540:
 3750 00b0 B063     		str	r0, [r6, #56]
 3751 00b2 4FF00008 		mov	r8, #0
 3752              	.LVL541:
 3753              	.L365:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3754              		.loc 1 1559 0 is_stmt 0 discriminator 1
 3755 00b6 7389     		ldrh	r3, [r6, #10]
 3756 00b8 9845     		cmp	r8, r3
 3757 00ba 0BD2     		bcs	.L380
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 3758              		.loc 1 1560 0 is_stmt 1
 3759 00bc 0123     		movs	r3, #1
 3760 00be F370     		strb	r3, [r6, #3]
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3761              		.loc 1 1561 0
 3762 00c0 3046     		mov	r0, r6
 3763 00c2 FFF7FEFF 		bl	sync_window
 3764              	.LVL542:
 3765 00c6 F8B9     		cbnz	r0, .L375
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3766              		.loc 1 1559 0 discriminator 2
 3767 00c8 08F10108 		add	r8, r8, #1
 3768              	.LVL543:
 3769 00cc B36B     		ldr	r3, [r6, #56]
 3770 00ce 0133     		adds	r3, r3, #1
 3771 00d0 B363     		str	r3, [r6, #56]
 3772 00d2 F0E7     		b	.L365
 3773              	.L380:
1563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 3774              		.loc 1 1563 0
 3775 00d4 B36B     		ldr	r3, [r6, #56]
 3776 00d6 A3EB0803 		sub	r3, r3, r8
 3777 00da B363     		str	r3, [r6, #56]
 3778              	.LVL544:
 3779              	.L363:
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
 3780              		.loc 1 1569 0
 3781 00dc C4F81890 		str	r9, [r4, #24]
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3782              		.loc 1 1570 0
 3783 00e0 4946     		mov	r1, r9
 3784 00e2 3046     		mov	r0, r6
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 179


 3785 00e4 FFF7FEFF 		bl	clust2sect
 3786              	.LVL545:
 3787 00e8 E061     		str	r0, [r4, #28]
 3788 00ea A1E7     		b	.L361
 3789              	.LVL546:
 3790              	.L367:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3791              		.loc 1 1531 0
 3792 00ec 0420     		movs	r0, #4
 3793              	.LVL547:
 3794 00ee A5E7     		b	.L360
 3795              	.LVL548:
 3796              	.L368:
 3797 00f0 0420     		movs	r0, #4
 3798              	.LVL549:
 3799 00f2 A3E7     		b	.L360
 3800              	.LVL550:
 3801              	.L369:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3802              		.loc 1 1544 0
 3803 00f4 0220     		movs	r0, #2
 3804              	.LVL551:
 3805 00f6 A1E7     		b	.L360
 3806              	.LVL552:
 3807              	.L370:
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3808              		.loc 1 1545 0
 3809 00f8 0120     		movs	r0, #1
 3810              	.LVL553:
 3811 00fa 9FE7     		b	.L360
 3812              	.LVL554:
 3813              	.L371:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3814              		.loc 1 1552 0
 3815 00fc 0720     		movs	r0, #7
 3816              	.LVL555:
 3817 00fe 9DE7     		b	.L360
 3818              	.LVL556:
 3819              	.L372:
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3820              		.loc 1 1553 0
 3821 0100 0220     		movs	r0, #2
 3822              	.LVL557:
 3823 0102 9BE7     		b	.L360
 3824              	.LVL558:
 3825              	.L373:
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3826              		.loc 1 1554 0
 3827 0104 0120     		movs	r0, #1
 3828              	.LVL559:
 3829 0106 99E7     		b	.L360
 3830              	.LVL560:
 3831              	.L375:
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3832              		.loc 1 1561 0
 3833 0108 0120     		movs	r0, #1
 3834 010a 97E7     		b	.L360
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 180


 3835              		.cfi_endproc
 3836              	.LFE168:
 3838              		.section	.text.dir_alloc,"ax",%progbits
 3839              		.align	1
 3840              		.syntax unified
 3841              		.thumb
 3842              		.thumb_func
 3843              		.fpu fpv5-sp-d16
 3845              	dir_alloc:
 3846              	.LFB169:
1593:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3847              		.loc 1 1593 0
 3848              		.cfi_startproc
 3849              		@ args = 0, pretend = 0, frame = 0
 3850              		@ frame_needed = 0, uses_anonymous_args = 0
 3851              	.LVL561:
 3852 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3853              	.LCFI41:
 3854              		.cfi_def_cfa_offset 24
 3855              		.cfi_offset 3, -24
 3856              		.cfi_offset 4, -20
 3857              		.cfi_offset 5, -16
 3858              		.cfi_offset 6, -12
 3859              		.cfi_offset 7, -8
 3860              		.cfi_offset 14, -4
 3861 0002 0446     		mov	r4, r0
 3862 0004 0F46     		mov	r7, r1
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3863              		.loc 1 1596 0
 3864 0006 0668     		ldr	r6, [r0]
 3865              	.LVL562:
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3866              		.loc 1 1599 0
 3867 0008 0021     		movs	r1, #0
 3868              	.LVL563:
 3869 000a FFF7FEFF 		bl	dir_sdi
 3870              	.LVL564:
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
 3871              		.loc 1 1600 0
 3872 000e 0246     		mov	r2, r0
 3873 0010 B8B9     		cbnz	r0, .L382
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 3874              		.loc 1 1601 0
 3875 0012 0025     		movs	r5, #0
 3876 0014 06E0     		b	.L384
 3877              	.LVL565:
 3878              	.L386:
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3879              		.loc 1 1612 0
 3880 0016 0025     		movs	r5, #0
 3881              	.LVL566:
 3882              	.L383:
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 3883              		.loc 1 1614 0
 3884 0018 0121     		movs	r1, #1
 3885 001a 2046     		mov	r0, r4
 3886              	.LVL567:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 181


 3887 001c FFF7FEFF 		bl	dir_next
 3888              	.LVL568:
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3889              		.loc 1 1615 0
 3890 0020 0246     		mov	r2, r0
 3891 0022 70B9     		cbnz	r0, .L382
 3892              	.LVL569:
 3893              	.L384:
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3894              		.loc 1 1603 0
 3895 0024 E169     		ldr	r1, [r4, #28]
 3896 0026 3046     		mov	r0, r6
 3897              	.LVL570:
 3898 0028 FFF7FEFF 		bl	move_window
 3899              	.LVL571:
1604:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3900              		.loc 1 1604 0
 3901 002c 0246     		mov	r2, r0
 3902 002e 40B9     		cbnz	r0, .L382
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3903              		.loc 1 1608 0
 3904 0030 236A     		ldr	r3, [r4, #32]
 3905 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3906 0034 002B     		cmp	r3, #0
 3907 0036 18BF     		it	ne
 3908 0038 E52B     		cmpne	r3, #229
 3909 003a ECD1     		bne	.L386
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 3910              		.loc 1 1610 0
 3911 003c 0135     		adds	r5, r5, #1
 3912              	.LVL572:
 3913 003e BD42     		cmp	r5, r7
 3914 0040 EAD1     		bne	.L383
 3915              	.LVL573:
 3916              	.L382:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3917              		.loc 1 1618 0
 3918 0042 042A     		cmp	r2, #4
 3919 0044 01D0     		beq	.L389
 3920              	.LVL574:
 3921              	.L385:
1620:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3922              		.loc 1 1620 0
 3923 0046 1046     		mov	r0, r2
 3924 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3925              	.LVL575:
 3926              	.L389:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3927              		.loc 1 1618 0
 3928 004a 0722     		movs	r2, #7
 3929              	.LVL576:
 3930 004c FBE7     		b	.L385
 3931              		.cfi_endproc
 3932              	.LFE169:
 3934              		.section	.text.dir_read,"ax",%progbits
 3935              		.align	1
 3936              		.syntax unified
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 182


 3937              		.thumb
 3938              		.thumb_func
 3939              		.fpu fpv5-sp-d16
 3941              	dir_read:
 3942              	.LFB177:
2135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
 3943              		.loc 1 2135 0
 3944              		.cfi_startproc
 3945              		@ args = 0, pretend = 0, frame = 0
 3946              		@ frame_needed = 0, uses_anonymous_args = 0
 3947              	.LVL577:
 3948 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3949              	.LCFI42:
 3950              		.cfi_def_cfa_offset 32
 3951              		.cfi_offset 3, -32
 3952              		.cfi_offset 4, -28
 3953              		.cfi_offset 5, -24
 3954              		.cfi_offset 6, -20
 3955              		.cfi_offset 7, -16
 3956              		.cfi_offset 8, -12
 3957              		.cfi_offset 9, -8
 3958              		.cfi_offset 14, -4
 3959 0004 0446     		mov	r4, r0
 3960 0006 8846     		mov	r8, r1
 3961              	.LVL578:
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
 3962              		.loc 1 2137 0
 3963 0008 0768     		ldr	r7, [r0]
 3964              	.LVL579:
2140:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3965              		.loc 1 2140 0
 3966 000a 4FF0FF09 		mov	r9, #255
 3967 000e 4E46     		mov	r6, r9
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
 3968              		.loc 1 2136 0
 3969 0010 0425     		movs	r5, #4
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3970              		.loc 1 2143 0
 3971 0012 2CE0     		b	.L391
 3972              	.LVL580:
 3973              	.L408:
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
 3974              		.loc 1 2172 0
 3975 0014 0F2B     		cmp	r3, #15
 3976 0016 19D1     		bne	.L394
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
 3977              		.loc 1 2173 0
 3978 0018 12F0400F 		tst	r2, #64
 3979 001c 06D0     		beq	.L395
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;
 3980              		.loc 1 2174 0
 3981 001e 91F80D90 		ldrb	r9, [r1, #13]	@ zero_extendqisi2
 3982              	.LVL581:
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;
 3983              		.loc 1 2175 0
 3984 0022 02F0BF02 		and	r2, r2, #191
 3985              	.LVL582:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 183


2176:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3986              		.loc 1 2176 0
 3987 0026 6369     		ldr	r3, [r4, #20]
 3988              	.LVL583:
 3989 0028 2363     		str	r3, [r4, #48]
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;
 3990              		.loc 1 2175 0
 3991 002a 1646     		mov	r6, r2
 3992              	.LVL584:
 3993              	.L395:
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
 3994              		.loc 1 2179 0
 3995 002c B242     		cmp	r2, r6
 3996 002e 01D0     		beq	.L406
 3997 0030 FF26     		movs	r6, #255
 3998              	.LVL585:
 3999 0032 16E0     		b	.L393
 4000              	.LVL586:
 4001              	.L406:
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
 4002              		.loc 1 2179 0 is_stmt 0 discriminator 1
 4003 0034 4B7B     		ldrb	r3, [r1, #13]	@ zero_extendqisi2
 4004 0036 4B45     		cmp	r3, r9
 4005 0038 01D0     		beq	.L407
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
 4006              		.loc 1 2179 0
 4007 003a FF26     		movs	r6, #255
 4008              	.LVL587:
 4009 003c 11E0     		b	.L393
 4010              	.LVL588:
 4011              	.L407:
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
 4012              		.loc 1 2179 0 discriminator 3
 4013 003e F868     		ldr	r0, [r7, #12]
 4014 0040 FFF7FEFF 		bl	pick_lfn
 4015              	.LVL589:
 4016 0044 78B3     		cbz	r0, .L404
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
 4017              		.loc 1 2179 0 discriminator 5
 4018 0046 013E     		subs	r6, r6, #1
 4019              	.LVL590:
 4020 0048 F6B2     		uxtb	r6, r6
 4021 004a 0AE0     		b	.L393
 4022              	.LVL591:
 4023              	.L394:
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
 4024              		.loc 1 2181 0 is_stmt 1
 4025 004c 26B9     		cbnz	r6, .L396
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
 4026              		.loc 1 2181 0 is_stmt 0 discriminator 1
 4027 004e 0846     		mov	r0, r1
 4028 0050 FFF7FEFF 		bl	sum_sfn
 4029              	.LVL592:
 4030 0054 4845     		cmp	r0, r9
 4031 0056 29D0     		beq	.L392
 4032              	.L396:
2182:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 184


 4033              		.loc 1 2182 0 is_stmt 1
 4034 0058 4FF0FF33 		mov	r3, #-1
 4035 005c 2363     		str	r3, [r4, #48]
 4036 005e 25E0     		b	.L392
 4037              	.LVL593:
 4038              	.L400:
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 4039              		.loc 1 2170 0
 4040 0060 FF26     		movs	r6, #255
 4041              	.LVL594:
 4042              	.L393:
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 4043              		.loc 1 2193 0
 4044 0062 0021     		movs	r1, #0
 4045 0064 2046     		mov	r0, r4
 4046 0066 FFF7FEFF 		bl	dir_next
 4047              	.LVL595:
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4048              		.loc 1 2194 0
 4049 006a 0546     		mov	r5, r0
 4050 006c F0B9     		cbnz	r0, .L392
 4051              	.LVL596:
 4052              	.L391:
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 4053              		.loc 1 2143 0
 4054 006e E169     		ldr	r1, [r4, #28]
 4055 0070 E1B1     		cbz	r1, .L392
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 4056              		.loc 1 2144 0
 4057 0072 3846     		mov	r0, r7
 4058 0074 FFF7FEFF 		bl	move_window
 4059              	.LVL597:
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
 4060              		.loc 1 2145 0
 4061 0078 0546     		mov	r5, r0
 4062 007a B8B9     		cbnz	r0, .L392
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
 4063              		.loc 1 2146 0
 4064 007c 216A     		ldr	r1, [r4, #32]
 4065 007e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 4066              	.LVL598:
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 4067              		.loc 1 2147 0
 4068 0080 9AB1     		cbz	r2, .L399
2167:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 4069              		.loc 1 2167 0
 4070 0082 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 4071 0084 03F03F03 		and	r3, r3, #63
 4072              	.LVL599:
 4073 0088 A371     		strb	r3, [r4, #6]
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF;
 4074              		.loc 1 2169 0
 4075 008a 2E2A     		cmp	r2, #46
 4076 008c 18BF     		it	ne
 4077 008e E52A     		cmpne	r2, #229
 4078 0090 E6D0     		beq	.L400
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 185


 4079              		.loc 1 2169 0 is_stmt 0 discriminator 1
 4080 0092 23F02000 		bic	r0, r3, #32
 4081              	.LVL600:
 4082 0096 0828     		cmp	r0, #8
 4083 0098 14BF     		ite	ne
 4084 009a 0020     		movne	r0, #0
 4085 009c 0120     		moveq	r0, #1
 4086 009e 4045     		cmp	r0, r8
 4087 00a0 B8D0     		beq	.L408
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 4088              		.loc 1 2170 0 is_stmt 1
 4089 00a2 FF26     		movs	r6, #255
 4090              	.LVL601:
 4091 00a4 DDE7     		b	.L393
 4092              	.LVL602:
 4093              	.L404:
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
 4094              		.loc 1 2179 0
 4095 00a6 FF26     		movs	r6, #255
 4096              	.LVL603:
 4097 00a8 DBE7     		b	.L393
 4098              	.LVL604:
 4099              	.L399:
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4100              		.loc 1 2148 0
 4101 00aa 0425     		movs	r5, #4
 4102              	.LVL605:
 4103              	.L392:
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4104              		.loc 1 2197 0
 4105 00ac 0DB1     		cbz	r5, .L398
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4106              		.loc 1 2197 0 is_stmt 0 discriminator 1
 4107 00ae 0023     		movs	r3, #0
 4108 00b0 E361     		str	r3, [r4, #28]
 4109              	.L398:
2199:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4110              		.loc 1 2199 0 is_stmt 1
 4111 00b2 2846     		mov	r0, r5
 4112 00b4 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4113              		.cfi_endproc
 4114              	.LFE177:
 4116              		.section	.text.dir_remove,"ax",%progbits
 4117              		.align	1
 4118              		.syntax unified
 4119              		.thumb
 4120              		.thumb_func
 4121              		.fpu fpv5-sp-d16
 4123              	dir_remove:
 4124              	.LFB180:
2399:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4125              		.loc 1 2399 0
 4126              		.cfi_startproc
 4127              		@ args = 0, pretend = 0, frame = 0
 4128              		@ frame_needed = 0, uses_anonymous_args = 0
 4129              	.LVL606:
 4130 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 186


 4131              	.LCFI43:
 4132              		.cfi_def_cfa_offset 16
 4133              		.cfi_offset 4, -16
 4134              		.cfi_offset 5, -12
 4135              		.cfi_offset 6, -8
 4136              		.cfi_offset 14, -4
 4137 0002 0446     		mov	r4, r0
2401:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 4138              		.loc 1 2401 0
 4139 0004 0568     		ldr	r5, [r0]
 4140              	.LVL607:
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4141              		.loc 1 2403 0
 4142 0006 4669     		ldr	r6, [r0, #20]
 4143              	.LVL608:
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4144              		.loc 1 2405 0
 4145 0008 016B     		ldr	r1, [r0, #48]
 4146 000a B1F1FF3F 		cmp	r1, #-1
 4147 000e 18D1     		bne	.L416
 4148              	.LVL609:
 4149              	.L413:
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 4150              		.loc 1 2408 0
 4151 0010 E169     		ldr	r1, [r4, #28]
 4152 0012 2846     		mov	r0, r5
 4153 0014 FFF7FEFF 		bl	move_window
 4154              	.LVL610:
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Mark an entry 'deleted' */
 4155              		.loc 1 2409 0
 4156 0018 0346     		mov	r3, r0
 4157 001a 70B9     		cbnz	r0, .L412
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4158              		.loc 1 2414 0
 4159 001c 226A     		ldr	r2, [r4, #32]
 4160 001e E521     		movs	r1, #229
 4161 0020 1170     		strb	r1, [r2]
2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
 4162              		.loc 1 2416 0
 4163 0022 0122     		movs	r2, #1
 4164 0024 EA70     		strb	r2, [r5, #3]
2417:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
 4165              		.loc 1 2417 0
 4166 0026 6269     		ldr	r2, [r4, #20]
 4167 0028 B242     		cmp	r2, r6
 4168 002a 06D2     		bcs	.L412
2418:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
 4169              		.loc 1 2418 0
 4170 002c 0021     		movs	r1, #0
 4171 002e 2046     		mov	r0, r4
 4172              	.LVL611:
 4173 0030 FFF7FEFF 		bl	dir_next
 4174              	.LVL612:
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
 4175              		.loc 1 2419 0
 4176 0034 0346     		mov	r3, r0
 4177 0036 0028     		cmp	r0, #0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 187


 4178 0038 EAD0     		beq	.L413
 4179              	.L412:
 4180              	.LVL613:
2420:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4181              		.loc 1 2420 0
 4182 003a 042B     		cmp	r3, #4
 4183 003c 07D0     		beq	.L417
 4184              	.LVL614:
 4185              	.L411:
2432:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4186              		.loc 1 2432 0
 4187 003e 1846     		mov	r0, r3
 4188 0040 70BD     		pop	{r4, r5, r6, pc}
 4189              	.LVL615:
 4190              	.L416:
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4191              		.loc 1 2405 0 discriminator 1
 4192 0042 FFF7FEFF 		bl	dir_sdi
 4193              	.LVL616:
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 4194              		.loc 1 2406 0 discriminator 1
 4195 0046 0346     		mov	r3, r0
 4196 0048 0028     		cmp	r0, #0
 4197 004a E1D0     		beq	.L413
 4198 004c F7E7     		b	.L411
 4199              	.LVL617:
 4200              	.L417:
2420:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4201              		.loc 1 2420 0
 4202 004e 0223     		movs	r3, #2
 4203              	.LVL618:
 4204 0050 F5E7     		b	.L411
 4205              		.cfi_endproc
 4206              	.LFE180:
 4208              		.section	.text.unlock_fs,"ax",%progbits
 4209              		.align	1
 4210              		.syntax unified
 4211              		.thumb
 4212              		.thumb_func
 4213              		.fpu fpv5-sp-d16
 4215              	unlock_fs:
 4216              	.LFB152:
 755:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 4217              		.loc 1 755 0
 4218              		.cfi_startproc
 4219              		@ args = 0, pretend = 0, frame = 0
 4220              		@ frame_needed = 0, uses_anonymous_args = 0
 4221              	.LVL619:
 4222 0000 08B5     		push	{r3, lr}
 4223              	.LCFI44:
 4224              		.cfi_def_cfa_offset 8
 4225              		.cfi_offset 3, -8
 4226              		.cfi_offset 14, -4
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 4227              		.loc 1 756 0
 4228 0002 0246     		mov	r2, r0
 4229 0004 B1F10C03 		subs	r3, r1, #12
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 188


 4230 0008 18BF     		it	ne
 4231 000a 0123     		movne	r3, #1
 4232 000c 0028     		cmp	r0, #0
 4233 000e 14BF     		ite	ne
 4234 0010 1846     		movne	r0, r3
 4235 0012 0020     		moveq	r0, #0
 4236              	.LVL620:
 4237 0014 48B1     		cbz	r0, .L418
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 4238              		.loc 1 756 0 is_stmt 0 discriminator 1
 4239 0016 B1F10F03 		subs	r3, r1, #15
 4240 001a 18BF     		it	ne
 4241 001c 0123     		movne	r3, #1
 4242 001e 0B29     		cmp	r1, #11
 4243 0020 03D0     		beq	.L418
 4244 0022 13B1     		cbz	r3, .L418
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4245              		.loc 1 757 0 is_stmt 1
 4246 0024 1069     		ldr	r0, [r2, #16]
 4247 0026 FFF7FEFF 		bl	ff_rel_grant
 4248              	.LVL621:
 4249              	.L418:
 759:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4250              		.loc 1 759 0
 4251 002a 08BD     		pop	{r3, pc}
 4252              		.cfi_endproc
 4253              	.LFE152:
 4255              		.section	.text.create_name,"ax",%progbits
 4256              		.align	1
 4257              		.syntax unified
 4258              		.thumb
 4259              		.thumb_func
 4260              		.fpu fpv5-sp-d16
 4262              	create_name:
 4263              	.LFB184:
2622:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 4264              		.loc 1 2622 0
 4265              		.cfi_startproc
 4266              		@ args = 0, pretend = 0, frame = 8
 4267              		@ frame_needed = 0, uses_anonymous_args = 0
 4268              	.LVL622:
 4269 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4270              	.LCFI45:
 4271              		.cfi_def_cfa_offset 36
 4272              		.cfi_offset 4, -36
 4273              		.cfi_offset 5, -32
 4274              		.cfi_offset 6, -28
 4275              		.cfi_offset 7, -24
 4276              		.cfi_offset 8, -20
 4277              		.cfi_offset 9, -16
 4278              		.cfi_offset 10, -12
 4279              		.cfi_offset 11, -8
 4280              		.cfi_offset 14, -4
 4281 0004 83B0     		sub	sp, sp, #12
 4282              	.LCFI46:
 4283              		.cfi_def_cfa_offset 48
 4284 0006 0746     		mov	r7, r0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 189


 4285 0008 8A46     		mov	r10, r1
2630:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
 4286              		.loc 1 2630 0
 4287 000a D1F80090 		ldr	r9, [r1]
 4288              	.LVL623:
 4289 000e 0368     		ldr	r3, [r0]
 4290 0010 DD68     		ldr	r5, [r3, #12]
 4291              	.LVL624:
 4292 0012 0024     		movs	r4, #0
 4293 0014 23E0     		b	.L428
 4294              	.LVL625:
 4295              	.L425:
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 4296              		.loc 1 2635 0 discriminator 2
 4297 0016 08F10108 		add	r8, r8, #1
 4298              	.LVL626:
 4299              	.L423:
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 4300              		.loc 1 2635 0 is_stmt 0 discriminator 1
 4301 001a 19F80830 		ldrb	r3, [r9, r8]	@ zero_extendqisi2
 4302 001e 5C2B     		cmp	r3, #92
 4303 0020 18BF     		it	ne
 4304 0022 2F2B     		cmpne	r3, #47
 4305 0024 F7D0     		beq	.L425
 4306              	.L422:
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 4307              		.loc 1 2652 0 is_stmt 1
 4308 0026 09EB0803 		add	r3, r9, r8
 4309 002a CAF80030 		str	r3, [r10]
2653:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
 4310              		.loc 1 2653 0
 4311 002e 1F28     		cmp	r0, #31
 4312 0030 33D8     		bhi	.L468
 4313 0032 4FF00408 		mov	r8, #4
 4314              	.LVL627:
 4315              	.L429:
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
 4316              		.loc 1 2655 0 discriminator 4
 4317 0036 012C     		cmp	r4, #1
 4318 0038 32D0     		beq	.L474
 4319              	.L430:
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
 4320              		.loc 1 2655 0 is_stmt 0 discriminator 3
 4321 003a 022C     		cmp	r4, #2
 4322 003c 3BD0     		beq	.L475
 4323              	.LVL628:
 4324              	.L437:
2664:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
 4325              		.loc 1 2664 0 is_stmt 1
 4326 003e 002C     		cmp	r4, #0
 4327 0040 59D0     		beq	.L436
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
 4328              		.loc 1 2665 0
 4329 0042 6FF00043 		mvn	r3, #-2147483648
 4330 0046 2344     		add	r3, r3, r4
 4331 0048 35F81330 		ldrh	r3, [r5, r3, lsl #1]
 4332              	.LVL629:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 190


2666:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
 4333              		.loc 1 2666 0
 4334 004c 202B     		cmp	r3, #32
 4335 004e 18BF     		it	ne
 4336 0050 2E2B     		cmpne	r3, #46
 4337 0052 50D1     		bne	.L436
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4338              		.loc 1 2667 0
 4339 0054 013C     		subs	r4, r4, #1
 4340              	.LVL630:
 4341 0056 F2E7     		b	.L437
 4342              	.LVL631:
 4343              	.L427:
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4344              		.loc 1 2650 0
 4345 0058 25F81460 		strh	r6, [r5, r4, lsl #1]	@ movhi
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ') break;				/* Break if end of the path name */
 4346              		.loc 1 2632 0
 4347 005c 4446     		mov	r4, r8
 4348              	.LVL632:
 4349              	.L428:
 4350 005e 04F10108 		add	r8, r4, #1
 4351              	.LVL633:
 4352 0062 19F80400 		ldrb	r0, [r9, r4]	@ zero_extendqisi2
 4353              	.LVL634:
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == '/' || w == '\\') {	/* Break if a separator is found */
 4354              		.loc 1 2633 0
 4355 0066 1F28     		cmp	r0, #31
 4356 0068 DDD9     		bls	.L422
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 4357              		.loc 1 2634 0
 4358 006a 5C28     		cmp	r0, #92
 4359 006c 18BF     		it	ne
 4360 006e 2F28     		cmpne	r0, #47
 4361 0070 D3D0     		beq	.L423
2638:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
 4362              		.loc 1 2638 0
 4363 0072 FE2C     		cmp	r4, #254
 4364 0074 00F20181 		bhi	.L465
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
 4365              		.loc 1 2646 0
 4366 0078 0121     		movs	r1, #1
 4367 007a FFF7FEFF 		bl	ff_convert
 4368              	.LVL635:
2647:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4369              		.loc 1 2647 0
 4370 007e 0646     		mov	r6, r0
 4371 0080 0028     		cmp	r0, #0
 4372 0082 00F0FC80 		beq	.L466
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
 4373              		.loc 1 2649 0
 4374 0086 7F28     		cmp	r0, #127
 4375 0088 E6D8     		bhi	.L427
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
 4376              		.loc 1 2649 0 is_stmt 0 discriminator 1
 4377 008a 0146     		mov	r1, r0
 4378 008c 7F48     		ldr	r0, .L486
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 191


 4379              	.LVL636:
 4380 008e FFF7FEFF 		bl	chk_chr
 4381              	.LVL637:
 4382 0092 0028     		cmp	r0, #0
 4383 0094 E0D0     		beq	.L427
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
 4384              		.loc 1 2649 0
 4385 0096 0620     		movs	r0, #6
 4386 0098 F2E0     		b	.L426
 4387              	.LVL638:
 4388              	.L468:
2653:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
 4389              		.loc 1 2653 0 is_stmt 1
 4390 009a 4FF00008 		mov	r8, #0
 4391              	.LVL639:
 4392 009e CAE7     		b	.L429
 4393              	.LVL640:
 4394              	.L474:
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
 4395              		.loc 1 2655 0 discriminator 1
 4396 00a0 6FF00043 		mvn	r3, #-2147483648
 4397 00a4 2344     		add	r3, r3, r4
 4398 00a6 35F81330 		ldrh	r3, [r5, r3, lsl #1]
 4399 00aa 2E2B     		cmp	r3, #46
 4400 00ac C5D1     		bne	.L430
 4401              	.L431:
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)		/* Create dot name for SFN entry */
 4402              		.loc 1 2657 0
 4403 00ae 0023     		movs	r3, #0
 4404 00b0 25F81430 		strh	r3, [r5, r4, lsl #1]	@ movhi
 4405              	.LVL641:
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
 4406              		.loc 1 2658 0
 4407 00b4 12E0     		b	.L433
 4408              	.LVL642:
 4409              	.L475:
2656:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
 4410              		.loc 1 2656 0
 4411 00b6 6FF00043 		mvn	r3, #-2147483648
 4412 00ba 2344     		add	r3, r3, r4
 4413 00bc 35F81330 		ldrh	r3, [r5, r3, lsl #1]
 4414 00c0 2E2B     		cmp	r3, #46
 4415 00c2 BCD1     		bne	.L437
2656:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
 4416              		.loc 1 2656 0 is_stmt 0 discriminator 1
 4417 00c4 724B     		ldr	r3, .L486+4
 4418 00c6 2344     		add	r3, r3, r4
 4419 00c8 35F81330 		ldrh	r3, [r5, r3, lsl #1]
 4420 00cc 2E2B     		cmp	r3, #46
 4421 00ce B6D1     		bne	.L437
 4422 00d0 EDE7     		b	.L431
 4423              	.LVL643:
 4424              	.L469:
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
 4425              		.loc 1 2659 0 is_stmt 1
 4426 00d2 2021     		movs	r1, #32
 4427              	.L434:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 192


2659:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
 4428              		.loc 1 2659 0 is_stmt 0 discriminator 4
 4429 00d4 FA18     		adds	r2, r7, r3
 4430 00d6 82F82410 		strb	r1, [r2, #36]
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
 4431              		.loc 1 2658 0 is_stmt 1 discriminator 4
 4432 00da 0133     		adds	r3, r3, #1
 4433              	.LVL644:
 4434              	.L433:
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
 4435              		.loc 1 2658 0 is_stmt 0 discriminator 2
 4436 00dc 0A2B     		cmp	r3, #10
 4437 00de 03D8     		bhi	.L476
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
 4438              		.loc 1 2659 0 is_stmt 1
 4439 00e0 A342     		cmp	r3, r4
 4440 00e2 F6D2     		bcs	.L469
 4441 00e4 2E21     		movs	r1, #46
 4442 00e6 F5E7     		b	.L434
 4443              	.L476:
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
 4444              		.loc 1 2660 0
 4445 00e8 3B44     		add	r3, r3, r7
 4446              	.LVL645:
 4447 00ea 48F02008 		orr	r8, r8, #32
 4448              	.LVL646:
 4449 00ee 83F82480 		strb	r8, [r3, #36]
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4450              		.loc 1 2661 0
 4451 00f2 0020     		movs	r0, #0
 4452              	.LVL647:
 4453 00f4 C4E0     		b	.L426
 4454              	.LVL648:
 4455              	.L436:
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
 4456              		.loc 1 2669 0
 4457 00f6 0023     		movs	r3, #0
 4458 00f8 25F81430 		strh	r3, [r5, r4, lsl #1]	@ movhi
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4459              		.loc 1 2670 0
 4460 00fc 002C     		cmp	r4, #0
 4461 00fe 00F0C280 		beq	.L470
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
 4462              		.loc 1 2673 0
 4463 0102 0B22     		movs	r2, #11
 4464 0104 2021     		movs	r1, #32
 4465 0106 07F12400 		add	r0, r7, #36
 4466 010a FFF7FEFF 		bl	mem_set
 4467              	.LVL649:
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
 4468              		.loc 1 2674 0
 4469 010e 0023     		movs	r3, #0
 4470 0110 00E0     		b	.L439
 4471              	.LVL650:
 4472              	.L440:
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
 4473              		.loc 1 2674 0 is_stmt 0 discriminator 3
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 193


 4474 0112 0133     		adds	r3, r3, #1
 4475              	.LVL651:
 4476              	.L439:
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
 4477              		.loc 1 2674 0 discriminator 1
 4478 0114 35F81320 		ldrh	r2, [r5, r3, lsl #1]
 4479 0118 2E2A     		cmp	r2, #46
 4480 011a 18BF     		it	ne
 4481 011c 202A     		cmpne	r2, #32
 4482 011e F8D0     		beq	.L440
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
 4483              		.loc 1 2675 0 is_stmt 1
 4484 0120 0BB1     		cbz	r3, .L442
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
 4485              		.loc 1 2675 0 is_stmt 0 discriminator 1
 4486 0122 48F00308 		orr	r8, r8, #3
 4487              	.LVL652:
 4488              	.L442:
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4489              		.loc 1 2676 0 is_stmt 1 discriminator 1
 4490 0126 7CB1     		cbz	r4, .L471
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4491              		.loc 1 2676 0 is_stmt 0 discriminator 2
 4492 0128 6FF00042 		mvn	r2, #-2147483648
 4493 012c 2244     		add	r2, r2, r4
 4494 012e 35F81220 		ldrh	r2, [r5, r2, lsl #1]
 4495 0132 2E2A     		cmp	r2, #46
 4496 0134 01D0     		beq	.L477
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4497              		.loc 1 2676 0 discriminator 3
 4498 0136 013C     		subs	r4, r4, #1
 4499              	.LVL653:
 4500 0138 F5E7     		b	.L442
 4501              	.L477:
 4502 013a 4FF0080B 		mov	fp, #8
 4503 013e 4FF0000A 		mov	r10, #0
 4504              	.LVL654:
 4505 0142 CDF804A0 		str	r10, [sp, #4]
 4506 0146 08E0     		b	.L445
 4507              	.LVL655:
 4508              	.L471:
 4509 0148 A246     		mov	r10, r4
 4510              	.LVL656:
 4511 014a 4FF0080B 		mov	fp, #8
 4512 014e 0022     		movs	r2, #0
 4513 0150 0192     		str	r2, [sp, #4]
 4514 0152 02E0     		b	.L445
 4515              	.LVL657:
 4516              	.L447:
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4517              		.loc 1 2683 0 is_stmt 1
 4518 0154 48F00308 		orr	r8, r8, #3
 4519              	.LVL658:
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
 4520              		.loc 1 2680 0
 4521 0158 4B46     		mov	r3, r9
 4522              	.LVL659:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 194


 4523              	.L445:
 4524 015a 03F10109 		add	r9, r3, #1
 4525              	.LVL660:
 4526 015e 35F81360 		ldrh	r6, [r5, r3, lsl #1]
 4527              	.LVL661:
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
 4528              		.loc 1 2681 0
 4529 0162 BEB1     		cbz	r6, .L446
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
 4530              		.loc 1 2682 0
 4531 0164 202E     		cmp	r6, #32
 4532 0166 F5D0     		beq	.L447
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
 4533              		.loc 1 2682 0 is_stmt 0 discriminator 1
 4534 0168 2E2E     		cmp	r6, #46
 4535 016a 14BF     		ite	ne
 4536 016c 0023     		movne	r3, #0
 4537 016e 0123     		moveq	r3, #1
 4538 0170 4C45     		cmp	r4, r9
 4539 0172 08BF     		it	eq
 4540 0174 0023     		moveq	r3, #0
 4541 0176 002B     		cmp	r3, #0
 4542 0178 ECD1     		bne	.L447
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
 4543              		.loc 1 2686 0 is_stmt 1
 4544 017a 4C45     		cmp	r4, r9
 4545 017c 18BF     		it	ne
 4546 017e DA45     		cmpne	r10, fp
 4547 0180 35D3     		bcc	.L450
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
 4548              		.loc 1 2687 0
 4549 0182 BBF10B0F 		cmp	fp, #11
 4550 0186 25D0     		beq	.L478
2690:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
 4551              		.loc 1 2690 0
 4552 0188 4C45     		cmp	r4, r9
 4553 018a 01D0     		beq	.L452
2690:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
 4554              		.loc 1 2690 0 is_stmt 0 discriminator 1
 4555 018c 48F00308 		orr	r8, r8, #3
 4556              	.LVL662:
 4557              	.L452:
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
 4558              		.loc 1 2691 0 is_stmt 1
 4559 0190 4C45     		cmp	r4, r9
 4560 0192 22D2     		bcs	.L479
 4561              	.L446:
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4562              		.loc 1 2727 0
 4563 0194 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 4564 0198 E52B     		cmp	r3, #229
 4565 019a 5FD0     		beq	.L480
 4566              	.L459:
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
 4567              		.loc 1 2729 0
 4568 019c BBF1080F 		cmp	fp, #8
 4569 01a0 60D0     		beq	.L481
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 195


 4570              	.L460:
 4571 01a2 019B     		ldr	r3, [sp, #4]
 4572 01a4 03F00C02 		and	r2, r3, #12
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
 4573              		.loc 1 2730 0
 4574 01a8 0C2A     		cmp	r2, #12
 4575 01aa 03D0     		beq	.L461
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
 4576              		.loc 1 2730 0 is_stmt 0 discriminator 2
 4577 01ac 03F00303 		and	r3, r3, #3
 4578 01b0 032B     		cmp	r3, #3
 4579 01b2 01D1     		bne	.L462
 4580              	.L461:
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
 4581              		.loc 1 2730 0 discriminator 3
 4582 01b4 48F00208 		orr	r8, r8, #2
 4583              	.LVL663:
 4584              	.L462:
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
 4585              		.loc 1 2731 0 is_stmt 1
 4586 01b8 18F0020F 		tst	r8, #2
 4587 01bc 06D1     		bne	.L463
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
 4588              		.loc 1 2732 0
 4589 01be 019B     		ldr	r3, [sp, #4]
 4590 01c0 03F00303 		and	r3, r3, #3
 4591 01c4 012B     		cmp	r3, #1
 4592 01c6 52D0     		beq	.L482
 4593              	.L464:
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4594              		.loc 1 2733 0
 4595 01c8 042A     		cmp	r2, #4
 4596 01ca 53D0     		beq	.L483
 4597              	.L463:
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4598              		.loc 1 2736 0
 4599 01cc 87F82F80 		strb	r8, [r7, #47]
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4600              		.loc 1 2738 0
 4601 01d0 0020     		movs	r0, #0
 4602 01d2 55E0     		b	.L426
 4603              	.L478:
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4604              		.loc 1 2688 0
 4605 01d4 48F00308 		orr	r8, r8, #3
 4606              	.LVL664:
 4607 01d8 DCE7     		b	.L446
 4608              	.L479:
 4609              	.LVL665:
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4610              		.loc 1 2693 0
 4611 01da 019B     		ldr	r3, [sp, #4]
 4612 01dc 9B00     		lsls	r3, r3, #2
 4613 01de DBB2     		uxtb	r3, r3
 4614 01e0 0193     		str	r3, [sp, #4]
 4615              	.LVL666:
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 196


 4616              		.loc 1 2692 0
 4617 01e2 2346     		mov	r3, r4
 4618 01e4 4FF00B0B 		mov	fp, #11
 4619 01e8 4FF0080A 		mov	r10, #8
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4620              		.loc 1 2693 0
 4621 01ec B5E7     		b	.L445
 4622              	.LVL667:
 4623              	.L450:
2696:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 4624              		.loc 1 2696 0
 4625 01ee 7F2E     		cmp	r6, #127
 4626 01f0 0BD8     		bhi	.L484
 4627              	.L453:
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
 4628              		.loc 1 2712 0
 4629 01f2 BEB9     		cbnz	r6, .L485
 4630              	.L455:
 4631              	.LVL668:
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 4632              		.loc 1 2713 0
 4633 01f4 48F00308 		orr	r8, r8, #3
 4634              	.LVL669:
 4635 01f8 5F26     		movs	r6, #95
 4636              	.LVL670:
 4637              	.L457:
2724:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4638              		.loc 1 2724 0
 4639 01fa 07EB0A03 		add	r3, r7, r10
 4640 01fe 83F82460 		strb	r6, [r3, #36]
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
 4641              		.loc 1 2680 0
 4642 0202 4B46     		mov	r3, r9
2724:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4643              		.loc 1 2724 0
 4644 0204 0AF1010A 		add	r10, r10, #1
 4645              	.LVL671:
 4646 0208 A7E7     		b	.L445
 4647              	.L484:
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
 4648              		.loc 1 2698 0
 4649 020a 0021     		movs	r1, #0
 4650 020c 3046     		mov	r0, r6
 4651 020e FFF7FEFF 		bl	ff_convert
 4652              	.LVL672:
2699:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4653              		.loc 1 2699 0
 4654 0212 0646     		mov	r6, r0
 4655 0214 18B1     		cbz	r0, .L454
2699:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4656              		.loc 1 2699 0 is_stmt 0 discriminator 1
 4657 0216 A0F18006 		sub	r6, r0, #128
 4658 021a 1E4B     		ldr	r3, .L486+8
 4659 021c 9E5D     		ldrb	r6, [r3, r6]	@ zero_extendqisi2
 4660              	.LVL673:
 4661              	.L454:
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 197


 4662              		.loc 1 2703 0 is_stmt 1
 4663 021e 48F00208 		orr	r8, r8, #2
 4664              	.LVL674:
 4665 0222 E6E7     		b	.L453
 4666              	.L485:
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
 4667              		.loc 1 2712 0 discriminator 1
 4668 0224 3146     		mov	r1, r6
 4669 0226 1C48     		ldr	r0, .L486+12
 4670 0228 FFF7FEFF 		bl	chk_chr
 4671              	.LVL675:
 4672 022c 0028     		cmp	r0, #0
 4673 022e E1D1     		bne	.L455
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
 4674              		.loc 1 2715 0
 4675 0230 A6F14103 		sub	r3, r6, #65
 4676 0234 9BB2     		uxth	r3, r3
 4677 0236 192B     		cmp	r3, #25
 4678 0238 04D8     		bhi	.L458
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4679              		.loc 1 2716 0
 4680 023a 019B     		ldr	r3, [sp, #4]
 4681 023c 43F00203 		orr	r3, r3, #2
 4682 0240 0193     		str	r3, [sp, #4]
 4683              	.LVL676:
 4684 0242 DAE7     		b	.L457
 4685              	.L458:
2718:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
 4686              		.loc 1 2718 0
 4687 0244 A6F16103 		sub	r3, r6, #97
 4688 0248 9BB2     		uxth	r3, r3
 4689 024a 192B     		cmp	r3, #25
 4690 024c D5D8     		bhi	.L457
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4691              		.loc 1 2719 0
 4692 024e 019B     		ldr	r3, [sp, #4]
 4693 0250 43F00103 		orr	r3, r3, #1
 4694 0254 0193     		str	r3, [sp, #4]
 4695              	.LVL677:
 4696 0256 203E     		subs	r6, r6, #32
 4697              	.LVL678:
 4698 0258 B6B2     		uxth	r6, r6
 4699              	.LVL679:
 4700 025a CEE7     		b	.L457
 4701              	.L480:
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4702              		.loc 1 2727 0 discriminator 1
 4703 025c 0523     		movs	r3, #5
 4704 025e 87F82430 		strb	r3, [r7, #36]
 4705 0262 9BE7     		b	.L459
 4706              	.L481:
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
 4707              		.loc 1 2729 0 discriminator 1
 4708 0264 019B     		ldr	r3, [sp, #4]
 4709 0266 9B00     		lsls	r3, r3, #2
 4710 0268 DBB2     		uxtb	r3, r3
 4711 026a 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 198


 4712              	.LVL680:
 4713 026c 99E7     		b	.L460
 4714              	.L482:
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
 4715              		.loc 1 2732 0 discriminator 1
 4716 026e 48F01008 		orr	r8, r8, #16
 4717              	.LVL681:
 4718 0272 A9E7     		b	.L464
 4719              	.L483:
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4720              		.loc 1 2733 0 discriminator 1
 4721 0274 48F00808 		orr	r8, r8, #8
 4722              	.LVL682:
 4723 0278 A8E7     		b	.L463
 4724              	.LVL683:
 4725              	.L465:
2638:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
 4726              		.loc 1 2638 0
 4727 027a 0620     		movs	r0, #6
 4728              	.LVL684:
 4729 027c 00E0     		b	.L426
 4730              	.LVL685:
 4731              	.L466:
2647:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4732              		.loc 1 2647 0
 4733 027e 0620     		movs	r0, #6
 4734              	.LVL686:
 4735              	.L426:
2803:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4736              		.loc 1 2803 0
 4737 0280 03B0     		add	sp, sp, #12
 4738              	.LCFI47:
 4739              		.cfi_remember_state
 4740              		.cfi_def_cfa_offset 36
 4741              		@ sp needed
 4742 0282 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4743              	.LVL687:
 4744              	.L470:
 4745              	.LCFI48:
 4746              		.cfi_restore_state
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4747              		.loc 1 2670 0
 4748 0286 0620     		movs	r0, #6
 4749 0288 FAE7     		b	.L426
 4750              	.L487:
 4751 028a 00BF     		.align	2
 4752              	.L486:
 4753 028c 00000000 		.word	.LC0
 4754 0290 FEFFFF7F 		.word	2147483646
 4755 0294 00000000 		.word	.LANCHOR2
 4756 0298 0C000000 		.word	.LC1
 4757              		.cfi_endproc
 4758              	.LFE184:
 4760              		.section	.text.get_fileinfo,"ax",%progbits
 4761              		.align	1
 4762              		.syntax unified
 4763              		.thumb
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 199


 4764              		.thumb_func
 4765              		.fpu fpv5-sp-d16
 4767              	get_fileinfo:
 4768              	.LFB181:
2448:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
 4769              		.loc 1 2448 0
 4770              		.cfi_startproc
 4771              		@ args = 0, pretend = 0, frame = 0
 4772              		@ frame_needed = 0, uses_anonymous_args = 0
 4773              	.LVL688:
 4774 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4775              	.LCFI49:
 4776              		.cfi_def_cfa_offset 24
 4777              		.cfi_offset 4, -24
 4778              		.cfi_offset 5, -20
 4779              		.cfi_offset 6, -16
 4780              		.cfi_offset 7, -12
 4781              		.cfi_offset 8, -8
 4782              		.cfi_offset 14, -4
2454:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4783              		.loc 1 2454 0
 4784 0004 D0F80080 		ldr	r8, [r0]
 4785              	.LVL689:
2458:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 4786              		.loc 1 2458 0
 4787 0008 0023     		movs	r3, #0
 4788 000a 8B75     		strb	r3, [r1, #22]
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4789              		.loc 1 2459 0
 4790 000c C369     		ldr	r3, [r0, #28]
 4791 000e 002B     		cmp	r3, #0
 4792 0010 69D0     		beq	.L488
 4793 0012 0D46     		mov	r5, r1
 4794 0014 0646     		mov	r6, r0
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = j = 0;
 4795              		.loc 1 2469 0
 4796 0016 036B     		ldr	r3, [r0, #48]
 4797 0018 B3F1FF3F 		cmp	r3, #-1
 4798 001c 14D0     		beq	.L491
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
 4799              		.loc 1 2470 0
 4800 001e 0024     		movs	r4, #0
 4801              	.LVL690:
 4802              	.L490:
2471:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
 4803              		.loc 1 2471 0
 4804 0020 D8F80C30 		ldr	r3, [r8, #12]
 4805 0024 671C     		adds	r7, r4, #1
 4806              	.LVL691:
 4807 0026 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 4808              	.LVL692:
 4809 002a 50B1     		cbz	r0, .L492
2473:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
 4810              		.loc 1 2473 0
 4811 002c 0021     		movs	r1, #0
 4812 002e FFF7FEFF 		bl	ff_convert
 4813              	.LVL693:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 200


2474:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
 4814              		.loc 1 2474 0
 4815 0032 28B1     		cbz	r0, .L505
2479:Middlewares/Third_Party/FatFs/src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
 4816              		.loc 1 2479 0
 4817 0034 FE2C     		cmp	r4, #254
 4818 0036 0BD8     		bhi	.L506
 4819              	.LVL694:
2480:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4820              		.loc 1 2480 0
 4821 0038 2C44     		add	r4, r4, r5
 4822 003a A075     		strb	r0, [r4, #22]
 4823 003c 3C46     		mov	r4, r7
 4824 003e EFE7     		b	.L490
 4825              	.LVL695:
 4826              	.L505:
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
 4827              		.loc 1 2474 0
 4828 0040 0024     		movs	r4, #0
 4829              	.LVL696:
 4830              	.L492:
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4831              		.loc 1 2482 0
 4832 0042 2C44     		add	r4, r4, r5
 4833              	.LVL697:
 4834 0044 0023     		movs	r3, #0
 4835 0046 A375     		strb	r3, [r4, #22]
 4836              	.LVL698:
 4837              	.L491:
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
 4838              		.loc 1 2487 0
 4839 0048 AC7D     		ldrb	r4, [r5, #22]	@ zero_extendqisi2
 4840              	.LVL699:
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfv = fno->fname[i];	/* LFN is exist if non-zero */
 4841              		.loc 1 2486 0
 4842 004a 0022     		movs	r2, #0
 4843 004c 1346     		mov	r3, r2
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
 4844              		.loc 1 2488 0
 4845 004e 12E0     		b	.L494
 4846              	.LVL700:
 4847              	.L506:
2479:Middlewares/Third_Party/FatFs/src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
 4848              		.loc 1 2479 0
 4849 0050 0024     		movs	r4, #0
 4850              	.LVL701:
 4851 0052 F6E7     		b	.L492
 4852              	.LVL702:
 4853              	.L512:
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
 4854              		.loc 1 2491 0
 4855 0054 E523     		movs	r3, #229
 4856              	.LVL703:
 4857 0056 17E0     		b	.L496
 4858              	.LVL704:
 4859              	.L513:
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->altname[j++] = '.';
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 201


 4860              		.loc 1 2493 0
 4861 0058 14B9     		cbnz	r4, .L498
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->altname[j++] = '.';
 4862              		.loc 1 2493 0 is_stmt 0 discriminator 1
 4863 005a A818     		adds	r0, r5, r2
 4864 005c 2E27     		movs	r7, #46
 4865 005e 8775     		strb	r7, [r0, #22]
 4866              	.L498:
 4867              	.LVL705:
2494:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4868              		.loc 1 2494 0 is_stmt 1
 4869 0060 A818     		adds	r0, r5, r2
 4870 0062 2E27     		movs	r7, #46
 4871 0064 4772     		strb	r7, [r0, #9]
 4872 0066 0132     		adds	r2, r2, #1
 4873              	.LVL706:
 4874 0068 10E0     		b	.L497
 4875              	.L514:
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 4876              		.loc 1 2505 0
 4877 006a 1020     		movs	r0, #16
 4878 006c 1CE0     		b	.L501
 4879              	.L500:
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4880              		.loc 1 2508 0
 4881 006e A818     		adds	r0, r5, r2
 4882 0070 8375     		strb	r3, [r0, #22]
 4883              	.L499:
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4884              		.loc 1 2510 0
 4885 0072 0132     		adds	r2, r2, #1
 4886              	.LVL707:
 4887              	.L495:
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 4888              		.loc 1 2505 0
 4889 0074 0B46     		mov	r3, r1
 4890              	.LVL708:
 4891              	.L494:
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
 4892              		.loc 1 2488 0
 4893 0076 0A2B     		cmp	r3, #10
 4894 0078 1BD8     		bhi	.L511
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
 4895              		.loc 1 2489 0
 4896 007a 306A     		ldr	r0, [r6, #32]
 4897 007c 591C     		adds	r1, r3, #1
 4898              	.LVL709:
 4899 007e C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 4900              	.LVL710:
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 4901              		.loc 1 2490 0
 4902 0080 202B     		cmp	r3, #32
 4903 0082 F7D0     		beq	.L495
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
 4904              		.loc 1 2491 0
 4905 0084 052B     		cmp	r3, #5
 4906 0086 E5D0     		beq	.L512
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 202


 4907              	.LVL711:
 4908              	.L496:
2492:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!lfv) fno->fname[j] = '.';
 4909              		.loc 1 2492 0
 4910 0088 0929     		cmp	r1, #9
 4911 008a E5D0     		beq	.L513
 4912              	.L497:
2503:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!lfv) {
 4913              		.loc 1 2503 0
 4914 008c A818     		adds	r0, r5, r2
 4915 008e 4372     		strb	r3, [r0, #9]
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
 4916              		.loc 1 2504 0
 4917 0090 002C     		cmp	r4, #0
 4918 0092 EED1     		bne	.L499
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 4919              		.loc 1 2505 0
 4920 0094 A3F14100 		sub	r0, r3, #65
 4921 0098 C0B2     		uxtb	r0, r0
 4922 009a 1928     		cmp	r0, #25
 4923 009c E7D8     		bhi	.L500
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 4924              		.loc 1 2505 0 is_stmt 0 discriminator 1
 4925 009e 306A     		ldr	r0, [r6, #32]
 4926 00a0 077B     		ldrb	r7, [r0, #12]	@ zero_extendqisi2
 4927 00a2 0829     		cmp	r1, #8
 4928 00a4 E1D8     		bhi	.L514
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 4929              		.loc 1 2505 0
 4930 00a6 0820     		movs	r0, #8
 4931              	.L501:
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 4932              		.loc 1 2505 0 discriminator 5
 4933 00a8 0742     		tst	r7, r0
 4934 00aa E0D0     		beq	.L500
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4935              		.loc 1 2506 0 is_stmt 1
 4936 00ac 2033     		adds	r3, r3, #32
 4937              	.LVL712:
 4938 00ae DBB2     		uxtb	r3, r3
 4939              	.LVL713:
 4940 00b0 DDE7     		b	.L500
 4941              	.LVL714:
 4942              	.L511:
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j] = 0;
 4943              		.loc 1 2512 0
 4944 00b2 34B9     		cbnz	r4, .L503
2513:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is ex
 4945              		.loc 1 2513 0
 4946 00b4 AB18     		adds	r3, r5, r2
 4947              	.LVL715:
 4948 00b6 0021     		movs	r1, #0
 4949 00b8 9975     		strb	r1, [r3, #22]
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4950              		.loc 1 2514 0
 4951 00ba 336A     		ldr	r3, [r6, #32]
 4952 00bc 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 203


 4953 00be 03B9     		cbnz	r3, .L503
 4954 00c0 0A46     		mov	r2, r1
 4955              	.LVL716:
 4956              	.L503:
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4957              		.loc 1 2516 0
 4958 00c2 2A44     		add	r2, r2, r5
 4959              	.LVL717:
 4960 00c4 0023     		movs	r3, #0
 4961 00c6 5372     		strb	r3, [r2, #9]
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
 4962              		.loc 1 2530 0
 4963 00c8 336A     		ldr	r3, [r6, #32]
 4964 00ca DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 4965 00cc 2B72     		strb	r3, [r5, #8]
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
 4966              		.loc 1 2531 0
 4967 00ce 306A     		ldr	r0, [r6, #32]
 4968 00d0 1C30     		adds	r0, r0, #28
 4969 00d2 FFF7FEFF 		bl	ld_dword
 4970              	.LVL718:
 4971 00d6 2860     		str	r0, [r5]
2532:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
 4972              		.loc 1 2532 0
 4973 00d8 306A     		ldr	r0, [r6, #32]
 4974 00da 1630     		adds	r0, r0, #22
 4975 00dc FFF7FEFF 		bl	ld_dword
 4976              	.LVL719:
2533:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4977              		.loc 1 2533 0
 4978 00e0 E880     		strh	r0, [r5, #6]	@ movhi
 4979 00e2 000C     		lsrs	r0, r0, #16
 4980              	.LVL720:
 4981 00e4 A880     		strh	r0, [r5, #4]	@ movhi
 4982              	.LVL721:
 4983              	.L488:
2534:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4984              		.loc 1 2534 0
 4985 00e6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4986              		.cfi_endproc
 4987              	.LFE181:
 4989              		.section	.text.cmp_lfn,"ax",%progbits
 4990              		.align	1
 4991              		.syntax unified
 4992              		.thumb
 4993              		.thumb_func
 4994              		.fpu fpv5-sp-d16
 4996              	cmp_lfn:
 4997              	.LFB172:
1681:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
 4998              		.loc 1 1681 0
 4999              		.cfi_startproc
 5000              		@ args = 0, pretend = 0, frame = 0
 5001              		@ frame_needed = 0, uses_anonymous_args = 0
 5002              	.LVL722:
 5003 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 5004              	.LCFI50:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 204


 5005              		.cfi_def_cfa_offset 32
 5006              		.cfi_offset 4, -32
 5007              		.cfi_offset 5, -28
 5008              		.cfi_offset 6, -24
 5009              		.cfi_offset 7, -20
 5010              		.cfi_offset 8, -16
 5011              		.cfi_offset 9, -12
 5012              		.cfi_offset 10, -8
 5013              		.cfi_offset 14, -4
 5014 0004 8146     		mov	r9, r0
 5015 0006 0F46     		mov	r7, r1
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5016              		.loc 1 1686 0
 5017 0008 01F11A00 		add	r0, r1, #26
 5018              	.LVL723:
 5019 000c FFF7FEFF 		bl	ld_word
 5020              	.LVL724:
 5021 0010 B8BB     		cbnz	r0, .L521
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5022              		.loc 1 1688 0
 5023 0012 3D78     		ldrb	r5, [r7]	@ zero_extendqisi2
 5024 0014 05F03F05 		and	r5, r5, #63
 5025 0018 013D     		subs	r5, r5, #1
 5026 001a 05EB4503 		add	r3, r5, r5, lsl #1
 5027 001e 05EB8305 		add	r5, r5, r3, lsl #2
 5028              	.LVL725:
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 5029              		.loc 1 1690 0
 5030 0022 4FF00108 		mov	r8, #1
 5031 0026 0024     		movs	r4, #0
 5032 0028 04E0     		b	.L517
 5033              	.LVL726:
 5034              	.L518:
1698:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5035              		.loc 1 1698 0
 5036 002a 4FF6FF73 		movw	r3, #65535
 5037 002e 9842     		cmp	r0, r3
 5038 0030 2ED1     		bne	.L524
 5039              	.LVL727:
 5040              	.L519:
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 5041              		.loc 1 1690 0 discriminator 2
 5042 0032 0134     		adds	r4, r4, #1
 5043              	.LVL728:
 5044              	.L517:
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 5045              		.loc 1 1690 0 is_stmt 0 discriminator 1
 5046 0034 0C2C     		cmp	r4, #12
 5047 0036 18D8     		bhi	.L529
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
 5048              		.loc 1 1691 0 is_stmt 1
 5049 0038 194B     		ldr	r3, .L530
 5050 003a 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 5051 003c 3844     		add	r0, r0, r7
 5052 003e FFF7FEFF 		bl	ld_word
 5053              	.LVL729:
 5054 0042 0646     		mov	r6, r0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 205


 5055              	.LVL730:
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
 5056              		.loc 1 1692 0
 5057 0044 B8F1000F 		cmp	r8, #0
 5058 0048 EFD0     		beq	.L518
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
 5059              		.loc 1 1693 0
 5060 004a FE2D     		cmp	r5, #254
 5061 004c 1CD8     		bhi	.L522
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
 5062              		.loc 1 1693 0 is_stmt 0 discriminator 1
 5063 004e FFF7FEFF 		bl	ff_wtoupper
 5064              	.LVL731:
 5065 0052 8046     		mov	r8, r0
 5066              	.LVL732:
 5067 0054 05F1010A 		add	r10, r5, #1
 5068              	.LVL733:
 5069 0058 39F81500 		ldrh	r0, [r9, r5, lsl #1]
 5070 005c FFF7FEFF 		bl	ff_wtoupper
 5071              	.LVL734:
 5072 0060 8045     		cmp	r8, r0
 5073 0062 13D1     		bne	.L523
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 5074              		.loc 1 1696 0 is_stmt 1
 5075 0064 B046     		mov	r8, r6
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
 5076              		.loc 1 1693 0
 5077 0066 5546     		mov	r5, r10
 5078 0068 E3E7     		b	.L519
 5079              	.LVL735:
 5080              	.L529:
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5081              		.loc 1 1702 0
 5082 006a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5083 006c 13F0400F 		tst	r3, #64
 5084 0070 10D0     		beq	.L525
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5085              		.loc 1 1702 0 is_stmt 0 discriminator 1
 5086 0072 B8F1000F 		cmp	r8, #0
 5087 0076 0FD0     		beq	.L526
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5088              		.loc 1 1702 0 discriminator 2
 5089 0078 39F81530 		ldrh	r3, [r9, r5, lsl #1]
 5090 007c 73B9     		cbnz	r3, .L527
1704:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5091              		.loc 1 1704 0 is_stmt 1
 5092 007e 0120     		movs	r0, #1
 5093 0080 00E0     		b	.L515
 5094              	.LVL736:
 5095              	.L521:
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5096              		.loc 1 1686 0
 5097 0082 0020     		movs	r0, #0
 5098              	.L515:
1705:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5099              		.loc 1 1705 0
 5100 0084 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 206


 5101              	.LVL737:
 5102              	.L522:
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5103              		.loc 1 1694 0
 5104 0088 0020     		movs	r0, #0
 5105              	.LVL738:
 5106 008a FBE7     		b	.L515
 5107              	.LVL739:
 5108              	.L523:
 5109 008c 0020     		movs	r0, #0
 5110 008e F9E7     		b	.L515
 5111              	.LVL740:
 5112              	.L524:
1698:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5113              		.loc 1 1698 0
 5114 0090 0020     		movs	r0, #0
 5115              	.LVL741:
 5116 0092 F7E7     		b	.L515
 5117              	.L525:
1704:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5118              		.loc 1 1704 0
 5119 0094 0120     		movs	r0, #1
 5120 0096 F5E7     		b	.L515
 5121              	.L526:
 5122 0098 0120     		movs	r0, #1
 5123 009a F3E7     		b	.L515
 5124              	.L527:
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5125              		.loc 1 1702 0
 5126 009c 0020     		movs	r0, #0
 5127 009e F1E7     		b	.L515
 5128              	.L531:
 5129              		.align	2
 5130              	.L530:
 5131 00a0 00000000 		.word	.LANCHOR1
 5132              		.cfi_endproc
 5133              	.LFE172:
 5135              		.section	.text.dir_find,"ax",%progbits
 5136              		.align	1
 5137              		.syntax unified
 5138              		.thumb
 5139              		.thumb_func
 5140              		.fpu fpv5-sp-d16
 5142              	dir_find:
 5143              	.LFB178:
2213:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5144              		.loc 1 2213 0
 5145              		.cfi_startproc
 5146              		@ args = 0, pretend = 0, frame = 0
 5147              		@ frame_needed = 0, uses_anonymous_args = 0
 5148              	.LVL742:
 5149 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 5150              	.LCFI51:
 5151              		.cfi_def_cfa_offset 32
 5152              		.cfi_offset 3, -32
 5153              		.cfi_offset 4, -28
 5154              		.cfi_offset 5, -24
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 207


 5155              		.cfi_offset 6, -20
 5156              		.cfi_offset 7, -16
 5157              		.cfi_offset 8, -12
 5158              		.cfi_offset 9, -8
 5159              		.cfi_offset 14, -4
 5160 0004 0446     		mov	r4, r0
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
 5161              		.loc 1 2215 0
 5162 0006 D0F80080 		ldr	r8, [r0]
 5163              	.LVL743:
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
 5164              		.loc 1 2221 0
 5165 000a 0021     		movs	r1, #0
 5166 000c FFF7FEFF 		bl	dir_sdi
 5167              	.LVL744:
2222:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 5168              		.loc 1 2222 0
 5169 0010 0646     		mov	r6, r0
 5170 0012 0028     		cmp	r0, #0
 5171 0014 64D1     		bne	.L533
 5172              	.LVL745:
2245:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5173              		.loc 1 2245 0
 5174 0016 4FF0FF33 		mov	r3, #-1
 5175 001a 2363     		str	r3, [r4, #48]
 5176 001c 4FF0FF09 		mov	r9, #255
 5177 0020 4F46     		mov	r7, r9
 5178 0022 0AE0     		b	.L541
 5179              	.LVL746:
 5180              	.L534:
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 5181              		.loc 1 2255 0
 5182 0024 4FF0FF33 		mov	r3, #-1
 5183              	.LVL747:
 5184 0028 2363     		str	r3, [r4, #48]
 5185 002a FF27     		movs	r7, #255
 5186              	.LVL748:
 5187              	.L536:
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
 5188              		.loc 1 2277 0
 5189 002c 0021     		movs	r1, #0
 5190 002e 2046     		mov	r0, r4
 5191 0030 FFF7FEFF 		bl	dir_next
 5192              	.LVL749:
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5193              		.loc 1 2278 0
 5194 0034 0646     		mov	r6, r0
 5195 0036 0028     		cmp	r0, #0
 5196 0038 52D1     		bne	.L533
 5197              	.LVL750:
 5198              	.L541:
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 5199              		.loc 1 2248 0
 5200 003a E169     		ldr	r1, [r4, #28]
 5201 003c 4046     		mov	r0, r8
 5202              	.LVL751:
 5203 003e FFF7FEFF 		bl	move_window
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 208


 5204              	.LVL752:
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
 5205              		.loc 1 2249 0
 5206 0042 0646     		mov	r6, r0
 5207 0044 0028     		cmp	r0, #0
 5208 0046 4BD1     		bne	.L533
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 5209              		.loc 1 2250 0
 5210 0048 256A     		ldr	r5, [r4, #32]
 5211 004a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5212              	.LVL753:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 5213              		.loc 1 2251 0
 5214 004c 002B     		cmp	r3, #0
 5215 004e 46D0     		beq	.L542
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
 5216              		.loc 1 2253 0
 5217 0050 E97A     		ldrb	r1, [r5, #11]	@ zero_extendqisi2
 5218 0052 01F03F02 		and	r2, r1, #63
 5219              	.LVL754:
 5220 0056 A271     		strb	r2, [r4, #6]
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 5221              		.loc 1 2254 0
 5222 0058 E52B     		cmp	r3, #229
 5223 005a E3D0     		beq	.L534
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 5224              		.loc 1 2254 0 is_stmt 0 discriminator 1
 5225 005c 11F0080F 		tst	r1, #8
 5226 0060 01D0     		beq	.L535
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 5227              		.loc 1 2254 0 discriminator 2
 5228 0062 0F2A     		cmp	r2, #15
 5229 0064 DED1     		bne	.L534
 5230              	.L535:
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
 5231              		.loc 1 2257 0 is_stmt 1
 5232 0066 0F2A     		cmp	r2, #15
 5233 0068 16D0     		beq	.L547
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
 5234              		.loc 1 2268 0
 5235 006a 27B9     		cbnz	r7, .L539
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
 5236              		.loc 1 2268 0 is_stmt 0 discriminator 1
 5237 006c 2846     		mov	r0, r5
 5238              	.LVL755:
 5239 006e FFF7FEFF 		bl	sum_sfn
 5240              	.LVL756:
 5241 0072 4845     		cmp	r0, r9
 5242 0074 34D0     		beq	.L533
 5243              	.L539:
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 5244              		.loc 1 2269 0 is_stmt 1
 5245 0076 94F82F30 		ldrb	r3, [r4, #47]	@ zero_extendqisi2
 5246 007a 13F0010F 		tst	r3, #1
 5247 007e 06D1     		bne	.L540
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 5248              		.loc 1 2269 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 209


 5249 0080 0B22     		movs	r2, #11
 5250 0082 04F12401 		add	r1, r4, #36
 5251 0086 2846     		mov	r0, r5
 5252 0088 FFF7FEFF 		bl	mem_cmp
 5253              	.LVL757:
 5254 008c 40B3     		cbz	r0, .L533
 5255              	.L540:
 5256              	.LVL758:
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5257              		.loc 1 2270 0 is_stmt 1
 5258 008e 4FF0FF33 		mov	r3, #-1
 5259 0092 2363     		str	r3, [r4, #48]
 5260 0094 FF27     		movs	r7, #255
 5261 0096 C9E7     		b	.L536
 5262              	.LVL759:
 5263              	.L547:
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
 5264              		.loc 1 2258 0
 5265 0098 94F82F20 		ldrb	r2, [r4, #47]	@ zero_extendqisi2
 5266              	.LVL760:
 5267 009c 12F0400F 		tst	r2, #64
 5268 00a0 C4D1     		bne	.L536
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
 5269              		.loc 1 2259 0
 5270 00a2 13F0400F 		tst	r3, #64
 5271 00a6 06D0     		beq	.L538
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
 5272              		.loc 1 2260 0
 5273 00a8 95F80D90 		ldrb	r9, [r5, #13]	@ zero_extendqisi2
 5274              	.LVL761:
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
 5275              		.loc 1 2261 0
 5276 00ac 03F0BF03 		and	r3, r3, #191
 5277              	.LVL762:
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5278              		.loc 1 2262 0
 5279 00b0 6269     		ldr	r2, [r4, #20]
 5280 00b2 2263     		str	r2, [r4, #48]
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
 5281              		.loc 1 2261 0
 5282 00b4 1F46     		mov	r7, r3
 5283              	.LVL763:
 5284              	.L538:
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5285              		.loc 1 2265 0
 5286 00b6 BB42     		cmp	r3, r7
 5287 00b8 01D0     		beq	.L548
 5288 00ba FF27     		movs	r7, #255
 5289              	.LVL764:
 5290 00bc B6E7     		b	.L536
 5291              	.LVL765:
 5292              	.L548:
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5293              		.loc 1 2265 0 is_stmt 0 discriminator 1
 5294 00be 6B7B     		ldrb	r3, [r5, #13]	@ zero_extendqisi2
 5295              	.LVL766:
 5296 00c0 4B45     		cmp	r3, r9
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 210


 5297 00c2 01D0     		beq	.L549
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5298              		.loc 1 2265 0
 5299 00c4 FF27     		movs	r7, #255
 5300              	.LVL767:
 5301 00c6 B1E7     		b	.L536
 5302              	.LVL768:
 5303              	.L549:
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5304              		.loc 1 2265 0 discriminator 3
 5305 00c8 2946     		mov	r1, r5
 5306 00ca D8F80C00 		ldr	r0, [r8, #12]
 5307              	.LVL769:
 5308 00ce FFF7FEFF 		bl	cmp_lfn
 5309              	.LVL770:
 5310 00d2 10B1     		cbz	r0, .L545
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5311              		.loc 1 2265 0 discriminator 5
 5312 00d4 013F     		subs	r7, r7, #1
 5313              	.LVL771:
 5314 00d6 FFB2     		uxtb	r7, r7
 5315 00d8 A8E7     		b	.L536
 5316              	.LVL772:
 5317              	.L545:
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5318              		.loc 1 2265 0
 5319 00da FF27     		movs	r7, #255
 5320              	.LVL773:
 5321 00dc A6E7     		b	.L536
 5322              	.LVL774:
 5323              	.L542:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 5324              		.loc 1 2251 0 is_stmt 1
 5325 00de 0426     		movs	r6, #4
 5326              	.LVL775:
 5327              	.L533:
2281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5328              		.loc 1 2281 0
 5329 00e0 3046     		mov	r0, r6
 5330 00e2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5331              		.cfi_endproc
 5332              	.LFE178:
 5334              		.section	.text.follow_path,"ax",%progbits
 5335              		.align	1
 5336              		.syntax unified
 5337              		.thumb
 5338              		.thumb_func
 5339              		.fpu fpv5-sp-d16
 5341              	follow_path:
 5342              	.LFB185:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5343              		.loc 1 2817 0
 5344              		.cfi_startproc
 5345              		@ args = 0, pretend = 0, frame = 8
 5346              		@ frame_needed = 0, uses_anonymous_args = 0
 5347              	.LVL776:
 5348 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 211


 5349              	.LCFI52:
 5350              		.cfi_def_cfa_offset 16
 5351              		.cfi_offset 4, -16
 5352              		.cfi_offset 5, -12
 5353              		.cfi_offset 6, -8
 5354              		.cfi_offset 14, -4
 5355 0002 82B0     		sub	sp, sp, #8
 5356              	.LCFI53:
 5357              		.cfi_def_cfa_offset 24
 5358 0004 0446     		mov	r4, r0
 5359 0006 0191     		str	r1, [sp, #4]
 5360              	.LVL777:
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5361              		.loc 1 2821 0
 5362 0008 0568     		ldr	r5, [r0]
 5363              	.LVL778:
2825:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = fs->cdir;				/* Start from current directory */
 5364              		.loc 1 2825 0
 5365 000a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 5366 000c 2F2B     		cmp	r3, #47
 5367 000e 18BF     		it	ne
 5368 0010 5C2B     		cmpne	r3, #92
 5369 0012 10D0     		beq	.L551
2826:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
 5370              		.loc 1 2826 0
 5371 0014 EB69     		ldr	r3, [r5, #28]
 5372 0016 8360     		str	r3, [r0, #8]
 5373              	.L552:
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
 5374              		.loc 1 2850 0
 5375 0018 019B     		ldr	r3, [sp, #4]
 5376 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5377 001c 1F2B     		cmp	r3, #31
 5378 001e 29D8     		bhi	.L554
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
 5379              		.loc 1 2851 0
 5380 0020 8023     		movs	r3, #128
 5381 0022 84F82F30 		strb	r3, [r4, #47]
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5382              		.loc 1 2852 0
 5383 0026 0021     		movs	r1, #0
 5384              	.LVL779:
 5385 0028 2046     		mov	r0, r4
 5386              	.LVL780:
 5387 002a FFF7FEFF 		bl	dir_sdi
 5388              	.LVL781:
 5389 002e 0646     		mov	r6, r0
 5390              	.LVL782:
 5391 0030 38E0     		b	.L555
 5392              	.LVL783:
 5393              	.L553:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 5394              		.loc 1 2830 0 discriminator 2
 5395 0032 0133     		adds	r3, r3, #1
 5396 0034 0193     		str	r3, [sp, #4]
 5397              	.L551:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 212


 5398              		.loc 1 2830 0 is_stmt 0 discriminator 1
 5399 0036 019B     		ldr	r3, [sp, #4]
 5400 0038 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5401 003a 5C2A     		cmp	r2, #92
 5402 003c 18BF     		it	ne
 5403 003e 2F2A     		cmpne	r2, #47
 5404 0040 F7D0     		beq	.L553
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5405              		.loc 1 2831 0 is_stmt 1
 5406 0042 0023     		movs	r3, #0
 5407 0044 A360     		str	r3, [r4, #8]
 5408 0046 E7E7     		b	.L552
 5409              	.LVL784:
 5410              	.L557:
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5411              		.loc 1 2867 0
 5412 0048 13F0040F 		tst	r3, #4
 5413 004c 2FD0     		beq	.L560
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 5414              		.loc 1 2858 0
 5415 004e 0646     		mov	r6, r0
 5416 0050 28E0     		b	.L555
 5417              	.L556:
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
 5418              		.loc 1 2872 0
 5419 0052 13F0040F 		tst	r3, #4
 5420 0056 2CD1     		bne	.L561
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
 5421              		.loc 1 2874 0
 5422 0058 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 5423              	.LVL785:
 5424 005a 13F0100F 		tst	r3, #16
 5425 005e 2AD0     		beq	.L562
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5426              		.loc 1 2888 0
 5427 0060 05F13C01 		add	r1, r5, #60
 5428 0064 6369     		ldr	r3, [r4, #20]
 5429 0066 C3F30803 		ubfx	r3, r3, #0, #9
 5430 006a 1944     		add	r1, r1, r3
 5431 006c 2846     		mov	r0, r5
 5432              	.LVL786:
 5433 006e FFF7FEFF 		bl	ld_clust
 5434              	.LVL787:
 5435 0072 A060     		str	r0, [r4, #8]
 5436              	.L554:
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 5437              		.loc 1 2856 0
 5438 0074 01A9     		add	r1, sp, #4
 5439 0076 2046     		mov	r0, r4
 5440 0078 FFF7FEFF 		bl	create_name
 5441              	.LVL788:
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
 5442              		.loc 1 2857 0
 5443 007c 0646     		mov	r6, r0
 5444 007e 88B9     		cbnz	r0, .L555
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 5445              		.loc 1 2858 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 213


 5446 0080 2046     		mov	r0, r4
 5447              	.LVL789:
 5448 0082 FFF7FEFF 		bl	dir_find
 5449              	.LVL790:
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 5450              		.loc 1 2859 0
 5451 0086 94F82F30 		ldrb	r3, [r4, #47]	@ zero_extendqisi2
 5452              	.LVL791:
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 5453              		.loc 1 2860 0
 5454 008a 0028     		cmp	r0, #0
 5455 008c E1D0     		beq	.L556
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 5456              		.loc 1 2861 0
 5457 008e 0428     		cmp	r0, #4
 5458 0090 0BD1     		bne	.L559
2862:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
 5459              		.loc 1 2862 0
 5460 0092 13F0200F 		tst	r3, #32
 5461 0096 D7D0     		beq	.L557
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
 5462              		.loc 1 2863 0
 5463 0098 13F0040F 		tst	r3, #4
 5464 009c EAD0     		beq	.L554
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;
 5465              		.loc 1 2864 0
 5466 009e 8023     		movs	r3, #128
 5467              	.LVL792:
 5468 00a0 84F82F30 		strb	r3, [r4, #47]
 5469              	.LVL793:
 5470              	.L555:
2894:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5471              		.loc 1 2894 0
 5472 00a4 3046     		mov	r0, r6
 5473 00a6 02B0     		add	sp, sp, #8
 5474              	.LCFI54:
 5475              		.cfi_remember_state
 5476              		.cfi_def_cfa_offset 16
 5477              		@ sp needed
 5478 00a8 70BD     		pop	{r4, r5, r6, pc}
 5479              	.LVL794:
 5480              	.L559:
 5481              	.LCFI55:
 5482              		.cfi_restore_state
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 5483              		.loc 1 2858 0
 5484 00aa 0646     		mov	r6, r0
 5485 00ac FAE7     		b	.L555
 5486              	.L560:
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5487              		.loc 1 2867 0
 5488 00ae 0526     		movs	r6, #5
 5489 00b0 F8E7     		b	.L555
 5490              	.L561:
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 5491              		.loc 1 2858 0
 5492 00b2 0646     		mov	r6, r0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 214


 5493 00b4 F6E7     		b	.L555
 5494              	.LVL795:
 5495              	.L562:
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5496              		.loc 1 2875 0
 5497 00b6 0526     		movs	r6, #5
 5498 00b8 F4E7     		b	.L555
 5499              		.cfi_endproc
 5500              	.LFE185:
 5502              		.section	.text.dir_register,"ax",%progbits
 5503              		.align	1
 5504              		.syntax unified
 5505              		.thumb
 5506              		.thumb_func
 5507              		.fpu fpv5-sp-d16
 5509              	dir_register:
 5510              	.LFB179:
2295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5511              		.loc 1 2295 0
 5512              		.cfi_startproc
 5513              		@ args = 0, pretend = 0, frame = 16
 5514              		@ frame_needed = 0, uses_anonymous_args = 0
 5515              	.LVL796:
 5516 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5517              	.LCFI56:
 5518              		.cfi_def_cfa_offset 28
 5519              		.cfi_offset 4, -28
 5520              		.cfi_offset 5, -24
 5521              		.cfi_offset 6, -20
 5522              		.cfi_offset 7, -16
 5523              		.cfi_offset 8, -12
 5524              		.cfi_offset 9, -8
 5525              		.cfi_offset 14, -4
 5526 0004 85B0     		sub	sp, sp, #20
 5527              	.LCFI57:
 5528              		.cfi_def_cfa_offset 48
2297:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 5529              		.loc 1 2297 0
 5530 0006 0668     		ldr	r6, [r0]
 5531              	.LVL797:
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
 5532              		.loc 1 2303 0
 5533 0008 90F82F30 		ldrb	r3, [r0, #47]	@ zero_extendqisi2
 5534 000c 13F0A00F 		tst	r3, #160
 5535 0010 40F08D80 		bne	.L575
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5536              		.loc 1 2304 0
 5537 0014 0024     		movs	r4, #0
 5538 0016 00E0     		b	.L566
 5539              	.LVL798:
 5540              	.L567:
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5541              		.loc 1 2304 0 is_stmt 0 discriminator 3
 5542 0018 0134     		adds	r4, r4, #1
 5543              	.LVL799:
 5544              	.L566:
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 215


 5545              		.loc 1 2304 0 discriminator 1
 5546 001a F368     		ldr	r3, [r6, #12]
 5547 001c 33F81430 		ldrh	r3, [r3, r4, lsl #1]
 5548 0020 002B     		cmp	r3, #0
 5549 0022 F9D1     		bne	.L567
 5550 0024 0546     		mov	r5, r0
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
 5551              		.loc 1 2335 0 is_stmt 1
 5552 0026 00F12407 		add	r7, r0, #36
 5553 002a 0C22     		movs	r2, #12
 5554 002c 3946     		mov	r1, r7
 5555 002e 01A8     		add	r0, sp, #4
 5556              	.LVL800:
 5557 0030 FFF7FEFF 		bl	mem_cpy
 5558              	.LVL801:
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
 5559              		.loc 1 2336 0
 5560 0034 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 5561 0038 13F0010F 		tst	r3, #1
 5562 003c 1FD0     		beq	.L568
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
 5563              		.loc 1 2337 0
 5564 003e 4023     		movs	r3, #64
 5565 0040 85F82F30 		strb	r3, [r5, #47]
 5566              	.LVL802:
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
 5567              		.loc 1 2338 0
 5568 0044 4FF00108 		mov	r8, #1
 5569              	.LVL803:
 5570              	.L569:
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
 5571              		.loc 1 2338 0 is_stmt 0 discriminator 1
 5572 0048 B8F1630F 		cmp	r8, #99
 5573 004c 0DD8     		bhi	.L570
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
 5574              		.loc 1 2339 0 is_stmt 1
 5575 004e 4346     		mov	r3, r8
 5576 0050 F268     		ldr	r2, [r6, #12]
 5577 0052 01A9     		add	r1, sp, #4
 5578 0054 3846     		mov	r0, r7
 5579 0056 FFF7FEFF 		bl	gen_numname
 5580              	.LVL804:
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 5581              		.loc 1 2340 0
 5582 005a 2846     		mov	r0, r5
 5583 005c FFF7FEFF 		bl	dir_find
 5584              	.LVL805:
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5585              		.loc 1 2341 0
 5586 0060 8146     		mov	r9, r0
 5587 0062 10B9     		cbnz	r0, .L570
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
 5588              		.loc 1 2338 0 discriminator 2
 5589 0064 08F10108 		add	r8, r8, #1
 5590              	.LVL806:
 5591 0068 EEE7     		b	.L569
 5592              	.LVL807:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 216


 5593              	.L570:
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
 5594              		.loc 1 2343 0
 5595 006a B8F1640F 		cmp	r8, #100
 5596 006e 64D0     		beq	.L576
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
 5597              		.loc 1 2344 0
 5598 0070 B9F1040F 		cmp	r9, #4
 5599 0074 5DD1     		bne	.L565
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5600              		.loc 1 2345 0
 5601 0076 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 5602 007a 85F82F30 		strb	r3, [r5, #47]
 5603              	.LVL808:
 5604              	.L568:
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
 5605              		.loc 1 2349 0
 5606 007e 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 5607 0082 13F0020F 		tst	r3, #2
 5608 0086 2AD0     		beq	.L577
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
 5609              		.loc 1 2349 0 is_stmt 0 discriminator 1
 5610 0088 0C34     		adds	r4, r4, #12
 5611              	.LVL809:
 5612 008a 2D4B     		ldr	r3, .L580
 5613 008c A3FB0434 		umull	r3, r4, r3, r4
 5614              	.LVL810:
 5615 0090 A408     		lsrs	r4, r4, #2
 5616 0092 0134     		adds	r4, r4, #1
 5617              	.L572:
 5618              	.LVL811:
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
 5619              		.loc 1 2350 0 is_stmt 1 discriminator 4
 5620 0094 2146     		mov	r1, r4
 5621 0096 2846     		mov	r0, r5
 5622 0098 FFF7FEFF 		bl	dir_alloc
 5623              	.LVL812:
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
 5624              		.loc 1 2351 0 discriminator 4
 5625 009c 8146     		mov	r9, r0
 5626 009e 08B9     		cbnz	r0, .L573
 5627              	.LVL813:
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
 5628              		.loc 1 2351 0 is_stmt 0 discriminator 1
 5629 00a0 013C     		subs	r4, r4, #1
 5630              	.LVL814:
 5631 00a2 1ED1     		bne	.L579
 5632              	.L573:
 5633              	.LVL815:
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 5634              		.loc 1 2371 0 is_stmt 1
 5635 00a4 B9F1000F 		cmp	r9, #0
 5636 00a8 43D1     		bne	.L565
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5637              		.loc 1 2372 0
 5638 00aa E969     		ldr	r1, [r5, #28]
 5639 00ac 3046     		mov	r0, r6
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 217


 5640 00ae FFF7FEFF 		bl	move_window
 5641              	.LVL816:
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 5642              		.loc 1 2373 0
 5643 00b2 8146     		mov	r9, r0
 5644 00b4 0028     		cmp	r0, #0
 5645 00b6 3CD1     		bne	.L565
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 5646              		.loc 1 2374 0
 5647 00b8 2022     		movs	r2, #32
 5648 00ba 0021     		movs	r1, #0
 5649 00bc 286A     		ldr	r0, [r5, #32]
 5650              	.LVL817:
 5651 00be FFF7FEFF 		bl	mem_set
 5652              	.LVL818:
2375:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 5653              		.loc 1 2375 0
 5654 00c2 0B22     		movs	r2, #11
 5655 00c4 3946     		mov	r1, r7
 5656 00c6 286A     		ldr	r0, [r5, #32]
 5657 00c8 FFF7FEFF 		bl	mem_cpy
 5658              	.LVL819:
2377:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5659              		.loc 1 2377 0
 5660 00cc 95F82F30 		ldrb	r3, [r5, #47]	@ zero_extendqisi2
 5661 00d0 2A6A     		ldr	r2, [r5, #32]
 5662 00d2 03F01803 		and	r3, r3, #24
 5663 00d6 1373     		strb	r3, [r2, #12]
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5664              		.loc 1 2379 0
 5665 00d8 0123     		movs	r3, #1
 5666 00da F370     		strb	r3, [r6, #3]
 5667 00dc 29E0     		b	.L565
 5668              	.LVL820:
 5669              	.L577:
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
 5670              		.loc 1 2349 0
 5671 00de 0124     		movs	r4, #1
 5672              	.LVL821:
 5673 00e0 D8E7     		b	.L572
 5674              	.LVL822:
 5675              	.L579:
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5676              		.loc 1 2352 0
 5677 00e2 6969     		ldr	r1, [r5, #20]
 5678 00e4 A1EB4411 		sub	r1, r1, r4, lsl #5
 5679 00e8 2846     		mov	r0, r5
 5680              	.LVL823:
 5681 00ea FFF7FEFF 		bl	dir_sdi
 5682              	.LVL824:
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
 5683              		.loc 1 2353 0
 5684 00ee 8146     		mov	r9, r0
 5685 00f0 0028     		cmp	r0, #0
 5686 00f2 D7D1     		bne	.L573
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
 5687              		.loc 1 2354 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 218


 5688 00f4 3846     		mov	r0, r7
 5689              	.LVL825:
 5690 00f6 FFF7FEFF 		bl	sum_sfn
 5691              	.LVL826:
 5692 00fa 8046     		mov	r8, r0
 5693              	.LVL827:
 5694              	.L574:
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
 5695              		.loc 1 2356 0
 5696 00fc E969     		ldr	r1, [r5, #28]
 5697 00fe 3046     		mov	r0, r6
 5698 0100 FFF7FEFF 		bl	move_window
 5699              	.LVL828:
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
 5700              		.loc 1 2357 0
 5701 0104 8146     		mov	r9, r0
 5702 0106 0028     		cmp	r0, #0
 5703 0108 CCD1     		bne	.L573
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
 5704              		.loc 1 2358 0
 5705 010a 4346     		mov	r3, r8
 5706 010c E2B2     		uxtb	r2, r4
 5707 010e 296A     		ldr	r1, [r5, #32]
 5708 0110 F068     		ldr	r0, [r6, #12]
 5709              	.LVL829:
 5710 0112 FFF7FEFF 		bl	put_lfn
 5711              	.LVL830:
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
 5712              		.loc 1 2359 0
 5713 0116 0123     		movs	r3, #1
 5714 0118 F370     		strb	r3, [r6, #3]
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
 5715              		.loc 1 2360 0
 5716 011a 0021     		movs	r1, #0
 5717 011c 2846     		mov	r0, r5
 5718 011e FFF7FEFF 		bl	dir_next
 5719              	.LVL831:
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5720              		.loc 1 2361 0
 5721 0122 8146     		mov	r9, r0
 5722 0124 0028     		cmp	r0, #0
 5723 0126 BDD1     		bne	.L573
 5724              	.LVL832:
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5725              		.loc 1 2361 0 is_stmt 0 discriminator 1
 5726 0128 013C     		subs	r4, r4, #1
 5727              	.LVL833:
 5728 012a E7D1     		bne	.L574
 5729 012c BAE7     		b	.L573
 5730              	.LVL834:
 5731              	.L575:
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
 5732              		.loc 1 2303 0 is_stmt 1
 5733 012e 4FF00609 		mov	r9, #6
 5734              	.LVL835:
 5735              	.L565:
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 219


 5736              		.loc 1 2384 0
 5737 0132 4846     		mov	r0, r9
 5738 0134 05B0     		add	sp, sp, #20
 5739              	.LCFI58:
 5740              		.cfi_remember_state
 5741              		.cfi_def_cfa_offset 28
 5742              		@ sp needed
 5743 0136 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5744              	.LVL836:
 5745              	.L576:
 5746              	.LCFI59:
 5747              		.cfi_restore_state
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
 5748              		.loc 1 2343 0
 5749 013a 4FF00709 		mov	r9, #7
 5750              	.LVL837:
 5751 013e F8E7     		b	.L565
 5752              	.L581:
 5753              		.align	2
 5754              	.L580:
 5755 0140 4FECC44E 		.word	1321528399
 5756              		.cfi_endproc
 5757              	.LFE179:
 5759              		.section	.text.sync_fs,"ax",%progbits
 5760              		.align	1
 5761              		.syntax unified
 5762              		.thumb
 5763              		.thumb_func
 5764              		.fpu fpv5-sp-d16
 5766              	sync_fs:
 5767              	.LFB160:
 947:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5768              		.loc 1 947 0
 5769              		.cfi_startproc
 5770              		@ args = 0, pretend = 0, frame = 0
 5771              		@ frame_needed = 0, uses_anonymous_args = 0
 5772              	.LVL838:
 5773 0000 70B5     		push	{r4, r5, r6, lr}
 5774              	.LCFI60:
 5775              		.cfi_def_cfa_offset 16
 5776              		.cfi_offset 4, -16
 5777              		.cfi_offset 5, -12
 5778              		.cfi_offset 6, -8
 5779              		.cfi_offset 14, -4
 5780 0002 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5781              		.loc 1 951 0
 5782 0004 FFF7FEFF 		bl	sync_window
 5783              	.LVL839:
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 5784              		.loc 1 952 0
 5785 0008 0546     		mov	r5, r0
 5786 000a 48B9     		cbnz	r0, .L583
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 5787              		.loc 1 954 0
 5788 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 5789 000e 032B     		cmp	r3, #3
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 220


 5790 0010 08D0     		beq	.L587
 5791              	.LVL840:
 5792              	.L584:
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5793              		.loc 1 968 0
 5794 0012 0022     		movs	r2, #0
 5795 0014 1146     		mov	r1, r2
 5796 0016 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 5797 0018 FFF7FEFF 		bl	disk_ioctl
 5798              	.LVL841:
 5799 001c 00B1     		cbz	r0, .L583
 5800 001e 0125     		movs	r5, #1
 5801              	.L583:
 5802              	.LVL842:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5803              		.loc 1 972 0
 5804 0020 2846     		mov	r0, r5
 5805 0022 70BD     		pop	{r4, r5, r6, pc}
 5806              	.LVL843:
 5807              	.L587:
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 5808              		.loc 1 954 0 discriminator 1
 5809 0024 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 5810 0026 012B     		cmp	r3, #1
 5811 0028 F3D1     		bne	.L584
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 5812              		.loc 1 956 0
 5813 002a 04F13C06 		add	r6, r4, #60
 5814 002e 4FF40072 		mov	r2, #512
 5815 0032 0021     		movs	r1, #0
 5816 0034 3046     		mov	r0, r6
 5817              	.LVL844:
 5818 0036 FFF7FEFF 		bl	mem_set
 5819              	.LVL845:
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 5820              		.loc 1 957 0
 5821 003a 4AF65521 		movw	r1, #43605
 5822 003e 04F23A20 		addw	r0, r4, #570
 5823 0042 FFF7FEFF 		bl	st_word
 5824              	.LVL846:
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 5825              		.loc 1 958 0
 5826 0046 0F49     		ldr	r1, .L588
 5827 0048 3046     		mov	r0, r6
 5828 004a FFF7FEFF 		bl	st_dword
 5829              	.LVL847:
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 5830              		.loc 1 959 0
 5831 004e 0E49     		ldr	r1, .L588+4
 5832 0050 04F50870 		add	r0, r4, #544
 5833 0054 FFF7FEFF 		bl	st_dword
 5834              	.LVL848:
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 5835              		.loc 1 960 0
 5836 0058 A169     		ldr	r1, [r4, #24]
 5837 005a 04F50970 		add	r0, r4, #548
 5838 005e FFF7FEFF 		bl	st_dword
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 221


 5839              	.LVL849:
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 5840              		.loc 1 961 0
 5841 0062 6169     		ldr	r1, [r4, #20]
 5842 0064 04F50A70 		add	r0, r4, #552
 5843 0068 FFF7FEFF 		bl	st_dword
 5844              	.LVL850:
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 5845              		.loc 1 963 0
 5846 006c A26A     		ldr	r2, [r4, #40]
 5847 006e 0132     		adds	r2, r2, #1
 5848 0070 A263     		str	r2, [r4, #56]
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 5849              		.loc 1 964 0
 5850 0072 0123     		movs	r3, #1
 5851 0074 3146     		mov	r1, r6
 5852 0076 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 5853 0078 FFF7FEFF 		bl	disk_write
 5854              	.LVL851:
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5855              		.loc 1 965 0
 5856 007c 0023     		movs	r3, #0
 5857 007e 2371     		strb	r3, [r4, #4]
 5858 0080 C7E7     		b	.L584
 5859              	.L589:
 5860 0082 00BF     		.align	2
 5861              	.L588:
 5862 0084 52526141 		.word	1096897106
 5863 0088 72724161 		.word	1631679090
 5864              		.cfi_endproc
 5865              	.LFE160:
 5867              		.section	.text.f_mount,"ax",%progbits
 5868              		.align	1
 5869              		.global	f_mount
 5870              		.syntax unified
 5871              		.thumb
 5872              		.thumb_func
 5873              		.fpu fpv5-sp-d16
 5875              	f_mount:
 5876              	.LFB190:
3254:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
 5877              		.loc 1 3254 0
 5878              		.cfi_startproc
 5879              		@ args = 0, pretend = 0, frame = 16
 5880              		@ frame_needed = 0, uses_anonymous_args = 0
 5881              	.LVL852:
 5882 0000 70B5     		push	{r4, r5, r6, lr}
 5883              	.LCFI61:
 5884              		.cfi_def_cfa_offset 16
 5885              		.cfi_offset 4, -16
 5886              		.cfi_offset 5, -12
 5887              		.cfi_offset 6, -8
 5888              		.cfi_offset 14, -4
 5889 0002 84B0     		sub	sp, sp, #16
 5890              	.LCFI62:
 5891              		.cfi_def_cfa_offset 32
 5892 0004 0190     		str	r0, [sp, #4]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 222


 5893 0006 0091     		str	r1, [sp]
 5894 0008 1446     		mov	r4, r2
3258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5895              		.loc 1 3258 0
 5896 000a 04A8     		add	r0, sp, #16
 5897              	.LVL853:
 5898 000c 40F8041D 		str	r1, [r0, #-4]!
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 5899              		.loc 1 3262 0
 5900 0010 FFF7FEFF 		bl	get_ldnumber
 5901              	.LVL854:
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 5902              		.loc 1 3263 0
 5903 0014 061E     		subs	r6, r0, #0
 5904 0016 31DB     		blt	.L594
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5905              		.loc 1 3264 0
 5906 0018 1B4B     		ldr	r3, .L600
 5907 001a 53F82650 		ldr	r5, [r3, r6, lsl #2]
 5908              	.LVL855:
3266:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 5909              		.loc 1 3266 0
 5910 001e 45B1     		cbz	r5, .L592
3268:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5911              		.loc 1 3268 0
 5912 0020 2846     		mov	r0, r5
 5913              	.LVL856:
 5914 0022 FFF7FEFF 		bl	clear_lock
 5915              	.LVL857:
3271:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5916              		.loc 1 3271 0
 5917 0026 2869     		ldr	r0, [r5, #16]
 5918 0028 FFF7FEFF 		bl	ff_del_syncobj
 5919              	.LVL858:
 5920 002c 40B3     		cbz	r0, .L595
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5921              		.loc 1 3273 0
 5922 002e 0023     		movs	r3, #0
 5923 0030 2B70     		strb	r3, [r5]
 5924              	.L592:
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 5925              		.loc 1 3276 0
 5926 0032 019B     		ldr	r3, [sp, #4]
 5927 0034 3BB1     		cbz	r3, .L593
3277:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
 5928              		.loc 1 3277 0
 5929 0036 0022     		movs	r2, #0
 5930 0038 1A70     		strb	r2, [r3]
3279:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5931              		.loc 1 3279 0
 5932 003a 0199     		ldr	r1, [sp, #4]
 5933 003c 1031     		adds	r1, r1, #16
 5934 003e F0B2     		uxtb	r0, r6
 5935 0040 FFF7FEFF 		bl	ff_cre_syncobj
 5936              	.LVL859:
 5937 0044 F0B1     		cbz	r0, .L596
 5938              	.L593:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 223


3282:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5939              		.loc 1 3282 0
 5940 0046 019B     		ldr	r3, [sp, #4]
 5941 0048 0F4A     		ldr	r2, .L600
 5942 004a 42F82630 		str	r3, [r2, r6, lsl #2]
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5943              		.loc 1 3284 0
 5944 004e 14F1FF34 		adds	r4, r4, #-1
 5945 0052 18BF     		it	ne
 5946 0054 0124     		movne	r4, #1
 5947 0056 002B     		cmp	r3, #0
 5948 0058 08BF     		it	eq
 5949 005a 0124     		moveq	r4, #1
 5950 005c 1CB1     		cbz	r4, .L599
 5951 005e 0024     		movs	r4, #0
 5952              	.LVL860:
 5953              	.L591:
3288:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5954              		.loc 1 3288 0
 5955 0060 2046     		mov	r0, r4
 5956 0062 04B0     		add	sp, sp, #16
 5957              	.LCFI63:
 5958              		.cfi_remember_state
 5959              		.cfi_def_cfa_offset 16
 5960              		@ sp needed
 5961 0064 70BD     		pop	{r4, r5, r6, pc}
 5962              	.LVL861:
 5963              	.L599:
 5964              	.LCFI64:
 5965              		.cfi_restore_state
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
 5966              		.loc 1 3286 0
 5967 0066 0022     		movs	r2, #0
 5968 0068 01A9     		add	r1, sp, #4
 5969 006a 6846     		mov	r0, sp
 5970 006c FFF7FEFF 		bl	find_volume
 5971              	.LVL862:
 5972 0070 0446     		mov	r4, r0
 5973              	.LVL863:
3287:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5974              		.loc 1 3287 0
 5975 0072 0146     		mov	r1, r0
 5976 0074 0198     		ldr	r0, [sp, #4]
 5977              	.LVL864:
 5978 0076 FFF7FEFF 		bl	unlock_fs
 5979              	.LVL865:
 5980 007a F1E7     		b	.L591
 5981              	.LVL866:
 5982              	.L594:
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 5983              		.loc 1 3263 0
 5984 007c 0B24     		movs	r4, #11
 5985 007e EFE7     		b	.L591
 5986              	.LVL867:
 5987              	.L595:
3271:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5988              		.loc 1 3271 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 224


 5989 0080 0224     		movs	r4, #2
 5990 0082 EDE7     		b	.L591
 5991              	.L596:
3279:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5992              		.loc 1 3279 0
 5993 0084 0224     		movs	r4, #2
 5994 0086 EBE7     		b	.L591
 5995              	.L601:
 5996              		.align	2
 5997              	.L600:
 5998 0088 00000000 		.word	.LANCHOR4
 5999              		.cfi_endproc
 6000              	.LFE190:
 6002              		.section	.text.f_open,"ax",%progbits
 6003              		.align	1
 6004              		.global	f_open
 6005              		.syntax unified
 6006              		.thumb
 6007              		.thumb_func
 6008              		.fpu fpv5-sp-d16
 6010              	f_open:
 6011              	.LFB191:
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6012              		.loc 1 3302 0
 6013              		.cfi_startproc
 6014              		@ args = 0, pretend = 0, frame = 72
 6015              		@ frame_needed = 0, uses_anonymous_args = 0
 6016              	.LVL868:
 6017 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6018              	.LCFI65:
 6019              		.cfi_def_cfa_offset 32
 6020              		.cfi_offset 4, -32
 6021              		.cfi_offset 5, -28
 6022              		.cfi_offset 6, -24
 6023              		.cfi_offset 7, -20
 6024              		.cfi_offset 8, -16
 6025              		.cfi_offset 9, -12
 6026              		.cfi_offset 10, -8
 6027              		.cfi_offset 14, -4
 6028 0004 92B0     		sub	sp, sp, #72
 6029              	.LCFI66:
 6030              		.cfi_def_cfa_offset 104
 6031 0006 0191     		str	r1, [sp, #4]
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6032              		.loc 1 3313 0
 6033 0008 0028     		cmp	r0, #0
 6034 000a 00F02081 		beq	.L620
 6035 000e 0546     		mov	r5, r0
 6036 0010 1646     		mov	r6, r2
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
 6037              		.loc 1 3316 0
 6038 0012 02F03F07 		and	r7, r2, #63
 6039              	.LVL869:
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6040              		.loc 1 3317 0
 6041 0016 3A46     		mov	r2, r7
 6042 0018 03A9     		add	r1, sp, #12
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 225


 6043              	.LVL870:
 6044 001a 01A8     		add	r0, sp, #4
 6045              	.LVL871:
 6046 001c FFF7FEFF 		bl	find_volume
 6047              	.LVL872:
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
 6048              		.loc 1 3318 0
 6049 0020 0446     		mov	r4, r0
 6050 0022 50B1     		cbz	r0, .L633
 6051              	.LVL873:
 6052              	.L604:
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6053              		.loc 1 3488 0
 6054 0024 0CB1     		cbz	r4, .L619
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6055              		.loc 1 3488 0 is_stmt 0 discriminator 1
 6056 0026 0023     		movs	r3, #0
 6057 0028 2B60     		str	r3, [r5]
 6058              	.L619:
3490:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6059              		.loc 1 3490 0 is_stmt 1
 6060 002a 2146     		mov	r1, r4
 6061 002c 0398     		ldr	r0, [sp, #12]
 6062 002e FFF7FEFF 		bl	unlock_fs
 6063              	.LVL874:
 6064              	.L603:
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6065              		.loc 1 3491 0
 6066 0032 2046     		mov	r0, r4
 6067 0034 12B0     		add	sp, sp, #72
 6068              	.LCFI67:
 6069              		.cfi_remember_state
 6070              		.cfi_def_cfa_offset 32
 6071              		@ sp needed
 6072 0036 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6073              	.LVL875:
 6074              	.L633:
 6075              	.LCFI68:
 6076              		.cfi_restore_state
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 6077              		.loc 1 3319 0
 6078 003a 039B     		ldr	r3, [sp, #12]
 6079 003c 0493     		str	r3, [sp, #16]
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6080              		.loc 1 3320 0
 6081 003e 4FF40070 		mov	r0, #512
 6082              	.LVL876:
 6083 0042 FFF7FEFF 		bl	ff_memalloc
 6084              	.LVL877:
 6085 0046 8046     		mov	r8, r0
 6086 0048 0028     		cmp	r0, #0
 6087 004a 5DD0     		beq	.L634
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6088              		.loc 1 3320 0 is_stmt 0 discriminator 2
 6089 004c 039B     		ldr	r3, [sp, #12]
 6090 004e D860     		str	r0, [r3, #12]
3321:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 226


 6091              		.loc 1 3321 0 is_stmt 1 discriminator 2
 6092 0050 0199     		ldr	r1, [sp, #4]
 6093 0052 04A8     		add	r0, sp, #16
 6094              	.LVL878:
 6095 0054 FFF7FEFF 		bl	follow_path
 6096              	.LVL879:
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 6097              		.loc 1 3323 0 discriminator 2
 6098 0058 0446     		mov	r4, r0
 6099 005a 60B9     		cbnz	r0, .L606
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 6100              		.loc 1 3324 0
 6101 005c 9DF93F30 		ldrsb	r3, [sp, #63]
 6102 0060 002B     		cmp	r3, #0
 6103 0062 57DB     		blt	.L621
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6104              		.loc 1 3329 0
 6105 0064 37F00103 		bics	r3, r7, #1
 6106 0068 14BF     		ite	ne
 6107 006a 0121     		movne	r1, #1
 6108 006c 0021     		moveq	r1, #0
 6109 006e 04A8     		add	r0, sp, #16
 6110              	.LVL880:
 6111 0070 FFF7FEFF 		bl	chk_lock
 6112              	.LVL881:
 6113 0074 0446     		mov	r4, r0
 6114              	.LVL882:
 6115              	.L606:
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 6116              		.loc 1 3334 0
 6117 0076 16F01C0F 		tst	r6, #28
 6118 007a 61D0     		beq	.L607
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 6119              		.loc 1 3335 0
 6120 007c 002C     		cmp	r4, #0
 6121 007e 55D0     		beq	.L608
3336:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6122              		.loc 1 3336 0
 6123 0080 042C     		cmp	r4, #4
 6124 0082 49D0     		beq	.L635
 6125              	.LVL883:
 6126              	.L609:
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6127              		.loc 1 3343 0
 6128 0084 47F00807 		orr	r7, r7, #8
 6129              	.LVL884:
 6130              	.L610:
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 6131              		.loc 1 3352 0
 6132 0088 002C     		cmp	r4, #0
 6133 008a 68D1     		bne	.L611
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 6134              		.loc 1 3352 0 is_stmt 0 discriminator 1
 6135 008c 17F0080F 		tst	r7, #8
 6136 0090 65D0     		beq	.L611
3353:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6137              		.loc 1 3353 0 is_stmt 1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 227


 6138 0092 FFF7FEFF 		bl	get_fattime
 6139              	.LVL885:
 6140 0096 0646     		mov	r6, r0
 6141              	.LVL886:
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
 6142              		.loc 1 3381 0
 6143 0098 0146     		mov	r1, r0
 6144 009a 0C98     		ldr	r0, [sp, #48]
 6145              	.LVL887:
 6146 009c 0E30     		adds	r0, r0, #14
 6147 009e FFF7FEFF 		bl	st_dword
 6148              	.LVL888:
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 6149              		.loc 1 3382 0
 6150 00a2 3146     		mov	r1, r6
 6151 00a4 0C98     		ldr	r0, [sp, #48]
 6152 00a6 1630     		adds	r0, r0, #22
 6153 00a8 FFF7FEFF 		bl	st_dword
 6154              	.LVL889:
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 6155              		.loc 1 3383 0
 6156 00ac 0C9B     		ldr	r3, [sp, #48]
 6157 00ae 2022     		movs	r2, #32
 6158 00b0 DA72     		strb	r2, [r3, #11]
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 6159              		.loc 1 3384 0
 6160 00b2 039E     		ldr	r6, [sp, #12]
 6161              	.LVL890:
 6162 00b4 DDF83090 		ldr	r9, [sp, #48]
 6163 00b8 4946     		mov	r1, r9
 6164 00ba 3046     		mov	r0, r6
 6165 00bc FFF7FEFF 		bl	ld_clust
 6166              	.LVL891:
 6167 00c0 8246     		mov	r10, r0
 6168              	.LVL892:
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
 6169              		.loc 1 3385 0
 6170 00c2 0022     		movs	r2, #0
 6171 00c4 4946     		mov	r1, r9
 6172 00c6 3046     		mov	r0, r6
 6173              	.LVL893:
 6174 00c8 FFF7FEFF 		bl	st_clust
 6175              	.LVL894:
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 6176              		.loc 1 3386 0
 6177 00cc 0021     		movs	r1, #0
 6178 00ce 0C98     		ldr	r0, [sp, #48]
 6179 00d0 1C30     		adds	r0, r0, #28
 6180 00d2 FFF7FEFF 		bl	st_dword
 6181              	.LVL895:
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6182              		.loc 1 3387 0
 6183 00d6 039B     		ldr	r3, [sp, #12]
 6184 00d8 0122     		movs	r2, #1
 6185 00da DA70     		strb	r2, [r3, #3]
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
 6186              		.loc 1 3389 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 228


 6187 00dc BAF1000F 		cmp	r10, #0
 6188 00e0 3DD0     		beq	.L611
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 6189              		.loc 1 3390 0
 6190 00e2 039B     		ldr	r3, [sp, #12]
 6191 00e4 9E6B     		ldr	r6, [r3, #56]
 6192              	.LVL896:
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 6193              		.loc 1 3391 0
 6194 00e6 0022     		movs	r2, #0
 6195 00e8 5146     		mov	r1, r10
 6196 00ea 04A8     		add	r0, sp, #16
 6197 00ec FFF7FEFF 		bl	remove_chain
 6198              	.LVL897:
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
 6199              		.loc 1 3392 0
 6200 00f0 0446     		mov	r4, r0
 6201 00f2 A0BB     		cbnz	r0, .L611
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 6202              		.loc 1 3393 0
 6203 00f4 3146     		mov	r1, r6
 6204 00f6 0398     		ldr	r0, [sp, #12]
 6205              	.LVL898:
 6206 00f8 FFF7FEFF 		bl	move_window
 6207              	.LVL899:
 6208 00fc 0446     		mov	r4, r0
 6209              	.LVL900:
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6210              		.loc 1 3394 0
 6211 00fe 0AF1FF33 		add	r3, r10, #-1
 6212 0102 039A     		ldr	r2, [sp, #12]
 6213 0104 5361     		str	r3, [r2, #20]
 6214 0106 2AE0     		b	.L611
 6215              	.LVL901:
 6216              	.L634:
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6217              		.loc 1 3320 0 discriminator 1
 6218 0108 1121     		movs	r1, #17
 6219 010a 0398     		ldr	r0, [sp, #12]
 6220              	.LVL902:
 6221 010c FFF7FEFF 		bl	unlock_fs
 6222              	.LVL903:
 6223 0110 1124     		movs	r4, #17
 6224 0112 8EE7     		b	.L603
 6225              	.LVL904:
 6226              	.L621:
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6227              		.loc 1 3325 0
 6228 0114 0624     		movs	r4, #6
 6229 0116 AEE7     		b	.L606
 6230              	.LVL905:
 6231              	.L635:
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 6232              		.loc 1 3338 0
 6233 0118 FFF7FEFF 		bl	enq_lock
 6234              	.LVL906:
 6235 011c 08B9     		cbnz	r0, .L636
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 229


 6236 011e 1224     		movs	r4, #18
 6237              	.LVL907:
 6238 0120 B0E7     		b	.L609
 6239              	.LVL908:
 6240              	.L636:
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 6241              		.loc 1 3338 0 is_stmt 0 discriminator 1
 6242 0122 04A8     		add	r0, sp, #16
 6243 0124 FFF7FEFF 		bl	dir_register
 6244              	.LVL909:
 6245 0128 0446     		mov	r4, r0
 6246              	.LVL910:
 6247 012a ABE7     		b	.L609
 6248              	.LVL911:
 6249              	.L608:
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
 6250              		.loc 1 3346 0 is_stmt 1
 6251 012c 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 6252 0130 13F0110F 		tst	r3, #17
 6253 0134 12D1     		bne	.L623
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6254              		.loc 1 3349 0
 6255 0136 16F0040F 		tst	r6, #4
 6256 013a A5D0     		beq	.L610
 6257 013c 0824     		movs	r4, #8
 6258              	.LVL912:
 6259 013e 0EE0     		b	.L611
 6260              	.LVL913:
 6261              	.L607:
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 6262              		.loc 1 3401 0
 6263 0140 6CB9     		cbnz	r4, .L611
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
 6264              		.loc 1 3402 0
 6265 0142 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 6266 0146 13F0100F 		tst	r3, #16
 6267 014a 23D1     		bne	.L625
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 6268              		.loc 1 3405 0
 6269 014c 16F0020F 		tst	r6, #2
 6270 0150 05D0     		beq	.L611
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 6271              		.loc 1 3405 0 is_stmt 0 discriminator 1
 6272 0152 13F0010F 		tst	r3, #1
 6273 0156 02D0     		beq	.L611
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6274              		.loc 1 3406 0 is_stmt 1
 6275 0158 0724     		movs	r4, #7
 6276              	.LVL914:
 6277 015a 16E0     		b	.L612
 6278              	.LVL915:
 6279              	.L623:
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 6280              		.loc 1 3347 0
 6281 015c 0724     		movs	r4, #7
 6282              	.LVL916:
 6283              	.L611:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 230


3411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 6284              		.loc 1 3411 0
 6285 015e A4B9     		cbnz	r4, .L612
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
 6286              		.loc 1 3412 0
 6287 0160 17F0080F 		tst	r7, #8
 6288 0164 01D0     		beq	.L613
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 6289              		.loc 1 3413 0
 6290 0166 47F04007 		orr	r7, r7, #64
 6291              	.LVL917:
 6292              	.L613:
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
 6293              		.loc 1 3414 0
 6294 016a 039B     		ldr	r3, [sp, #12]
 6295 016c 9B6B     		ldr	r3, [r3, #56]
 6296 016e 6B62     		str	r3, [r5, #36]
3415:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6297              		.loc 1 3415 0
 6298 0170 0C9B     		ldr	r3, [sp, #48]
 6299 0172 AB62     		str	r3, [r5, #40]
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
 6300              		.loc 1 3417 0
 6301 0174 37F00103 		bics	r3, r7, #1
 6302 0178 14BF     		ite	ne
 6303 017a 0121     		movne	r1, #1
 6304 017c 0021     		moveq	r1, #0
 6305 017e 04A8     		add	r0, sp, #16
 6306 0180 FFF7FEFF 		bl	inc_lock
 6307              	.LVL918:
 6308 0184 2861     		str	r0, [r5, #16]
3418:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6309              		.loc 1 3418 0
 6310 0186 0028     		cmp	r0, #0
 6311 0188 5FD0     		beq	.L627
 6312              	.LVL919:
 6313              	.L612:
3433:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6314              		.loc 1 3433 0
 6315 018a 2CB1     		cbz	r4, .L637
 6316              	.LVL920:
 6317              	.L614:
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6318              		.loc 1 3485 0
 6319 018c 4046     		mov	r0, r8
 6320 018e FFF7FEFF 		bl	ff_memfree
 6321              	.LVL921:
 6322 0192 47E7     		b	.L604
 6323              	.LVL922:
 6324              	.L625:
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 6325              		.loc 1 3403 0
 6326 0194 0424     		movs	r4, #4
 6327              	.LVL923:
 6328 0196 F8E7     		b	.L612
 6329              	.LVL924:
 6330              	.L637:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 231


3445:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 6331              		.loc 1 3445 0
 6332 0198 039E     		ldr	r6, [sp, #12]
 6333 019a DDF83090 		ldr	r9, [sp, #48]
 6334 019e 4946     		mov	r1, r9
 6335 01a0 3046     		mov	r0, r6
 6336 01a2 FFF7FEFF 		bl	ld_clust
 6337              	.LVL925:
 6338 01a6 A860     		str	r0, [r5, #8]
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6339              		.loc 1 3446 0
 6340 01a8 09F11C00 		add	r0, r9, #28
 6341 01ac FFF7FEFF 		bl	ld_dword
 6342              	.LVL926:
 6343 01b0 E860     		str	r0, [r5, #12]
3449:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6344              		.loc 1 3449 0
 6345 01b2 0021     		movs	r1, #0
 6346 01b4 E962     		str	r1, [r5, #44]
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
 6347              		.loc 1 3451 0
 6348 01b6 2E60     		str	r6, [r5]
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 6349              		.loc 1 3452 0
 6350 01b8 F388     		ldrh	r3, [r6, #6]
 6351 01ba AB80     		strh	r3, [r5, #4]	@ movhi
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
 6352              		.loc 1 3453 0
 6353 01bc 2F75     		strb	r7, [r5, #20]
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
 6354              		.loc 1 3454 0
 6355 01be 6975     		strb	r1, [r5, #21]
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 6356              		.loc 1 3455 0
 6357 01c0 2962     		str	r1, [r5, #32]
3456:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6358              		.loc 1 3456 0
 6359 01c2 A961     		str	r1, [r5, #24]
3459:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6360              		.loc 1 3459 0
 6361 01c4 05F13009 		add	r9, r5, #48
 6362 01c8 4FF40072 		mov	r2, #512
 6363 01cc 4846     		mov	r0, r9
 6364 01ce FFF7FEFF 		bl	mem_set
 6365              	.LVL927:
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 6366              		.loc 1 3461 0
 6367 01d2 17F0200F 		tst	r7, #32
 6368 01d6 D9D0     		beq	.L614
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 6369              		.loc 1 3461 0 is_stmt 0 discriminator 1
 6370 01d8 EE68     		ldr	r6, [r5, #12]
 6371 01da 002E     		cmp	r6, #0
 6372 01dc D6D0     		beq	.L614
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 6373              		.loc 1 3462 0 is_stmt 1
 6374 01de AE61     		str	r6, [r5, #24]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 232


3463:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 6375              		.loc 1 3463 0
 6376 01e0 039B     		ldr	r3, [sp, #12]
 6377 01e2 5F89     		ldrh	r7, [r3, #10]
 6378              	.LVL928:
 6379 01e4 7F02     		lsls	r7, r7, #9
 6380              	.LVL929:
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 6381              		.loc 1 3464 0
 6382 01e6 A968     		ldr	r1, [r5, #8]
 6383              	.LVL930:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6384              		.loc 1 3465 0
 6385 01e8 03E0     		b	.L615
 6386              	.LVL931:
 6387              	.L616:
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6388              		.loc 1 3468 0
 6389 01ea B1F1FF3F 		cmp	r1, #-1
 6390 01ee 10D0     		beq	.L638
 6391              	.LVL932:
 6392              	.L617:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6393              		.loc 1 3465 0 discriminator 2
 6394 01f0 F61B     		subs	r6, r6, r7
 6395              	.LVL933:
 6396              	.L615:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6397              		.loc 1 3465 0 is_stmt 0 discriminator 1
 6398 01f2 BE42     		cmp	r6, r7
 6399 01f4 94BF     		ite	ls
 6400 01f6 0023     		movls	r3, #0
 6401 01f8 0123     		movhi	r3, #1
 6402 01fa 002C     		cmp	r4, #0
 6403 01fc 18BF     		it	ne
 6404 01fe 0023     		movne	r3, #0
 6405 0200 4BB1     		cbz	r3, .L639
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 6406              		.loc 1 3466 0 is_stmt 1
 6407 0202 2846     		mov	r0, r5
 6408 0204 FFF7FEFF 		bl	get_fat
 6409              	.LVL934:
 6410 0208 0146     		mov	r1, r0
 6411              	.LVL935:
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 6412              		.loc 1 3467 0
 6413 020a 0128     		cmp	r0, #1
 6414 020c EDD8     		bhi	.L616
 6415 020e 0224     		movs	r4, #2
 6416              	.LVL936:
 6417 0210 EBE7     		b	.L616
 6418              	.LVL937:
 6419              	.L638:
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6420              		.loc 1 3468 0
 6421 0212 0124     		movs	r4, #1
 6422              	.LVL938:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 233


 6423 0214 ECE7     		b	.L617
 6424              	.LVL939:
 6425              	.L639:
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 6426              		.loc 1 3470 0
 6427 0216 E961     		str	r1, [r5, #28]
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 6428              		.loc 1 3471 0
 6429 0218 002C     		cmp	r4, #0
 6430 021a B7D1     		bne	.L614
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 6431              		.loc 1 3471 0 is_stmt 0 discriminator 1
 6432 021c C6F30803 		ubfx	r3, r6, #0, #9
 6433 0220 002B     		cmp	r3, #0
 6434 0222 B3D0     		beq	.L614
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
 6435              		.loc 1 3472 0 is_stmt 1
 6436 0224 039F     		ldr	r7, [sp, #12]
 6437              	.LVL940:
 6438 0226 3846     		mov	r0, r7
 6439 0228 FFF7FEFF 		bl	clust2sect
 6440              	.LVL941:
 6441 022c 08B9     		cbnz	r0, .L640
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 6442              		.loc 1 3473 0
 6443 022e 0224     		movs	r4, #2
 6444              	.LVL942:
 6445 0230 ACE7     		b	.L614
 6446              	.LVL943:
 6447              	.L640:
3475:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6448              		.loc 1 3475 0
 6449 0232 00EB5622 		add	r2, r0, r6, lsr #9
 6450 0236 2A62     		str	r2, [r5, #32]
3477:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6451              		.loc 1 3477 0
 6452 0238 0123     		movs	r3, #1
 6453 023a 4946     		mov	r1, r9
 6454 023c 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 6455              	.LVL944:
 6456 023e FFF7FEFF 		bl	disk_read
 6457              	.LVL945:
 6458 0242 0028     		cmp	r0, #0
 6459 0244 A2D0     		beq	.L614
 6460 0246 0124     		movs	r4, #1
 6461              	.LVL946:
 6462 0248 A0E7     		b	.L614
 6463              	.LVL947:
 6464              	.L627:
3418:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6465              		.loc 1 3418 0
 6466 024a 0224     		movs	r4, #2
 6467              	.LVL948:
 6468 024c 9EE7     		b	.L614
 6469              	.LVL949:
 6470              	.L620:
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 234


 6471              		.loc 1 3313 0
 6472 024e 0924     		movs	r4, #9
 6473 0250 EFE6     		b	.L603
 6474              		.cfi_endproc
 6475              	.LFE191:
 6477              		.section	.text.f_read,"ax",%progbits
 6478              		.align	1
 6479              		.global	f_read
 6480              		.syntax unified
 6481              		.thumb
 6482              		.thumb_func
 6483              		.fpu fpv5-sp-d16
 6485              	f_read:
 6486              	.LFB192:
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6487              		.loc 1 3506 0
 6488              		.cfi_startproc
 6489              		@ args = 0, pretend = 0, frame = 16
 6490              		@ frame_needed = 0, uses_anonymous_args = 0
 6491              	.LVL950:
 6492 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6493              	.LCFI69:
 6494              		.cfi_def_cfa_offset 36
 6495              		.cfi_offset 4, -36
 6496              		.cfi_offset 5, -32
 6497              		.cfi_offset 6, -28
 6498              		.cfi_offset 7, -24
 6499              		.cfi_offset 8, -20
 6500              		.cfi_offset 9, -16
 6501              		.cfi_offset 10, -12
 6502              		.cfi_offset 11, -8
 6503              		.cfi_offset 14, -4
 6504 0004 85B0     		sub	sp, sp, #20
 6505              	.LCFI70:
 6506              		.cfi_def_cfa_offset 56
 6507 0006 0446     		mov	r4, r0
 6508 0008 0F46     		mov	r7, r1
 6509 000a 1646     		mov	r6, r2
 6510 000c 9946     		mov	r9, r3
 6511              	.LVL951:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 6512              		.loc 1 3515 0
 6513 000e 0023     		movs	r3, #0
 6514              	.LVL952:
 6515 0010 C9F80030 		str	r3, [r9]
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 6516              		.loc 1 3516 0
 6517 0014 0190     		str	r0, [sp, #4]
 6518 0016 03A9     		add	r1, sp, #12
 6519              	.LVL953:
 6520 0018 FFF7FEFF 		bl	validate
 6521              	.LVL954:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 6522              		.loc 1 3517 0
 6523 001c 0090     		str	r0, [sp]
 6524 001e 70B9     		cbnz	r0, .L642
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 235


 6525              		.loc 1 3517 0 is_stmt 0 discriminator 2
 6526 0020 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 6527 0022 0093     		str	r3, [sp]
 6528              	.LVL955:
 6529 0024 5BB9     		cbnz	r3, .L642
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 6530              		.loc 1 3518 0 is_stmt 1
 6531 0026 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6532              	.LVL956:
 6533 0028 13F0010F 		tst	r3, #1
 6534 002c 0FD0     		beq	.L670
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 6535              		.loc 1 3519 0
 6536 002e E568     		ldr	r5, [r4, #12]
 6537 0030 A369     		ldr	r3, [r4, #24]
 6538 0032 ED1A     		subs	r5, r5, r3
 6539              	.LVL957:
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6540              		.loc 1 3520 0
 6541 0034 B542     		cmp	r5, r6
 6542 0036 C0F08280 		bcc	.L665
 6543 003a 3546     		mov	r5, r6
 6544              	.LVL958:
 6545 003c 7FE0     		b	.L665
 6546              	.LVL959:
 6547              	.L642:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 6548              		.loc 1 3517 0 discriminator 3
 6549 003e 0099     		ldr	r1, [sp]
 6550 0040 0398     		ldr	r0, [sp, #12]
 6551 0042 FFF7FEFF 		bl	unlock_fs
 6552              	.LVL960:
 6553              	.L644:
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6554              		.loc 1 3590 0
 6555 0046 0098     		ldr	r0, [sp]
 6556 0048 05B0     		add	sp, sp, #20
 6557              	.LCFI71:
 6558              		.cfi_remember_state
 6559              		.cfi_def_cfa_offset 36
 6560              		@ sp needed
 6561 004a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6562              	.LVL961:
 6563              	.L670:
 6564              	.LCFI72:
 6565              		.cfi_restore_state
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 6566              		.loc 1 3518 0 discriminator 1
 6567 004e 0721     		movs	r1, #7
 6568 0050 0398     		ldr	r0, [sp, #12]
 6569 0052 FFF7FEFF 		bl	unlock_fs
 6570              	.LVL962:
 6571 0056 0723     		movs	r3, #7
 6572 0058 0093     		str	r3, [sp]
 6573              	.LVL963:
 6574 005a F4E7     		b	.L644
 6575              	.LVL964:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 236


 6576              	.L650:
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 6577              		.loc 1 3531 0
 6578 005c E36A     		ldr	r3, [r4, #44]
 6579 005e 1BB1     		cbz	r3, .L652
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 6580              		.loc 1 3532 0
 6581 0060 2046     		mov	r0, r4
 6582 0062 FFF7FEFF 		bl	clmt_clust
 6583              	.LVL965:
 6584 0066 7BE0     		b	.L651
 6585              	.LVL966:
 6586              	.L652:
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6587              		.loc 1 3536 0
 6588 0068 E169     		ldr	r1, [r4, #28]
 6589 006a 0198     		ldr	r0, [sp, #4]
 6590 006c FFF7FEFF 		bl	get_fat
 6591              	.LVL967:
 6592 0070 76E0     		b	.L651
 6593              	.L674:
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6594              		.loc 1 3539 0 discriminator 1
 6595 0072 4FF00208 		mov	r8, #2
 6596 0076 84F81580 		strb	r8, [r4, #21]
 6597 007a 4146     		mov	r1, r8
 6598 007c 0398     		ldr	r0, [sp, #12]
 6599              	.LVL968:
 6600 007e FFF7FEFF 		bl	unlock_fs
 6601              	.LVL969:
 6602 0082 CDF80080 		str	r8, [sp]
 6603              	.LVL970:
 6604 0086 DEE7     		b	.L644
 6605              	.LVL971:
 6606              	.L675:
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 6607              		.loc 1 3540 0 discriminator 1
 6608 0088 4FF00108 		mov	r8, #1
 6609 008c 84F81580 		strb	r8, [r4, #21]
 6610 0090 4146     		mov	r1, r8
 6611 0092 0398     		ldr	r0, [sp, #12]
 6612              	.LVL972:
 6613 0094 FFF7FEFF 		bl	unlock_fs
 6614              	.LVL973:
 6615 0098 CDF80080 		str	r8, [sp]
 6616              	.LVL974:
 6617 009c D3E7     		b	.L644
 6618              	.LVL975:
 6619              	.L676:
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 6620              		.loc 1 3544 0 discriminator 1
 6621 009e 4FF00208 		mov	r8, #2
 6622 00a2 84F81580 		strb	r8, [r4, #21]
 6623 00a6 4146     		mov	r1, r8
 6624 00a8 5846     		mov	r0, fp
 6625              	.LVL976:
 6626 00aa FFF7FEFF 		bl	unlock_fs
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 237


 6627              	.LVL977:
 6628 00ae CDF80080 		str	r8, [sp]
 6629              	.LVL978:
 6630 00b2 C8E7     		b	.L644
 6631              	.LVL979:
 6632              	.L677:
3551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 6633              		.loc 1 3551 0 discriminator 1
 6634 00b4 4FF00108 		mov	r8, #1
 6635              	.LVL980:
 6636 00b8 84F81580 		strb	r8, [r4, #21]
 6637 00bc 4146     		mov	r1, r8
 6638 00be 0398     		ldr	r0, [sp, #12]
 6639 00c0 FFF7FEFF 		bl	unlock_fs
 6640              	.LVL981:
 6641 00c4 CDF80080 		str	r8, [sp]
 6642              	.LVL982:
 6643 00c8 BDE7     		b	.L644
 6644              	.LVL983:
 6645              	.L678:
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 6646              		.loc 1 3558 0 discriminator 1
 6647 00ca 206A     		ldr	r0, [r4, #32]
 6648 00cc A0EB0A00 		sub	r0, r0, r10
 6649 00d0 4045     		cmp	r0, r8
 6650 00d2 6DD2     		bcs	.L659
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6651              		.loc 1 3559 0
 6652 00d4 4FF40072 		mov	r2, #512
 6653 00d8 04F13001 		add	r1, r4, #48
 6654 00dc 07EB4020 		add	r0, r7, r0, lsl #9
 6655 00e0 FFF7FEFF 		bl	mem_cpy
 6656              	.LVL984:
 6657 00e4 64E0     		b	.L659
 6658              	.L656:
3567:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6659              		.loc 1 3567 0
 6660 00e6 226A     		ldr	r2, [r4, #32]
 6661 00e8 5245     		cmp	r2, r10
 6662 00ea 0DD0     		beq	.L661
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 6663              		.loc 1 3569 0
 6664 00ec 94F91430 		ldrsb	r3, [r4, #20]
 6665 00f0 002B     		cmp	r3, #0
 6666 00f2 60DB     		blt	.L671
 6667              	.L662:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6668              		.loc 1 3574 0
 6669 00f4 0123     		movs	r3, #1
 6670 00f6 5246     		mov	r2, r10
 6671 00f8 04F13001 		add	r1, r4, #48
 6672 00fc 0398     		ldr	r0, [sp, #12]
 6673 00fe 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6674 0100 FFF7FEFF 		bl	disk_read
 6675              	.LVL985:
 6676 0104 0028     		cmp	r0, #0
 6677 0106 6ED1     		bne	.L672
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 238


 6678              	.L661:
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6679              		.loc 1 3577 0
 6680 0108 C4F820A0 		str	r10, [r4, #32]
 6681              	.LVL986:
 6682              	.L648:
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 6683              		.loc 1 3579 0
 6684 010c A369     		ldr	r3, [r4, #24]
 6685 010e C3F30803 		ubfx	r3, r3, #0, #9
 6686 0112 C3F50076 		rsb	r6, r3, #512
 6687              	.LVL987:
3580:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 6688              		.loc 1 3580 0
 6689 0116 B542     		cmp	r5, r6
 6690 0118 00D2     		bcs	.L664
 6691 011a 2E46     		mov	r6, r5
 6692              	.LVL988:
 6693              	.L664:
3585:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6694              		.loc 1 3585 0
 6695 011c 04F13001 		add	r1, r4, #48
 6696 0120 3246     		mov	r2, r6
 6697 0122 1944     		add	r1, r1, r3
 6698 0124 3846     		mov	r0, r7
 6699 0126 FFF7FEFF 		bl	mem_cpy
 6700              	.LVL989:
 6701              	.L660:
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 6702              		.loc 1 3523 0
 6703 012a 3744     		add	r7, r7, r6
 6704              	.LVL990:
 6705 012c A369     		ldr	r3, [r4, #24]
 6706 012e 3344     		add	r3, r3, r6
 6707 0130 A361     		str	r3, [r4, #24]
 6708 0132 D9F80030 		ldr	r3, [r9]
 6709 0136 3344     		add	r3, r3, r6
 6710 0138 C9F80030 		str	r3, [r9]
 6711 013c AD1B     		subs	r5, r5, r6
 6712              	.LVL991:
 6713              	.L665:
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 6714              		.loc 1 3522 0
 6715 013e 002D     		cmp	r5, #0
 6716 0140 5CD0     		beq	.L673
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 6717              		.loc 1 3524 0
 6718 0142 A169     		ldr	r1, [r4, #24]
 6719 0144 C1F30803 		ubfx	r3, r1, #0, #9
 6720 0148 002B     		cmp	r3, #0
 6721 014a DFD1     		bne	.L648
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 6722              		.loc 1 3525 0
 6723 014c 039B     		ldr	r3, [sp, #12]
 6724 014e 5E89     		ldrh	r6, [r3, #10]
 6725 0150 013E     		subs	r6, r6, #1
 6726              	.LVL992:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 239


3526:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 6727              		.loc 1 3526 0
 6728 0152 16EA5126 		ands	r6, r6, r1, lsr #9
 6729              	.LVL993:
 6730 0156 09D1     		bne	.L649
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 6731              		.loc 1 3527 0
 6732 0158 0029     		cmp	r1, #0
 6733 015a 7FF47FAF 		bne	.L650
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
 6734              		.loc 1 3528 0
 6735 015e A068     		ldr	r0, [r4, #8]
 6736              	.LVL994:
 6737              	.L651:
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6738              		.loc 1 3539 0
 6739 0160 0128     		cmp	r0, #1
 6740 0162 86D9     		bls	.L674
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 6741              		.loc 1 3540 0
 6742 0164 B0F1FF3F 		cmp	r0, #-1
 6743 0168 8ED0     		beq	.L675
3541:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6744              		.loc 1 3541 0
 6745 016a E061     		str	r0, [r4, #28]
 6746              	.LVL995:
 6747              	.L649:
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 6748              		.loc 1 3543 0
 6749 016c DDF80CB0 		ldr	fp, [sp, #12]
 6750 0170 E169     		ldr	r1, [r4, #28]
 6751 0172 5846     		mov	r0, fp
 6752 0174 FFF7FEFF 		bl	clust2sect
 6753              	.LVL996:
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 6754              		.loc 1 3544 0
 6755 0178 8246     		mov	r10, r0
 6756 017a 0028     		cmp	r0, #0
 6757 017c 8FD0     		beq	.L676
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
 6758              		.loc 1 3545 0
 6759 017e B244     		add	r10, r10, r6
 6760              	.LVL997:
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 6761              		.loc 1 3547 0
 6762 0180 5FEA5528 		lsrs	r8, r5, #9
 6763              	.LVL998:
 6764 0184 AFD0     		beq	.L656
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 6765              		.loc 1 3548 0
 6766 0186 06EB0803 		add	r3, r6, r8
 6767 018a BBF80A20 		ldrh	r2, [fp, #10]
 6768 018e 9342     		cmp	r3, r2
 6769 0190 01D9     		bls	.L657
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6770              		.loc 1 3549 0
 6771 0192 A2EB0608 		sub	r8, r2, r6
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 240


 6772              	.LVL999:
 6773              	.L657:
3551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 6774              		.loc 1 3551 0
 6775 0196 4346     		mov	r3, r8
 6776 0198 5246     		mov	r2, r10
 6777 019a 3946     		mov	r1, r7
 6778 019c 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 6779 01a0 FFF7FEFF 		bl	disk_read
 6780              	.LVL1000:
 6781 01a4 0028     		cmp	r0, #0
 6782 01a6 85D1     		bne	.L677
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 6783              		.loc 1 3558 0
 6784 01a8 94F91430 		ldrsb	r3, [r4, #20]
 6785 01ac 002B     		cmp	r3, #0
 6786 01ae 8CDB     		blt	.L678
 6787              	.L659:
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 6788              		.loc 1 3563 0
 6789 01b0 4FEA4826 		lsl	r6, r8, #9
 6790              	.LVL1001:
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6791              		.loc 1 3564 0
 6792 01b4 B9E7     		b	.L660
 6793              	.LVL1002:
 6794              	.L671:
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 6795              		.loc 1 3570 0
 6796 01b6 0123     		movs	r3, #1
 6797 01b8 04F13001 		add	r1, r4, #48
 6798 01bc 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 6799 01c0 FFF7FEFF 		bl	disk_write
 6800              	.LVL1003:
 6801 01c4 20B9     		cbnz	r0, .L679
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6802              		.loc 1 3571 0
 6803 01c6 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6804 01c8 03F07F03 		and	r3, r3, #127
 6805 01cc 2375     		strb	r3, [r4, #20]
 6806 01ce 91E7     		b	.L662
 6807              	.L679:
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 6808              		.loc 1 3570 0 discriminator 1
 6809 01d0 4FF00108 		mov	r8, #1
 6810              	.LVL1004:
 6811 01d4 84F81580 		strb	r8, [r4, #21]
 6812 01d8 4146     		mov	r1, r8
 6813 01da 0398     		ldr	r0, [sp, #12]
 6814 01dc FFF7FEFF 		bl	unlock_fs
 6815              	.LVL1005:
 6816 01e0 CDF80080 		str	r8, [sp]
 6817              	.LVL1006:
 6818 01e4 2FE7     		b	.L644
 6819              	.LVL1007:
 6820              	.L672:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 241


 6821              		.loc 1 3574 0 discriminator 1
 6822 01e6 4FF00108 		mov	r8, #1
 6823              	.LVL1008:
 6824 01ea 84F81580 		strb	r8, [r4, #21]
 6825 01ee 4146     		mov	r1, r8
 6826 01f0 0398     		ldr	r0, [sp, #12]
 6827 01f2 FFF7FEFF 		bl	unlock_fs
 6828              	.LVL1009:
 6829 01f6 CDF80080 		str	r8, [sp]
 6830              	.LVL1010:
 6831 01fa 24E7     		b	.L644
 6832              	.LVL1011:
 6833              	.L673:
3589:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6834              		.loc 1 3589 0
 6835 01fc 0021     		movs	r1, #0
 6836 01fe 0398     		ldr	r0, [sp, #12]
 6837 0200 FFF7FEFF 		bl	unlock_fs
 6838              	.LVL1012:
 6839 0204 1FE7     		b	.L644
 6840              		.cfi_endproc
 6841              	.LFE192:
 6843              		.section	.text.f_write,"ax",%progbits
 6844              		.align	1
 6845              		.global	f_write
 6846              		.syntax unified
 6847              		.thumb
 6848              		.thumb_func
 6849              		.fpu fpv5-sp-d16
 6851              	f_write:
 6852              	.LFB193:
3606:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6853              		.loc 1 3606 0
 6854              		.cfi_startproc
 6855              		@ args = 0, pretend = 0, frame = 16
 6856              		@ frame_needed = 0, uses_anonymous_args = 0
 6857              	.LVL1013:
 6858 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6859              	.LCFI73:
 6860              		.cfi_def_cfa_offset 36
 6861              		.cfi_offset 4, -36
 6862              		.cfi_offset 5, -32
 6863              		.cfi_offset 6, -28
 6864              		.cfi_offset 7, -24
 6865              		.cfi_offset 8, -20
 6866              		.cfi_offset 9, -16
 6867              		.cfi_offset 10, -12
 6868              		.cfi_offset 11, -8
 6869              		.cfi_offset 14, -4
 6870 0004 85B0     		sub	sp, sp, #20
 6871              	.LCFI74:
 6872              		.cfi_def_cfa_offset 56
 6873 0006 0446     		mov	r4, r0
 6874 0008 8846     		mov	r8, r1
 6875 000a 1646     		mov	r6, r2
 6876 000c 9946     		mov	r9, r3
 6877              	.LVL1014:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 242


3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 6878              		.loc 1 3614 0
 6879 000e 0023     		movs	r3, #0
 6880              	.LVL1015:
 6881 0010 C9F80030 		str	r3, [r9]
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 6882              		.loc 1 3615 0
 6883 0014 0190     		str	r0, [sp, #4]
 6884 0016 03A9     		add	r1, sp, #12
 6885              	.LVL1016:
 6886 0018 FFF7FEFF 		bl	validate
 6887              	.LVL1017:
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6888              		.loc 1 3616 0
 6889 001c 0090     		str	r0, [sp]
 6890 001e 60B9     		cbnz	r0, .L681
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6891              		.loc 1 3616 0 is_stmt 0 discriminator 2
 6892 0020 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 6893 0022 0093     		str	r3, [sp]
 6894              	.LVL1018:
 6895 0024 4BB9     		cbnz	r3, .L681
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6896              		.loc 1 3617 0 is_stmt 1
 6897 0026 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6898              	.LVL1019:
 6899 0028 13F0020F 		tst	r3, #2
 6900 002c 0DD0     		beq	.L708
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 6901              		.loc 1 3620 0
 6902 002e A369     		ldr	r3, [r4, #24]
 6903 0030 F342     		cmn	r3, r6
 6904 0032 C0F0CA80 		bcc	.L704
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6905              		.loc 1 3621 0
 6906 0036 DE43     		mvns	r6, r3
 6907              	.LVL1020:
 6908 0038 C7E0     		b	.L704
 6909              	.LVL1021:
 6910              	.L681:
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6911              		.loc 1 3616 0 discriminator 3
 6912 003a 0099     		ldr	r1, [sp]
 6913 003c 0398     		ldr	r0, [sp, #12]
 6914 003e FFF7FEFF 		bl	unlock_fs
 6915              	.LVL1022:
 6916              	.L683:
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6917              		.loc 1 3712 0
 6918 0042 0098     		ldr	r0, [sp]
 6919 0044 05B0     		add	sp, sp, #20
 6920              	.LCFI75:
 6921              		.cfi_remember_state
 6922              		.cfi_def_cfa_offset 36
 6923              		@ sp needed
 6924 0046 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6925              	.LVL1023:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 243


 6926              	.L708:
 6927              	.LCFI76:
 6928              		.cfi_restore_state
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6929              		.loc 1 3617 0 discriminator 1
 6930 004a 0721     		movs	r1, #7
 6931 004c 0398     		ldr	r0, [sp, #12]
 6932 004e FFF7FEFF 		bl	unlock_fs
 6933              	.LVL1024:
 6934 0052 0723     		movs	r3, #7
 6935 0054 0093     		str	r3, [sp]
 6936              	.LVL1025:
 6937 0056 F4E7     		b	.L683
 6938              	.LVL1026:
 6939              	.L688:
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 6940              		.loc 1 3636 0
 6941 0058 E36A     		ldr	r3, [r4, #44]
 6942 005a A3B3     		cbz	r3, .L690
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 6943              		.loc 1 3637 0
 6944 005c 2046     		mov	r0, r4
 6945 005e FFF7FEFF 		bl	clmt_clust
 6946              	.LVL1027:
 6947              	.L689:
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 6948              		.loc 1 3644 0
 6949 0062 0028     		cmp	r0, #0
 6950 0064 00F0DE80 		beq	.L691
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6951              		.loc 1 3645 0
 6952 0068 0128     		cmp	r0, #1
 6953 006a 31D0     		beq	.L709
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 6954              		.loc 1 3646 0
 6955 006c B0F1FF3F 		cmp	r0, #-1
 6956 0070 39D0     		beq	.L710
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 6957              		.loc 1 3647 0
 6958 0072 E061     		str	r0, [r4, #28]
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6959              		.loc 1 3648 0
 6960 0074 A368     		ldr	r3, [r4, #8]
 6961 0076 03B9     		cbnz	r3, .L687
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6962              		.loc 1 3648 0 is_stmt 0 discriminator 1
 6963 0078 A060     		str	r0, [r4, #8]
 6964              	.LVL1028:
 6965              	.L687:
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 6966              		.loc 1 3653 0 is_stmt 1
 6967 007a 94F91430 		ldrsb	r3, [r4, #20]
 6968 007e 002B     		cmp	r3, #0
 6969 0080 3CDB     		blt	.L711
 6970              	.L694:
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 6971              		.loc 1 3658 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 244


 6972 0082 DDF80CB0 		ldr	fp, [sp, #12]
 6973 0086 E169     		ldr	r1, [r4, #28]
 6974 0088 5846     		mov	r0, fp
 6975 008a FFF7FEFF 		bl	clust2sect
 6976              	.LVL1029:
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 6977              		.loc 1 3659 0
 6978 008e 8246     		mov	r10, r0
 6979 0090 0028     		cmp	r0, #0
 6980 0092 4CD0     		beq	.L712
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
 6981              		.loc 1 3660 0
 6982 0094 BA44     		add	r10, r10, r7
 6983              	.LVL1030:
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 6984              		.loc 1 3662 0
 6985 0096 750A     		lsrs	r5, r6, #9
 6986              	.LVL1031:
 6987 0098 6CD0     		beq	.L697
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 6988              		.loc 1 3663 0
 6989 009a 7B19     		adds	r3, r7, r5
 6990 009c BBF80A20 		ldrh	r2, [fp, #10]
 6991 00a0 9342     		cmp	r3, r2
 6992 00a2 00D9     		bls	.L698
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6993              		.loc 1 3664 0
 6994 00a4 D51B     		subs	r5, r2, r7
 6995              	.LVL1032:
 6996              	.L698:
3666:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 6997              		.loc 1 3666 0
 6998 00a6 2B46     		mov	r3, r5
 6999 00a8 5246     		mov	r2, r10
 7000 00aa 4146     		mov	r1, r8
 7001 00ac 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 7002 00b0 FFF7FEFF 		bl	disk_write
 7003              	.LVL1033:
 7004 00b4 0028     		cmp	r0, #0
 7005 00b6 45D1     		bne	.L713
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
 7006              		.loc 1 3674 0
 7007 00b8 216A     		ldr	r1, [r4, #32]
 7008 00ba A1EB0A01 		sub	r1, r1, r10
 7009 00be A942     		cmp	r1, r5
 7010 00c0 4BD3     		bcc	.L714
 7011              	.L700:
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 7012              		.loc 1 3680 0
 7013 00c2 6D02     		lsls	r5, r5, #9
 7014              	.LVL1034:
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7015              		.loc 1 3681 0
 7016 00c4 72E0     		b	.L701
 7017              	.LVL1035:
 7018              	.L690:
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 245


 7019              		.loc 1 3641 0
 7020 00c6 E169     		ldr	r1, [r4, #28]
 7021 00c8 0198     		ldr	r0, [sp, #4]
 7022 00ca FFF7FEFF 		bl	create_chain
 7023              	.LVL1036:
 7024 00ce C8E7     		b	.L689
 7025              	.L709:
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 7026              		.loc 1 3645 0 discriminator 1
 7027 00d0 4FF0020A 		mov	r10, #2
 7028 00d4 84F815A0 		strb	r10, [r4, #21]
 7029 00d8 5146     		mov	r1, r10
 7030 00da 0398     		ldr	r0, [sp, #12]
 7031              	.LVL1037:
 7032 00dc FFF7FEFF 		bl	unlock_fs
 7033              	.LVL1038:
 7034 00e0 CDF800A0 		str	r10, [sp]
 7035              	.LVL1039:
 7036 00e4 ADE7     		b	.L683
 7037              	.LVL1040:
 7038              	.L710:
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 7039              		.loc 1 3646 0 discriminator 1
 7040 00e6 4FF0010A 		mov	r10, #1
 7041 00ea 84F815A0 		strb	r10, [r4, #21]
 7042 00ee 5146     		mov	r1, r10
 7043 00f0 0398     		ldr	r0, [sp, #12]
 7044              	.LVL1041:
 7045 00f2 FFF7FEFF 		bl	unlock_fs
 7046              	.LVL1042:
 7047 00f6 CDF800A0 		str	r10, [sp]
 7048              	.LVL1043:
 7049 00fa A2E7     		b	.L683
 7050              	.LVL1044:
 7051              	.L711:
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 7052              		.loc 1 3654 0
 7053 00fc 0123     		movs	r3, #1
 7054 00fe 226A     		ldr	r2, [r4, #32]
 7055 0100 04F13001 		add	r1, r4, #48
 7056 0104 0398     		ldr	r0, [sp, #12]
 7057 0106 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 7058 0108 FFF7FEFF 		bl	disk_write
 7059              	.LVL1045:
 7060 010c 20B9     		cbnz	r0, .L715
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7061              		.loc 1 3655 0
 7062 010e 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 7063 0110 03F07F03 		and	r3, r3, #127
 7064 0114 2375     		strb	r3, [r4, #20]
 7065 0116 B4E7     		b	.L694
 7066              	.L715:
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 7067              		.loc 1 3654 0 discriminator 1
 7068 0118 4FF0010A 		mov	r10, #1
 7069 011c 84F815A0 		strb	r10, [r4, #21]
 7070 0120 5146     		mov	r1, r10
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 246


 7071 0122 0398     		ldr	r0, [sp, #12]
 7072 0124 FFF7FEFF 		bl	unlock_fs
 7073              	.LVL1046:
 7074 0128 CDF800A0 		str	r10, [sp]
 7075              	.LVL1047:
 7076 012c 89E7     		b	.L683
 7077              	.LVL1048:
 7078              	.L712:
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 7079              		.loc 1 3659 0 discriminator 1
 7080 012e 4FF0020A 		mov	r10, #2
 7081 0132 84F815A0 		strb	r10, [r4, #21]
 7082 0136 5146     		mov	r1, r10
 7083 0138 5846     		mov	r0, fp
 7084              	.LVL1049:
 7085 013a FFF7FEFF 		bl	unlock_fs
 7086              	.LVL1050:
 7087 013e CDF800A0 		str	r10, [sp]
 7088              	.LVL1051:
 7089 0142 7EE7     		b	.L683
 7090              	.LVL1052:
 7091              	.L713:
3666:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 7092              		.loc 1 3666 0 discriminator 1
 7093 0144 4FF0010A 		mov	r10, #1
 7094              	.LVL1053:
 7095 0148 84F815A0 		strb	r10, [r4, #21]
 7096 014c 5146     		mov	r1, r10
 7097 014e 0398     		ldr	r0, [sp, #12]
 7098 0150 FFF7FEFF 		bl	unlock_fs
 7099              	.LVL1054:
 7100 0154 CDF800A0 		str	r10, [sp]
 7101              	.LVL1055:
 7102 0158 73E7     		b	.L683
 7103              	.LVL1056:
 7104              	.L714:
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 7105              		.loc 1 3675 0
 7106 015a 4FF40072 		mov	r2, #512
 7107 015e 08EB4121 		add	r1, r8, r1, lsl #9
 7108 0162 04F13000 		add	r0, r4, #48
 7109 0166 FFF7FEFF 		bl	mem_cpy
 7110              	.LVL1057:
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7111              		.loc 1 3676 0
 7112 016a 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 7113 016c 03F07F03 		and	r3, r3, #127
 7114 0170 2375     		strb	r3, [r4, #20]
 7115 0172 A6E7     		b	.L700
 7116              	.L697:
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 7117              		.loc 1 3689 0
 7118 0174 236A     		ldr	r3, [r4, #32]
 7119 0176 5345     		cmp	r3, r10
 7120 0178 03D0     		beq	.L702
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 7121              		.loc 1 3690 0 discriminator 1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 247


 7122 017a A269     		ldr	r2, [r4, #24]
 7123 017c E368     		ldr	r3, [r4, #12]
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 7124              		.loc 1 3689 0 discriminator 1
 7125 017e 9A42     		cmp	r2, r3
 7126 0180 3BD3     		bcc	.L716
 7127              	.L702:
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7128              		.loc 1 3695 0
 7129 0182 C4F820A0 		str	r10, [r4, #32]
 7130              	.LVL1058:
 7131              	.L686:
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 7132              		.loc 1 3697 0
 7133 0186 A369     		ldr	r3, [r4, #24]
 7134 0188 C3F30803 		ubfx	r3, r3, #0, #9
 7135 018c C3F50075 		rsb	r5, r3, #512
 7136              	.LVL1059:
3698:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 7137              		.loc 1 3698 0
 7138 0190 AE42     		cmp	r6, r5
 7139 0192 00D2     		bcs	.L703
 7140 0194 3546     		mov	r5, r6
 7141              	.LVL1060:
 7142              	.L703:
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
 7143              		.loc 1 3704 0
 7144 0196 04F13000 		add	r0, r4, #48
 7145 019a 2A46     		mov	r2, r5
 7146 019c 4146     		mov	r1, r8
 7147 019e 1844     		add	r0, r0, r3
 7148 01a0 FFF7FEFF 		bl	mem_cpy
 7149              	.LVL1061:
3705:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7150              		.loc 1 3705 0
 7151 01a4 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 7152 01a6 63F07F03 		orn	r3, r3, #127
 7153 01aa 2375     		strb	r3, [r4, #20]
 7154              	.L701:
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 7155              		.loc 1 3625 0
 7156 01ac A844     		add	r8, r8, r5
 7157              	.LVL1062:
 7158 01ae A369     		ldr	r3, [r4, #24]
 7159 01b0 2B44     		add	r3, r3, r5
 7160 01b2 A361     		str	r3, [r4, #24]
 7161 01b4 E268     		ldr	r2, [r4, #12]
 7162 01b6 9342     		cmp	r3, r2
 7163 01b8 38BF     		it	cc
 7164 01ba 1346     		movcc	r3, r2
 7165 01bc E360     		str	r3, [r4, #12]
 7166 01be D9F80030 		ldr	r3, [r9]
 7167 01c2 2B44     		add	r3, r3, r5
 7168 01c4 C9F80030 		str	r3, [r9]
 7169 01c8 761B     		subs	r6, r6, r5
 7170              	.LVL1063:
 7171              	.L704:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 248


3624:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
 7172              		.loc 1 3624 0
 7173 01ca 5EB3     		cbz	r6, .L691
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 7174              		.loc 1 3626 0
 7175 01cc A169     		ldr	r1, [r4, #24]
 7176 01ce C1F30803 		ubfx	r3, r1, #0, #9
 7177 01d2 002B     		cmp	r3, #0
 7178 01d4 D7D1     		bne	.L686
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
 7179              		.loc 1 3627 0
 7180 01d6 039B     		ldr	r3, [sp, #12]
 7181 01d8 5F89     		ldrh	r7, [r3, #10]
 7182 01da 013F     		subs	r7, r7, #1
 7183              	.LVL1064:
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 7184              		.loc 1 3628 0
 7185 01dc 17EA5127 		ands	r7, r7, r1, lsr #9
 7186              	.LVL1065:
 7187 01e0 7FF44BAF 		bne	.L687
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
 7188              		.loc 1 3629 0
 7189 01e4 0029     		cmp	r1, #0
 7190 01e6 7FF437AF 		bne	.L688
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
 7191              		.loc 1 3630 0
 7192 01ea A068     		ldr	r0, [r4, #8]
 7193              	.LVL1066:
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
 7194              		.loc 1 3631 0
 7195 01ec 0028     		cmp	r0, #0
 7196 01ee 7FF438AF 		bne	.L689
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 7197              		.loc 1 3632 0
 7198 01f2 0198     		ldr	r0, [sp, #4]
 7199              	.LVL1067:
 7200 01f4 FFF7FEFF 		bl	create_chain
 7201              	.LVL1068:
 7202 01f8 33E7     		b	.L689
 7203              	.LVL1069:
 7204              	.L716:
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
 7205              		.loc 1 3691 0
 7206 01fa 0123     		movs	r3, #1
 7207 01fc 5246     		mov	r2, r10
 7208 01fe 04F13001 		add	r1, r4, #48
 7209 0202 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 7210 0206 FFF7FEFF 		bl	disk_read
 7211              	.LVL1070:
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 7212              		.loc 1 3690 0
 7213 020a 0028     		cmp	r0, #0
 7214 020c B9D0     		beq	.L702
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7215              		.loc 1 3692 0
 7216 020e 4FF0010A 		mov	r10, #1
 7217              	.LVL1071:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 249


 7218 0212 84F815A0 		strb	r10, [r4, #21]
 7219 0216 5146     		mov	r1, r10
 7220 0218 0398     		ldr	r0, [sp, #12]
 7221 021a FFF7FEFF 		bl	unlock_fs
 7222              	.LVL1072:
 7223 021e CDF800A0 		str	r10, [sp]
 7224              	.LVL1073:
 7225 0222 0EE7     		b	.L683
 7226              	.LVL1074:
 7227              	.L691:
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7228              		.loc 1 3709 0
 7229 0224 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 7230 0226 43F04003 		orr	r3, r3, #64
 7231 022a 2375     		strb	r3, [r4, #20]
3711:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7232              		.loc 1 3711 0
 7233 022c 0021     		movs	r1, #0
 7234 022e 0398     		ldr	r0, [sp, #12]
 7235 0230 FFF7FEFF 		bl	unlock_fs
 7236              	.LVL1075:
 7237 0234 05E7     		b	.L683
 7238              		.cfi_endproc
 7239              	.LFE193:
 7241              		.section	.text.putc_bfd,"ax",%progbits
 7242              		.align	1
 7243              		.syntax unified
 7244              		.thumb
 7245              		.thumb_func
 7246              		.fpu fpv5-sp-d16
 7248              	putc_bfd:
 7249              	.LFB212:
5910:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
 7250              		.loc 1 5910 0
 7251              		.cfi_startproc
 7252              		@ args = 0, pretend = 0, frame = 8
 7253              		@ frame_needed = 0, uses_anonymous_args = 0
 7254              	.LVL1076:
 7255 0000 70B5     		push	{r4, r5, r6, lr}
 7256              	.LCFI77:
 7257              		.cfi_def_cfa_offset 16
 7258              		.cfi_offset 4, -16
 7259              		.cfi_offset 5, -12
 7260              		.cfi_offset 6, -8
 7261              		.cfi_offset 14, -4
 7262 0002 82B0     		sub	sp, sp, #8
 7263              	.LCFI78:
 7264              		.cfi_def_cfa_offset 24
 7265 0004 0446     		mov	r4, r0
 7266 0006 0D46     		mov	r5, r1
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
 7267              		.loc 1 5915 0
 7268 0008 0A29     		cmp	r1, #10
 7269 000a 0DD0     		beq	.L724
 7270              	.LVL1077:
 7271              	.L718:
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 250


 7272              		.loc 1 5919 0
 7273 000c 6368     		ldr	r3, [r4, #4]
 7274              	.LVL1078:
5920:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7275              		.loc 1 5920 0
 7276 000e 002B     		cmp	r3, #0
 7277 0010 08DB     		blt	.L717
5949:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7278              		.loc 1 5949 0
 7279 0012 5E1C     		adds	r6, r3, #1
 7280              	.LVL1079:
 7281 0014 2344     		add	r3, r3, r4
 7282 0016 1D73     		strb	r5, [r3, #12]
5952:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
 7283              		.loc 1 5952 0
 7284 0018 3C2E     		cmp	r6, #60
 7285 001a 09DC     		bgt	.L725
 7286              	.LVL1080:
 7287              	.L720:
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
 7288              		.loc 1 5956 0
 7289 001c 6660     		str	r6, [r4, #4]
5957:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7290              		.loc 1 5957 0
 7291 001e A368     		ldr	r3, [r4, #8]
 7292 0020 0133     		adds	r3, r3, #1
 7293 0022 A360     		str	r3, [r4, #8]
 7294              	.LVL1081:
 7295              	.L717:
5958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7296              		.loc 1 5958 0
 7297 0024 02B0     		add	sp, sp, #8
 7298              	.LCFI79:
 7299              		.cfi_remember_state
 7300              		.cfi_def_cfa_offset 16
 7301              		@ sp needed
 7302 0026 70BD     		pop	{r4, r5, r6, pc}
 7303              	.LVL1082:
 7304              	.L724:
 7305              	.LCFI80:
 7306              		.cfi_restore_state
5916:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7307              		.loc 1 5916 0
 7308 0028 0D21     		movs	r1, #13
 7309              	.LVL1083:
 7310 002a FFF7E9FF 		bl	putc_bfd
 7311              	.LVL1084:
 7312 002e EDE7     		b	.L718
 7313              	.LVL1085:
 7314              	.L725:
5953:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 7315              		.loc 1 5953 0
 7316 0030 01AB     		add	r3, sp, #4
 7317 0032 3246     		mov	r2, r6
 7318 0034 04F10C01 		add	r1, r4, #12
 7319 0038 2068     		ldr	r0, [r4]
 7320 003a FFF7FEFF 		bl	f_write
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 251


 7321              	.LVL1086:
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7322              		.loc 1 5954 0
 7323 003e 019B     		ldr	r3, [sp, #4]
 7324 0040 9E42     		cmp	r6, r3
 7325 0042 02D0     		beq	.L726
 7326 0044 4FF0FF36 		mov	r6, #-1
 7327              	.LVL1087:
 7328 0048 E8E7     		b	.L720
 7329              	.LVL1088:
 7330              	.L726:
 7331 004a 0026     		movs	r6, #0
 7332              	.LVL1089:
 7333 004c E6E7     		b	.L720
 7334              		.cfi_endproc
 7335              	.LFE212:
 7337              		.section	.text.putc_flush,"ax",%progbits
 7338              		.align	1
 7339              		.syntax unified
 7340              		.thumb
 7341              		.thumb_func
 7342              		.fpu fpv5-sp-d16
 7344              	putc_flush:
 7345              	.LFB213:
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 7346              		.loc 1 5965 0
 7347              		.cfi_startproc
 7348              		@ args = 0, pretend = 0, frame = 8
 7349              		@ frame_needed = 0, uses_anonymous_args = 0
 7350              	.LVL1090:
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
 7351              		.loc 1 5968 0
 7352 0000 4268     		ldr	r2, [r0, #4]
 7353 0002 002A     		cmp	r2, #0
 7354 0004 10DB     		blt	.L729
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 7355              		.loc 1 5965 0
 7356 0006 10B5     		push	{r4, lr}
 7357              	.LCFI81:
 7358              		.cfi_def_cfa_offset 8
 7359              		.cfi_offset 4, -8
 7360              		.cfi_offset 14, -4
 7361 0008 82B0     		sub	sp, sp, #8
 7362              	.LCFI82:
 7363              		.cfi_def_cfa_offset 16
 7364 000a 0446     		mov	r4, r0
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
 7365              		.loc 1 5969 0
 7366 000c 01AB     		add	r3, sp, #4
 7367 000e 00F10C01 		add	r1, r0, #12
 7368 0012 0068     		ldr	r0, [r0]
 7369              	.LVL1091:
 7370 0014 FFF7FEFF 		bl	f_write
 7371              	.LVL1092:
 7372 0018 48B9     		cbnz	r0, .L730
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 7373              		.loc 1 5970 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 252


 7374 001a 6268     		ldr	r2, [r4, #4]
 7375 001c 019B     		ldr	r3, [sp, #4]
 7376 001e 9A42     		cmp	r2, r3
 7377 0020 08D1     		bne	.L731
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 7378              		.loc 1 5970 0 is_stmt 0 discriminator 1
 7379 0022 A068     		ldr	r0, [r4, #8]
 7380              	.L727:
5972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7381              		.loc 1 5972 0 is_stmt 1
 7382 0024 02B0     		add	sp, sp, #8
 7383              	.LCFI83:
 7384              		.cfi_def_cfa_offset 8
 7385              		@ sp needed
 7386 0026 10BD     		pop	{r4, pc}
 7387              	.LVL1093:
 7388              	.L729:
 7389              	.LCFI84:
 7390              		.cfi_def_cfa_offset 0
 7391              		.cfi_restore 4
 7392              		.cfi_restore 14
5971:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7393              		.loc 1 5971 0
 7394 0028 4FF0FF30 		mov	r0, #-1
 7395              	.LVL1094:
5972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7396              		.loc 1 5972 0
 7397 002c 7047     		bx	lr
 7398              	.LVL1095:
 7399              	.L730:
 7400              	.LCFI85:
 7401              		.cfi_def_cfa_offset 16
 7402              		.cfi_offset 4, -8
 7403              		.cfi_offset 14, -4
5971:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7404              		.loc 1 5971 0
 7405 002e 4FF0FF30 		mov	r0, #-1
 7406 0032 F7E7     		b	.L727
 7407              	.L731:
 7408 0034 4FF0FF30 		mov	r0, #-1
 7409 0038 F4E7     		b	.L727
 7410              		.cfi_endproc
 7411              	.LFE213:
 7413              		.section	.text.f_sync,"ax",%progbits
 7414              		.align	1
 7415              		.global	f_sync
 7416              		.syntax unified
 7417              		.thumb
 7418              		.thumb_func
 7419              		.fpu fpv5-sp-d16
 7421              	f_sync:
 7422              	.LFB194:
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7423              		.loc 1 3724 0
 7424              		.cfi_startproc
 7425              		@ args = 0, pretend = 0, frame = 8
 7426              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 253


 7427              	.LVL1096:
 7428 0000 70B5     		push	{r4, r5, r6, lr}
 7429              	.LCFI86:
 7430              		.cfi_def_cfa_offset 16
 7431              		.cfi_offset 4, -16
 7432              		.cfi_offset 5, -12
 7433              		.cfi_offset 6, -8
 7434              		.cfi_offset 14, -4
 7435 0002 82B0     		sub	sp, sp, #8
 7436              	.LCFI87:
 7437              		.cfi_def_cfa_offset 24
 7438 0004 0546     		mov	r5, r0
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7439              		.loc 1 3734 0
 7440 0006 01A9     		add	r1, sp, #4
 7441 0008 FFF7FEFF 		bl	validate
 7442              	.LVL1097:
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 7443              		.loc 1 3735 0
 7444 000c 0446     		mov	r4, r0
 7445 000e 78B9     		cbnz	r0, .L737
3736:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 7446              		.loc 1 3736 0
 7447 0010 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7448 0012 13F0400F 		tst	r3, #64
 7449 0016 0BD0     		beq	.L737
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 7450              		.loc 1 3738 0
 7451 0018 13F0800F 		tst	r3, #128
 7452 001c 0FD1     		bne	.L742
 7453              	.LVL1098:
 7454              	.L738:
3744:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7455              		.loc 1 3744 0
 7456 001e FFF7FEFF 		bl	get_fattime
 7457              	.LVL1099:
 7458 0022 0646     		mov	r6, r0
 7459              	.LVL1100:
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 7460              		.loc 1 3774 0
 7461 0024 696A     		ldr	r1, [r5, #36]
 7462 0026 0198     		ldr	r0, [sp, #4]
 7463              	.LVL1101:
 7464 0028 FFF7FEFF 		bl	move_window
 7465              	.LVL1102:
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
 7466              		.loc 1 3775 0
 7467 002c 0446     		mov	r4, r0
 7468 002e D0B1     		cbz	r0, .L743
 7469              	.LVL1103:
 7470              	.L737:
3790:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7471              		.loc 1 3790 0
 7472 0030 2146     		mov	r1, r4
 7473 0032 0198     		ldr	r0, [sp, #4]
 7474 0034 FFF7FEFF 		bl	unlock_fs
 7475              	.LVL1104:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 254


 7476              	.L740:
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7477              		.loc 1 3791 0
 7478 0038 2046     		mov	r0, r4
 7479 003a 02B0     		add	sp, sp, #8
 7480              	.LCFI88:
 7481              		.cfi_remember_state
 7482              		.cfi_def_cfa_offset 16
 7483              		@ sp needed
 7484 003c 70BD     		pop	{r4, r5, r6, pc}
 7485              	.LVL1105:
 7486              	.L742:
 7487              	.LCFI89:
 7488              		.cfi_restore_state
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 7489              		.loc 1 3739 0
 7490 003e 0123     		movs	r3, #1
 7491 0040 2A6A     		ldr	r2, [r5, #32]
 7492 0042 05F13001 		add	r1, r5, #48
 7493 0046 0198     		ldr	r0, [sp, #4]
 7494              	.LVL1106:
 7495 0048 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 7496 004a FFF7FEFF 		bl	disk_write
 7497              	.LVL1107:
 7498 004e 20B9     		cbnz	r0, .L744
3740:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7499              		.loc 1 3740 0
 7500 0050 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7501 0052 03F07F03 		and	r3, r3, #127
 7502 0056 2B75     		strb	r3, [r5, #20]
 7503 0058 E1E7     		b	.L738
 7504              	.L744:
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 7505              		.loc 1 3739 0 discriminator 1
 7506 005a 0121     		movs	r1, #1
 7507 005c 0198     		ldr	r0, [sp, #4]
 7508 005e FFF7FEFF 		bl	unlock_fs
 7509              	.LVL1108:
 7510 0062 0124     		movs	r4, #1
 7511 0064 E8E7     		b	.L740
 7512              	.LVL1109:
 7513              	.L743:
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
 7514              		.loc 1 3776 0
 7515 0066 AC6A     		ldr	r4, [r5, #40]
 7516              	.LVL1110:
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
 7517              		.loc 1 3777 0
 7518 0068 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 7519 006a 43F02003 		orr	r3, r3, #32
 7520 006e E372     		strb	r3, [r4, #11]
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 7521              		.loc 1 3778 0
 7522 0070 AA68     		ldr	r2, [r5, #8]
 7523 0072 2146     		mov	r1, r4
 7524 0074 2868     		ldr	r0, [r5]
 7525              	.LVL1111:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 255


 7526 0076 FFF7FEFF 		bl	st_clust
 7527              	.LVL1112:
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 7528              		.loc 1 3779 0
 7529 007a E968     		ldr	r1, [r5, #12]
 7530 007c 04F11C00 		add	r0, r4, #28
 7531 0080 FFF7FEFF 		bl	st_dword
 7532              	.LVL1113:
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
 7533              		.loc 1 3780 0
 7534 0084 3146     		mov	r1, r6
 7535 0086 04F11600 		add	r0, r4, #22
 7536 008a FFF7FEFF 		bl	st_dword
 7537              	.LVL1114:
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7538              		.loc 1 3781 0
 7539 008e 0021     		movs	r1, #0
 7540 0090 04F11200 		add	r0, r4, #18
 7541 0094 FFF7FEFF 		bl	st_word
 7542              	.LVL1115:
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 7543              		.loc 1 3782 0
 7544 0098 019B     		ldr	r3, [sp, #4]
 7545 009a 0122     		movs	r2, #1
 7546 009c DA70     		strb	r2, [r3, #3]
3783:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 7547              		.loc 1 3783 0
 7548 009e 0198     		ldr	r0, [sp, #4]
 7549 00a0 FFF7FEFF 		bl	sync_fs
 7550              	.LVL1116:
 7551 00a4 0446     		mov	r4, r0
 7552              	.LVL1117:
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7553              		.loc 1 3784 0
 7554 00a6 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7555 00a8 23F04003 		bic	r3, r3, #64
 7556 00ac 2B75     		strb	r3, [r5, #20]
 7557 00ae BFE7     		b	.L737
 7558              		.cfi_endproc
 7559              	.LFE194:
 7561              		.section	.text.f_close,"ax",%progbits
 7562              		.align	1
 7563              		.global	f_close
 7564              		.syntax unified
 7565              		.thumb
 7566              		.thumb_func
 7567              		.fpu fpv5-sp-d16
 7569              	f_close:
 7570              	.LFB195:
3805:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7571              		.loc 1 3805 0
 7572              		.cfi_startproc
 7573              		@ args = 0, pretend = 0, frame = 8
 7574              		@ frame_needed = 0, uses_anonymous_args = 0
 7575              	.LVL1118:
 7576 0000 30B5     		push	{r4, r5, lr}
 7577              	.LCFI90:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 256


 7578              		.cfi_def_cfa_offset 12
 7579              		.cfi_offset 4, -12
 7580              		.cfi_offset 5, -8
 7581              		.cfi_offset 14, -4
 7582 0002 83B0     		sub	sp, sp, #12
 7583              	.LCFI91:
 7584              		.cfi_def_cfa_offset 24
 7585 0004 0546     		mov	r5, r0
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
 7586              		.loc 1 3810 0
 7587 0006 FFF7FEFF 		bl	f_sync
 7588              	.LVL1119:
3811:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7589              		.loc 1 3811 0
 7590 000a 0446     		mov	r4, r0
 7591 000c 10B1     		cbz	r0, .L749
 7592              	.LVL1120:
 7593              	.L746:
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7594              		.loc 1 3829 0
 7595 000e 2046     		mov	r0, r4
 7596 0010 03B0     		add	sp, sp, #12
 7597              	.LCFI92:
 7598              		.cfi_remember_state
 7599              		.cfi_def_cfa_offset 12
 7600              		@ sp needed
 7601 0012 30BD     		pop	{r4, r5, pc}
 7602              	.LVL1121:
 7603              	.L749:
 7604              	.LCFI93:
 7605              		.cfi_restore_state
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 7606              		.loc 1 3814 0
 7607 0014 01A9     		add	r1, sp, #4
 7608 0016 2846     		mov	r0, r5
 7609              	.LVL1122:
 7610 0018 FFF7FEFF 		bl	validate
 7611              	.LVL1123:
3815:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7612              		.loc 1 3815 0
 7613 001c 0446     		mov	r4, r0
 7614 001e 0028     		cmp	r0, #0
 7615 0020 F5D1     		bne	.L746
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
 7616              		.loc 1 3817 0
 7617 0022 2869     		ldr	r0, [r5, #16]
 7618              	.LVL1124:
 7619 0024 FFF7FEFF 		bl	dec_lock
 7620              	.LVL1125:
3818:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7621              		.loc 1 3818 0
 7622 0028 0446     		mov	r4, r0
 7623 002a 08B9     		cbnz	r0, .L747
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7624              		.loc 1 3821 0
 7625 002c 0023     		movs	r3, #0
 7626 002e 2B60     		str	r3, [r5]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 257


 7627              	.L747:
3824:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7628              		.loc 1 3824 0
 7629 0030 0021     		movs	r1, #0
 7630 0032 0198     		ldr	r0, [sp, #4]
 7631              	.LVL1126:
 7632 0034 FFF7FEFF 		bl	unlock_fs
 7633              	.LVL1127:
 7634 0038 E9E7     		b	.L746
 7635              		.cfi_endproc
 7636              	.LFE195:
 7638              		.section	.text.f_chdrive,"ax",%progbits
 7639              		.align	1
 7640              		.global	f_chdrive
 7641              		.syntax unified
 7642              		.thumb
 7643              		.thumb_func
 7644              		.fpu fpv5-sp-d16
 7646              	f_chdrive:
 7647              	.LFB196:
3843:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
 7648              		.loc 1 3843 0
 7649              		.cfi_startproc
 7650              		@ args = 0, pretend = 0, frame = 8
 7651              		@ frame_needed = 0, uses_anonymous_args = 0
 7652              	.LVL1128:
 7653 0000 00B5     		push	{lr}
 7654              	.LCFI94:
 7655              		.cfi_def_cfa_offset 4
 7656              		.cfi_offset 14, -4
 7657 0002 83B0     		sub	sp, sp, #12
 7658              	.LCFI95:
 7659              		.cfi_def_cfa_offset 16
 7660 0004 02AB     		add	r3, sp, #8
 7661 0006 43F8040D 		str	r0, [r3, #-4]!
3848:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 7662              		.loc 1 3848 0
 7663 000a 1846     		mov	r0, r3
 7664              	.LVL1129:
 7665 000c FFF7FEFF 		bl	get_ldnumber
 7666              	.LVL1130:
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7667              		.loc 1 3849 0
 7668 0010 0028     		cmp	r0, #0
 7669 0012 05DB     		blt	.L752
3851:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7670              		.loc 1 3851 0
 7671 0014 034B     		ldr	r3, .L754
 7672 0016 1870     		strb	r0, [r3]
3853:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7673              		.loc 1 3853 0
 7674 0018 0020     		movs	r0, #0
 7675              	.LVL1131:
 7676              	.L751:
3854:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7677              		.loc 1 3854 0
 7678 001a 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 258


 7679              	.LCFI96:
 7680              		.cfi_remember_state
 7681              		.cfi_def_cfa_offset 4
 7682              		@ sp needed
 7683 001c 5DF804FB 		ldr	pc, [sp], #4
 7684              	.LVL1132:
 7685              	.L752:
 7686              	.LCFI97:
 7687              		.cfi_restore_state
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7688              		.loc 1 3849 0
 7689 0020 0B20     		movs	r0, #11
 7690              	.LVL1133:
 7691 0022 FAE7     		b	.L751
 7692              	.L755:
 7693              		.align	2
 7694              	.L754:
 7695 0024 00000000 		.word	.LANCHOR3
 7696              		.cfi_endproc
 7697              	.LFE196:
 7699              		.section	.text.f_chdir,"ax",%progbits
 7700              		.align	1
 7701              		.global	f_chdir
 7702              		.syntax unified
 7703              		.thumb
 7704              		.thumb_func
 7705              		.fpu fpv5-sp-d16
 7707              	f_chdir:
 7708              	.LFB197:
3861:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7709              		.loc 1 3861 0
 7710              		.cfi_startproc
 7711              		@ args = 0, pretend = 0, frame = 72
 7712              		@ frame_needed = 0, uses_anonymous_args = 0
 7713              	.LVL1134:
 7714 0000 70B5     		push	{r4, r5, r6, lr}
 7715              	.LCFI98:
 7716              		.cfi_def_cfa_offset 16
 7717              		.cfi_offset 4, -16
 7718              		.cfi_offset 5, -12
 7719              		.cfi_offset 6, -8
 7720              		.cfi_offset 14, -4
 7721 0002 92B0     		sub	sp, sp, #72
 7722              	.LCFI99:
 7723              		.cfi_def_cfa_offset 88
 7724 0004 0190     		str	r0, [sp, #4]
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7725              		.loc 1 3868 0
 7726 0006 0022     		movs	r2, #0
 7727 0008 03A9     		add	r1, sp, #12
 7728 000a 01A8     		add	r0, sp, #4
 7729              	.LVL1135:
 7730 000c FFF7FEFF 		bl	find_volume
 7731              	.LVL1136:
3869:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
 7732              		.loc 1 3869 0
 7733 0010 0446     		mov	r4, r0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 259


 7734 0012 68BB     		cbnz	r0, .L757
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7735              		.loc 1 3870 0
 7736 0014 039B     		ldr	r3, [sp, #12]
 7737 0016 0493     		str	r3, [sp, #16]
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
 7738              		.loc 1 3871 0
 7739 0018 4FF40070 		mov	r0, #512
 7740              	.LVL1137:
 7741 001c FFF7FEFF 		bl	ff_memalloc
 7742              	.LVL1138:
 7743 0020 0546     		mov	r5, r0
 7744 0022 B8B1     		cbz	r0, .L765
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
 7745              		.loc 1 3871 0 is_stmt 0 discriminator 2
 7746 0024 039B     		ldr	r3, [sp, #12]
 7747 0026 D860     		str	r0, [r3, #12]
3872:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
 7748              		.loc 1 3872 0 is_stmt 1 discriminator 2
 7749 0028 0199     		ldr	r1, [sp, #4]
 7750 002a 04A8     		add	r0, sp, #16
 7751              	.LVL1139:
 7752 002c FFF7FEFF 		bl	follow_path
 7753              	.LVL1140:
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 7754              		.loc 1 3873 0 discriminator 2
 7755 0030 0446     		mov	r4, r0
 7756 0032 C0B9     		cbnz	r0, .L760
3874:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
 7757              		.loc 1 3874 0
 7758 0034 9DF93F30 		ldrsb	r3, [sp, #63]
 7759 0038 002B     		cmp	r3, #0
 7760 003a 11DB     		blt	.L766
3884:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7761              		.loc 1 3884 0
 7762 003c 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 7763 0040 13F0100F 		tst	r3, #16
 7764 0044 1BD0     		beq	.L762
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 7765              		.loc 1 3894 0
 7766 0046 039E     		ldr	r6, [sp, #12]
 7767 0048 0C99     		ldr	r1, [sp, #48]
 7768 004a 3046     		mov	r0, r6
 7769              	.LVL1141:
 7770 004c FFF7FEFF 		bl	ld_clust
 7771              	.LVL1142:
 7772 0050 F061     		str	r0, [r6, #28]
 7773 0052 08E0     		b	.L760
 7774              	.LVL1143:
 7775              	.L765:
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
 7776              		.loc 1 3871 0 discriminator 1
 7777 0054 1121     		movs	r1, #17
 7778 0056 0398     		ldr	r0, [sp, #12]
 7779              	.LVL1144:
 7780 0058 FFF7FEFF 		bl	unlock_fs
 7781              	.LVL1145:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 260


 7782 005c 1124     		movs	r4, #17
 7783 005e 0BE0     		b	.L759
 7784              	.LVL1146:
 7785              	.L766:
3875:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7786              		.loc 1 3875 0
 7787 0060 039B     		ldr	r3, [sp, #12]
 7788 0062 069A     		ldr	r2, [sp, #24]
 7789 0064 DA61     		str	r2, [r3, #28]
 7790              	.LVL1147:
 7791              	.L760:
3901:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 7792              		.loc 1 3901 0
 7793 0066 2846     		mov	r0, r5
 7794 0068 FFF7FEFF 		bl	ff_memfree
 7795              	.LVL1148:
3902:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7796              		.loc 1 3902 0
 7797 006c 042C     		cmp	r4, #4
 7798 006e 08D0     		beq	.L767
 7799              	.LVL1149:
 7800              	.L757:
3905:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7801              		.loc 1 3905 0
 7802 0070 2146     		mov	r1, r4
 7803 0072 0398     		ldr	r0, [sp, #12]
 7804 0074 FFF7FEFF 		bl	unlock_fs
 7805              	.LVL1150:
 7806              	.L759:
3906:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7807              		.loc 1 3906 0
 7808 0078 2046     		mov	r0, r4
 7809 007a 12B0     		add	sp, sp, #72
 7810              	.LCFI100:
 7811              		.cfi_remember_state
 7812              		.cfi_def_cfa_offset 16
 7813              		@ sp needed
 7814 007c 70BD     		pop	{r4, r5, r6, pc}
 7815              	.LVL1151:
 7816              	.L762:
 7817              	.LCFI101:
 7818              		.cfi_restore_state
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7819              		.loc 1 3897 0
 7820 007e 0524     		movs	r4, #5
 7821 0080 F1E7     		b	.L760
 7822              	.LVL1152:
 7823              	.L767:
3902:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7824              		.loc 1 3902 0
 7825 0082 0524     		movs	r4, #5
 7826              	.LVL1153:
 7827 0084 F4E7     		b	.L757
 7828              		.cfi_endproc
 7829              	.LFE197:
 7831              		.section	.text.f_lseek,"ax",%progbits
 7832              		.align	1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 261


 7833              		.global	f_lseek
 7834              		.syntax unified
 7835              		.thumb
 7836              		.thumb_func
 7837              		.fpu fpv5-sp-d16
 7839              	f_lseek:
 7840              	.LFB198:
3994:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7841              		.loc 1 3994 0
 7842              		.cfi_startproc
 7843              		@ args = 0, pretend = 0, frame = 16
 7844              		@ frame_needed = 0, uses_anonymous_args = 0
 7845              	.LVL1154:
 7846 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7847              	.LCFI102:
 7848              		.cfi_def_cfa_offset 36
 7849              		.cfi_offset 4, -36
 7850              		.cfi_offset 5, -32
 7851              		.cfi_offset 6, -28
 7852              		.cfi_offset 7, -24
 7853              		.cfi_offset 8, -20
 7854              		.cfi_offset 9, -16
 7855              		.cfi_offset 10, -12
 7856              		.cfi_offset 11, -8
 7857              		.cfi_offset 14, -4
 7858 0004 85B0     		sub	sp, sp, #20
 7859              	.LCFI103:
 7860              		.cfi_def_cfa_offset 56
 7861 0006 0446     		mov	r4, r0
 7862 0008 0E46     		mov	r6, r1
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 7863              		.loc 1 4003 0
 7864 000a 0190     		str	r0, [sp, #4]
 7865 000c 03A9     		add	r1, sp, #12
 7866              	.LVL1155:
 7867 000e FFF7FEFF 		bl	validate
 7868              	.LVL1156:
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 7869              		.loc 1 4004 0
 7870 0012 0546     		mov	r5, r0
 7871 0014 00B9     		cbnz	r0, .L769
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 7872              		.loc 1 4004 0 is_stmt 0 discriminator 1
 7873 0016 657D     		ldrb	r5, [r4, #21]	@ zero_extendqisi2
 7874              	.LVL1157:
 7875              	.L769:
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7876              		.loc 1 4010 0 is_stmt 1
 7877 0018 ADB9     		cbnz	r5, .L814
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 7878              		.loc 1 4013 0
 7879 001a E36A     		ldr	r3, [r4, #44]
 7880 001c 002B     		cmp	r3, #0
 7881 001e 00F0A880 		beq	.L772
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
 7882              		.loc 1 4014 0
 7883 0022 B6F1FF3F 		cmp	r6, #-1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 262


 7884 0026 13D0     		beq	.L815
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
 7885              		.loc 1 4040 0
 7886 0028 E768     		ldr	r7, [r4, #12]
 7887 002a B742     		cmp	r7, r6
 7888 002c 00D3     		bcc	.L781
 7889 002e 3746     		mov	r7, r6
 7890              	.L781:
 7891              	.LVL1158:
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
 7892              		.loc 1 4041 0
 7893 0030 A761     		str	r7, [r4, #24]
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 7894              		.loc 1 4042 0
 7895 0032 002F     		cmp	r7, #0
 7896 0034 51D1     		bne	.L816
 7897              	.LVL1159:
 7898              	.L780:
4141:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7899              		.loc 1 4141 0
 7900 0036 2946     		mov	r1, r5
 7901 0038 0398     		ldr	r0, [sp, #12]
 7902 003a FFF7FEFF 		bl	unlock_fs
 7903              	.LVL1160:
 7904              	.L771:
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7905              		.loc 1 4142 0
 7906 003e 2846     		mov	r0, r5
 7907 0040 05B0     		add	sp, sp, #20
 7908              	.LCFI104:
 7909              		.cfi_remember_state
 7910              		.cfi_def_cfa_offset 36
 7911              		@ sp needed
 7912 0042 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7913              	.LVL1161:
 7914              	.L814:
 7915              	.LCFI105:
 7916              		.cfi_restore_state
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7917              		.loc 1 4010 0 discriminator 1
 7918 0046 2946     		mov	r1, r5
 7919 0048 0398     		ldr	r0, [sp, #12]
 7920 004a FFF7FEFF 		bl	unlock_fs
 7921              	.LVL1162:
 7922 004e F6E7     		b	.L771
 7923              	.L815:
 7924              	.LVL1163:
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 7925              		.loc 1 4016 0
 7926 0050 03F1040B 		add	fp, r3, #4
 7927              	.LVL1164:
 7928 0054 D3F800A0 		ldr	r10, [r3]
 7929              	.LVL1165:
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
 7930              		.loc 1 4017 0
 7931 0058 D4F80890 		ldr	r9, [r4, #8]
 7932              	.LVL1166:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 263


4018:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 7933              		.loc 1 4018 0
 7934 005c B9F1000F 		cmp	r9, #0
 7935 0060 2FD0     		beq	.L806
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 7936              		.loc 1 4016 0
 7937 0062 4FF00208 		mov	r8, #2
 7938              	.LVL1167:
 7939              	.L779:
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 7940              		.loc 1 4021 0
 7941 0066 08F10208 		add	r8, r8, #2
 7942              	.LVL1168:
 7943 006a 4E46     		mov	r6, r9
 7944 006c 0027     		movs	r7, #0
 7945              	.LVL1169:
 7946              	.L777:
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
 7947              		.loc 1 4023 0
 7948 006e 0137     		adds	r7, r7, #1
 7949              	.LVL1170:
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 7950              		.loc 1 4024 0
 7951 0070 3146     		mov	r1, r6
 7952 0072 0198     		ldr	r0, [sp, #4]
 7953 0074 FFF7FEFF 		bl	get_fat
 7954              	.LVL1171:
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 7955              		.loc 1 4025 0
 7956 0078 0128     		cmp	r0, #1
 7957 007a 14D9     		bls	.L817
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 7958              		.loc 1 4026 0
 7959 007c B0F1FF3F 		cmp	r0, #-1
 7960 0080 18D0     		beq	.L818
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 7961              		.loc 1 4027 0
 7962 0082 731C     		adds	r3, r6, #1
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 7963              		.loc 1 4024 0
 7964 0084 0646     		mov	r6, r0
 7965              	.LVL1172:
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 7966              		.loc 1 4027 0
 7967 0086 8342     		cmp	r3, r0
 7968 0088 F1D0     		beq	.L777
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 7969              		.loc 1 4028 0
 7970 008a C245     		cmp	r10, r8
 7971 008c 05D3     		bcc	.L778
 7972              	.LVL1173:
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 7973              		.loc 1 4029 0
 7974 008e 5B46     		mov	r3, fp
 7975              	.LVL1174:
 7976 0090 43F8087B 		str	r7, [r3], #8
 7977              	.LVL1175:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 264


 7978 0094 CBF80490 		str	r9, [fp, #4]
 7979 0098 9B46     		mov	fp, r3
 7980              	.LVL1176:
 7981              	.L778:
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7982              		.loc 1 4031 0
 7983 009a 039B     		ldr	r3, [sp, #12]
 7984 009c 1B6A     		ldr	r3, [r3, #32]
 7985 009e 8342     		cmp	r3, r0
 7986 00a0 11D9     		bls	.L774
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 7987              		.loc 1 4024 0
 7988 00a2 8146     		mov	r9, r0
 7989              	.LVL1177:
 7990 00a4 DFE7     		b	.L779
 7991              	.LVL1178:
 7992              	.L817:
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 7993              		.loc 1 4025 0 discriminator 1
 7994 00a6 0225     		movs	r5, #2
 7995              	.LVL1179:
 7996 00a8 6575     		strb	r5, [r4, #21]
 7997 00aa 2946     		mov	r1, r5
 7998 00ac 0398     		ldr	r0, [sp, #12]
 7999              	.LVL1180:
 8000 00ae FFF7FEFF 		bl	unlock_fs
 8001              	.LVL1181:
 8002 00b2 C4E7     		b	.L771
 8003              	.LVL1182:
 8004              	.L818:
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 8005              		.loc 1 4026 0 discriminator 1
 8006 00b4 0125     		movs	r5, #1
 8007              	.LVL1183:
 8008 00b6 6575     		strb	r5, [r4, #21]
 8009 00b8 2946     		mov	r1, r5
 8010 00ba 0398     		ldr	r0, [sp, #12]
 8011              	.LVL1184:
 8012 00bc FFF7FEFF 		bl	unlock_fs
 8013              	.LVL1185:
 8014 00c0 BDE7     		b	.L771
 8015              	.LVL1186:
 8016              	.L806:
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 8017              		.loc 1 4016 0
 8018 00c2 4FF00208 		mov	r8, #2
 8019              	.LVL1187:
 8020              	.L774:
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
 8021              		.loc 1 4033 0
 8022 00c6 E36A     		ldr	r3, [r4, #44]
 8023 00c8 C3F80080 		str	r8, [r3]
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
 8024              		.loc 1 4034 0
 8025 00cc D045     		cmp	r8, r10
 8026 00ce 00F21881 		bhi	.L808
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 265


 8027              		.loc 1 4035 0
 8028 00d2 0023     		movs	r3, #0
 8029 00d4 CBF80030 		str	r3, [fp]
 8030 00d8 ADE7     		b	.L780
 8031              	.LVL1188:
 8032              	.L816:
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
 8033              		.loc 1 4043 0
 8034 00da 07F1FF39 		add	r9, r7, #-1
 8035 00de 4946     		mov	r1, r9
 8036 00e0 2046     		mov	r0, r4
 8037 00e2 FFF7FEFF 		bl	clmt_clust
 8038              	.LVL1189:
 8039 00e6 0146     		mov	r1, r0
 8040 00e8 E061     		str	r0, [r4, #28]
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
 8041              		.loc 1 4044 0
 8042 00ea DDF80C80 		ldr	r8, [sp, #12]
 8043 00ee 4046     		mov	r0, r8
 8044 00f0 FFF7FEFF 		bl	clust2sect
 8045              	.LVL1190:
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 8046              		.loc 1 4045 0
 8047 00f4 D8B1     		cbz	r0, .L819
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
 8048              		.loc 1 4046 0
 8049 00f6 B8F80A60 		ldrh	r6, [r8, #10]
 8050 00fa 013E     		subs	r6, r6, #1
 8051 00fc 06EA5926 		and	r6, r6, r9, lsr #9
 8052 0100 0644     		add	r6, r6, r0
 8053              	.LVL1191:
4047:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 8054              		.loc 1 4047 0
 8055 0102 C7F30807 		ubfx	r7, r7, #0, #9
 8056              	.LVL1192:
 8057 0106 002F     		cmp	r7, #0
 8058 0108 95D0     		beq	.L780
4047:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 8059              		.loc 1 4047 0 is_stmt 0 discriminator 1
 8060 010a 226A     		ldr	r2, [r4, #32]
 8061 010c B242     		cmp	r2, r6
 8062 010e 92D0     		beq	.L780
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 8063              		.loc 1 4050 0 is_stmt 1
 8064 0110 94F91430 		ldrsb	r3, [r4, #20]
 8065 0114 002B     		cmp	r3, #0
 8066 0116 11DB     		blt	.L820
 8067              	.L783:
4055:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8068              		.loc 1 4055 0
 8069 0118 0123     		movs	r3, #1
 8070 011a 3246     		mov	r2, r6
 8071 011c 04F13001 		add	r1, r4, #48
 8072 0120 0398     		ldr	r0, [sp, #12]
 8073 0122 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 8074 0124 FFF7FEFF 		bl	disk_read
 8075              	.LVL1193:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 266


 8076 0128 E0B9     		cbnz	r0, .L821
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8077              		.loc 1 4057 0
 8078 012a 2662     		str	r6, [r4, #32]
 8079 012c 83E7     		b	.L780
 8080              	.LVL1194:
 8081              	.L819:
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 8082              		.loc 1 4045 0 discriminator 1
 8083 012e 0225     		movs	r5, #2
 8084              	.LVL1195:
 8085 0130 6575     		strb	r5, [r4, #21]
 8086 0132 2946     		mov	r1, r5
 8087 0134 4046     		mov	r0, r8
 8088              	.LVL1196:
 8089 0136 FFF7FEFF 		bl	unlock_fs
 8090              	.LVL1197:
 8091 013a 80E7     		b	.L771
 8092              	.LVL1198:
 8093              	.L820:
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 8094              		.loc 1 4051 0
 8095 013c 0123     		movs	r3, #1
 8096 013e 04F13001 		add	r1, r4, #48
 8097 0142 98F80100 		ldrb	r0, [r8, #1]	@ zero_extendqisi2
 8098 0146 FFF7FEFF 		bl	disk_write
 8099              	.LVL1199:
 8100 014a 20B9     		cbnz	r0, .L822
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8101              		.loc 1 4052 0
 8102 014c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 8103 014e 03F07F03 		and	r3, r3, #127
 8104 0152 2375     		strb	r3, [r4, #20]
 8105 0154 E0E7     		b	.L783
 8106              	.L822:
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 8107              		.loc 1 4051 0 discriminator 1
 8108 0156 0125     		movs	r5, #1
 8109              	.LVL1200:
 8110 0158 6575     		strb	r5, [r4, #21]
 8111 015a 2946     		mov	r1, r5
 8112 015c 0398     		ldr	r0, [sp, #12]
 8113 015e FFF7FEFF 		bl	unlock_fs
 8114              	.LVL1201:
 8115 0162 6CE7     		b	.L771
 8116              	.LVL1202:
 8117              	.L821:
4055:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8118              		.loc 1 4055 0 discriminator 1
 8119 0164 0125     		movs	r5, #1
 8120              	.LVL1203:
 8121 0166 6575     		strb	r5, [r4, #21]
 8122 0168 2946     		mov	r1, r5
 8123 016a 0398     		ldr	r0, [sp, #12]
 8124 016c FFF7FEFF 		bl	unlock_fs
 8125              	.LVL1204:
 8126 0170 65E7     		b	.L771
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 267


 8127              	.LVL1205:
 8128              	.L772:
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 8129              		.loc 1 4069 0
 8130 0172 E368     		ldr	r3, [r4, #12]
 8131 0174 B342     		cmp	r3, r6
 8132 0176 04D2     		bcs	.L786
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 8133              		.loc 1 4069 0 is_stmt 0 discriminator 1
 8134 0178 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 8135 017a 12F0020F 		tst	r2, #2
 8136 017e 00D1     		bne	.L786
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8137              		.loc 1 4070 0 is_stmt 1
 8138 0180 1E46     		mov	r6, r3
 8139              	.LVL1206:
 8140              	.L786:
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
 8141              		.loc 1 4072 0
 8142 0182 A369     		ldr	r3, [r4, #24]
 8143              	.LVL1207:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 8144              		.loc 1 4073 0
 8145 0184 0022     		movs	r2, #0
 8146 0186 A261     		str	r2, [r4, #24]
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 8147              		.loc 1 4074 0
 8148 0188 002E     		cmp	r6, #0
 8149 018a 7BD0     		beq	.L810
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
 8150              		.loc 1 4075 0
 8151 018c 039A     		ldr	r2, [sp, #12]
 8152 018e B2F80A80 		ldrh	r8, [r2, #10]
 8153 0192 4FEA4828 		lsl	r8, r8, #9
 8154              	.LVL1208:
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 8155              		.loc 1 4076 0
 8156 0196 73B1     		cbz	r3, .L788
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 8157              		.loc 1 4077 0 discriminator 1
 8158 0198 721E     		subs	r2, r6, #1
 8159 019a B2FBF8F2 		udiv	r2, r2, r8
 8160 019e 013B     		subs	r3, r3, #1
 8161              	.LVL1209:
 8162 01a0 B3FBF8F1 		udiv	r1, r3, r8
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 8163              		.loc 1 4076 0 discriminator 1
 8164 01a4 8A42     		cmp	r2, r1
 8165 01a6 06D3     		bcc	.L788
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
 8166              		.loc 1 4078 0
 8167 01a8 C8F10002 		rsb	r2, r8, #0
 8168 01ac 1340     		ands	r3, r3, r2
 8169              	.LVL1210:
 8170 01ae A361     		str	r3, [r4, #24]
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
 8171              		.loc 1 4079 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 268


 8172 01b0 F61A     		subs	r6, r6, r3
 8173              	.LVL1211:
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
 8174              		.loc 1 4080 0
 8175 01b2 E769     		ldr	r7, [r4, #28]
 8176              	.LVL1212:
 8177 01b4 02E0     		b	.L789
 8178              	.LVL1213:
 8179              	.L788:
4082:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 8180              		.loc 1 4082 0
 8181 01b6 A768     		ldr	r7, [r4, #8]
 8182              	.LVL1214:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
 8183              		.loc 1 4084 0
 8184 01b8 17B1     		cbz	r7, .L823
 8185              	.L790:
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8186              		.loc 1 4091 0
 8187 01ba E761     		str	r7, [r4, #28]
 8188              	.L789:
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 8189              		.loc 1 4093 0
 8190 01bc 4FBB     		cbnz	r7, .L793
 8191 01be 62E0     		b	.L787
 8192              	.L823:
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 8193              		.loc 1 4085 0
 8194 01c0 0021     		movs	r1, #0
 8195 01c2 2046     		mov	r0, r4
 8196 01c4 FFF7FEFF 		bl	create_chain
 8197              	.LVL1215:
 8198 01c8 0746     		mov	r7, r0
 8199              	.LVL1216:
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 8200              		.loc 1 4086 0
 8201 01ca 0128     		cmp	r0, #1
 8202 01cc 04D0     		beq	.L824
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 8203              		.loc 1 4087 0
 8204 01ce B0F1FF3F 		cmp	r0, #-1
 8205 01d2 08D0     		beq	.L825
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8206              		.loc 1 4088 0
 8207 01d4 A060     		str	r0, [r4, #8]
 8208 01d6 F0E7     		b	.L790
 8209              	.L824:
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 8210              		.loc 1 4086 0 discriminator 1
 8211 01d8 0225     		movs	r5, #2
 8212              	.LVL1217:
 8213 01da 6575     		strb	r5, [r4, #21]
 8214 01dc 2946     		mov	r1, r5
 8215 01de 0398     		ldr	r0, [sp, #12]
 8216              	.LVL1218:
 8217 01e0 FFF7FEFF 		bl	unlock_fs
 8218              	.LVL1219:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 269


 8219 01e4 2BE7     		b	.L771
 8220              	.LVL1220:
 8221              	.L825:
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 8222              		.loc 1 4087 0 discriminator 1
 8223 01e6 0125     		movs	r5, #1
 8224              	.LVL1221:
 8225 01e8 6575     		strb	r5, [r4, #21]
 8226 01ea 2946     		mov	r1, r5
 8227 01ec 0398     		ldr	r0, [sp, #12]
 8228              	.LVL1222:
 8229 01ee FFF7FEFF 		bl	unlock_fs
 8230              	.LVL1223:
 8231 01f2 24E7     		b	.L771
 8232              	.LVL1224:
 8233              	.L794:
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8234              		.loc 1 4109 0
 8235 01f4 3946     		mov	r1, r7
 8236 01f6 0198     		ldr	r0, [sp, #4]
 8237 01f8 FFF7FEFF 		bl	get_fat
 8238              	.LVL1225:
 8239 01fc 0746     		mov	r7, r0
 8240              	.LVL1226:
 8241              	.L796:
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 8242              		.loc 1 4111 0
 8243 01fe B7F1FF3F 		cmp	r7, #-1
 8244 0202 2AD0     		beq	.L826
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 8245              		.loc 1 4112 0
 8246 0204 012F     		cmp	r7, #1
 8247 0206 2FD9     		bls	.L798
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 8248              		.loc 1 4112 0 is_stmt 0 discriminator 2
 8249 0208 039B     		ldr	r3, [sp, #12]
 8250 020a 1B6A     		ldr	r3, [r3, #32]
 8251 020c BB42     		cmp	r3, r7
 8252 020e 2BD9     		bls	.L798
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8253              		.loc 1 4113 0 is_stmt 1
 8254 0210 E761     		str	r7, [r4, #28]
 8255              	.LVL1227:
 8256              	.L793:
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 8257              		.loc 1 4094 0
 8258 0212 4645     		cmp	r6, r8
 8259 0214 10D9     		bls	.L795
4095:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 8260              		.loc 1 4095 0
 8261 0216 A6EB0806 		sub	r6, r6, r8
 8262              	.LVL1228:
 8263 021a A369     		ldr	r3, [r4, #24]
 8264 021c 4344     		add	r3, r3, r8
 8265 021e A361     		str	r3, [r4, #24]
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
 8266              		.loc 1 4097 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 270


 8267 0220 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 8268 0222 13F0020F 		tst	r3, #2
 8269 0226 E5D0     		beq	.L794
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 8270              		.loc 1 4102 0
 8271 0228 3946     		mov	r1, r7
 8272 022a 0198     		ldr	r0, [sp, #4]
 8273 022c FFF7FEFF 		bl	create_chain
 8274              	.LVL1229:
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
 8275              		.loc 1 4103 0
 8276 0230 0746     		mov	r7, r0
 8277 0232 0028     		cmp	r0, #0
 8278 0234 E3D1     		bne	.L796
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 8279              		.loc 1 4104 0
 8280 0236 0026     		movs	r6, #0
 8281              	.LVL1230:
 8282              	.L795:
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
 8283              		.loc 1 4115 0
 8284 0238 A369     		ldr	r3, [r4, #24]
 8285 023a 3344     		add	r3, r3, r6
 8286 023c A361     		str	r3, [r4, #24]
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
 8287              		.loc 1 4116 0
 8288 023e C6F30803 		ubfx	r3, r6, #0, #9
 8289 0242 002B     		cmp	r3, #0
 8290 0244 40D0     		beq	.L812
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
 8291              		.loc 1 4117 0
 8292 0246 DDF80C80 		ldr	r8, [sp, #12]
 8293              	.LVL1231:
 8294 024a 3946     		mov	r1, r7
 8295 024c 4046     		mov	r0, r8
 8296 024e FFF7FEFF 		bl	clust2sect
 8297              	.LVL1232:
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 8298              		.loc 1 4118 0
 8299 0252 80B1     		cbz	r0, .L827
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8300              		.loc 1 4119 0
 8301 0254 00EB5627 		add	r7, r0, r6, lsr #9
 8302              	.LVL1233:
 8303 0258 15E0     		b	.L787
 8304              	.LVL1234:
 8305              	.L826:
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 8306              		.loc 1 4111 0 discriminator 1
 8307 025a 0125     		movs	r5, #1
 8308              	.LVL1235:
 8309 025c 6575     		strb	r5, [r4, #21]
 8310 025e 2946     		mov	r1, r5
 8311 0260 0398     		ldr	r0, [sp, #12]
 8312              	.LVL1236:
 8313 0262 FFF7FEFF 		bl	unlock_fs
 8314              	.LVL1237:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 271


 8315 0266 EAE6     		b	.L771
 8316              	.LVL1238:
 8317              	.L798:
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 8318              		.loc 1 4112 0 discriminator 3
 8319 0268 0225     		movs	r5, #2
 8320              	.LVL1239:
 8321 026a 6575     		strb	r5, [r4, #21]
 8322 026c 2946     		mov	r1, r5
 8323 026e 0398     		ldr	r0, [sp, #12]
 8324              	.LVL1240:
 8325 0270 FFF7FEFF 		bl	unlock_fs
 8326              	.LVL1241:
 8327 0274 E3E6     		b	.L771
 8328              	.LVL1242:
 8329              	.L827:
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 8330              		.loc 1 4118 0 discriminator 1
 8331 0276 0225     		movs	r5, #2
 8332              	.LVL1243:
 8333 0278 6575     		strb	r5, [r4, #21]
 8334 027a 2946     		mov	r1, r5
 8335 027c 4046     		mov	r0, r8
 8336              	.LVL1244:
 8337 027e FFF7FEFF 		bl	unlock_fs
 8338              	.LVL1245:
 8339 0282 DCE6     		b	.L771
 8340              	.LVL1246:
 8341              	.L810:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 8342              		.loc 1 4073 0
 8343 0284 0027     		movs	r7, #0
 8344              	.LVL1247:
 8345              	.L787:
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
 8346              		.loc 1 4123 0
 8347 0286 A369     		ldr	r3, [r4, #24]
 8348 0288 E268     		ldr	r2, [r4, #12]
 8349 028a 9342     		cmp	r3, r2
 8350 028c 04D9     		bls	.L802
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
 8351              		.loc 1 4124 0
 8352 028e E360     		str	r3, [r4, #12]
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8353              		.loc 1 4125 0
 8354 0290 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 8355 0292 42F04002 		orr	r2, r2, #64
 8356 0296 2275     		strb	r2, [r4, #20]
 8357              	.L802:
4127:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 8358              		.loc 1 4127 0
 8359 0298 C3F30803 		ubfx	r3, r3, #0, #9
 8360 029c 002B     		cmp	r3, #0
 8361 029e 3FF4CAAE 		beq	.L780
4127:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 8362              		.loc 1 4127 0 is_stmt 0 discriminator 1
 8363 02a2 226A     		ldr	r2, [r4, #32]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 272


 8364 02a4 BA42     		cmp	r2, r7
 8365 02a6 3FF4C6AE 		beq	.L780
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 8366              		.loc 1 4130 0 is_stmt 1
 8367 02aa 94F91430 		ldrsb	r3, [r4, #20]
 8368 02ae 002B     		cmp	r3, #0
 8369 02b0 0CDB     		blt	.L828
 8370              	.L803:
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8371              		.loc 1 4135 0
 8372 02b2 0123     		movs	r3, #1
 8373 02b4 3A46     		mov	r2, r7
 8374 02b6 04F13001 		add	r1, r4, #48
 8375 02ba 0398     		ldr	r0, [sp, #12]
 8376 02bc 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 8377 02be FFF7FEFF 		bl	disk_read
 8378              	.LVL1248:
 8379 02c2 B8B9     		cbnz	r0, .L829
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8380              		.loc 1 4137 0
 8381 02c4 2762     		str	r7, [r4, #32]
 8382 02c6 B6E6     		b	.L780
 8383              	.LVL1249:
 8384              	.L812:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 8385              		.loc 1 4073 0
 8386 02c8 0027     		movs	r7, #0
 8387              	.LVL1250:
 8388 02ca DCE7     		b	.L787
 8389              	.LVL1251:
 8390              	.L828:
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 8391              		.loc 1 4131 0
 8392 02cc 0123     		movs	r3, #1
 8393 02ce 04F13001 		add	r1, r4, #48
 8394 02d2 0398     		ldr	r0, [sp, #12]
 8395 02d4 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 8396 02d6 FFF7FEFF 		bl	disk_write
 8397              	.LVL1252:
 8398 02da 20B9     		cbnz	r0, .L830
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8399              		.loc 1 4132 0
 8400 02dc 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 8401 02de 03F07F03 		and	r3, r3, #127
 8402 02e2 2375     		strb	r3, [r4, #20]
 8403 02e4 E5E7     		b	.L803
 8404              	.L830:
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 8405              		.loc 1 4131 0 discriminator 1
 8406 02e6 0125     		movs	r5, #1
 8407              	.LVL1253:
 8408 02e8 6575     		strb	r5, [r4, #21]
 8409 02ea 2946     		mov	r1, r5
 8410 02ec 0398     		ldr	r0, [sp, #12]
 8411 02ee FFF7FEFF 		bl	unlock_fs
 8412              	.LVL1254:
 8413 02f2 A4E6     		b	.L771
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 273


 8414              	.LVL1255:
 8415              	.L829:
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8416              		.loc 1 4135 0 discriminator 1
 8417 02f4 0125     		movs	r5, #1
 8418              	.LVL1256:
 8419 02f6 6575     		strb	r5, [r4, #21]
 8420 02f8 2946     		mov	r1, r5
 8421 02fa 0398     		ldr	r0, [sp, #12]
 8422 02fc FFF7FEFF 		bl	unlock_fs
 8423              	.LVL1257:
 8424 0300 9DE6     		b	.L771
 8425              	.LVL1258:
 8426              	.L808:
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8427              		.loc 1 4037 0
 8428 0302 1125     		movs	r5, #17
 8429              	.LVL1259:
 8430 0304 97E6     		b	.L780
 8431              		.cfi_endproc
 8432              	.LFE198:
 8434              		.section	.text.f_opendir,"ax",%progbits
 8435              		.align	1
 8436              		.global	f_opendir
 8437              		.syntax unified
 8438              		.thumb
 8439              		.thumb_func
 8440              		.fpu fpv5-sp-d16
 8442              	f_opendir:
 8443              	.LFB199:
4155:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8444              		.loc 1 4155 0
 8445              		.cfi_startproc
 8446              		@ args = 0, pretend = 0, frame = 16
 8447              		@ frame_needed = 0, uses_anonymous_args = 0
 8448              	.LVL1260:
 8449 0000 70B5     		push	{r4, r5, r6, lr}
 8450              	.LCFI106:
 8451              		.cfi_def_cfa_offset 16
 8452              		.cfi_offset 4, -16
 8453              		.cfi_offset 5, -12
 8454              		.cfi_offset 6, -8
 8455              		.cfi_offset 14, -4
 8456 0002 84B0     		sub	sp, sp, #16
 8457              	.LCFI107:
 8458              		.cfi_def_cfa_offset 32
 8459 0004 0191     		str	r1, [sp, #4]
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8460              		.loc 1 4162 0
 8461 0006 0028     		cmp	r0, #0
 8462 0008 52D0     		beq	.L840
 8463 000a 0546     		mov	r5, r0
 8464              	.LVL1261:
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8465              		.loc 1 4166 0
 8466 000c 0022     		movs	r2, #0
 8467 000e 03A9     		add	r1, sp, #12
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 274


 8468              	.LVL1262:
 8469 0010 01A8     		add	r0, sp, #4
 8470              	.LVL1263:
 8471 0012 FFF7FEFF 		bl	find_volume
 8472              	.LVL1264:
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
 8473              		.loc 1 4167 0
 8474 0016 0446     		mov	r4, r0
 8475 0018 48B1     		cbz	r0, .L845
 8476              	.L833:
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8477              		.loc 1 4209 0
 8478 001a 0CB1     		cbz	r4, .L839
 8479              	.L838:
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8480              		.loc 1 4209 0 is_stmt 0 discriminator 1
 8481 001c 0023     		movs	r3, #0
 8482 001e 2B60     		str	r3, [r5]
 8483              	.L839:
4211:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8484              		.loc 1 4211 0 is_stmt 1
 8485 0020 2146     		mov	r1, r4
 8486 0022 0398     		ldr	r0, [sp, #12]
 8487 0024 FFF7FEFF 		bl	unlock_fs
 8488              	.LVL1265:
 8489              	.L832:
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8490              		.loc 1 4212 0
 8491 0028 2046     		mov	r0, r4
 8492 002a 04B0     		add	sp, sp, #16
 8493              	.LCFI108:
 8494              		.cfi_remember_state
 8495              		.cfi_def_cfa_offset 16
 8496              		@ sp needed
 8497 002c 70BD     		pop	{r4, r5, r6, pc}
 8498              	.LVL1266:
 8499              	.L845:
 8500              	.LCFI109:
 8501              		.cfi_restore_state
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 8502              		.loc 1 4168 0
 8503 002e 039B     		ldr	r3, [sp, #12]
 8504 0030 2B60     		str	r3, [r5]
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 8505              		.loc 1 4169 0
 8506 0032 4FF40070 		mov	r0, #512
 8507 0036 FFF7FEFF 		bl	ff_memalloc
 8508              	.LVL1267:
 8509 003a 0646     		mov	r6, r0
 8510 003c 10B3     		cbz	r0, .L846
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 8511              		.loc 1 4169 0 is_stmt 0 discriminator 2
 8512 003e 039B     		ldr	r3, [sp, #12]
 8513 0040 D860     		str	r0, [r3, #12]
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 8514              		.loc 1 4170 0 is_stmt 1 discriminator 2
 8515 0042 0199     		ldr	r1, [sp, #4]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 275


 8516 0044 2846     		mov	r0, r5
 8517              	.LVL1268:
 8518 0046 FFF7FEFF 		bl	follow_path
 8519              	.LVL1269:
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 8520              		.loc 1 4171 0 discriminator 2
 8521 004a 0446     		mov	r4, r0
 8522 004c 48BB     		cbnz	r0, .L835
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
 8523              		.loc 1 4172 0
 8524 004e 95F92F30 		ldrsb	r3, [r5, #47]
 8525 0052 002B     		cmp	r3, #0
 8526 0054 08DB     		blt	.L836
4173:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 8527              		.loc 1 4173 0
 8528 0056 AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 8529 0058 13F0100F 		tst	r3, #16
 8530 005c 20D0     		beq	.L841
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8531              		.loc 1 4185 0
 8532 005e 296A     		ldr	r1, [r5, #32]
 8533 0060 0398     		ldr	r0, [sp, #12]
 8534 0062 FFF7FEFF 		bl	ld_clust
 8535              	.LVL1270:
 8536 0066 A860     		str	r0, [r5, #8]
 8537              	.L836:
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 8538              		.loc 1 4192 0
 8539 0068 039B     		ldr	r3, [sp, #12]
 8540 006a DB88     		ldrh	r3, [r3, #6]
 8541 006c AB80     		strh	r3, [r5, #4]	@ movhi
4193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 8542              		.loc 1 4193 0
 8543 006e 0021     		movs	r1, #0
 8544 0070 2846     		mov	r0, r5
 8545 0072 FFF7FEFF 		bl	dir_sdi
 8546              	.LVL1271:
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
 8547              		.loc 1 4195 0
 8548 0076 0446     		mov	r4, r0
 8549 0078 98B9     		cbnz	r0, .L835
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 8550              		.loc 1 4196 0
 8551 007a AB68     		ldr	r3, [r5, #8]
 8552 007c 43B9     		cbnz	r3, .L847
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8553              		.loc 1 4200 0
 8554 007e 0023     		movs	r3, #0
 8555 0080 2B61     		str	r3, [r5, #16]
 8556 0082 0EE0     		b	.L835
 8557              	.LVL1272:
 8558              	.L846:
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 8559              		.loc 1 4169 0 discriminator 1
 8560 0084 1121     		movs	r1, #17
 8561 0086 0398     		ldr	r0, [sp, #12]
 8562              	.LVL1273:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 276


 8563 0088 FFF7FEFF 		bl	unlock_fs
 8564              	.LVL1274:
 8565 008c 1124     		movs	r4, #17
 8566 008e CBE7     		b	.L832
 8567              	.LVL1275:
 8568              	.L847:
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 8569              		.loc 1 4197 0
 8570 0090 0021     		movs	r1, #0
 8571 0092 2846     		mov	r0, r5
 8572 0094 FFF7FEFF 		bl	inc_lock
 8573              	.LVL1276:
 8574 0098 2861     		str	r0, [r5, #16]
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 8575              		.loc 1 4198 0
 8576 009a 10B9     		cbnz	r0, .L835
 8577              	.LVL1277:
 8578 009c 1224     		movs	r4, #18
 8579 009e 00E0     		b	.L835
 8580              	.LVL1278:
 8581              	.L841:
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8582              		.loc 1 4188 0
 8583 00a0 0524     		movs	r4, #5
 8584              	.LVL1279:
 8585              	.L835:
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 8586              		.loc 1 4206 0
 8587 00a2 3046     		mov	r0, r6
 8588 00a4 FFF7FEFF 		bl	ff_memfree
 8589              	.LVL1280:
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8590              		.loc 1 4207 0
 8591 00a8 042C     		cmp	r4, #4
 8592 00aa B6D1     		bne	.L833
 8593              	.LVL1281:
 8594 00ac 0524     		movs	r4, #5
 8595 00ae B5E7     		b	.L838
 8596              	.LVL1282:
 8597              	.L840:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8598              		.loc 1 4162 0
 8599 00b0 0924     		movs	r4, #9
 8600 00b2 B9E7     		b	.L832
 8601              		.cfi_endproc
 8602              	.LFE199:
 8604              		.section	.text.f_closedir,"ax",%progbits
 8605              		.align	1
 8606              		.global	f_closedir
 8607              		.syntax unified
 8608              		.thumb
 8609              		.thumb_func
 8610              		.fpu fpv5-sp-d16
 8612              	f_closedir:
 8613              	.LFB200:
4224:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8614              		.loc 1 4224 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 277


 8615              		.cfi_startproc
 8616              		@ args = 0, pretend = 0, frame = 8
 8617              		@ frame_needed = 0, uses_anonymous_args = 0
 8618              	.LVL1283:
 8619 0000 30B5     		push	{r4, r5, lr}
 8620              	.LCFI110:
 8621              		.cfi_def_cfa_offset 12
 8622              		.cfi_offset 4, -12
 8623              		.cfi_offset 5, -8
 8624              		.cfi_offset 14, -4
 8625 0002 83B0     		sub	sp, sp, #12
 8626              	.LCFI111:
 8627              		.cfi_def_cfa_offset 24
 8628 0004 0546     		mov	r5, r0
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8629              		.loc 1 4229 0
 8630 0006 01A9     		add	r1, sp, #4
 8631 0008 FFF7FEFF 		bl	validate
 8632              	.LVL1284:
4230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 8633              		.loc 1 4230 0
 8634 000c 0446     		mov	r4, r0
 8635 000e 40B9     		cbnz	r0, .L849
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
 8636              		.loc 1 4232 0
 8637 0010 2869     		ldr	r0, [r5, #16]
 8638              	.LVL1285:
 8639 0012 48B9     		cbnz	r0, .L853
 8640              	.L850:
 8641              	.LVL1286:
4235:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8642              		.loc 1 4235 0
 8643 0014 0CB9     		cbnz	r4, .L851
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8644              		.loc 1 4238 0
 8645 0016 0023     		movs	r3, #0
 8646 0018 2B60     		str	r3, [r5]
 8647              	.L851:
4241:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8648              		.loc 1 4241 0
 8649 001a 0021     		movs	r1, #0
 8650 001c 0198     		ldr	r0, [sp, #4]
 8651 001e FFF7FEFF 		bl	unlock_fs
 8652              	.LVL1287:
 8653              	.L849:
4245:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8654              		.loc 1 4245 0
 8655 0022 2046     		mov	r0, r4
 8656 0024 03B0     		add	sp, sp, #12
 8657              	.LCFI112:
 8658              		.cfi_remember_state
 8659              		.cfi_def_cfa_offset 12
 8660              		@ sp needed
 8661 0026 30BD     		pop	{r4, r5, pc}
 8662              	.LVL1288:
 8663              	.L853:
 8664              	.LCFI113:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 278


 8665              		.cfi_restore_state
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8666              		.loc 1 4233 0
 8667 0028 FFF7FEFF 		bl	dec_lock
 8668              	.LVL1289:
 8669 002c 0446     		mov	r4, r0
 8670              	.LVL1290:
 8671 002e F1E7     		b	.L850
 8672              		.cfi_endproc
 8673              	.LFE200:
 8675              		.section	.text.f_readdir,"ax",%progbits
 8676              		.align	1
 8677              		.global	f_readdir
 8678              		.syntax unified
 8679              		.thumb
 8680              		.thumb_func
 8681              		.fpu fpv5-sp-d16
 8683              	f_readdir:
 8684              	.LFB201:
4258:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8685              		.loc 1 4258 0
 8686              		.cfi_startproc
 8687              		@ args = 0, pretend = 0, frame = 8
 8688              		@ frame_needed = 0, uses_anonymous_args = 0
 8689              	.LVL1291:
 8690 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8691              	.LCFI114:
 8692              		.cfi_def_cfa_offset 20
 8693              		.cfi_offset 4, -20
 8694              		.cfi_offset 5, -16
 8695              		.cfi_offset 6, -12
 8696              		.cfi_offset 7, -8
 8697              		.cfi_offset 14, -4
 8698 0002 83B0     		sub	sp, sp, #12
 8699              	.LCFI115:
 8700              		.cfi_def_cfa_offset 32
 8701 0004 0546     		mov	r5, r0
 8702 0006 0E46     		mov	r6, r1
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8703              		.loc 1 4264 0
 8704 0008 01A9     		add	r1, sp, #4
 8705              	.LVL1292:
 8706 000a FFF7FEFF 		bl	validate
 8707              	.LVL1293:
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
 8708              		.loc 1 4265 0
 8709 000e 0446     		mov	r4, r0
 8710 0010 58BB     		cbnz	r0, .L855
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 8711              		.loc 1 4266 0
 8712 0012 D6B1     		cbz	r6, .L863
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
 8713              		.loc 1 4269 0
 8714 0014 4FF40070 		mov	r0, #512
 8715              	.LVL1294:
 8716 0018 FFF7FEFF 		bl	ff_memalloc
 8717              	.LVL1295:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 279


 8718 001c 0746     		mov	r7, r0
 8719 001e D0B1     		cbz	r0, .L864
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
 8720              		.loc 1 4269 0 is_stmt 0 discriminator 2
 8721 0020 019B     		ldr	r3, [sp, #4]
 8722 0022 D860     		str	r0, [r3, #12]
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 8723              		.loc 1 4270 0 is_stmt 1 discriminator 2
 8724 0024 0021     		movs	r1, #0
 8725 0026 2846     		mov	r0, r5
 8726              	.LVL1296:
 8727 0028 FFF7FEFF 		bl	dir_read
 8728              	.LVL1297:
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
 8729              		.loc 1 4271 0 discriminator 2
 8730 002c 0428     		cmp	r0, #4
 8731 002e 00D0     		beq	.L859
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 8732              		.loc 1 4272 0
 8733 0030 B8B9     		cbnz	r0, .L861
 8734              	.L859:
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 8735              		.loc 1 4273 0
 8736 0032 3146     		mov	r1, r6
 8737 0034 2846     		mov	r0, r5
 8738              	.LVL1298:
 8739 0036 FFF7FEFF 		bl	get_fileinfo
 8740              	.LVL1299:
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 8741              		.loc 1 4274 0
 8742 003a 0021     		movs	r1, #0
 8743 003c 2846     		mov	r0, r5
 8744 003e FFF7FEFF 		bl	dir_next
 8745              	.LVL1300:
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8746              		.loc 1 4275 0
 8747 0042 0428     		cmp	r0, #4
 8748 0044 0ED0     		beq	.L860
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 8749              		.loc 1 4274 0
 8750 0046 0446     		mov	r4, r0
 8751 0048 0CE0     		b	.L860
 8752              	.LVL1301:
 8753              	.L863:
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8754              		.loc 1 4267 0
 8755 004a 0021     		movs	r1, #0
 8756 004c 2846     		mov	r0, r5
 8757              	.LVL1302:
 8758 004e FFF7FEFF 		bl	dir_sdi
 8759              	.LVL1303:
 8760 0052 0446     		mov	r4, r0
 8761              	.LVL1304:
 8762 0054 09E0     		b	.L855
 8763              	.LVL1305:
 8764              	.L864:
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 280


 8765              		.loc 1 4269 0 discriminator 1
 8766 0056 1121     		movs	r1, #17
 8767 0058 0198     		ldr	r0, [sp, #4]
 8768              	.LVL1306:
 8769 005a FFF7FEFF 		bl	unlock_fs
 8770              	.LVL1307:
 8771 005e 1124     		movs	r4, #17
 8772 0060 07E0     		b	.L858
 8773              	.LVL1308:
 8774              	.L861:
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 8775              		.loc 1 4270 0
 8776 0062 0446     		mov	r4, r0
 8777              	.L860:
 8778              	.LVL1309:
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8779              		.loc 1 4277 0
 8780 0064 3846     		mov	r0, r7
 8781 0066 FFF7FEFF 		bl	ff_memfree
 8782              	.LVL1310:
 8783              	.L855:
4280:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8784              		.loc 1 4280 0
 8785 006a 2146     		mov	r1, r4
 8786 006c 0198     		ldr	r0, [sp, #4]
 8787 006e FFF7FEFF 		bl	unlock_fs
 8788              	.LVL1311:
 8789              	.L858:
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8790              		.loc 1 4281 0
 8791 0072 2046     		mov	r0, r4
 8792 0074 03B0     		add	sp, sp, #12
 8793              	.LCFI116:
 8794              		.cfi_def_cfa_offset 20
 8795              		@ sp needed
 8796 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
 8797              		.cfi_endproc
 8798              	.LFE201:
 8800              		.section	.text.f_findnext,"ax",%progbits
 8801              		.align	1
 8802              		.global	f_findnext
 8803              		.syntax unified
 8804              		.thumb
 8805              		.thumb_func
 8806              		.fpu fpv5-sp-d16
 8808              	f_findnext:
 8809              	.LFB202:
4294:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8810              		.loc 1 4294 0
 8811              		.cfi_startproc
 8812              		@ args = 0, pretend = 0, frame = 0
 8813              		@ frame_needed = 0, uses_anonymous_args = 0
 8814              	.LVL1312:
 8815 0000 70B5     		push	{r4, r5, r6, lr}
 8816              	.LCFI117:
 8817              		.cfi_def_cfa_offset 16
 8818              		.cfi_offset 4, -16
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 281


 8819              		.cfi_offset 5, -12
 8820              		.cfi_offset 6, -8
 8821              		.cfi_offset 14, -4
 8822 0002 0546     		mov	r5, r0
 8823 0004 0C46     		mov	r4, r1
 8824              	.LVL1313:
 8825              	.L867:
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
 8826              		.loc 1 4299 0
 8827 0006 2146     		mov	r1, r4
 8828 0008 2846     		mov	r0, r5
 8829 000a FFF7FEFF 		bl	f_readdir
 8830              	.LVL1314:
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
 8831              		.loc 1 4300 0
 8832 000e 0646     		mov	r6, r0
 8833 0010 B4FA84F3 		clz	r3, r4
 8834 0014 5B09     		lsrs	r3, r3, #5
 8835 0016 0028     		cmp	r0, #0
 8836 0018 0CBF     		ite	eq
 8837 001a 1846     		moveq	r0, r3
 8838 001c 0120     		movne	r0, #1
 8839              	.LVL1315:
 8840 001e 50B9     		cbnz	r0, .L866
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
 8841              		.loc 1 4300 0 is_stmt 0 discriminator 1
 8842 0020 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 8843 0022 43B1     		cbz	r3, .L866
4301:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && _USE_FIND == 2
 8844              		.loc 1 4301 0 is_stmt 1
 8845 0024 0023     		movs	r3, #0
 8846 0026 1A46     		mov	r2, r3
 8847 0028 04F11601 		add	r1, r4, #22
 8848 002c 686B     		ldr	r0, [r5, #52]
 8849 002e FFF7FEFF 		bl	pattern_matching
 8850              	.LVL1316:
 8851 0032 0028     		cmp	r0, #0
 8852 0034 E7D0     		beq	.L867
 8853              	.L866:
4307:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8854              		.loc 1 4307 0
 8855 0036 3046     		mov	r0, r6
 8856 0038 70BD     		pop	{r4, r5, r6, pc}
 8857              		.cfi_endproc
 8858              	.LFE202:
 8860              		.section	.text.f_findfirst,"ax",%progbits
 8861              		.align	1
 8862              		.global	f_findfirst
 8863              		.syntax unified
 8864              		.thumb
 8865              		.thumb_func
 8866              		.fpu fpv5-sp-d16
 8868              	f_findfirst:
 8869              	.LFB203:
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8870              		.loc 1 4321 0
 8871              		.cfi_startproc
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 282


 8872              		@ args = 0, pretend = 0, frame = 0
 8873              		@ frame_needed = 0, uses_anonymous_args = 0
 8874              	.LVL1317:
 8875 0000 38B5     		push	{r3, r4, r5, lr}
 8876              	.LCFI118:
 8877              		.cfi_def_cfa_offset 16
 8878              		.cfi_offset 3, -16
 8879              		.cfi_offset 4, -12
 8880              		.cfi_offset 5, -8
 8881              		.cfi_offset 14, -4
 8882 0002 0446     		mov	r4, r0
 8883 0004 0D46     		mov	r5, r1
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
 8884              		.loc 1 4325 0
 8885 0006 4363     		str	r3, [r0, #52]
4326:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8886              		.loc 1 4326 0
 8887 0008 1146     		mov	r1, r2
 8888              	.LVL1318:
 8889 000a FFF7FEFF 		bl	f_opendir
 8890              	.LVL1319:
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
 8891              		.loc 1 4327 0
 8892 000e 0346     		mov	r3, r0
 8893 0010 08B1     		cbz	r0, .L872
 8894              	.LVL1320:
 8895              	.L870:
4331:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8896              		.loc 1 4331 0
 8897 0012 1846     		mov	r0, r3
 8898 0014 38BD     		pop	{r3, r4, r5, pc}
 8899              	.LVL1321:
 8900              	.L872:
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8901              		.loc 1 4328 0
 8902 0016 2946     		mov	r1, r5
 8903 0018 2046     		mov	r0, r4
 8904              	.LVL1322:
 8905 001a FFF7FEFF 		bl	f_findnext
 8906              	.LVL1323:
 8907 001e 0346     		mov	r3, r0
 8908              	.LVL1324:
 8909 0020 F7E7     		b	.L870
 8910              		.cfi_endproc
 8911              	.LFE203:
 8913              		.section	.text.f_stat,"ax",%progbits
 8914              		.align	1
 8915              		.global	f_stat
 8916              		.syntax unified
 8917              		.thumb
 8918              		.thumb_func
 8919              		.fpu fpv5-sp-d16
 8921              	f_stat:
 8922              	.LFB204:
4346:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8923              		.loc 1 4346 0
 8924              		.cfi_startproc
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 283


 8925              		@ args = 0, pretend = 0, frame = 64
 8926              		@ frame_needed = 0, uses_anonymous_args = 0
 8927              	.LVL1325:
 8928 0000 70B5     		push	{r4, r5, r6, lr}
 8929              	.LCFI119:
 8930              		.cfi_def_cfa_offset 16
 8931              		.cfi_offset 4, -16
 8932              		.cfi_offset 5, -12
 8933              		.cfi_offset 6, -8
 8934              		.cfi_offset 14, -4
 8935 0002 90B0     		sub	sp, sp, #64
 8936              	.LCFI120:
 8937              		.cfi_def_cfa_offset 80
 8938 0004 0190     		str	r0, [sp, #4]
 8939 0006 0E46     		mov	r6, r1
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8940              		.loc 1 4353 0
 8941 0008 0022     		movs	r2, #0
 8942 000a 02A9     		add	r1, sp, #8
 8943              	.LVL1326:
 8944 000c 01A8     		add	r0, sp, #4
 8945              	.LVL1327:
 8946 000e FFF7FEFF 		bl	find_volume
 8947              	.LVL1328:
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
 8948              		.loc 1 4354 0
 8949 0012 0446     		mov	r4, r0
 8950 0014 08BB     		cbnz	r0, .L874
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 8951              		.loc 1 4355 0
 8952 0016 4FF40070 		mov	r0, #512
 8953              	.LVL1329:
 8954 001a FFF7FEFF 		bl	ff_memalloc
 8955              	.LVL1330:
 8956 001e 0546     		mov	r5, r0
 8957 0020 88B1     		cbz	r0, .L880
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 8958              		.loc 1 4355 0 is_stmt 0 discriminator 2
 8959 0022 029B     		ldr	r3, [sp, #8]
 8960 0024 D860     		str	r0, [r3, #12]
4356:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 8961              		.loc 1 4356 0 is_stmt 1 discriminator 2
 8962 0026 0199     		ldr	r1, [sp, #4]
 8963 0028 02A8     		add	r0, sp, #8
 8964              	.LVL1331:
 8965 002a FFF7FEFF 		bl	follow_path
 8966              	.LVL1332:
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 8967              		.loc 1 4357 0 discriminator 2
 8968 002e 0446     		mov	r4, r0
 8969 0030 80B9     		cbnz	r0, .L877
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 8970              		.loc 1 4358 0
 8971 0032 9DF93730 		ldrsb	r3, [sp, #55]
 8972 0036 002B     		cmp	r3, #0
 8973 0038 0BDB     		blt	.L878
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 284


 8974              		.loc 1 4361 0
 8975 003a 5EB1     		cbz	r6, .L877
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8976              		.loc 1 4361 0 is_stmt 0 discriminator 1
 8977 003c 3146     		mov	r1, r6
 8978 003e 02A8     		add	r0, sp, #8
 8979              	.LVL1333:
 8980 0040 FFF7FEFF 		bl	get_fileinfo
 8981              	.LVL1334:
 8982 0044 06E0     		b	.L877
 8983              	.LVL1335:
 8984              	.L880:
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 8985              		.loc 1 4355 0 is_stmt 1 discriminator 1
 8986 0046 1121     		movs	r1, #17
 8987 0048 0298     		ldr	r0, [sp, #8]
 8988              	.LVL1336:
 8989 004a FFF7FEFF 		bl	unlock_fs
 8990              	.LVL1337:
 8991 004e 1124     		movs	r4, #17
 8992 0050 07E0     		b	.L876
 8993              	.LVL1338:
 8994              	.L878:
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
 8995              		.loc 1 4359 0
 8996 0052 0624     		movs	r4, #6
 8997              	.LVL1339:
 8998              	.L877:
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8999              		.loc 1 4364 0
 9000 0054 2846     		mov	r0, r5
 9001 0056 FFF7FEFF 		bl	ff_memfree
 9002              	.LVL1340:
 9003              	.L874:
4367:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9004              		.loc 1 4367 0
 9005 005a 2146     		mov	r1, r4
 9006 005c 0298     		ldr	r0, [sp, #8]
 9007 005e FFF7FEFF 		bl	unlock_fs
 9008              	.LVL1341:
 9009              	.L876:
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9010              		.loc 1 4368 0
 9011 0062 2046     		mov	r0, r4
 9012 0064 10B0     		add	sp, sp, #64
 9013              	.LCFI121:
 9014              		.cfi_def_cfa_offset 16
 9015              		@ sp needed
 9016 0066 70BD     		pop	{r4, r5, r6, pc}
 9017              		.cfi_endproc
 9018              	.LFE204:
 9020              		.section	.text.f_getfree,"ax",%progbits
 9021              		.align	1
 9022              		.global	f_getfree
 9023              		.syntax unified
 9024              		.thumb
 9025              		.thumb_func
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 285


 9026              		.fpu fpv5-sp-d16
 9028              	f_getfree:
 9029              	.LFB205:
4382:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9030              		.loc 1 4382 0
 9031              		.cfi_startproc
 9032              		@ args = 0, pretend = 0, frame = 32
 9033              		@ frame_needed = 0, uses_anonymous_args = 0
 9034              	.LVL1342:
 9035 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 9036              	.LCFI122:
 9037              		.cfi_def_cfa_offset 32
 9038              		.cfi_offset 4, -32
 9039              		.cfi_offset 5, -28
 9040              		.cfi_offset 6, -24
 9041              		.cfi_offset 7, -20
 9042              		.cfi_offset 8, -16
 9043              		.cfi_offset 9, -12
 9044              		.cfi_offset 10, -8
 9045              		.cfi_offset 14, -4
 9046 0004 88B0     		sub	sp, sp, #32
 9047              	.LCFI123:
 9048              		.cfi_def_cfa_offset 64
 9049 0006 0190     		str	r0, [sp, #4]
 9050 0008 8A46     		mov	r10, r1
 9051 000a 1446     		mov	r4, r2
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 9052              		.loc 1 4392 0
 9053 000c 0022     		movs	r2, #0
 9054              	.LVL1343:
 9055 000e 07A9     		add	r1, sp, #28
 9056              	.LVL1344:
 9057 0010 01A8     		add	r0, sp, #4
 9058              	.LVL1345:
 9059 0012 FFF7FEFF 		bl	find_volume
 9060              	.LVL1346:
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
 9061              		.loc 1 4393 0
 9062 0016 0746     		mov	r7, r0
 9063 0018 0028     		cmp	r0, #0
 9064 001a 5ED1     		bne	.L882
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
 9065              		.loc 1 4394 0
 9066 001c 079B     		ldr	r3, [sp, #28]
 9067 001e 2360     		str	r3, [r4]
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
 9068              		.loc 1 4396 0
 9069 0020 9A69     		ldr	r2, [r3, #24]
 9070 0022 1D6A     		ldr	r5, [r3, #32]
 9071 0024 A91E     		subs	r1, r5, #2
 9072 0026 8A42     		cmp	r2, r1
 9073 0028 08D9     		bls	.L897
 9074              	.LVL1347:
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
 9075              		.loc 1 4401 0
 9076 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9077 002c 012A     		cmp	r2, #1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 286


 9078 002e 08D0     		beq	.L898
 9079              	.LVL1348:
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
 9080              		.loc 1 4429 0
 9081 0030 D3F82C90 		ldr	r9, [r3, #44]
 9082              	.LVL1349:
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 9083              		.loc 1 4430 0
 9084 0034 0024     		movs	r4, #0
 9085              	.LVL1350:
 9086 0036 2646     		mov	r6, r4
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 9087              		.loc 1 4400 0
 9088 0038 A046     		mov	r8, r4
 9089 003a 35E0     		b	.L893
 9090              	.LVL1351:
 9091              	.L897:
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 9092              		.loc 1 4397 0
 9093 003c CAF80020 		str	r2, [r10]
 9094 0040 4BE0     		b	.L882
 9095              	.LVL1352:
 9096              	.L898:
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 9097              		.loc 1 4402 0
 9098 0042 0293     		str	r3, [sp, #8]
 9099 0044 0224     		movs	r4, #2
 9100              	.LVL1353:
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 9101              		.loc 1 4400 0
 9102 0046 4FF00008 		mov	r8, #0
 9103 004a 04E0     		b	.L887
 9104              	.LVL1354:
 9105              	.L886:
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9106              		.loc 1 4408 0
 9107 004c 0134     		adds	r4, r4, #1
 9108              	.LVL1355:
 9109 004e 079B     		ldr	r3, [sp, #28]
 9110 0050 1B6A     		ldr	r3, [r3, #32]
 9111 0052 A342     		cmp	r3, r4
 9112 0054 38D9     		bls	.L885
 9113              	.LVL1356:
 9114              	.L887:
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 9115              		.loc 1 4404 0
 9116 0056 2146     		mov	r1, r4
 9117 0058 02A8     		add	r0, sp, #8
 9118 005a FFF7FEFF 		bl	get_fat
 9119              	.LVL1357:
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 9120              		.loc 1 4405 0
 9121 005e B0F1FF3F 		cmp	r0, #-1
 9122 0062 30D0     		beq	.L894
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 9123              		.loc 1 4406 0
 9124 0064 0128     		cmp	r0, #1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 287


 9125 0066 40D0     		beq	.L895
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 9126              		.loc 1 4407 0
 9127 0068 0028     		cmp	r0, #0
 9128 006a EFD1     		bne	.L886
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 9129              		.loc 1 4407 0 is_stmt 0 discriminator 1
 9130 006c 08F10108 		add	r8, r8, #1
 9131              	.LVL1358:
 9132 0070 ECE7     		b	.L886
 9133              	.LVL1359:
 9134              	.L899:
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 9135              		.loc 1 4433 0 is_stmt 1
 9136 0072 09F10106 		add	r6, r9, #1
 9137              	.LVL1360:
 9138 0076 4946     		mov	r1, r9
 9139 0078 0798     		ldr	r0, [sp, #28]
 9140 007a FFF7FEFF 		bl	move_window
 9141              	.LVL1361:
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
 9142              		.loc 1 4434 0
 9143 007e 0746     		mov	r7, r0
 9144 0080 10BB     		cbnz	r0, .L885
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
 9145              		.loc 1 4435 0
 9146 0082 079C     		ldr	r4, [sp, #28]
 9147              	.LVL1362:
 9148 0084 3C34     		adds	r4, r4, #60
 9149              	.LVL1363:
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 9150              		.loc 1 4433 0
 9151 0086 B146     		mov	r9, r6
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 9152              		.loc 1 4436 0
 9153 0088 4FF40076 		mov	r6, #512
 9154              	.LVL1364:
 9155 008c 0EE0     		b	.L888
 9156              	.LVL1365:
 9157              	.L900:
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 9158              		.loc 1 4439 0
 9159 008e 2046     		mov	r0, r4
 9160 0090 FFF7FEFF 		bl	ld_word
 9161              	.LVL1366:
 9162 0094 08B9     		cbnz	r0, .L890
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 9163              		.loc 1 4439 0 is_stmt 0 discriminator 1
 9164 0096 08F10108 		add	r8, r8, #1
 9165              	.LVL1367:
 9166              	.L890:
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
 9167              		.loc 1 4440 0 is_stmt 1
 9168 009a 0234     		adds	r4, r4, #2
 9169              	.LVL1368:
 9170 009c 023E     		subs	r6, r6, #2
 9171              	.LVL1369:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 288


 9172 009e 01E0     		b	.L891
 9173              	.L892:
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 9174              		.loc 1 4443 0
 9175 00a0 0434     		adds	r4, r4, #4
 9176              	.LVL1370:
 9177 00a2 043E     		subs	r6, r6, #4
 9178              	.LVL1371:
 9179              	.L891:
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9180              		.loc 1 4445 0
 9181 00a4 013D     		subs	r5, r5, #1
 9182              	.LVL1372:
 9183 00a6 0FD0     		beq	.L885
 9184              	.LVL1373:
 9185              	.L893:
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
 9186              		.loc 1 4432 0
 9187 00a8 002E     		cmp	r6, #0
 9188 00aa E2D0     		beq	.L899
 9189              	.LVL1374:
 9190              	.L888:
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
 9191              		.loc 1 4438 0
 9192 00ac 079B     		ldr	r3, [sp, #28]
 9193 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9194 00b0 022B     		cmp	r3, #2
 9195 00b2 ECD0     		beq	.L900
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 9196              		.loc 1 4442 0
 9197 00b4 2046     		mov	r0, r4
 9198 00b6 FFF7FEFF 		bl	ld_dword
 9199              	.LVL1375:
 9200 00ba 30F07043 		bics	r3, r0, #-268435456
 9201 00be EFD1     		bne	.L892
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 9202              		.loc 1 4442 0 is_stmt 0 discriminator 1
 9203 00c0 08F10108 		add	r8, r8, #1
 9204              	.LVL1376:
 9205 00c4 ECE7     		b	.L892
 9206              	.LVL1377:
 9207              	.L894:
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 9208              		.loc 1 4405 0 is_stmt 1
 9209 00c6 0127     		movs	r7, #1
 9210              	.LVL1378:
 9211              	.L885:
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 9212              		.loc 1 4448 0
 9213 00c8 CAF80080 		str	r8, [r10]
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
 9214              		.loc 1 4449 0
 9215 00cc 079B     		ldr	r3, [sp, #28]
 9216 00ce C3F81880 		str	r8, [r3, #24]
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9217              		.loc 1 4450 0
 9218 00d2 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 289


 9219 00d4 42F00102 		orr	r2, r2, #1
 9220 00d8 1A71     		strb	r2, [r3, #4]
 9221              	.LVL1379:
 9222              	.L882:
4454:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9223              		.loc 1 4454 0
 9224 00da 3946     		mov	r1, r7
 9225 00dc 0798     		ldr	r0, [sp, #28]
 9226 00de FFF7FEFF 		bl	unlock_fs
 9227              	.LVL1380:
4455:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9228              		.loc 1 4455 0
 9229 00e2 3846     		mov	r0, r7
 9230 00e4 08B0     		add	sp, sp, #32
 9231              	.LCFI124:
 9232              		.cfi_remember_state
 9233              		.cfi_def_cfa_offset 32
 9234              		@ sp needed
 9235 00e6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 9236              	.LVL1381:
 9237              	.L895:
 9238              	.LCFI125:
 9239              		.cfi_restore_state
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 9240              		.loc 1 4406 0
 9241 00ea 0227     		movs	r7, #2
 9242 00ec ECE7     		b	.L885
 9243              		.cfi_endproc
 9244              	.LFE205:
 9246              		.section	.text.f_truncate,"ax",%progbits
 9247              		.align	1
 9248              		.global	f_truncate
 9249              		.syntax unified
 9250              		.thumb
 9251              		.thumb_func
 9252              		.fpu fpv5-sp-d16
 9254              	f_truncate:
 9255              	.LFB206:
4467:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9256              		.loc 1 4467 0
 9257              		.cfi_startproc
 9258              		@ args = 0, pretend = 0, frame = 8
 9259              		@ frame_needed = 0, uses_anonymous_args = 0
 9260              	.LVL1382:
 9261 0000 30B5     		push	{r4, r5, lr}
 9262              	.LCFI126:
 9263              		.cfi_def_cfa_offset 12
 9264              		.cfi_offset 4, -12
 9265              		.cfi_offset 5, -8
 9266              		.cfi_offset 14, -4
 9267 0002 83B0     		sub	sp, sp, #12
 9268              	.LCFI127:
 9269              		.cfi_def_cfa_offset 24
 9270 0004 0546     		mov	r5, r0
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 9271              		.loc 1 4473 0
 9272 0006 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 290


 9273 0008 FFF7FEFF 		bl	validate
 9274              	.LVL1383:
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 9275              		.loc 1 4474 0
 9276 000c 0446     		mov	r4, r0
 9277 000e 18BB     		cbnz	r0, .L902
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 9278              		.loc 1 4474 0 is_stmt 0 discriminator 2
 9279 0010 6C7D     		ldrb	r4, [r5, #21]	@ zero_extendqisi2
 9280              	.LVL1384:
 9281 0012 0CBB     		cbnz	r4, .L902
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9282              		.loc 1 4475 0 is_stmt 1
 9283 0014 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 9284 0016 13F0020F 		tst	r3, #2
 9285 001a 24D0     		beq	.L916
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 9286              		.loc 1 4477 0
 9287 001c AB69     		ldr	r3, [r5, #24]
 9288 001e EA68     		ldr	r2, [r5, #12]
 9289 0020 9342     		cmp	r3, r2
 9290 0022 14D2     		bcs	.L906
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 9291              		.loc 1 4478 0
 9292 0024 2BBB     		cbnz	r3, .L907
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
 9293              		.loc 1 4479 0
 9294 0026 0022     		movs	r2, #0
 9295 0028 A968     		ldr	r1, [r5, #8]
 9296 002a 2846     		mov	r0, r5
 9297 002c FFF7FEFF 		bl	remove_chain
 9298              	.LVL1385:
 9299 0030 0446     		mov	r4, r0
 9300              	.LVL1386:
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
 9301              		.loc 1 4480 0
 9302 0032 0023     		movs	r3, #0
 9303 0034 AB60     		str	r3, [r5, #8]
 9304              	.LVL1387:
 9305              	.L908:
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
 9306              		.loc 1 4490 0
 9307 0036 AB69     		ldr	r3, [r5, #24]
 9308 0038 EB60     		str	r3, [r5, #12]
4491:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 9309              		.loc 1 4491 0
 9310 003a 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 9311 003c 43F04003 		orr	r3, r3, #64
 9312 0040 2B75     		strb	r3, [r5, #20]
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 9313              		.loc 1 4493 0
 9314 0042 14B9     		cbnz	r4, .L910
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 9315              		.loc 1 4493 0 is_stmt 0 discriminator 1
 9316 0044 13F0800F 		tst	r3, #128
 9317 0048 2DD1     		bne	.L917
 9318              	.L910:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 291


4501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9319              		.loc 1 4501 0 is_stmt 1
 9320 004a 002C     		cmp	r4, #0
 9321 004c 3AD1     		bne	.L911
 9322              	.L906:
4504:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9323              		.loc 1 4504 0
 9324 004e 2146     		mov	r1, r4
 9325 0050 0198     		ldr	r0, [sp, #4]
 9326 0052 FFF7FEFF 		bl	unlock_fs
 9327              	.LVL1388:
 9328 0056 03E0     		b	.L904
 9329              	.LVL1389:
 9330              	.L902:
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 9331              		.loc 1 4474 0 discriminator 3
 9332 0058 2146     		mov	r1, r4
 9333 005a 0198     		ldr	r0, [sp, #4]
 9334 005c FFF7FEFF 		bl	unlock_fs
 9335              	.LVL1390:
 9336              	.L904:
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9337              		.loc 1 4505 0
 9338 0060 2046     		mov	r0, r4
 9339 0062 03B0     		add	sp, sp, #12
 9340              	.LCFI128:
 9341              		.cfi_remember_state
 9342              		.cfi_def_cfa_offset 12
 9343              		@ sp needed
 9344 0064 30BD     		pop	{r4, r5, pc}
 9345              	.LVL1391:
 9346              	.L916:
 9347              	.LCFI129:
 9348              		.cfi_restore_state
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9349              		.loc 1 4475 0 discriminator 1
 9350 0066 0721     		movs	r1, #7
 9351 0068 0198     		ldr	r0, [sp, #4]
 9352 006a FFF7FEFF 		bl	unlock_fs
 9353              	.LVL1392:
 9354 006e 0724     		movs	r4, #7
 9355              	.LVL1393:
 9356 0070 F6E7     		b	.L904
 9357              	.LVL1394:
 9358              	.L907:
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 9359              		.loc 1 4482 0
 9360 0072 E969     		ldr	r1, [r5, #28]
 9361 0074 2846     		mov	r0, r5
 9362 0076 FFF7FEFF 		bl	get_fat
 9363              	.LVL1395:
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 9364              		.loc 1 4484 0
 9365 007a B0F1FF3F 		cmp	r0, #-1
 9366 007e 0ED0     		beq	.L918
 9367              	.L909:
 9368              	.LVL1396:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 292


4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 9369              		.loc 1 4485 0
 9370 0080 0128     		cmp	r0, #1
 9371 0082 0ED0     		beq	.L913
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 9372              		.loc 1 4486 0
 9373 0084 002C     		cmp	r4, #0
 9374 0086 D6D1     		bne	.L908
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 9375              		.loc 1 4486 0 is_stmt 0 discriminator 1
 9376 0088 019B     		ldr	r3, [sp, #4]
 9377 008a 1B6A     		ldr	r3, [r3, #32]
 9378 008c 8342     		cmp	r3, r0
 9379 008e D2D9     		bls	.L908
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9380              		.loc 1 4487 0 is_stmt 1
 9381 0090 EA69     		ldr	r2, [r5, #28]
 9382 0092 0146     		mov	r1, r0
 9383 0094 2846     		mov	r0, r5
 9384              	.LVL1397:
 9385 0096 FFF7FEFF 		bl	remove_chain
 9386              	.LVL1398:
 9387 009a 0446     		mov	r4, r0
 9388              	.LVL1399:
 9389 009c CBE7     		b	.L908
 9390              	.LVL1400:
 9391              	.L918:
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 9392              		.loc 1 4484 0
 9393 009e 0124     		movs	r4, #1
 9394 00a0 EEE7     		b	.L909
 9395              	.LVL1401:
 9396              	.L913:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 9397              		.loc 1 4485 0
 9398 00a2 0224     		movs	r4, #2
 9399              	.LVL1402:
 9400 00a4 C7E7     		b	.L908
 9401              	.LVL1403:
 9402              	.L917:
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 9403              		.loc 1 4494 0
 9404 00a6 0123     		movs	r3, #1
 9405 00a8 2A6A     		ldr	r2, [r5, #32]
 9406 00aa 05F13001 		add	r1, r5, #48
 9407 00ae 0198     		ldr	r0, [sp, #4]
 9408 00b0 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 9409 00b2 FFF7FEFF 		bl	disk_write
 9410              	.LVL1404:
 9411 00b6 20B9     		cbnz	r0, .L914
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9412              		.loc 1 4497 0
 9413 00b8 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 9414 00ba 03F07F03 		and	r3, r3, #127
 9415 00be 2B75     		strb	r3, [r5, #20]
 9416 00c0 C3E7     		b	.L910
 9417              	.L914:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 293


4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9418              		.loc 1 4495 0
 9419 00c2 0124     		movs	r4, #1
 9420              	.LVL1405:
 9421              	.L911:
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9422              		.loc 1 4501 0 discriminator 1
 9423 00c4 6C75     		strb	r4, [r5, #21]
 9424 00c6 2146     		mov	r1, r4
 9425 00c8 0198     		ldr	r0, [sp, #4]
 9426 00ca FFF7FEFF 		bl	unlock_fs
 9427              	.LVL1406:
 9428 00ce C7E7     		b	.L904
 9429              		.cfi_endproc
 9430              	.LFE206:
 9432              		.section	.text.f_unlink,"ax",%progbits
 9433              		.align	1
 9434              		.global	f_unlink
 9435              		.syntax unified
 9436              		.thumb
 9437              		.thumb_func
 9438              		.fpu fpv5-sp-d16
 9440              	f_unlink:
 9441              	.LFB207:
4517:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9442              		.loc 1 4517 0
 9443              		.cfi_startproc
 9444              		@ args = 0, pretend = 0, frame = 128
 9445              		@ frame_needed = 0, uses_anonymous_args = 0
 9446              	.LVL1407:
 9447 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 9448              	.LCFI130:
 9449              		.cfi_def_cfa_offset 24
 9450              		.cfi_offset 4, -24
 9451              		.cfi_offset 5, -20
 9452              		.cfi_offset 6, -16
 9453              		.cfi_offset 7, -12
 9454              		.cfi_offset 8, -8
 9455              		.cfi_offset 14, -4
 9456 0004 A0B0     		sub	sp, sp, #128
 9457              	.LCFI131:
 9458              		.cfi_def_cfa_offset 152
 9459 0006 0190     		str	r0, [sp, #4]
 9460              	.LVL1408:
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 9461              		.loc 1 4529 0
 9462 0008 0222     		movs	r2, #2
 9463 000a 03A9     		add	r1, sp, #12
 9464 000c 01A8     		add	r0, sp, #4
 9465              	.LVL1409:
 9466 000e FFF7FEFF 		bl	find_volume
 9467              	.LVL1410:
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 9468              		.loc 1 4530 0
 9469 0012 039B     		ldr	r3, [sp, #12]
 9470 0014 1293     		str	r3, [sp, #72]
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 294


 9471              		.loc 1 4531 0
 9472 0016 0446     		mov	r4, r0
 9473 0018 0028     		cmp	r0, #0
 9474 001a 60D1     		bne	.L920
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 9475              		.loc 1 4532 0
 9476 001c 4FF40070 		mov	r0, #512
 9477              	.LVL1411:
 9478 0020 FFF7FEFF 		bl	ff_memalloc
 9479              	.LVL1412:
 9480 0024 0546     		mov	r5, r0
 9481 0026 68B3     		cbz	r0, .L935
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 9482              		.loc 1 4532 0 is_stmt 0 discriminator 2
 9483 0028 039B     		ldr	r3, [sp, #12]
 9484 002a D860     		str	r0, [r3, #12]
4533:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
 9485              		.loc 1 4533 0 is_stmt 1 discriminator 2
 9486 002c 0199     		ldr	r1, [sp, #4]
 9487 002e 12A8     		add	r0, sp, #72
 9488              	.LVL1413:
 9489 0030 FFF7FEFF 		bl	follow_path
 9490              	.LVL1414:
4534:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
 9491              		.loc 1 4534 0 discriminator 2
 9492 0034 0446     		mov	r4, r0
 9493 0036 20B9     		cbnz	r0, .L923
4534:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
 9494              		.loc 1 4534 0 is_stmt 0 discriminator 1
 9495 0038 9DF87730 		ldrb	r3, [sp, #119]	@ zero_extendqisi2
 9496 003c 13F0200F 		tst	r3, #32
 9497 0040 26D1     		bne	.L929
 9498              	.L923:
 9499              	.LVL1415:
4538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 9500              		.loc 1 4538 0 is_stmt 1
 9501 0042 24B9     		cbnz	r4, .L924
4538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 9502              		.loc 1 4538 0 is_stmt 0 discriminator 1
 9503 0044 0221     		movs	r1, #2
 9504 0046 12A8     		add	r0, sp, #72
 9505 0048 FFF7FEFF 		bl	chk_lock
 9506              	.LVL1416:
 9507 004c 0446     		mov	r4, r0
 9508              	.LVL1417:
 9509              	.L924:
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 9510              		.loc 1 4540 0 is_stmt 1
 9511 004e 002C     		cmp	r4, #0
 9512 0050 42D1     		bne	.L925
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 9513              		.loc 1 4541 0
 9514 0052 9DF97730 		ldrsb	r3, [sp, #119]
 9515 0056 002B     		cmp	r3, #0
 9516 0058 2EDB     		blt	.L930
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 9517              		.loc 1 4544 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 295


 9518 005a 9DF84E70 		ldrb	r7, [sp, #78]	@ zero_extendqisi2
 9519 005e 17F0010F 		tst	r7, #1
 9520 0062 44D1     		bne	.L931
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9521              		.loc 1 4558 0
 9522 0064 DDF80C80 		ldr	r8, [sp, #12]
 9523 0068 1A99     		ldr	r1, [sp, #104]
 9524 006a 4046     		mov	r0, r8
 9525 006c FFF7FEFF 		bl	ld_clust
 9526              	.LVL1418:
 9527 0070 0646     		mov	r6, r0
 9528              	.LVL1419:
4560:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
 9529              		.loc 1 4560 0
 9530 0072 17F0100F 		tst	r7, #16
 9531 0076 21D0     		beq	.L926
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 9532              		.loc 1 4562 0
 9533 0078 D8F81C30 		ldr	r3, [r8, #28]
 9534 007c 8342     		cmp	r3, r0
 9535 007e 09D1     		bne	.L936
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 9536              		.loc 1 4563 0
 9537 0080 0724     		movs	r4, #7
 9538              	.LVL1420:
 9539 0082 29E0     		b	.L925
 9540              	.LVL1421:
 9541              	.L935:
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 9542              		.loc 1 4532 0 discriminator 1
 9543 0084 1121     		movs	r1, #17
 9544 0086 0398     		ldr	r0, [sp, #12]
 9545              	.LVL1422:
 9546 0088 FFF7FEFF 		bl	unlock_fs
 9547              	.LVL1423:
 9548 008c 1124     		movs	r4, #17
 9549 008e 2AE0     		b	.L922
 9550              	.LVL1424:
 9551              	.L929:
4535:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9552              		.loc 1 4535 0
 9553 0090 0624     		movs	r4, #6
 9554 0092 DCE7     		b	.L924
 9555              	.LVL1425:
 9556              	.L936:
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
 9557              		.loc 1 4567 0
 9558 0094 CDF81080 		str	r8, [sp, #16]
4568:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 9559              		.loc 1 4568 0
 9560 0098 0690     		str	r0, [sp, #24]
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 9561              		.loc 1 4575 0
 9562 009a 0021     		movs	r1, #0
 9563 009c 04A8     		add	r0, sp, #16
 9564              	.LVL1426:
 9565 009e FFF7FEFF 		bl	dir_sdi
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 296


 9566              	.LVL1427:
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
 9567              		.loc 1 4576 0
 9568 00a2 0446     		mov	r4, r0
 9569 00a4 50B9     		cbnz	r0, .L926
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 9570              		.loc 1 4577 0
 9571 00a6 0021     		movs	r1, #0
 9572 00a8 04A8     		add	r0, sp, #16
 9573              	.LVL1428:
 9574 00aa FFF7FEFF 		bl	dir_read
 9575              	.LVL1429:
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 9576              		.loc 1 4578 0
 9577 00ae 0446     		mov	r4, r0
 9578 00b0 00B3     		cbz	r0, .L933
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 9579              		.loc 1 4579 0
 9580 00b2 0428     		cmp	r0, #4
 9581 00b4 02D1     		bne	.L926
 9582 00b6 02E0     		b	.L927
 9583              	.LVL1430:
 9584              	.L930:
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 9585              		.loc 1 4520 0
 9586 00b8 0026     		movs	r6, #0
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9587              		.loc 1 4542 0
 9588 00ba 0624     		movs	r4, #6
 9589              	.LVL1431:
 9590              	.L926:
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
 9591              		.loc 1 4584 0
 9592 00bc 64B9     		cbnz	r4, .L925
 9593              	.LVL1432:
 9594              	.L927:
4585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
 9595              		.loc 1 4585 0
 9596 00be 12A8     		add	r0, sp, #72
 9597 00c0 FFF7FEFF 		bl	dir_remove
 9598              	.LVL1433:
4586:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 9599              		.loc 1 4586 0
 9600 00c4 0446     		mov	r4, r0
 9601 00c6 331C     		adds	r3, r6, #0
 9602 00c8 18BF     		it	ne
 9603 00ca 0123     		movne	r3, #1
 9604 00cc 0028     		cmp	r0, #0
 9605 00ce 0CBF     		ite	eq
 9606 00d0 1846     		moveq	r0, r3
 9607 00d2 0020     		movne	r0, #0
 9608              	.LVL1434:
 9609 00d4 80B9     		cbnz	r0, .L937
 9610              	.L928:
 9611              	.LVL1435:
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9612              		.loc 1 4593 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 297


 9613 00d6 B4B1     		cbz	r4, .L938
 9614              	.LVL1436:
 9615              	.L925:
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9616              		.loc 1 4596 0
 9617 00d8 2846     		mov	r0, r5
 9618 00da FFF7FEFF 		bl	ff_memfree
 9619              	.LVL1437:
 9620              	.L920:
4599:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9621              		.loc 1 4599 0
 9622 00de 2146     		mov	r1, r4
 9623 00e0 0398     		ldr	r0, [sp, #12]
 9624 00e2 FFF7FEFF 		bl	unlock_fs
 9625              	.LVL1438:
 9626              	.L922:
4600:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9627              		.loc 1 4600 0
 9628 00e6 2046     		mov	r0, r4
 9629 00e8 20B0     		add	sp, sp, #128
 9630              	.LCFI132:
 9631              		.cfi_remember_state
 9632              		.cfi_def_cfa_offset 24
 9633              		@ sp needed
 9634 00ea BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 9635              	.LVL1439:
 9636              	.L931:
 9637              	.LCFI133:
 9638              		.cfi_restore_state
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 9639              		.loc 1 4520 0
 9640 00ee 0026     		movs	r6, #0
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9641              		.loc 1 4545 0
 9642 00f0 0724     		movs	r4, #7
 9643              	.LVL1440:
 9644 00f2 E3E7     		b	.L926
 9645              	.LVL1441:
 9646              	.L933:
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 9647              		.loc 1 4578 0
 9648 00f4 0724     		movs	r4, #7
 9649 00f6 E1E7     		b	.L926
 9650              	.LVL1442:
 9651              	.L937:
4590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 9652              		.loc 1 4590 0
 9653 00f8 0022     		movs	r2, #0
 9654 00fa 3146     		mov	r1, r6
 9655 00fc 12A8     		add	r0, sp, #72
 9656 00fe FFF7FEFF 		bl	remove_chain
 9657              	.LVL1443:
 9658 0102 0446     		mov	r4, r0
 9659              	.LVL1444:
 9660 0104 E7E7     		b	.L928
 9661              	.L938:
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 298


 9662              		.loc 1 4593 0 discriminator 1
 9663 0106 0398     		ldr	r0, [sp, #12]
 9664 0108 FFF7FEFF 		bl	sync_fs
 9665              	.LVL1445:
 9666 010c 0446     		mov	r4, r0
 9667              	.LVL1446:
 9668 010e E3E7     		b	.L925
 9669              		.cfi_endproc
 9670              	.LFE207:
 9672              		.section	.text.f_mkdir,"ax",%progbits
 9673              		.align	1
 9674              		.global	f_mkdir
 9675              		.syntax unified
 9676              		.thumb
 9677              		.thumb_func
 9678              		.fpu fpv5-sp-d16
 9680              	f_mkdir:
 9681              	.LFB208:
4612:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9682              		.loc 1 4612 0
 9683              		.cfi_startproc
 9684              		@ args = 0, pretend = 0, frame = 72
 9685              		@ frame_needed = 0, uses_anonymous_args = 0
 9686              	.LVL1447:
 9687 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9688              	.LCFI134:
 9689              		.cfi_def_cfa_offset 36
 9690              		.cfi_offset 4, -36
 9691              		.cfi_offset 5, -32
 9692              		.cfi_offset 6, -28
 9693              		.cfi_offset 7, -24
 9694              		.cfi_offset 8, -20
 9695              		.cfi_offset 9, -16
 9696              		.cfi_offset 10, -12
 9697              		.cfi_offset 11, -8
 9698              		.cfi_offset 14, -4
 9699 0004 93B0     		sub	sp, sp, #76
 9700              	.LCFI135:
 9701              		.cfi_def_cfa_offset 112
 9702 0006 0190     		str	r0, [sp, #4]
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 9703              		.loc 1 4623 0
 9704 0008 0222     		movs	r2, #2
 9705 000a 03A9     		add	r1, sp, #12
 9706 000c 01A8     		add	r0, sp, #4
 9707              	.LVL1448:
 9708 000e FFF7FEFF 		bl	find_volume
 9709              	.LVL1449:
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 9710              		.loc 1 4624 0
 9711 0012 039B     		ldr	r3, [sp, #12]
 9712 0014 0493     		str	r3, [sp, #16]
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 9713              		.loc 1 4625 0
 9714 0016 0446     		mov	r4, r0
 9715 0018 18BB     		cbnz	r0, .L940
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 299


 9716              		.loc 1 4626 0
 9717 001a 4FF40070 		mov	r0, #512
 9718              	.LVL1450:
 9719 001e FFF7FEFF 		bl	ff_memalloc
 9720              	.LVL1451:
 9721 0022 0546     		mov	r5, r0
 9722 0024 80B1     		cbz	r0, .L961
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
 9723              		.loc 1 4626 0 is_stmt 0 discriminator 2
 9724 0026 039B     		ldr	r3, [sp, #12]
 9725 0028 D860     		str	r0, [r3, #12]
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 9726              		.loc 1 4627 0 is_stmt 1 discriminator 2
 9727 002a 0199     		ldr	r1, [sp, #4]
 9728 002c 04A8     		add	r0, sp, #16
 9729              	.LVL1452:
 9730 002e FFF7FEFF 		bl	follow_path
 9731              	.LVL1453:
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 9732              		.loc 1 4628 0 discriminator 2
 9733 0032 0646     		mov	r6, r0
 9734 0034 70B1     		cbz	r0, .L954
4629:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
 9735              		.loc 1 4629 0
 9736 0036 0428     		cmp	r0, #4
 9737 0038 0DD1     		bne	.L943
4629:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
 9738              		.loc 1 4629 0 is_stmt 0 discriminator 1
 9739 003a 9DF83F30 		ldrb	r3, [sp, #63]	@ zero_extendqisi2
 9740 003e 13F0200F 		tst	r3, #32
 9741 0042 08D0     		beq	.L943
4630:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9742              		.loc 1 4630 0 is_stmt 1
 9743 0044 0626     		movs	r6, #6
 9744 0046 08E0     		b	.L944
 9745              	.LVL1454:
 9746              	.L961:
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
 9747              		.loc 1 4626 0 discriminator 1
 9748 0048 1121     		movs	r1, #17
 9749 004a 0398     		ldr	r0, [sp, #12]
 9750              	.LVL1455:
 9751 004c FFF7FEFF 		bl	unlock_fs
 9752              	.LVL1456:
 9753 0050 1124     		movs	r4, #17
 9754 0052 0AE0     		b	.L942
 9755              	.LVL1457:
 9756              	.L954:
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 9757              		.loc 1 4628 0
 9758 0054 0826     		movs	r6, #8
 9759              	.L943:
 9760              	.LVL1458:
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 9761              		.loc 1 4632 0
 9762 0056 042E     		cmp	r6, #4
 9763 0058 0BD0     		beq	.L962
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 300


 9764              	.LVL1459:
 9765              	.L944:
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9766              		.loc 1 4693 0
 9767 005a 2846     		mov	r0, r5
 9768 005c FFF7FEFF 		bl	ff_memfree
 9769              	.LVL1460:
 9770 0060 3446     		mov	r4, r6
 9771              	.LVL1461:
 9772              	.L940:
4696:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9773              		.loc 1 4696 0
 9774 0062 2146     		mov	r1, r4
 9775 0064 0398     		ldr	r0, [sp, #12]
 9776 0066 FFF7FEFF 		bl	unlock_fs
 9777              	.LVL1462:
 9778              	.L942:
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9779              		.loc 1 4697 0
 9780 006a 2046     		mov	r0, r4
 9781 006c 13B0     		add	sp, sp, #76
 9782              	.LCFI136:
 9783              		.cfi_remember_state
 9784              		.cfi_def_cfa_offset 36
 9785              		@ sp needed
 9786 006e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9787              	.LVL1463:
 9788              	.L962:
 9789              	.LCFI137:
 9790              		.cfi_restore_state
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 9791              		.loc 1 4633 0
 9792 0072 0021     		movs	r1, #0
 9793 0074 04A8     		add	r0, sp, #16
 9794 0076 FFF7FEFF 		bl	create_chain
 9795              	.LVL1464:
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 9796              		.loc 1 4634 0
 9797 007a 039A     		ldr	r2, [sp, #12]
 9798 007c 5389     		ldrh	r3, [r2, #10]
 9799 007e 5B02     		lsls	r3, r3, #9
 9800 0080 0793     		str	r3, [sp, #28]
 9801              	.LVL1465:
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 9802              		.loc 1 4636 0
 9803 0082 0746     		mov	r7, r0
 9804 0084 00B9     		cbnz	r0, .L945
 9805 0086 0724     		movs	r4, #7
 9806              	.L945:
 9807              	.LVL1466:
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 9808              		.loc 1 4637 0
 9809 0088 012F     		cmp	r7, #1
 9810 008a 20D0     		beq	.L963
 9811              	.LVL1467:
 9812              	.L946:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 301


 9813              		.loc 1 4638 0
 9814 008c B7F1FF3F 		cmp	r7, #-1
 9815 0090 24D0     		beq	.L958
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 9816              		.loc 1 4639 0
 9817 0092 F4B1     		cbz	r4, .L964
 9818              	.LVL1468:
 9819              	.L947:
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 9820              		.loc 1 4640 0
 9821 0094 FFF7FEFF 		bl	get_fattime
 9822              	.LVL1469:
 9823 0098 0090     		str	r0, [sp]
 9824              	.LVL1470:
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
 9825              		.loc 1 4641 0
 9826 009a 0CB3     		cbz	r4, .L965
 9827              	.LVL1471:
 9828              	.L948:
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
 9829              		.loc 1 4664 0
 9830 009c 002C     		cmp	r4, #0
 9831 009e 76D0     		beq	.L966
 9832              	.L952:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 9833              		.loc 1 4667 0
 9834 00a0 002C     		cmp	r4, #0
 9835 00a2 79D1     		bne	.L953
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 9836              		.loc 1 4680 0
 9837 00a4 0C9C     		ldr	r4, [sp, #48]
 9838              	.LVL1472:
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
 9839              		.loc 1 4681 0
 9840 00a6 0099     		ldr	r1, [sp]
 9841 00a8 04F11600 		add	r0, r4, #22
 9842 00ac FFF7FEFF 		bl	st_dword
 9843              	.LVL1473:
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
 9844              		.loc 1 4682 0
 9845 00b0 3A46     		mov	r2, r7
 9846 00b2 2146     		mov	r1, r4
 9847 00b4 0398     		ldr	r0, [sp, #12]
 9848 00b6 FFF7FEFF 		bl	st_clust
 9849              	.LVL1474:
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 9850              		.loc 1 4683 0
 9851 00ba 1023     		movs	r3, #16
 9852 00bc E372     		strb	r3, [r4, #11]
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9853              		.loc 1 4684 0
 9854 00be 039B     		ldr	r3, [sp, #12]
 9855 00c0 0122     		movs	r2, #1
 9856 00c2 DA70     		strb	r2, [r3, #3]
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9857              		.loc 1 4687 0
 9858 00c4 0398     		ldr	r0, [sp, #12]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 302


 9859 00c6 FFF7FEFF 		bl	sync_fs
 9860              	.LVL1475:
 9861 00ca 0646     		mov	r6, r0
 9862              	.LVL1476:
 9863 00cc C5E7     		b	.L944
 9864              	.LVL1477:
 9865              	.L963:
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 9866              		.loc 1 4637 0
 9867 00ce 0224     		movs	r4, #2
 9868              	.LVL1478:
 9869 00d0 DCE7     		b	.L946
 9870              	.LVL1479:
 9871              	.L964:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 9872              		.loc 1 4639 0 discriminator 1
 9873 00d2 1046     		mov	r0, r2
 9874              	.LVL1480:
 9875 00d4 FFF7FEFF 		bl	sync_window
 9876              	.LVL1481:
 9877 00d8 0446     		mov	r4, r0
 9878              	.LVL1482:
 9879 00da DBE7     		b	.L947
 9880              	.LVL1483:
 9881              	.L958:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 9882              		.loc 1 4638 0
 9883 00dc 0124     		movs	r4, #1
 9884              	.LVL1484:
 9885 00de D9E7     		b	.L947
 9886              	.LVL1485:
 9887              	.L965:
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
 9888              		.loc 1 4642 0
 9889 00e0 DDF80C90 		ldr	r9, [sp, #12]
 9890 00e4 3946     		mov	r1, r7
 9891 00e6 4846     		mov	r0, r9
 9892              	.LVL1486:
 9893 00e8 FFF7FEFF 		bl	clust2sect
 9894              	.LVL1487:
 9895 00ec 0646     		mov	r6, r0
 9896              	.LVL1488:
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
 9897              		.loc 1 4643 0
 9898 00ee 09F13C08 		add	r8, r9, #60
 9899              	.LVL1489:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 9900              		.loc 1 4644 0
 9901 00f2 4FF40072 		mov	r2, #512
 9902 00f6 0021     		movs	r1, #0
 9903 00f8 4046     		mov	r0, r8
 9904              	.LVL1490:
 9905 00fa FFF7FEFF 		bl	mem_set
 9906              	.LVL1491:
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
 9907              		.loc 1 4646 0
 9908 00fe 0B22     		movs	r2, #11
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 303


 9909 0100 2021     		movs	r1, #32
 9910 0102 4046     		mov	r0, r8
 9911 0104 FFF7FEFF 		bl	mem_set
 9912              	.LVL1492:
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
 9913              		.loc 1 4647 0
 9914 0108 4FF02E0B 		mov	fp, #46
 9915 010c 89F83CB0 		strb	fp, [r9, #60]
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
 9916              		.loc 1 4648 0
 9917 0110 1023     		movs	r3, #16
 9918 0112 89F84730 		strb	r3, [r9, #71]
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
 9919              		.loc 1 4649 0
 9920 0116 0099     		ldr	r1, [sp]
 9921 0118 09F15200 		add	r0, r9, #82
 9922 011c FFF7FEFF 		bl	st_dword
 9923              	.LVL1493:
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
 9924              		.loc 1 4650 0
 9925 0120 3A46     		mov	r2, r7
 9926 0122 4146     		mov	r1, r8
 9927 0124 0398     		ldr	r0, [sp, #12]
 9928 0126 FFF7FEFF 		bl	st_clust
 9929              	.LVL1494:
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 9930              		.loc 1 4651 0
 9931 012a 09F15C0A 		add	r10, r9, #92
 9932 012e 2022     		movs	r2, #32
 9933 0130 4146     		mov	r1, r8
 9934 0132 5046     		mov	r0, r10
 9935 0134 FFF7FEFF 		bl	mem_cpy
 9936              	.LVL1495:
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 9937              		.loc 1 4652 0
 9938 0138 89F85DB0 		strb	fp, [r9, #93]
 9939 013c 069A     		ldr	r2, [sp, #24]
 9940              	.LVL1496:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 9941              		.loc 1 4653 0
 9942 013e 0398     		ldr	r0, [sp, #12]
 9943 0140 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 9944 0142 032B     		cmp	r3, #3
 9945 0144 1ED0     		beq	.L967
 9946              	.LVL1497:
 9947              	.L949:
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9948              		.loc 1 4654 0
 9949 0146 5146     		mov	r1, r10
 9950 0148 FFF7FEFF 		bl	st_clust
 9951              	.LVL1498:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 9952              		.loc 1 4656 0
 9953 014c 039B     		ldr	r3, [sp, #12]
 9954 014e B3F80A90 		ldrh	r9, [r3, #10]
 9955              	.LVL1499:
 9956              	.L950:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 304


4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 9957              		.loc 1 4656 0 is_stmt 0 discriminator 1
 9958 0152 B9F1000F 		cmp	r9, #0
 9959 0156 A1D0     		beq	.L948
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 9960              		.loc 1 4657 0 is_stmt 1
 9961 0158 06F1010B 		add	fp, r6, #1
 9962              	.LVL1500:
 9963 015c 039B     		ldr	r3, [sp, #12]
 9964 015e 9E63     		str	r6, [r3, #56]
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
 9965              		.loc 1 4658 0
 9966 0160 0122     		movs	r2, #1
 9967 0162 DA70     		strb	r2, [r3, #3]
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 9968              		.loc 1 4659 0
 9969 0164 0398     		ldr	r0, [sp, #12]
 9970 0166 FFF7FEFF 		bl	sync_window
 9971              	.LVL1501:
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
 9972              		.loc 1 4660 0
 9973 016a 0446     		mov	r4, r0
 9974 016c 0028     		cmp	r0, #0
 9975 016e 95D1     		bne	.L948
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9976              		.loc 1 4661 0 discriminator 2
 9977 0170 4FF40072 		mov	r2, #512
 9978 0174 0021     		movs	r1, #0
 9979 0176 4046     		mov	r0, r8
 9980              	.LVL1502:
 9981 0178 FFF7FEFF 		bl	mem_set
 9982              	.LVL1503:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 9983              		.loc 1 4656 0 discriminator 2
 9984 017c 09F1FF39 		add	r9, r9, #-1
 9985              	.LVL1504:
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 9986              		.loc 1 4657 0 discriminator 2
 9987 0180 5E46     		mov	r6, fp
 9988 0182 E6E7     		b	.L950
 9989              	.LVL1505:
 9990              	.L967:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 9991              		.loc 1 4653 0 discriminator 1
 9992 0184 036B     		ldr	r3, [r0, #48]
 9993 0186 9342     		cmp	r3, r2
 9994 0188 DDD1     		bne	.L949
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 9995              		.loc 1 4653 0 is_stmt 0
 9996 018a 0022     		movs	r2, #0
 9997              	.LVL1506:
 9998 018c DBE7     		b	.L949
 9999              	.LVL1507:
 10000              	.L966:
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 10001              		.loc 1 4665 0 is_stmt 1
 10002 018e 04A8     		add	r0, sp, #16
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 305


 10003 0190 FFF7FEFF 		bl	dir_register
 10004              	.LVL1508:
 10005 0194 0446     		mov	r4, r0
 10006              	.LVL1509:
 10007 0196 83E7     		b	.L952
 10008              	.L953:
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 10009              		.loc 1 4690 0
 10010 0198 0022     		movs	r2, #0
 10011 019a 3946     		mov	r1, r7
 10012 019c 04A8     		add	r0, sp, #16
 10013 019e FFF7FEFF 		bl	remove_chain
 10014              	.LVL1510:
 10015 01a2 2646     		mov	r6, r4
 10016 01a4 59E7     		b	.L944
 10017              		.cfi_endproc
 10018              	.LFE208:
 10020              		.section	.text.f_rename,"ax",%progbits
 10021              		.align	1
 10022              		.global	f_rename
 10023              		.syntax unified
 10024              		.thumb
 10025              		.thumb_func
 10026              		.fpu fpv5-sp-d16
 10028              	f_rename:
 10029              	.LFB209:
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 10030              		.loc 1 4710 0
 10031              		.cfi_startproc
 10032              		@ args = 0, pretend = 0, frame = 152
 10033              		@ frame_needed = 0, uses_anonymous_args = 0
 10034              	.LVL1511:
 10035 0000 70B5     		push	{r4, r5, r6, lr}
 10036              	.LCFI138:
 10037              		.cfi_def_cfa_offset 16
 10038              		.cfi_offset 4, -16
 10039              		.cfi_offset 5, -12
 10040              		.cfi_offset 6, -8
 10041              		.cfi_offset 14, -4
 10042 0002 A6B0     		sub	sp, sp, #152
 10043              	.LCFI139:
 10044              		.cfi_def_cfa_offset 168
 10045 0004 0190     		str	r0, [sp, #4]
 10046 0006 26A8     		add	r0, sp, #152
 10047              	.LVL1512:
 10048 0008 40F8981D 		str	r1, [r0, #-152]!
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 10049              		.loc 1 4719 0
 10050 000c FFF7FEFF 		bl	get_ldnumber
 10051              	.LVL1513:
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 10052              		.loc 1 4720 0
 10053 0010 0222     		movs	r2, #2
 10054 0012 09A9     		add	r1, sp, #36
 10055 0014 01A8     		add	r0, sp, #4
 10056 0016 FFF7FEFF 		bl	find_volume
 10057              	.LVL1514:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 306


4721:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
 10058              		.loc 1 4721 0
 10059 001a 0446     		mov	r4, r0
 10060 001c F0B9     		cbnz	r0, .L969
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 10061              		.loc 1 4722 0
 10062 001e 099B     		ldr	r3, [sp, #36]
 10063 0020 1893     		str	r3, [sp, #96]
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
 10064              		.loc 1 4723 0
 10065 0022 4FF40070 		mov	r0, #512
 10066              	.LVL1515:
 10067 0026 FFF7FEFF 		bl	ff_memalloc
 10068              	.LVL1516:
 10069 002a 0546     		mov	r5, r0
 10070 002c E8B1     		cbz	r0, .L982
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
 10071              		.loc 1 4723 0 is_stmt 0 discriminator 2
 10072 002e 099B     		ldr	r3, [sp, #36]
 10073 0030 D860     		str	r0, [r3, #12]
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 10074              		.loc 1 4724 0 is_stmt 1 discriminator 2
 10075 0032 0199     		ldr	r1, [sp, #4]
 10076 0034 18A8     		add	r0, sp, #96
 10077              	.LVL1517:
 10078 0036 FFF7FEFF 		bl	follow_path
 10079              	.LVL1518:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 10080              		.loc 1 4725 0 discriminator 2
 10081 003a 0446     		mov	r4, r0
 10082 003c 20B9     		cbnz	r0, .L972
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 10083              		.loc 1 4725 0 is_stmt 0 discriminator 1
 10084 003e 9DF88F30 		ldrb	r3, [sp, #143]	@ zero_extendqisi2
 10085 0042 13F0A00F 		tst	r3, #160
 10086 0046 16D1     		bne	.L978
 10087              	.L972:
 10088              	.LVL1519:
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
 10089              		.loc 1 4727 0 is_stmt 1
 10090 0048 24B9     		cbnz	r4, .L973
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 10091              		.loc 1 4728 0
 10092 004a 0221     		movs	r1, #2
 10093 004c 18A8     		add	r0, sp, #96
 10094 004e FFF7FEFF 		bl	chk_lock
 10095              	.LVL1520:
 10096 0052 0446     		mov	r4, r0
 10097              	.LVL1521:
 10098              	.L973:
4731:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 10099              		.loc 1 4731 0
 10100 0054 8CB1     		cbz	r4, .L983
 10101              	.LVL1522:
 10102              	.L974:
4796:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 10103              		.loc 1 4796 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 307


 10104 0056 2846     		mov	r0, r5
 10105 0058 FFF7FEFF 		bl	ff_memfree
 10106              	.LVL1523:
 10107              	.L969:
4799:Middlewares/Third_Party/FatFs/src/ff.c **** }
 10108              		.loc 1 4799 0
 10109 005c 2146     		mov	r1, r4
 10110 005e 0998     		ldr	r0, [sp, #36]
 10111 0060 FFF7FEFF 		bl	unlock_fs
 10112              	.LVL1524:
 10113              	.L971:
4800:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10114              		.loc 1 4800 0
 10115 0064 2046     		mov	r0, r4
 10116 0066 26B0     		add	sp, sp, #152
 10117              	.LCFI140:
 10118              		.cfi_remember_state
 10119              		.cfi_def_cfa_offset 16
 10120              		@ sp needed
 10121 0068 70BD     		pop	{r4, r5, r6, pc}
 10122              	.LVL1525:
 10123              	.L982:
 10124              	.LCFI141:
 10125              		.cfi_restore_state
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
 10126              		.loc 1 4723 0 discriminator 1
 10127 006a 1121     		movs	r1, #17
 10128 006c 0998     		ldr	r0, [sp, #36]
 10129              	.LVL1526:
 10130 006e FFF7FEFF 		bl	unlock_fs
 10131              	.LVL1527:
 10132 0072 1124     		movs	r4, #17
 10133 0074 F6E7     		b	.L971
 10134              	.LVL1528:
 10135              	.L978:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 10136              		.loc 1 4725 0
 10137 0076 0624     		movs	r4, #6
 10138 0078 ECE7     		b	.L973
 10139              	.LVL1529:
 10140              	.L983:
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 10141              		.loc 1 4758 0
 10142 007a 1522     		movs	r2, #21
 10143 007c 2099     		ldr	r1, [sp, #128]
 10144 007e 0B31     		adds	r1, r1, #11
 10145 0080 03A8     		add	r0, sp, #12
 10146 0082 FFF7FEFF 		bl	mem_cpy
 10147              	.LVL1530:
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
 10148              		.loc 1 4759 0
 10149 0086 3822     		movs	r2, #56
 10150 0088 18A9     		add	r1, sp, #96
 10151 008a 0AA8     		add	r0, sp, #40
 10152 008c FFF7FEFF 		bl	mem_cpy
 10153              	.LVL1531:
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 308


 10154              		.loc 1 4760 0
 10155 0090 0099     		ldr	r1, [sp]
 10156 0092 0AA8     		add	r0, sp, #40
 10157 0094 FFF7FEFF 		bl	follow_path
 10158              	.LVL1532:
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 10159              		.loc 1 4761 0
 10160 0098 0446     		mov	r4, r0
 10161 009a 58B9     		cbnz	r0, .L975
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10162              		.loc 1 4762 0
 10163 009c 0C9A     		ldr	r2, [sp, #48]
 10164 009e 1A9B     		ldr	r3, [sp, #104]
 10165 00a0 9A42     		cmp	r2, r3
 10166 00a2 01D0     		beq	.L984
 10167 00a4 0824     		movs	r4, #8
 10168 00a6 07E0     		b	.L976
 10169              	.L984:
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10170              		.loc 1 4762 0 is_stmt 0 discriminator 1
 10171 00a8 0F9A     		ldr	r2, [sp, #60]
 10172 00aa 1D9B     		ldr	r3, [sp, #116]
 10173 00ac 9A42     		cmp	r2, r3
 10174 00ae 10D0     		beq	.L977
 10175 00b0 0824     		movs	r4, #8
 10176 00b2 01E0     		b	.L976
 10177              	.L975:
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 10178              		.loc 1 4764 0 is_stmt 1
 10179 00b4 0428     		cmp	r0, #4
 10180 00b6 0CD0     		beq	.L977
 10181              	.LVL1533:
 10182              	.L976:
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
 10183              		.loc 1 4788 0
 10184 00b8 002C     		cmp	r4, #0
 10185 00ba CCD1     		bne	.L974
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 10186              		.loc 1 4789 0
 10187 00bc 18A8     		add	r0, sp, #96
 10188 00be FFF7FEFF 		bl	dir_remove
 10189              	.LVL1534:
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
 10190              		.loc 1 4790 0
 10191 00c2 0446     		mov	r4, r0
 10192 00c4 0028     		cmp	r0, #0
 10193 00c6 C6D1     		bne	.L974
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10194              		.loc 1 4791 0
 10195 00c8 0998     		ldr	r0, [sp, #36]
 10196              	.LVL1535:
 10197 00ca FFF7FEFF 		bl	sync_fs
 10198              	.LVL1536:
 10199 00ce 0446     		mov	r4, r0
 10200              	.LVL1537:
 10201 00d0 C1E7     		b	.L974
 10202              	.LVL1538:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 309


 10203              	.L977:
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 10204              		.loc 1 4765 0
 10205 00d2 0AA8     		add	r0, sp, #40
 10206              	.LVL1539:
 10207 00d4 FFF7FEFF 		bl	dir_register
 10208              	.LVL1540:
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
 10209              		.loc 1 4766 0
 10210 00d8 0446     		mov	r4, r0
 10211 00da 0028     		cmp	r0, #0
 10212 00dc ECD1     		bne	.L976
4767:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 10213              		.loc 1 4767 0
 10214 00de 129E     		ldr	r6, [sp, #72]
 10215              	.LVL1541:
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 10216              		.loc 1 4768 0
 10217 00e0 1322     		movs	r2, #19
 10218 00e2 0DF10E01 		add	r1, sp, #14
 10219 00e6 06F10D00 		add	r0, r6, #13
 10220              	.LVL1542:
 10221 00ea FFF7FEFF 		bl	mem_cpy
 10222              	.LVL1543:
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 10223              		.loc 1 4769 0
 10224 00ee 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 10225 00f2 43F02003 		orr	r3, r3, #32
 10226 00f6 F372     		strb	r3, [r6, #11]
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 10227              		.loc 1 4770 0
 10228 00f8 099B     		ldr	r3, [sp, #36]
 10229 00fa 0122     		movs	r2, #1
 10230 00fc DA70     		strb	r2, [r3, #3]
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 10231              		.loc 1 4771 0
 10232 00fe F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
 10233 0100 13F0100F 		tst	r3, #16
 10234 0104 D8D0     		beq	.L976
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 10235              		.loc 1 4771 0 is_stmt 0 discriminator 1
 10236 0106 1A9A     		ldr	r2, [sp, #104]
 10237 0108 0C9B     		ldr	r3, [sp, #48]
 10238 010a 9A42     		cmp	r2, r3
 10239 010c D4D0     		beq	.L976
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
 10240              		.loc 1 4772 0 is_stmt 1
 10241 010e 099C     		ldr	r4, [sp, #36]
 10242 0110 3146     		mov	r1, r6
 10243 0112 2046     		mov	r0, r4
 10244 0114 FFF7FEFF 		bl	ld_clust
 10245              	.LVL1544:
 10246 0118 0146     		mov	r1, r0
 10247 011a 2046     		mov	r0, r4
 10248 011c FFF7FEFF 		bl	clust2sect
 10249              	.LVL1545:
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 310


 10250              		.loc 1 4773 0
 10251 0120 0146     		mov	r1, r0
 10252 0122 08B9     		cbnz	r0, .L985
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
 10253              		.loc 1 4774 0
 10254 0124 0224     		movs	r4, #2
 10255 0126 96E7     		b	.L974
 10256              	.L985:
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
 10257              		.loc 1 4777 0
 10258 0128 2046     		mov	r0, r4
 10259              	.LVL1546:
 10260 012a FFF7FEFF 		bl	move_window
 10261              	.LVL1547:
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 10262              		.loc 1 4778 0
 10263 012e 099B     		ldr	r3, [sp, #36]
 10264 0130 03F15C01 		add	r1, r3, #92
 10265              	.LVL1548:
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 10266              		.loc 1 4779 0
 10267 0134 0446     		mov	r4, r0
 10268 0136 0028     		cmp	r0, #0
 10269 0138 BED1     		bne	.L976
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 10270              		.loc 1 4779 0 is_stmt 0 discriminator 1
 10271 013a 93F85D20 		ldrb	r2, [r3, #93]	@ zero_extendqisi2
 10272 013e 2E2A     		cmp	r2, #46
 10273 0140 BAD1     		bne	.L976
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
 10274              		.loc 1 4780 0 is_stmt 1
 10275 0142 0C9A     		ldr	r2, [sp, #48]
 10276 0144 1846     		mov	r0, r3
 10277              	.LVL1549:
 10278 0146 FFF7FEFF 		bl	st_clust
 10279              	.LVL1550:
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
 10280              		.loc 1 4781 0
 10281 014a 099B     		ldr	r3, [sp, #36]
 10282 014c 0122     		movs	r2, #1
 10283 014e DA70     		strb	r2, [r3, #3]
 10284 0150 B2E7     		b	.L976
 10285              		.cfi_endproc
 10286              	.LFE209:
 10288              		.section	.text.f_mkfs,"ax",%progbits
 10289              		.align	1
 10290              		.global	f_mkfs
 10291              		.syntax unified
 10292              		.thumb
 10293              		.thumb_func
 10294              		.fpu fpv5-sp-d16
 10296              	f_mkfs:
 10297              	.LFB210:
5297:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
 10298              		.loc 1 5297 0
 10299              		.cfi_startproc
 10300              		@ args = 4, pretend = 0, frame = 40
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 311


 10301              		@ frame_needed = 0, uses_anonymous_args = 0
 10302              	.LVL1551:
 10303 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 10304              	.LCFI142:
 10305              		.cfi_def_cfa_offset 36
 10306              		.cfi_offset 4, -36
 10307              		.cfi_offset 5, -32
 10308              		.cfi_offset 6, -28
 10309              		.cfi_offset 7, -24
 10310              		.cfi_offset 8, -20
 10311              		.cfi_offset 9, -16
 10312              		.cfi_offset 10, -12
 10313              		.cfi_offset 11, -8
 10314              		.cfi_offset 14, -4
 10315 0004 8BB0     		sub	sp, sp, #44
 10316              	.LCFI143:
 10317              		.cfi_def_cfa_offset 80
 10318 0006 0AAC     		add	r4, sp, #40
 10319 0008 44F80C0D 		str	r0, [r4, #-12]!
 10320 000c 8846     		mov	r8, r1
 10321 000e 1546     		mov	r5, r2
 10322 0010 1E46     		mov	r6, r3
 10323              	.LVL1552:
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 10324              		.loc 1 5316 0
 10325 0012 2046     		mov	r0, r4
 10326              	.LVL1553:
 10327 0014 FFF7FEFF 		bl	get_ldnumber
 10328              	.LVL1554:
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 10329              		.loc 1 5317 0
 10330 0018 0028     		cmp	r0, #0
 10331 001a C0F2DF82 		blt	.L1030
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 10332              		.loc 1 5318 0
 10333 001e 924B     		ldr	r3, .L1077
 10334 0020 53F82030 		ldr	r3, [r3, r0, lsl #2]
 10335 0024 0BB1     		cbz	r3, .L988
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 10336              		.loc 1 5318 0 is_stmt 0 discriminator 1
 10337 0026 0022     		movs	r2, #0
 10338 0028 1A70     		strb	r2, [r3]
 10339              	.L988:
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
 10340              		.loc 1 5319 0 is_stmt 1
 10341 002a C4B2     		uxtb	r4, r0
 10342              	.LVL1555:
5323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 10343              		.loc 1 5323 0
 10344 002c 2046     		mov	r0, r4
 10345              	.LVL1556:
 10346 002e FFF7FEFF 		bl	disk_initialize
 10347              	.LVL1557:
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 10348              		.loc 1 5324 0
 10349 0032 10F0010F 		tst	r0, #1
 10350 0036 40F0D382 		bne	.L1031
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 312


5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 10351              		.loc 1 5325 0
 10352 003a 10F0040F 		tst	r0, #4
 10353 003e 40F0D182 		bne	.L1032
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 10354              		.loc 1 5326 0
 10355 0042 09AA     		add	r2, sp, #36
 10356 0044 0321     		movs	r1, #3
 10357 0046 2046     		mov	r0, r4
 10358              	.LVL1558:
 10359 0048 FFF7FEFF 		bl	disk_ioctl
 10360              	.LVL1559:
 10361 004c 38B9     		cbnz	r0, .L989
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 10362              		.loc 1 5326 0 is_stmt 0 discriminator 2
 10363 004e 099B     		ldr	r3, [sp, #36]
 10364 0050 2BB1     		cbz	r3, .L989
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 10365              		.loc 1 5326 0 discriminator 4
 10366 0052 B3F5004F 		cmp	r3, #32768
 10367 0056 02D8     		bhi	.L989
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 10368              		.loc 1 5326 0 discriminator 6
 10369 0058 5A1E     		subs	r2, r3, #1
 10370 005a 1342     		tst	r3, r2
 10371 005c 01D0     		beq	.L990
 10372              	.L989:
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 10373              		.loc 1 5326 0 discriminator 7
 10374 005e 0123     		movs	r3, #1
 10375 0060 0993     		str	r3, [sp, #36]
 10376              	.L990:
 10377              	.LVL1560:
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 10378              		.loc 1 5333 0 is_stmt 1
 10379 0062 1DB1     		cbz	r5, .L991
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 10380              		.loc 1 5333 0 is_stmt 0 discriminator 1
 10381 0064 B5F5007F 		cmp	r5, #512
 10382 0068 C0F0C082 		bcc	.L1033
 10383              	.L991:
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 10384              		.loc 1 5333 0 discriminator 4
 10385 006c B5F1807F 		cmp	r5, #16777216
 10386 0070 00F2BE82 		bhi	.L1034
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 10387              		.loc 1 5333 0 discriminator 6
 10388 0074 6B1E     		subs	r3, r5, #1
 10389 0076 2B42     		tst	r3, r5
 10390 0078 40F0BC82 		bne	.L1035
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10391              		.loc 1 5334 0 is_stmt 1
 10392 007c 6D0A     		lsrs	r5, r5, #9
 10393              	.LVL1561:
5338:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
 10394              		.loc 1 5338 0
 10395 007e 149B     		ldr	r3, [sp, #80]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 313


 10396 0080 4FEA532A 		lsr	r10, r3, #9
 10397              	.LVL1562:
5339:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
 10398              		.loc 1 5339 0
 10399 0084 794F     		ldr	r7, .L1077+4
 10400 0086 1F40     		ands	r7, r7, r3
 10401              	.LVL1563:
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10402              		.loc 1 5340 0
 10403 0088 002F     		cmp	r7, #0
 10404 008a 00F0B582 		beq	.L1036
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 10405              		.loc 1 5353 0
 10406 008e 08AA     		add	r2, sp, #32
 10407 0090 0121     		movs	r1, #1
 10408 0092 2046     		mov	r0, r4
 10409 0094 FFF7FEFF 		bl	disk_ioctl
 10410              	.LVL1564:
 10411 0098 0028     		cmp	r0, #0
 10412 009a 40F0AF82 		bne	.L1037
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 10413              		.loc 1 5354 0
 10414 009e 18F00803 		ands	r3, r8, #8
 10415 00a2 0093     		str	r3, [sp]
 10416 00a4 70D0     		beq	.L1038
 10417 00a6 4FF00009 		mov	r9, #0
 10418              	.L992:
 10419              	.LVL1565:
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 10420              		.loc 1 5355 0 discriminator 4
 10421 00aa 089B     		ldr	r3, [sp, #32]
 10422 00ac 4B45     		cmp	r3, r9
 10423 00ae C0F0A782 		bcc	.L1039
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 10424              		.loc 1 5356 0
 10425 00b2 A3EB0903 		sub	r3, r3, r9
 10426 00b6 0893     		str	r3, [sp, #32]
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10427              		.loc 1 5358 0
 10428 00b8 7F2B     		cmp	r3, #127
 10429 00ba 40F2A382 		bls	.L1040
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 10430              		.loc 1 5367 0
 10431 00be 802D     		cmp	r5, #128
 10432 00c0 00F2A282 		bhi	.L1041
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
 10433              		.loc 1 5368 0
 10434 00c4 18F00200 		ands	r0, r8, #2
 10435 00c8 06D0     		beq	.L993
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 10436              		.loc 1 5369 0
 10437 00ca 08F00702 		and	r2, r8, #7
 10438 00ce 022A     		cmp	r2, #2
 10439 00d0 5DD0     		beq	.L1042
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 10440              		.loc 1 5369 0 is_stmt 0 discriminator 1
 10441 00d2 18F0010F 		tst	r8, #1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 314


 10442 00d6 61D0     		beq	.L1043
 10443              	.L993:
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 10444              		.loc 1 5373 0 is_stmt 1
 10445 00d8 18F0010F 		tst	r8, #1
 10446 00dc 00F09682 		beq	.L1044
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
 10447              		.loc 1 5374 0
 10448 00e0 4FF0020B 		mov	fp, #2
 10449 00e4 0194     		str	r4, [sp, #4]
 10450 00e6 CDF808A0 		str	r10, [sp, #8]
 10451 00ea 0397     		str	r7, [sp, #12]
 10452              	.LVL1566:
 10453              	.L995:
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
 10454              		.loc 1 5544 0
 10455 00ec BBF1030F 		cmp	fp, #3
 10456 00f0 5FD0     		beq	.L1013
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
 10457              		.loc 1 5555 0
 10458 00f2 002D     		cmp	r5, #0
 10459 00f4 00F08180 		beq	.L1069
 10460 00f8 A846     		mov	r8, r5
 10461              	.LVL1567:
 10462              	.L1001:
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
 10463              		.loc 1 5559 0
 10464 00fa B3FBF8F2 		udiv	r2, r3, r8
 10465              	.LVL1568:
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 10466              		.loc 1 5560 0
 10467 00fe 40F6F571 		movw	r1, #4085
 10468 0102 8A42     		cmp	r2, r1
 10469 0104 40F28A80 		bls	.L1004
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 10470              		.loc 1 5561 0
 10471 0108 0232     		adds	r2, r2, #2
 10472              	.LVL1569:
 10473 010a 5200     		lsls	r2, r2, #1
 10474              	.LVL1570:
 10475              	.L1005:
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
 10476              		.loc 1 5566 0
 10477 010c 02F2FF12 		addw	r2, r2, #511
 10478              	.LVL1571:
 10479 0110 520A     		lsrs	r2, r2, #9
 10480              	.LVL1572:
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 10481              		.loc 1 5568 0
 10482 0112 4FF0200E 		mov	lr, #32
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
 10483              		.loc 1 5567 0
 10484 0116 4FF0010C 		mov	ip, #1
 10485              	.LVL1573:
 10486              	.L1000:
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 10487              		.loc 1 5570 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 315


 10488 011a 0CEB090A 		add	r10, ip, r9
 10489              	.LVL1574:
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10490              		.loc 1 5571 0
 10491 011e 02EB0A01 		add	r1, r2, r10
 10492 0122 7144     		add	r1, r1, lr
 10493              	.LVL1575:
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 10494              		.loc 1 5574 0
 10495 0124 099F     		ldr	r7, [sp, #36]
 10496 0126 7C18     		adds	r4, r7, r1
 10497 0128 013C     		subs	r4, r4, #1
 10498 012a 7F42     		negs	r7, r7
 10499 012c 3C40     		ands	r4, r4, r7
 10500 012e 641A     		subs	r4, r4, r1
 10501              	.LVL1576:
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
 10502              		.loc 1 5575 0
 10503 0130 BBF1030F 		cmp	fp, #3
 10504 0134 7AD0     		beq	.L1070
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 10505              		.loc 1 5578 0
 10506 0136 2244     		add	r2, r2, r4
 10507              	.LVL1577:
 10508              	.L1007:
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 10509              		.loc 1 5582 0
 10510 0138 01EB0811 		add	r1, r1, r8, lsl #4
 10511              	.LVL1578:
 10512 013c A1EB0901 		sub	r1, r1, r9
 10513 0140 8B42     		cmp	r3, r1
 10514 0142 C0F06782 		bcc	.L1048
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 10515              		.loc 1 5583 0
 10516 0146 A3EB0C01 		sub	r1, r3, ip
 10517 014a 891A     		subs	r1, r1, r2
 10518 014c A1EB0E01 		sub	r1, r1, lr
 10519 0150 B1FBF8F1 		udiv	r1, r1, r8
 10520              	.LVL1579:
5584:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
 10521              		.loc 1 5584 0
 10522 0154 BBF1030F 		cmp	fp, #3
 10523 0158 6BD0     		beq	.L1071
 10524              	.LVL1580:
 10525              	.L1008:
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
 10526              		.loc 1 5590 0
 10527 015a BBF1020F 		cmp	fp, #2
 10528 015e 40F08F80 		bne	.L1010
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
 10529              		.loc 1 5591 0
 10530 0162 4FF6F574 		movw	r4, #65525
 10531 0166 A142     		cmp	r1, r4
 10532 0168 70D9     		bls	.L1011
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 10533              		.loc 1 5592 0
 10534 016a 1DB9     		cbnz	r5, .L1012
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 316


5592:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 10535              		.loc 1 5592 0 is_stmt 0 discriminator 1
 10536 016c 4FEA4802 		lsl	r2, r8, #1
 10537              	.LVL1581:
 10538 0170 402A     		cmp	r2, #64
 10539 0172 1AD9     		bls	.L1050
 10540              	.L1012:
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
 10541              		.loc 1 5595 0 is_stmt 1
 10542 0174 D8B9     		cbnz	r0, .L1051
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 10543              		.loc 1 5598 0
 10544 0176 002D     		cmp	r5, #0
 10545 0178 40F05082 		bne	.L1052
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 10546              		.loc 1 5598 0 is_stmt 0 discriminator 1
 10547 017c 4FEA4805 		lsl	r5, r8, #1
 10548              	.LVL1582:
 10549 0180 802D     		cmp	r5, #128
 10550 0182 B3D9     		bls	.L995
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10551              		.loc 1 5599 0 is_stmt 1
 10552 0184 0E20     		movs	r0, #14
 10553 0186 2EE2     		b	.L987
 10554              	.LVL1583:
 10555              	.L1038:
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 10556              		.loc 1 5354 0
 10557 0188 4FF03F09 		mov	r9, #63
 10558 018c 8DE7     		b	.L992
 10559              	.LVL1584:
 10560              	.L1042:
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 10561              		.loc 1 5370 0
 10562 018e 4FF0030B 		mov	fp, #3
 10563 0192 0194     		str	r4, [sp, #4]
 10564 0194 CDF808A0 		str	r10, [sp, #8]
 10565 0198 0397     		str	r7, [sp, #12]
 10566 019a A7E7     		b	.L995
 10567              	.L1043:
 10568 019c 4FF0030B 		mov	fp, #3
 10569 01a0 0194     		str	r4, [sp, #4]
 10570 01a2 CDF808A0 		str	r10, [sp, #8]
 10571 01a6 0397     		str	r7, [sp, #12]
 10572 01a8 A0E7     		b	.L995
 10573              	.LVL1585:
 10574              	.L1050:
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 10575              		.loc 1 5593 0
 10576 01aa 1546     		mov	r5, r2
 10577              	.LVL1586:
 10578 01ac 9EE7     		b	.L995
 10579              	.LVL1587:
 10580              	.L1051:
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 10581              		.loc 1 5596 0
 10582 01ae 4FF0030B 		mov	fp, #3
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 317


 10583              	.LVL1588:
 10584              	.L1013:
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
 10585              		.loc 1 5545 0
 10586 01b2 95B1     		cbz	r5, .L1072
 10587 01b4 A846     		mov	r8, r5
 10588              	.L997:
 10589              	.LVL1589:
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 10590              		.loc 1 5549 0
 10591 01b6 B3FBF8F1 		udiv	r1, r3, r8
 10592              	.LVL1590:
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
 10593              		.loc 1 5550 0
 10594 01ba 8A1C     		adds	r2, r1, #2
 10595 01bc 9200     		lsls	r2, r2, #2
 10596 01be 02F2FF12 		addw	r2, r2, #511
 10597 01c2 520A     		lsrs	r2, r2, #9
 10598              	.LVL1591:
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 10599              		.loc 1 5553 0
 10600 01c4 2A4C     		ldr	r4, .L1077+8
 10601 01c6 0C44     		add	r4, r4, r1
 10602 01c8 2A49     		ldr	r1, .L1077+12
 10603              	.LVL1592:
 10604 01ca 8C42     		cmp	r4, r1
 10605 01cc 00F22082 		bhi	.L1046
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 10606              		.loc 1 5552 0
 10607 01d0 4FF0000E 		mov	lr, #0
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
 10608              		.loc 1 5551 0
 10609 01d4 4FF0200C 		mov	ip, #32
 10610 01d8 9FE7     		b	.L1000
 10611              	.LVL1593:
 10612              	.L1072:
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 10613              		.loc 1 5546 0
 10614 01da 5C0C     		lsrs	r4, r3, #17
 10615              	.LVL1594:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10616              		.loc 1 5547 0
 10617 01dc 0021     		movs	r1, #0
 10618 01de 4FF00108 		mov	r8, #1
 10619 01e2 02E0     		b	.L998
 10620              	.LVL1595:
 10621              	.L999:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10622              		.loc 1 5547 0 is_stmt 0 discriminator 4
 10623 01e4 0131     		adds	r1, r1, #1
 10624              	.LVL1596:
 10625 01e6 4FEA4808 		lsl	r8, r8, #1
 10626              	.LVL1597:
 10627              	.L998:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10628              		.loc 1 5547 0 discriminator 1
 10629 01ea 234A     		ldr	r2, .L1077+16
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 318


 10630 01ec 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 10631 01f0 002A     		cmp	r2, #0
 10632 01f2 E0D0     		beq	.L997
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10633              		.loc 1 5547 0 discriminator 3
 10634 01f4 A242     		cmp	r2, r4
 10635 01f6 F5D9     		bls	.L999
 10636 01f8 DDE7     		b	.L997
 10637              	.LVL1598:
 10638              	.L1069:
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 10639              		.loc 1 5556 0 is_stmt 1
 10640 01fa 1C0B     		lsrs	r4, r3, #12
 10641              	.LVL1599:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10642              		.loc 1 5557 0
 10643 01fc 0021     		movs	r1, #0
 10644 01fe 4FF00108 		mov	r8, #1
 10645 0202 02E0     		b	.L1002
 10646              	.LVL1600:
 10647              	.L1003:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10648              		.loc 1 5557 0 is_stmt 0 discriminator 4
 10649 0204 0131     		adds	r1, r1, #1
 10650              	.LVL1601:
 10651 0206 4FEA4808 		lsl	r8, r8, #1
 10652              	.LVL1602:
 10653              	.L1002:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10654              		.loc 1 5557 0 discriminator 1
 10655 020a 1C4A     		ldr	r2, .L1077+20
 10656 020c 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 10657 0210 002A     		cmp	r2, #0
 10658 0212 3FF472AF 		beq	.L1001
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10659              		.loc 1 5557 0 discriminator 3
 10660 0216 A242     		cmp	r2, r4
 10661 0218 F4D9     		bls	.L1003
 10662 021a 6EE7     		b	.L1001
 10663              	.LVL1603:
 10664              	.L1004:
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10665              		.loc 1 5564 0 is_stmt 1
 10666 021c 02EB4202 		add	r2, r2, r2, lsl #1
 10667              	.LVL1604:
 10668 0220 0132     		adds	r2, r2, #1
 10669 0222 5208     		lsrs	r2, r2, #1
 10670 0224 0332     		adds	r2, r2, #3
 10671              	.LVL1605:
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
 10672              		.loc 1 5563 0
 10673 0226 4FF0010B 		mov	fp, #1
 10674 022a 6FE7     		b	.L1005
 10675              	.LVL1606:
 10676              	.L1070:
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 10677              		.loc 1 5576 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 319


 10678 022c A444     		add	ip, ip, r4
 10679              	.LVL1607:
 10680 022e A244     		add	r10, r10, r4
 10681              	.LVL1608:
 10682 0230 82E7     		b	.L1007
 10683              	.LVL1609:
 10684              	.L1071:
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
 10685              		.loc 1 5585 0
 10686 0232 4FF6F574 		movw	r4, #65525
 10687              	.LVL1610:
 10688 0236 A142     		cmp	r1, r4
 10689 0238 8FD8     		bhi	.L1008
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 10690              		.loc 1 5586 0
 10691 023a 002D     		cmp	r5, #0
 10692 023c 40F0EC81 		bne	.L1049
 10693              	.LVL1611:
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 10694              		.loc 1 5586 0 is_stmt 0 discriminator 1
 10695 0240 5FEA5805 		lsrs	r5, r8, #1
 10696              	.LVL1612:
 10697 0244 7FF452AF 		bne	.L995
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10698              		.loc 1 5587 0 is_stmt 1
 10699 0248 0E20     		movs	r0, #14
 10700 024a CCE1     		b	.L987
 10701              	.L1011:
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
 10702              		.loc 1 5601 0
 10703 024c 40F6F574 		movw	r4, #4085
 10704 0250 A142     		cmp	r1, r4
 10705 0252 15D8     		bhi	.L1010
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 10706              		.loc 1 5602 0
 10707 0254 002D     		cmp	r5, #0
 10708 0256 40F0E381 		bne	.L1053
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 10709              		.loc 1 5602 0 is_stmt 0 discriminator 1
 10710 025a 4FEA4805 		lsl	r5, r8, #1
 10711              	.LVL1613:
 10712 025e 802D     		cmp	r5, #128
 10713 0260 7FF644AF 		bls	.L995
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10714              		.loc 1 5603 0 is_stmt 1
 10715 0264 0E20     		movs	r0, #14
 10716 0266 BEE1     		b	.L987
 10717              	.L1078:
 10718              		.align	2
 10719              	.L1077:
 10720 0268 00000000 		.word	.LANCHOR4
 10721 026c 00FEFFFF 		.word	-512
 10722 0270 0A00FFFF 		.word	-65526
 10723 0274 FFFFFE0F 		.word	268369919
 10724 0278 00000000 		.word	.LANCHOR6
 10725 027c 00000000 		.word	.LANCHOR7
 10726              	.L1010:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 320


 10727 0280 CDF818E0 		str	lr, [sp, #24]
 10728 0284 6546     		mov	r5, ip
 10729              	.LVL1614:
 10730 0286 0592     		str	r2, [sp, #20]
 10731 0288 CDF810A0 		str	r10, [sp, #16]
 10732 028c 019C     		ldr	r4, [sp, #4]
 10733 028e DDF808A0 		ldr	r10, [sp, #8]
 10734              	.LVL1615:
 10735 0292 039F     		ldr	r7, [sp, #12]
 10736 0294 0B46     		mov	r3, r1
 10737 0296 0291     		str	r1, [sp, #8]
 10738              	.LVL1616:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10739              		.loc 1 5606 0
 10740 0298 40F6F572 		movw	r2, #4085
 10741              	.LVL1617:
 10742 029c BBF1010F 		cmp	fp, #1
 10743 02a0 14BF     		ite	ne
 10744 02a2 0023     		movne	r3, #0
 10745 02a4 0123     		moveq	r3, #1
 10746 02a6 9142     		cmp	r1, r2
 10747 02a8 98BF     		it	ls
 10748 02aa 0023     		movls	r3, #0
 10749 02ac 002B     		cmp	r3, #0
 10750 02ae 40F0B981 		bne	.L1054
 10751              	.LVL1618:
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
 10752              		.loc 1 5617 0
 10753 02b2 4FF40072 		mov	r2, #512
 10754 02b6 0021     		movs	r1, #0
 10755              	.LVL1619:
 10756 02b8 3046     		mov	r0, r6
 10757 02ba FFF7FEFF 		bl	mem_set
 10758              	.LVL1620:
5618:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
 10759              		.loc 1 5618 0
 10760 02be 0B22     		movs	r2, #11
 10761 02c0 DA49     		ldr	r1, .L1079
 10762 02c2 3046     		mov	r0, r6
 10763 02c4 FFF7FEFF 		bl	mem_cpy
 10764              	.LVL1621:
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
 10765              		.loc 1 5619 0
 10766 02c8 4FF40071 		mov	r1, #512
 10767 02cc 06F10B00 		add	r0, r6, #11
 10768 02d0 FFF7FEFF 		bl	st_word
 10769              	.LVL1622:
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
 10770              		.loc 1 5620 0
 10771 02d4 86F80D80 		strb	r8, [r6, #13]
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
 10772              		.loc 1 5621 0
 10773 02d8 A9B2     		uxth	r1, r5
 10774 02da 06F10E00 		add	r0, r6, #14
 10775 02de FFF7FEFF 		bl	st_word
 10776              	.LVL1623:
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 321


 10777              		.loc 1 5622 0
 10778 02e2 0123     		movs	r3, #1
 10779 02e4 3374     		strb	r3, [r6, #16]
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 10780              		.loc 1 5623 0
 10781 02e6 06F11100 		add	r0, r6, #17
 10782 02ea BBF1030F 		cmp	fp, #3
 10783 02ee 00F0D880 		beq	.L1055
 10784 02f2 4FF40071 		mov	r1, #512
 10785              	.L1014:
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 10786              		.loc 1 5623 0 is_stmt 0 discriminator 4
 10787 02f6 FFF7FEFF 		bl	st_word
 10788              	.LVL1624:
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
 10789              		.loc 1 5624 0 is_stmt 1 discriminator 4
 10790 02fa 0899     		ldr	r1, [sp, #32]
 10791 02fc B1F5803F 		cmp	r1, #65536
 10792 0300 80F0D180 		bcs	.L1015
5625:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 10793              		.loc 1 5625 0
 10794 0304 89B2     		uxth	r1, r1
 10795 0306 06F11300 		add	r0, r6, #19
 10796 030a FFF7FEFF 		bl	st_word
 10797              	.LVL1625:
 10798              	.L1016:
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
 10799              		.loc 1 5629 0
 10800 030e F823     		movs	r3, #248
 10801 0310 7375     		strb	r3, [r6, #21]
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
 10802              		.loc 1 5630 0
 10803 0312 3F21     		movs	r1, #63
 10804 0314 06F11800 		add	r0, r6, #24
 10805 0318 FFF7FEFF 		bl	st_word
 10806              	.LVL1626:
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
 10807              		.loc 1 5631 0
 10808 031c FF21     		movs	r1, #255
 10809 031e 06F11A00 		add	r0, r6, #26
 10810 0322 FFF7FEFF 		bl	st_word
 10811              	.LVL1627:
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 10812              		.loc 1 5632 0
 10813 0326 4946     		mov	r1, r9
 10814 0328 06F11C00 		add	r0, r6, #28
 10815 032c FFF7FEFF 		bl	st_dword
 10816              	.LVL1628:
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 10817              		.loc 1 5633 0
 10818 0330 BBF1030F 		cmp	fp, #3
 10819 0334 40F0BC80 		bne	.L1017
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
 10820              		.loc 1 5634 0
 10821 0338 FFF7FEFF 		bl	get_fattime
 10822              	.LVL1629:
 10823 033c 0146     		mov	r1, r0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 322


 10824 033e 06F14300 		add	r0, r6, #67
 10825 0342 FFF7FEFF 		bl	st_dword
 10826              	.LVL1630:
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
 10827              		.loc 1 5635 0
 10828 0346 0599     		ldr	r1, [sp, #20]
 10829 0348 06F12400 		add	r0, r6, #36
 10830 034c FFF7FEFF 		bl	st_dword
 10831              	.LVL1631:
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
 10832              		.loc 1 5636 0
 10833 0350 0221     		movs	r1, #2
 10834 0352 06F12C00 		add	r0, r6, #44
 10835 0356 FFF7FEFF 		bl	st_dword
 10836              	.LVL1632:
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
 10837              		.loc 1 5637 0
 10838 035a 0121     		movs	r1, #1
 10839 035c 06F13000 		add	r0, r6, #48
 10840 0360 FFF7FEFF 		bl	st_word
 10841              	.LVL1633:
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
 10842              		.loc 1 5638 0
 10843 0364 0621     		movs	r1, #6
 10844 0366 06F13200 		add	r0, r6, #50
 10845 036a FFF7FEFF 		bl	st_word
 10846              	.LVL1634:
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 10847              		.loc 1 5639 0
 10848 036e 8023     		movs	r3, #128
 10849 0370 86F84030 		strb	r3, [r6, #64]
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 10850              		.loc 1 5640 0
 10851 0374 2923     		movs	r3, #41
 10852 0376 86F84230 		strb	r3, [r6, #66]
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 10853              		.loc 1 5641 0
 10854 037a 1322     		movs	r2, #19
 10855 037c AC49     		ldr	r1, .L1079+4
 10856 037e 06F14700 		add	r0, r6, #71
 10857 0382 FFF7FEFF 		bl	mem_cpy
 10858              	.LVL1635:
 10859              	.L1018:
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
 10860              		.loc 1 5649 0
 10861 0386 06F5FF73 		add	r3, r6, #510
 10862 038a 0193     		str	r3, [sp, #4]
 10863              	.LVL1636:
 10864 038c 4AF65521 		movw	r1, #43605
 10865 0390 1846     		mov	r0, r3
 10866 0392 FFF7FEFF 		bl	st_word
 10867              	.LVL1637:
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10868              		.loc 1 5650 0
 10869 0396 0123     		movs	r3, #1
 10870 0398 4A46     		mov	r2, r9
 10871 039a 3146     		mov	r1, r6
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 323


 10872 039c 2046     		mov	r0, r4
 10873 039e FFF7FEFF 		bl	disk_write
 10874              	.LVL1638:
 10875 03a2 0028     		cmp	r0, #0
 10876 03a4 40F04081 		bne	.L1056
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
 10877              		.loc 1 5653 0
 10878 03a8 BBF1030F 		cmp	fp, #3
 10879 03ac 00F09A80 		beq	.L1073
 10880              	.L1019:
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
 10881              		.loc 1 5666 0
 10882 03b0 3A46     		mov	r2, r7
 10883 03b2 0021     		movs	r1, #0
 10884 03b4 3046     		mov	r0, r6
 10885 03b6 FFF7FEFF 		bl	mem_set
 10886              	.LVL1639:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 10887              		.loc 1 5668 0
 10888 03ba 0025     		movs	r5, #0
 10889              	.LVL1640:
 10890 03bc CDF80880 		str	r8, [sp, #8]
 10891              	.LVL1641:
 10892              	.L1020:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 10893              		.loc 1 5668 0 is_stmt 0 discriminator 1
 10894 03c0 002D     		cmp	r5, #0
 10895 03c2 00F0C480 		beq	.L1025
 10896 03c6 DDF80880 		ldr	r8, [sp, #8]
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 10897              		.loc 1 5686 0 is_stmt 1
 10898 03ca BBF1030F 		cmp	fp, #3
 10899 03ce 00F0F880 		beq	.L1074
 10900 03d2 069F     		ldr	r7, [sp, #24]
 10901 03d4 DDF81080 		ldr	r8, [sp, #16]
 10902              	.LVL1642:
 10903              	.L1027:
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 10904              		.loc 1 5688 0
 10905 03d8 3D46     		mov	r5, r7
 10906 03da 5745     		cmp	r7, r10
 10907 03dc 28BF     		it	cs
 10908 03de 5546     		movcs	r5, r10
 10909              	.LVL1643:
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 10910              		.loc 1 5689 0
 10911 03e0 2B46     		mov	r3, r5
 10912 03e2 4246     		mov	r2, r8
 10913 03e4 3146     		mov	r1, r6
 10914 03e6 2046     		mov	r0, r4
 10915 03e8 FFF7FEFF 		bl	disk_write
 10916              	.LVL1644:
 10917 03ec 0028     		cmp	r0, #0
 10918 03ee 40F02B81 		bne	.L1059
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
 10919              		.loc 1 5690 0
 10920 03f2 A844     		add	r8, r8, r5
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 324


 10921              	.LVL1645:
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 10922              		.loc 1 5691 0
 10923 03f4 7F1B     		subs	r7, r7, r5
 10924              	.LVL1646:
 10925 03f6 EFD1     		bne	.L1027
5698:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
 10926              		.loc 1 5698 0
 10927 03f8 BBF1030F 		cmp	fp, #3
 10928 03fc 00F0E580 		beq	.L1060
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
 10929              		.loc 1 5701 0
 10930 0400 089B     		ldr	r3, [sp, #32]
 10931 0402 B3F5803F 		cmp	r3, #65536
 10932 0406 80F0E380 		bcs	.L1061
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 10933              		.loc 1 5704 0
 10934 040a BBF1020F 		cmp	fp, #2
 10935 040e 40F0E280 		bne	.L1062
 10936 0412 4FF00408 		mov	r8, #4
 10937              	.LVL1647:
 10938              	.L1028:
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 10939              		.loc 1 5716 0
 10940 0416 009B     		ldr	r3, [sp]
 10941 0418 CBBB     		cbnz	r3, .L1029
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
 10942              		.loc 1 5717 0
 10943 041a 4FF40072 		mov	r2, #512
 10944 041e 0021     		movs	r1, #0
 10945 0420 3046     		mov	r0, r6
 10946 0422 FFF7FEFF 		bl	mem_set
 10947              	.LVL1648:
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
 10948              		.loc 1 5718 0
 10949 0426 4AF65521 		movw	r1, #43605
 10950 042a 0198     		ldr	r0, [sp, #4]
 10951 042c FFF7FEFF 		bl	st_word
 10952              	.LVL1649:
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
 10953              		.loc 1 5720 0
 10954 0430 0025     		movs	r5, #0
 10955              	.LVL1650:
 10956 0432 86F8BE51 		strb	r5, [r6, #446]
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
 10957              		.loc 1 5721 0
 10958 0436 0127     		movs	r7, #1
 10959              	.LVL1651:
 10960 0438 86F8BF71 		strb	r7, [r6, #447]
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
 10961              		.loc 1 5722 0
 10962 043c 86F8C071 		strb	r7, [r6, #448]
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
 10963              		.loc 1 5723 0
 10964 0440 86F8C151 		strb	r5, [r6, #449]
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
 10965              		.loc 1 5724 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 325


 10966 0444 86F8C281 		strb	r8, [r6, #450]
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 10967              		.loc 1 5725 0
 10968 0448 089B     		ldr	r3, [sp, #32]
 10969 044a 4B44     		add	r3, r3, r9
 10970 044c 43F6C162 		movw	r2, #16065
 10971 0450 B3FBF2F3 		udiv	r3, r3, r2
 10972              	.LVL1652:
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 10973              		.loc 1 5726 0
 10974 0454 FE22     		movs	r2, #254
 10975 0456 86F8C321 		strb	r2, [r6, #451]
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 10976              		.loc 1 5727 0
 10977 045a 9A08     		lsrs	r2, r3, #2
 10978 045c 42F03F02 		orr	r2, r2, #63
 10979 0460 86F8C421 		strb	r2, [r6, #452]
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
 10980              		.loc 1 5728 0
 10981 0464 86F8C531 		strb	r3, [r6, #453]
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
 10982              		.loc 1 5729 0
 10983 0468 4946     		mov	r1, r9
 10984 046a 06F5E370 		add	r0, r6, #454
 10985 046e FFF7FEFF 		bl	st_dword
 10986              	.LVL1653:
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
 10987              		.loc 1 5730 0
 10988 0472 0899     		ldr	r1, [sp, #32]
 10989 0474 06F5E570 		add	r0, r6, #458
 10990 0478 FFF7FEFF 		bl	st_dword
 10991              	.LVL1654:
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 10992              		.loc 1 5731 0
 10993 047c 3B46     		mov	r3, r7
 10994 047e 2A46     		mov	r2, r5
 10995 0480 3146     		mov	r1, r6
 10996 0482 2046     		mov	r0, r4
 10997 0484 FFF7FEFF 		bl	disk_write
 10998              	.LVL1655:
 10999 0488 0028     		cmp	r0, #0
 11000 048a 40F0DF80 		bne	.L1063
 11001              	.LVL1656:
 11002              	.L1029:
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11003              		.loc 1 5735 0
 11004 048e 0022     		movs	r2, #0
 11005 0490 1146     		mov	r1, r2
 11006 0492 2046     		mov	r0, r4
 11007 0494 FFF7FEFF 		bl	disk_ioctl
 11008              	.LVL1657:
 11009 0498 0028     		cmp	r0, #0
 11010 049a 00F0D980 		beq	.L1064
 11011 049e 0120     		movs	r0, #1
 11012 04a0 A1E0     		b	.L987
 11013              	.LVL1658:
 11014              	.L1055:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 326


5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 11015              		.loc 1 5623 0
 11016 04a2 0021     		movs	r1, #0
 11017 04a4 27E7     		b	.L1014
 11018              	.L1015:
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 11019              		.loc 1 5627 0
 11020 04a6 06F12000 		add	r0, r6, #32
 11021 04aa FFF7FEFF 		bl	st_dword
 11022              	.LVL1659:
 11023 04ae 2EE7     		b	.L1016
 11024              	.L1017:
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
 11025              		.loc 1 5643 0
 11026 04b0 FFF7FEFF 		bl	get_fattime
 11027              	.LVL1660:
 11028 04b4 0146     		mov	r1, r0
 11029 04b6 06F12700 		add	r0, r6, #39
 11030 04ba FFF7FEFF 		bl	st_dword
 11031              	.LVL1661:
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
 11032              		.loc 1 5644 0
 11033 04be BDF81410 		ldrh	r1, [sp, #20]
 11034 04c2 06F11600 		add	r0, r6, #22
 11035 04c6 FFF7FEFF 		bl	st_word
 11036              	.LVL1662:
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 11037              		.loc 1 5645 0
 11038 04ca 8023     		movs	r3, #128
 11039 04cc 86F82430 		strb	r3, [r6, #36]
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 11040              		.loc 1 5646 0
 11041 04d0 2923     		movs	r3, #41
 11042 04d2 86F82630 		strb	r3, [r6, #38]
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 11043              		.loc 1 5647 0
 11044 04d6 1322     		movs	r2, #19
 11045 04d8 5649     		ldr	r1, .L1079+8
 11046 04da 06F12B00 		add	r0, r6, #43
 11047 04de FFF7FEFF 		bl	mem_cpy
 11048              	.LVL1663:
 11049 04e2 50E7     		b	.L1018
 11050              	.LVL1664:
 11051              	.L1073:
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 11052              		.loc 1 5654 0
 11053 04e4 0123     		movs	r3, #1
 11054 04e6 09F10602 		add	r2, r9, #6
 11055 04ea 3146     		mov	r1, r6
 11056 04ec 2046     		mov	r0, r4
 11057 04ee FFF7FEFF 		bl	disk_write
 11058              	.LVL1665:
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
 11059              		.loc 1 5655 0
 11060 04f2 4FF40072 		mov	r2, #512
 11061 04f6 0021     		movs	r1, #0
 11062 04f8 3046     		mov	r0, r6
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 327


 11063 04fa FFF7FEFF 		bl	mem_set
 11064              	.LVL1666:
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
 11065              		.loc 1 5656 0
 11066 04fe 4E49     		ldr	r1, .L1079+12
 11067 0500 3046     		mov	r0, r6
 11068 0502 FFF7FEFF 		bl	st_dword
 11069              	.LVL1667:
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 11070              		.loc 1 5657 0
 11071 0506 4D49     		ldr	r1, .L1079+16
 11072 0508 06F5F270 		add	r0, r6, #484
 11073 050c FFF7FEFF 		bl	st_dword
 11074              	.LVL1668:
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 11075              		.loc 1 5658 0
 11076 0510 029B     		ldr	r3, [sp, #8]
 11077 0512 591E     		subs	r1, r3, #1
 11078 0514 06F5F470 		add	r0, r6, #488
 11079 0518 FFF7FEFF 		bl	st_dword
 11080              	.LVL1669:
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
 11081              		.loc 1 5659 0
 11082 051c 0221     		movs	r1, #2
 11083 051e 06F5F670 		add	r0, r6, #492
 11084 0522 FFF7FEFF 		bl	st_dword
 11085              	.LVL1670:
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
 11086              		.loc 1 5660 0
 11087 0526 4AF65521 		movw	r1, #43605
 11088 052a 0198     		ldr	r0, [sp, #4]
 11089 052c FFF7FEFF 		bl	st_word
 11090              	.LVL1671:
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 11091              		.loc 1 5661 0
 11092 0530 0123     		movs	r3, #1
 11093 0532 09F10702 		add	r2, r9, #7
 11094 0536 3146     		mov	r1, r6
 11095 0538 2046     		mov	r0, r4
 11096 053a FFF7FEFF 		bl	disk_write
 11097              	.LVL1672:
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 11098              		.loc 1 5662 0
 11099 053e 0123     		movs	r3, #1
 11100 0540 09EB0302 		add	r2, r9, r3
 11101 0544 3146     		mov	r1, r6
 11102 0546 2046     		mov	r0, r4
 11103 0548 FFF7FEFF 		bl	disk_write
 11104              	.LVL1673:
 11105 054c 30E7     		b	.L1019
 11106              	.LVL1674:
 11107              	.L1025:
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
 11108              		.loc 1 5669 0
 11109 054e BBF1030F 		cmp	fp, #3
 11110 0552 23D0     		beq	.L1075
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 328


 11111              		.loc 1 5674 0
 11112 0554 BBF1010F 		cmp	fp, #1
 11113 0558 31D0     		beq	.L1076
 11114 055a 6FF00701 		mvn	r1, #7
 11115              	.L1023:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 11116              		.loc 1 5674 0 is_stmt 0 discriminator 4
 11117 055e 3046     		mov	r0, r6
 11118 0560 FFF7FEFF 		bl	st_dword
 11119              	.LVL1675:
 11120              	.L1022:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 11121              		.loc 1 5674 0
 11122 0564 DDF81480 		ldr	r8, [sp, #20]
 11123              	.L1024:
 11124              	.LVL1676:
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 11125              		.loc 1 5678 0 is_stmt 1
 11126 0568 4746     		mov	r7, r8
 11127 056a D045     		cmp	r8, r10
 11128 056c 28BF     		it	cs
 11129 056e 5746     		movcs	r7, r10
 11130              	.LVL1677:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 11131              		.loc 1 5679 0
 11132 0570 3B46     		mov	r3, r7
 11133 0572 049A     		ldr	r2, [sp, #16]
 11134 0574 3146     		mov	r1, r6
 11135 0576 2046     		mov	r0, r4
 11136 0578 FFF7FEFF 		bl	disk_write
 11137              	.LVL1678:
 11138 057c 0028     		cmp	r0, #0
 11139 057e 61D1     		bne	.L1058
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
 11140              		.loc 1 5680 0
 11141 0580 4FF40072 		mov	r2, #512
 11142 0584 0021     		movs	r1, #0
 11143 0586 3046     		mov	r0, r6
 11144 0588 FFF7FEFF 		bl	mem_set
 11145              	.LVL1679:
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
 11146              		.loc 1 5681 0
 11147 058c 049B     		ldr	r3, [sp, #16]
 11148 058e 3B44     		add	r3, r3, r7
 11149 0590 0493     		str	r3, [sp, #16]
 11150              	.LVL1680:
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 11151              		.loc 1 5682 0
 11152 0592 B8EB0708 		subs	r8, r8, r7
 11153              	.LVL1681:
 11154 0596 E7D1     		bne	.L1024
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 11155              		.loc 1 5668 0 discriminator 2
 11156 0598 0135     		adds	r5, r5, #1
 11157              	.LVL1682:
 11158 059a 11E7     		b	.L1020
 11159              	.LVL1683:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 329


 11160              	.L1075:
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
 11161              		.loc 1 5670 0
 11162 059c 6FF00701 		mvn	r1, #7
 11163 05a0 3046     		mov	r0, r6
 11164 05a2 FFF7FEFF 		bl	st_dword
 11165              	.LVL1684:
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
 11166              		.loc 1 5671 0
 11167 05a6 4FF0FF31 		mov	r1, #-1
 11168 05aa 301D     		adds	r0, r6, #4
 11169 05ac FFF7FEFF 		bl	st_dword
 11170              	.LVL1685:
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 11171              		.loc 1 5672 0
 11172 05b0 6FF07041 		mvn	r1, #-268435456
 11173 05b4 06F10800 		add	r0, r6, #8
 11174 05b8 FFF7FEFF 		bl	st_dword
 11175              	.LVL1686:
 11176 05bc D2E7     		b	.L1022
 11177              	.L1076:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 11178              		.loc 1 5674 0
 11179 05be 2049     		ldr	r1, .L1079+20
 11180 05c0 CDE7     		b	.L1023
 11181              	.L1074:
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 11182              		.loc 1 5686 0
 11183 05c2 4746     		mov	r7, r8
 11184 05c4 DDF81080 		ldr	r8, [sp, #16]
 11185 05c8 06E7     		b	.L1027
 11186              	.LVL1687:
 11187              	.L1060:
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 11188              		.loc 1 5699 0
 11189 05ca 4FF00C08 		mov	r8, #12
 11190              	.LVL1688:
 11191 05ce 22E7     		b	.L1028
 11192              	.LVL1689:
 11193              	.L1061:
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 11194              		.loc 1 5702 0
 11195 05d0 4FF00608 		mov	r8, #6
 11196              	.LVL1690:
 11197 05d4 1FE7     		b	.L1028
 11198              	.LVL1691:
 11199              	.L1062:
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 11200              		.loc 1 5704 0
 11201 05d6 4FF00108 		mov	r8, #1
 11202              	.LVL1692:
 11203 05da 1CE7     		b	.L1028
 11204              	.LVL1693:
 11205              	.L1030:
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 11206              		.loc 1 5317 0
 11207 05dc 0B20     		movs	r0, #11
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 330


 11208              	.LVL1694:
 11209 05de 02E0     		b	.L987
 11210              	.LVL1695:
 11211              	.L1031:
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 11212              		.loc 1 5324 0
 11213 05e0 0320     		movs	r0, #3
 11214              	.LVL1696:
 11215 05e2 00E0     		b	.L987
 11216              	.LVL1697:
 11217              	.L1032:
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 11218              		.loc 1 5325 0
 11219 05e4 0A20     		movs	r0, #10
 11220              	.LVL1698:
 11221              	.L987:
5738:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11222              		.loc 1 5738 0
 11223 05e6 0BB0     		add	sp, sp, #44
 11224              	.LCFI144:
 11225              		.cfi_remember_state
 11226              		.cfi_def_cfa_offset 36
 11227              		@ sp needed
 11228 05e8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11229              	.LVL1699:
 11230              	.L1033:
 11231              	.LCFI145:
 11232              		.cfi_restore_state
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 11233              		.loc 1 5333 0
 11234 05ec 1320     		movs	r0, #19
 11235 05ee FAE7     		b	.L987
 11236              	.L1034:
 11237 05f0 1320     		movs	r0, #19
 11238 05f2 F8E7     		b	.L987
 11239              	.L1035:
 11240 05f4 1320     		movs	r0, #19
 11241 05f6 F6E7     		b	.L987
 11242              	.LVL1700:
 11243              	.L1036:
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11244              		.loc 1 5340 0
 11245 05f8 0E20     		movs	r0, #14
 11246 05fa F4E7     		b	.L987
 11247              	.L1037:
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 11248              		.loc 1 5353 0
 11249 05fc 0120     		movs	r0, #1
 11250 05fe F2E7     		b	.L987
 11251              	.LVL1701:
 11252              	.L1039:
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 11253              		.loc 1 5355 0
 11254 0600 0E20     		movs	r0, #14
 11255 0602 F0E7     		b	.L987
 11256              	.L1040:
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 331


 11257              		.loc 1 5358 0
 11258 0604 0E20     		movs	r0, #14
 11259 0606 EEE7     		b	.L987
 11260              	.L1041:
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 11261              		.loc 1 5367 0
 11262 0608 1320     		movs	r0, #19
 11263 060a ECE7     		b	.L987
 11264              	.L1044:
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 11265              		.loc 1 5373 0
 11266 060c 1320     		movs	r0, #19
 11267 060e EAE7     		b	.L987
 11268              	.LVL1702:
 11269              	.L1046:
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 11270              		.loc 1 5553 0
 11271 0610 0E20     		movs	r0, #14
 11272 0612 E8E7     		b	.L987
 11273              	.LVL1703:
 11274              	.L1048:
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 11275              		.loc 1 5582 0
 11276 0614 0E20     		movs	r0, #14
 11277 0616 E6E7     		b	.L987
 11278              	.LVL1704:
 11279              	.L1049:
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 11280              		.loc 1 5587 0
 11281 0618 0E20     		movs	r0, #14
 11282 061a E4E7     		b	.L987
 11283              	.LVL1705:
 11284              	.L1052:
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 11285              		.loc 1 5599 0
 11286 061c 0E20     		movs	r0, #14
 11287 061e E2E7     		b	.L987
 11288              	.LVL1706:
 11289              	.L1053:
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 11290              		.loc 1 5603 0
 11291 0620 0E20     		movs	r0, #14
 11292 0622 E0E7     		b	.L987
 11293              	.LVL1707:
 11294              	.L1054:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11295              		.loc 1 5606 0
 11296 0624 0E20     		movs	r0, #14
 11297 0626 DEE7     		b	.L987
 11298              	.LVL1708:
 11299              	.L1056:
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11300              		.loc 1 5650 0
 11301 0628 0120     		movs	r0, #1
 11302 062a DCE7     		b	.L987
 11303              	.L1080:
 11304              		.align	2
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 332


 11305              	.L1079:
 11306 062c 00000000 		.word	.LC2
 11307 0630 0C000000 		.word	.LC3
 11308 0634 20000000 		.word	.LC4
 11309 0638 52526141 		.word	1096897106
 11310 063c 72724161 		.word	1631679090
 11311 0640 F8FFFF00 		.word	16777208
 11312              	.LVL1709:
 11313              	.L1058:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 11314              		.loc 1 5679 0
 11315 0644 0120     		movs	r0, #1
 11316 0646 CEE7     		b	.L987
 11317              	.LVL1710:
 11318              	.L1059:
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 11319              		.loc 1 5689 0
 11320 0648 0120     		movs	r0, #1
 11321 064a CCE7     		b	.L987
 11322              	.LVL1711:
 11323              	.L1063:
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 11324              		.loc 1 5731 0
 11325 064c 0120     		movs	r0, #1
 11326 064e CAE7     		b	.L987
 11327              	.LVL1712:
 11328              	.L1064:
5737:Middlewares/Third_Party/FatFs/src/ff.c **** }
 11329              		.loc 1 5737 0
 11330 0650 0020     		movs	r0, #0
 11331 0652 C8E7     		b	.L987
 11332              		.cfi_endproc
 11333              	.LFE210:
 11335              		.section	.text.f_gets,"ax",%progbits
 11336              		.align	1
 11337              		.global	f_gets
 11338              		.syntax unified
 11339              		.thumb
 11340              		.thumb_func
 11341              		.fpu fpv5-sp-d16
 11343              	f_gets:
 11344              	.LFB211:
5824:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
 11345              		.loc 1 5824 0
 11346              		.cfi_startproc
 11347              		@ args = 0, pretend = 0, frame = 8
 11348              		@ frame_needed = 0, uses_anonymous_args = 0
 11349              	.LVL1713:
 11350 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 11351              	.LCFI146:
 11352              		.cfi_def_cfa_offset 24
 11353              		.cfi_offset 4, -24
 11354              		.cfi_offset 5, -20
 11355              		.cfi_offset 6, -16
 11356              		.cfi_offset 7, -12
 11357              		.cfi_offset 8, -8
 11358              		.cfi_offset 14, -4
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 333


 11359 0004 82B0     		sub	sp, sp, #8
 11360              	.LCFI147:
 11361              		.cfi_def_cfa_offset 32
 11362 0006 8046     		mov	r8, r0
 11363 0008 0E46     		mov	r6, r1
 11364 000a 1746     		mov	r7, r2
 11365              	.LVL1714:
5826:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
 11366              		.loc 1 5826 0
 11367 000c 0446     		mov	r4, r0
5825:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
 11368              		.loc 1 5825 0
 11369 000e 0025     		movs	r5, #0
5831:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
 11370              		.loc 1 5831 0
 11371 0010 01E0     		b	.L1082
 11372              	.LVL1715:
 11373              	.L1087:
 11374 0012 2246     		mov	r2, r4
 11375              	.LVL1716:
 11376              	.L1084:
 11377 0014 1446     		mov	r4, r2
 11378              	.LVL1717:
 11379              	.L1082:
 11380 0016 731E     		subs	r3, r6, #1
 11381 0018 AB42     		cmp	r3, r5
 11382 001a 12DD     		ble	.L1083
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
 11383              		.loc 1 5876 0
 11384 001c 6B46     		mov	r3, sp
 11385 001e 0122     		movs	r2, #1
 11386 0020 01A9     		add	r1, sp, #4
 11387 0022 3846     		mov	r0, r7
 11388 0024 FFF7FEFF 		bl	f_read
 11389              	.LVL1718:
5877:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
 11390              		.loc 1 5877 0
 11391 0028 009B     		ldr	r3, [sp]
 11392 002a 012B     		cmp	r3, #1
 11393 002c 09D1     		bne	.L1083
5878:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 11394              		.loc 1 5878 0
 11395 002e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 11396              	.LVL1719:
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
 11397              		.loc 1 5880 0
 11398 0032 0D2B     		cmp	r3, #13
 11399 0034 EDD0     		beq	.L1087
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 11400              		.loc 1 5881 0
 11401 0036 621C     		adds	r2, r4, #1
 11402              	.LVL1720:
 11403 0038 2370     		strb	r3, [r4]
5882:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 11404              		.loc 1 5882 0
 11405 003a 0135     		adds	r5, r5, #1
 11406              	.LVL1721:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 334


5883:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 11407              		.loc 1 5883 0
 11408 003c 0A2B     		cmp	r3, #10
 11409 003e E9D1     		bne	.L1084
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 11410              		.loc 1 5881 0
 11411 0040 1446     		mov	r4, r2
 11412              	.LVL1722:
 11413              	.L1083:
5885:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 11414              		.loc 1 5885 0
 11415 0042 0023     		movs	r3, #0
 11416 0044 2370     		strb	r3, [r4]
5886:Middlewares/Third_Party/FatFs/src/ff.c **** }
 11417              		.loc 1 5886 0
 11418 0046 1DB1     		cbz	r5, .L1089
 11419 0048 4046     		mov	r0, r8
 11420              	.L1081:
5887:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11421              		.loc 1 5887 0
 11422 004a 02B0     		add	sp, sp, #8
 11423              	.LCFI148:
 11424              		.cfi_remember_state
 11425              		.cfi_def_cfa_offset 24
 11426              		@ sp needed
 11427 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 11428              	.LVL1723:
 11429              	.L1089:
 11430              	.LCFI149:
 11431              		.cfi_restore_state
5886:Middlewares/Third_Party/FatFs/src/ff.c **** }
 11432              		.loc 1 5886 0
 11433 0050 0020     		movs	r0, #0
 11434 0052 FAE7     		b	.L1081
 11435              		.cfi_endproc
 11436              	.LFE211:
 11438              		.section	.text.f_putc,"ax",%progbits
 11439              		.align	1
 11440              		.global	f_putc
 11441              		.syntax unified
 11442              		.thumb
 11443              		.thumb_func
 11444              		.fpu fpv5-sp-d16
 11446              	f_putc:
 11447              	.LFB215:
5984:Middlewares/Third_Party/FatFs/src/ff.c **** 
5985:Middlewares/Third_Party/FatFs/src/ff.c **** 
5986:Middlewares/Third_Party/FatFs/src/ff.c **** 
5987:Middlewares/Third_Party/FatFs/src/ff.c **** int f_putc (
5988:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c,	/* A character to be output */
5989:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
5990:Middlewares/Third_Party/FatFs/src/ff.c **** )
5991:Middlewares/Third_Party/FatFs/src/ff.c **** {
 11448              		.loc 1 5991 0
 11449              		.cfi_startproc
 11450              		@ args = 0, pretend = 0, frame = 80
 11451              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 335


 11452              	.LVL1724:
 11453 0000 10B5     		push	{r4, lr}
 11454              	.LCFI150:
 11455              		.cfi_def_cfa_offset 8
 11456              		.cfi_offset 4, -8
 11457              		.cfi_offset 14, -4
 11458 0002 94B0     		sub	sp, sp, #80
 11459              	.LCFI151:
 11460              		.cfi_def_cfa_offset 88
 11461 0004 0446     		mov	r4, r0
5992:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
5993:Middlewares/Third_Party/FatFs/src/ff.c **** 
5994:Middlewares/Third_Party/FatFs/src/ff.c **** 
5995:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 11462              		.loc 1 5995 0
 11463 0006 01A8     		add	r0, sp, #4
 11464              	.LVL1725:
 11465 0008 FFF7FEFF 		bl	putc_init
 11466              	.LVL1726:
5996:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_bfd(&pb, c);	/* Put the character */
 11467              		.loc 1 5996 0
 11468 000c 2146     		mov	r1, r4
 11469 000e 01A8     		add	r0, sp, #4
 11470 0010 FFF7FEFF 		bl	putc_bfd
 11471              	.LVL1727:
5997:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 11472              		.loc 1 5997 0
 11473 0014 01A8     		add	r0, sp, #4
 11474 0016 FFF7FEFF 		bl	putc_flush
 11475              	.LVL1728:
5998:Middlewares/Third_Party/FatFs/src/ff.c **** }
 11476              		.loc 1 5998 0
 11477 001a 14B0     		add	sp, sp, #80
 11478              	.LCFI152:
 11479              		.cfi_def_cfa_offset 8
 11480              		@ sp needed
 11481 001c 10BD     		pop	{r4, pc}
 11482              		.cfi_endproc
 11483              	.LFE215:
 11485              		.section	.text.f_puts,"ax",%progbits
 11486              		.align	1
 11487              		.global	f_puts
 11488              		.syntax unified
 11489              		.thumb
 11490              		.thumb_func
 11491              		.fpu fpv5-sp-d16
 11493              	f_puts:
 11494              	.LFB216:
5999:Middlewares/Third_Party/FatFs/src/ff.c **** 
6000:Middlewares/Third_Party/FatFs/src/ff.c **** 
6001:Middlewares/Third_Party/FatFs/src/ff.c **** 
6002:Middlewares/Third_Party/FatFs/src/ff.c **** 
6003:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6004:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a string to the file                                              */
6005:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6006:Middlewares/Third_Party/FatFs/src/ff.c **** 
6007:Middlewares/Third_Party/FatFs/src/ff.c **** int f_puts (
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 336


6008:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
6009:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp				/* Pointer to the file object */
6010:Middlewares/Third_Party/FatFs/src/ff.c **** )
6011:Middlewares/Third_Party/FatFs/src/ff.c **** {
 11495              		.loc 1 6011 0
 11496              		.cfi_startproc
 11497              		@ args = 0, pretend = 0, frame = 80
 11498              		@ frame_needed = 0, uses_anonymous_args = 0
 11499              	.LVL1729:
 11500 0000 10B5     		push	{r4, lr}
 11501              	.LCFI153:
 11502              		.cfi_def_cfa_offset 8
 11503              		.cfi_offset 4, -8
 11504              		.cfi_offset 14, -4
 11505 0002 94B0     		sub	sp, sp, #80
 11506              	.LCFI154:
 11507              		.cfi_def_cfa_offset 88
 11508 0004 0446     		mov	r4, r0
6012:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6013:Middlewares/Third_Party/FatFs/src/ff.c **** 
6014:Middlewares/Third_Party/FatFs/src/ff.c **** 
6015:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 11509              		.loc 1 6015 0
 11510 0006 01A8     		add	r0, sp, #4
 11511              	.LVL1730:
 11512 0008 FFF7FEFF 		bl	putc_init
 11513              	.LVL1731:
6016:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str) putc_bfd(&pb, *str++);		/* Put the string */
 11514              		.loc 1 6016 0
 11515 000c 03E0     		b	.L1094
 11516              	.L1095:
 11517              		.loc 1 6016 0 is_stmt 0 discriminator 2
 11518 000e 0134     		adds	r4, r4, #1
 11519              	.LVL1732:
 11520 0010 01A8     		add	r0, sp, #4
 11521 0012 FFF7FEFF 		bl	putc_bfd
 11522              	.LVL1733:
 11523              	.L1094:
 11524              		.loc 1 6016 0 discriminator 1
 11525 0016 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 11526 0018 0029     		cmp	r1, #0
 11527 001a F8D1     		bne	.L1095
6017:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 11528              		.loc 1 6017 0 is_stmt 1
 11529 001c 01A8     		add	r0, sp, #4
 11530 001e FFF7FEFF 		bl	putc_flush
 11531              	.LVL1734:
6018:Middlewares/Third_Party/FatFs/src/ff.c **** }
 11532              		.loc 1 6018 0
 11533 0022 14B0     		add	sp, sp, #80
 11534              	.LCFI155:
 11535              		.cfi_def_cfa_offset 8
 11536              		@ sp needed
 11537 0024 10BD     		pop	{r4, pc}
 11538              		.cfi_endproc
 11539              	.LFE216:
 11541              		.section	.text.f_printf,"ax",%progbits
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 337


 11542              		.align	1
 11543              		.global	f_printf
 11544              		.syntax unified
 11545              		.thumb
 11546              		.thumb_func
 11547              		.fpu fpv5-sp-d16
 11549              	f_printf:
 11550              	.LFB217:
6019:Middlewares/Third_Party/FatFs/src/ff.c **** 
6020:Middlewares/Third_Party/FatFs/src/ff.c **** 
6021:Middlewares/Third_Party/FatFs/src/ff.c **** 
6022:Middlewares/Third_Party/FatFs/src/ff.c **** 
6023:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6024:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a formatted string to the file                                    */
6025:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6026:Middlewares/Third_Party/FatFs/src/ff.c **** 
6027:Middlewares/Third_Party/FatFs/src/ff.c **** int f_printf (
6028:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
6029:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
6030:Middlewares/Third_Party/FatFs/src/ff.c **** 	...					/* Optional arguments... */
6031:Middlewares/Third_Party/FatFs/src/ff.c **** )
6032:Middlewares/Third_Party/FatFs/src/ff.c **** {
 11551              		.loc 1 6032 0
 11552              		.cfi_startproc
 11553              		@ args = 4, pretend = 12, frame = 112
 11554              		@ frame_needed = 0, uses_anonymous_args = 1
 11555              	.LVL1735:
 11556 0000 0EB4     		push	{r1, r2, r3}
 11557              	.LCFI156:
 11558              		.cfi_def_cfa_offset 12
 11559              		.cfi_offset 1, -12
 11560              		.cfi_offset 2, -8
 11561              		.cfi_offset 3, -4
 11562 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 11563              	.LCFI157:
 11564              		.cfi_def_cfa_offset 44
 11565              		.cfi_offset 4, -44
 11566              		.cfi_offset 5, -40
 11567              		.cfi_offset 6, -36
 11568              		.cfi_offset 7, -32
 11569              		.cfi_offset 8, -28
 11570              		.cfi_offset 9, -24
 11571              		.cfi_offset 10, -20
 11572              		.cfi_offset 14, -16
 11573 0006 9DB0     		sub	sp, sp, #116
 11574              	.LCFI158:
 11575              		.cfi_def_cfa_offset 160
 11576 0008 25AC     		add	r4, sp, #148
 11577 000a 54F8045B 		ldr	r5, [r4], #4
6033:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_list arp;
6034:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6035:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE f, r;
6036:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, w;
6037:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD v;
6038:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, d, str[32], *p;
6039:Middlewares/Third_Party/FatFs/src/ff.c **** 
6040:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 338


6041:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 11578              		.loc 1 6041 0
 11579 000e 0146     		mov	r1, r0
 11580 0010 08A8     		add	r0, sp, #32
 11581              	.LVL1736:
 11582 0012 FFF7FEFF 		bl	putc_init
 11583              	.LVL1737:
6042:Middlewares/Third_Party/FatFs/src/ff.c **** 
6043:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_start(arp, fmt);
 11584              		.loc 1 6043 0
 11585 0016 1B94     		str	r4, [sp, #108]
 11586 0018 03E0     		b	.L1098
 11587              	.LVL1738:
 11588              	.L1147:
6044:Middlewares/Third_Party/FatFs/src/ff.c **** 
6045:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
6047:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
6048:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
6049:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 11589              		.loc 1 6049 0
 11590 001a 08A8     		add	r0, sp, #32
 11591 001c FFF7FEFF 		bl	putc_bfd
 11592              	.LVL1739:
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 11593              		.loc 1 6046 0
 11594 0020 2546     		mov	r5, r4
 11595              	.LVL1740:
 11596              	.L1098:
 11597 0022 6C1C     		adds	r4, r5, #1
 11598              	.LVL1741:
 11599 0024 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 11600              	.LVL1742:
6047:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
 11601              		.loc 1 6047 0
 11602 0026 0029     		cmp	r1, #0
 11603 0028 00F00881 		beq	.L1099
6048:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 11604              		.loc 1 6048 0
 11605 002c 2529     		cmp	r1, #37
 11606 002e F4D1     		bne	.L1147
 11607              	.LVL1743:
6050:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6051:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = f = 0;
6053:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 11608              		.loc 1 6053 0
 11609 0030 AB1C     		adds	r3, r5, #2
 11610              	.LVL1744:
 11611 0032 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 11612              	.LVL1745:
6054:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 11613              		.loc 1 6054 0
 11614 0034 3029     		cmp	r1, #48
 11615 0036 05D0     		beq	.L1148
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
6056:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 339


6057:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 11616              		.loc 1 6057 0
 11617 0038 2D29     		cmp	r1, #45
 11618 003a 07D0     		beq	.L1149
6053:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 11619              		.loc 1 6053 0
 11620 003c 1D46     		mov	r5, r3
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 11621              		.loc 1 6052 0
 11622 003e 0026     		movs	r6, #0
 11623              	.LVL1746:
 11624              	.L1103:
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
 11625              		.loc 1 6055 0
 11626 0040 0024     		movs	r4, #0
 11627 0042 0FE0     		b	.L1104
 11628              	.LVL1747:
 11629              	.L1148:
 11630 0044 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 11631              	.LVL1748:
 11632 0046 0335     		adds	r5, r5, #3
 11633              	.LVL1749:
 11634 0048 0126     		movs	r6, #1
 11635 004a F9E7     		b	.L1103
 11636              	.LVL1750:
 11637              	.L1149:
6058:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
 11638              		.loc 1 6058 0
 11639 004c A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 11640              	.LVL1751:
 11641 004e 0335     		adds	r5, r5, #3
 11642              	.LVL1752:
 11643 0050 0226     		movs	r6, #2
 11644 0052 F5E7     		b	.L1103
 11645              	.LVL1753:
 11646              	.L1105:
6059:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6060:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6061:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
6062:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 11647              		.loc 1 6062 0
 11648 0054 04EB8404 		add	r4, r4, r4, lsl #2
 11649              	.LVL1754:
 11650 0058 6300     		lsls	r3, r4, #1
 11651 005a 1944     		add	r1, r1, r3
 11652              	.LVL1755:
 11653 005c A1F13004 		sub	r4, r1, #48
 11654              	.LVL1756:
6063:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
 11655              		.loc 1 6063 0
 11656 0060 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 11657              	.LVL1757:
 11658 0062 0135     		adds	r5, r5, #1
 11659              	.LVL1758:
 11660              	.L1104:
6061:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 11661              		.loc 1 6061 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 340


 11662 0064 A1F13003 		sub	r3, r1, #48
 11663 0068 DBB2     		uxtb	r3, r3
 11664 006a 092B     		cmp	r3, #9
 11665 006c F2D9     		bls	.L1105
6064:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6065:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 11666              		.loc 1 6065 0
 11667 006e 4C29     		cmp	r1, #76
 11668 0070 18BF     		it	ne
 11669 0072 6C29     		cmpne	r1, #108
 11670 0074 03D1     		bne	.L1106
6066:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
 11671              		.loc 1 6066 0
 11672 0076 46F00406 		orr	r6, r6, #4
 11673              	.LVL1759:
 11674 007a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 11675              	.LVL1760:
 11676 007c 0135     		adds	r5, r5, #1
 11677              	.LVL1761:
 11678              	.L1106:
6067:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6068:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) break;
 11679              		.loc 1 6068 0
 11680 007e 0029     		cmp	r1, #0
 11681 0080 00F0DC80 		beq	.L1099
 11682              	.LVL1762:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
6070:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 11683              		.loc 1 6070 0
 11684 0084 A1F16103 		sub	r3, r1, #97
 11685 0088 DBB2     		uxtb	r3, r3
 11686 008a 192B     		cmp	r3, #25
 11687 008c 14D8     		bhi	.L1141
 11688              		.loc 1 6070 0 is_stmt 0 discriminator 1
 11689 008e A1F12003 		sub	r3, r1, #32
 11690 0092 DBB2     		uxtb	r3, r3
 11691              	.LVL1763:
 11692              	.L1107:
6071:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
 11693              		.loc 1 6071 0 is_stmt 1
 11694 0094 A3F14202 		sub	r2, r3, #66
 11695 0098 162A     		cmp	r2, #22
 11696 009a 4CD8     		bhi	.L1108
 11697 009c DFE802F0 		tbb	[pc, r2]
 11698              	.L1110:
 11699 00a0 4F       		.byte	(.L1109-.L1110)/2
 11700 00a1 3D       		.byte	(.L1111-.L1110)/2
 11701 00a2 45       		.byte	(.L1112-.L1110)/2
 11702 00a3 4B       		.byte	(.L1108-.L1110)/2
 11703 00a4 4B       		.byte	(.L1108-.L1110)/2
 11704 00a5 4B       		.byte	(.L1108-.L1110)/2
 11705 00a6 4B       		.byte	(.L1108-.L1110)/2
 11706 00a7 4B       		.byte	(.L1108-.L1110)/2
 11707 00a8 4B       		.byte	(.L1108-.L1110)/2
 11708 00a9 4B       		.byte	(.L1108-.L1110)/2
 11709 00aa 4B       		.byte	(.L1108-.L1110)/2
 11710 00ab 4B       		.byte	(.L1108-.L1110)/2
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 341


 11711 00ac 4B       		.byte	(.L1108-.L1110)/2
 11712 00ad 52       		.byte	(.L1142-.L1110)/2
 11713 00ae 4B       		.byte	(.L1108-.L1110)/2
 11714 00af 4B       		.byte	(.L1108-.L1110)/2
 11715 00b0 4B       		.byte	(.L1108-.L1110)/2
 11716 00b1 0E       		.byte	(.L1114-.L1110)/2
 11717 00b2 4B       		.byte	(.L1108-.L1110)/2
 11718 00b3 45       		.byte	(.L1112-.L1110)/2
 11719 00b4 4B       		.byte	(.L1108-.L1110)/2
 11720 00b5 4B       		.byte	(.L1108-.L1110)/2
 11721 00b6 48       		.byte	(.L1115-.L1110)/2
 11722              	.LVL1764:
 11723 00b7 00       		.p2align 1
 11724              	.L1141:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
 11725              		.loc 1 6069 0
 11726 00b8 0B46     		mov	r3, r1
 11727 00ba EBE7     		b	.L1107
 11728              	.LVL1765:
 11729              	.L1114:
6072:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
6073:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = va_arg(arp, TCHAR*);
 11730              		.loc 1 6073 0
 11731 00bc 1B9B     		ldr	r3, [sp, #108]
 11732              	.LVL1766:
 11733 00be 1A1D     		adds	r2, r3, #4
 11734 00c0 1B92     		str	r2, [sp, #108]
 11735 00c2 D3F80080 		ldr	r8, [r3]
 11736              	.LVL1767:
6074:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
 11737              		.loc 1 6074 0
 11738 00c6 0027     		movs	r7, #0
 11739 00c8 00E0     		b	.L1116
 11740              	.LVL1768:
 11741              	.L1117:
 11742              		.loc 1 6074 0 is_stmt 0 discriminator 3
 11743 00ca 0137     		adds	r7, r7, #1
 11744              	.LVL1769:
 11745              	.L1116:
 11746              		.loc 1 6074 0 discriminator 1
 11747 00cc 18F80730 		ldrb	r3, [r8, r7]	@ zero_extendqisi2
 11748 00d0 002B     		cmp	r3, #0
 11749 00d2 FAD1     		bne	.L1117
6075:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 11750              		.loc 1 6075 0 is_stmt 1
 11751 00d4 16F0020F 		tst	r6, #2
 11752 00d8 10D1     		bne	.L1121
 11753 00da 05E0     		b	.L1118
 11754              	.LVL1770:
 11755              	.L1120:
6076:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 11756              		.loc 1 6076 0 discriminator 2
 11757 00dc 2021     		movs	r1, #32
 11758 00de 0DEB0100 		add	r0, sp, r1
 11759 00e2 FFF7FEFF 		bl	putc_bfd
 11760              	.LVL1771:
 11761 00e6 3746     		mov	r7, r6
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 342


 11762              	.LVL1772:
 11763              	.L1118:
 11764              		.loc 1 6076 0 is_stmt 0 discriminator 1
 11765 00e8 7E1C     		adds	r6, r7, #1
 11766              	.LVL1773:
 11767 00ea A742     		cmp	r7, r4
 11768 00ec F6D3     		bcc	.L1120
 11769              		.loc 1 6076 0
 11770 00ee 3746     		mov	r7, r6
 11771 00f0 04E0     		b	.L1121
 11772              	.LVL1774:
 11773              	.L1122:
6077:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6078:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
 11774              		.loc 1 6078 0 is_stmt 1 discriminator 2
 11775 00f2 08F10108 		add	r8, r8, #1
 11776              	.LVL1775:
 11777 00f6 08A8     		add	r0, sp, #32
 11778 00f8 FFF7FEFF 		bl	putc_bfd
 11779              	.LVL1776:
 11780              	.L1121:
 11781              		.loc 1 6078 0 is_stmt 0 discriminator 1
 11782 00fc 98F80010 		ldrb	r1, [r8]	@ zero_extendqisi2
 11783 0100 0029     		cmp	r1, #0
 11784 0102 F6D1     		bne	.L1122
 11785 0104 05E0     		b	.L1123
 11786              	.LVL1777:
 11787              	.L1124:
6079:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 11788              		.loc 1 6079 0 is_stmt 1 discriminator 2
 11789 0106 2021     		movs	r1, #32
 11790 0108 0DEB0100 		add	r0, sp, r1
 11791 010c FFF7FEFF 		bl	putc_bfd
 11792              	.LVL1778:
 11793 0110 3746     		mov	r7, r6
 11794              	.LVL1779:
 11795              	.L1123:
 11796              		.loc 1 6079 0 is_stmt 0 discriminator 1
 11797 0112 7E1C     		adds	r6, r7, #1
 11798              	.LVL1780:
 11799 0114 A742     		cmp	r7, r4
 11800 0116 F6D3     		bcc	.L1124
 11801 0118 83E7     		b	.L1098
 11802              	.LVL1781:
 11803              	.L1111:
6080:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6081:Middlewares/Third_Party/FatFs/src/ff.c **** 
6082:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'C' :					/* Character */
6083:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
 11804              		.loc 1 6083 0 is_stmt 1
 11805 011a 1B9B     		ldr	r3, [sp, #108]
 11806              	.LVL1782:
 11807 011c 1A1D     		adds	r2, r3, #4
 11808 011e 1B92     		str	r2, [sp, #108]
 11809 0120 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11810              	.LVL1783:
 11811 0122 08A8     		add	r0, sp, #32
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 343


 11812 0124 FFF7FEFF 		bl	putc_bfd
 11813              	.LVL1784:
 11814 0128 7BE7     		b	.L1098
 11815              	.LVL1785:
 11816              	.L1112:
6084:Middlewares/Third_Party/FatFs/src/ff.c **** 
6085:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 2; break;
6087:Middlewares/Third_Party/FatFs/src/ff.c **** 
6088:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 8; break;
6090:Middlewares/Third_Party/FatFs/src/ff.c **** 
6091:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
6092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'U' :					/* Unsigned decimal */
6093:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 10; break;
 11817              		.loc 1 6093 0
 11818 012a 4FF00A0E 		mov	lr, #10
 11819 012e 0BE0     		b	.L1113
 11820              	.LVL1786:
 11821              	.L1115:
6094:Middlewares/Third_Party/FatFs/src/ff.c **** 
6095:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
6096:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 16; break;
 11822              		.loc 1 6096 0
 11823 0130 4FF0100E 		mov	lr, #16
 11824 0134 08E0     		b	.L1113
 11825              	.LVL1787:
 11826              	.L1108:
6097:Middlewares/Third_Party/FatFs/src/ff.c **** 
6098:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
6099:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c); continue;
 11827              		.loc 1 6099 0
 11828 0136 08A8     		add	r0, sp, #32
 11829 0138 FFF7FEFF 		bl	putc_bfd
 11830              	.LVL1788:
 11831 013c 71E7     		b	.L1098
 11832              	.LVL1789:
 11833              	.L1109:
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11834              		.loc 1 6086 0
 11835 013e 4FF0020E 		mov	lr, #2
 11836 0142 01E0     		b	.L1113
 11837              	.L1142:
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11838              		.loc 1 6089 0
 11839 0144 4FF0080E 		mov	lr, #8
 11840              	.L1113:
 11841              	.LVL1790:
6100:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6101:Middlewares/Third_Party/FatFs/src/ff.c **** 
6102:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get an argument and put it in numeral */
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
 11842              		.loc 1 6103 0
 11843 0148 16F0040F 		tst	r6, #4
 11844 014c 13D0     		beq	.L1125
 11845 014e 1B9A     		ldr	r2, [sp, #108]
 11846 0150 101D     		adds	r0, r2, #4
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 344


 11847 0152 1B90     		str	r0, [sp, #108]
 11848 0154 D2F80080 		ldr	r8, [r2]
 11849              	.L1126:
 11850              	.LVL1791:
6104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 11851              		.loc 1 6104 0 discriminator 8
 11852 0158 4FEAD872 		lsr	r2, r8, #31
 11853 015c 442B     		cmp	r3, #68
 11854 015e 14BF     		ite	ne
 11855 0160 0023     		movne	r3, #0
 11856 0162 02F00103 		andeq	r3, r2, #1
 11857              	.LVL1792:
 11858 0166 1BB1     		cbz	r3, .L1128
6105:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
 11859              		.loc 1 6105 0
 11860 0168 C8F10008 		rsb	r8, r8, #0
 11861              	.LVL1793:
6106:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 8;
 11862              		.loc 1 6106 0
 11863 016c 46F00806 		orr	r6, r6, #8
 11864              	.LVL1794:
 11865              	.L1128:
6107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6108:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 11866              		.loc 1 6108 0
 11867 0170 4FF0000C 		mov	ip, #0
 11868 0174 20E0     		b	.L1131
 11869              	.LVL1795:
 11870              	.L1125:
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 11871              		.loc 1 6103 0 discriminator 2
 11872 0176 442B     		cmp	r3, #68
 11873 0178 05D0     		beq	.L1150
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 11874              		.loc 1 6103 0 is_stmt 0
 11875 017a 1B9A     		ldr	r2, [sp, #108]
 11876 017c 101D     		adds	r0, r2, #4
 11877 017e 1B90     		str	r0, [sp, #108]
 11878 0180 D2F80080 		ldr	r8, [r2]
 11879 0184 E8E7     		b	.L1126
 11880              	.L1150:
 11881 0186 1B9A     		ldr	r2, [sp, #108]
 11882 0188 101D     		adds	r0, r2, #4
 11883 018a 1B90     		str	r0, [sp, #108]
 11884 018c D2F80080 		ldr	r8, [r2]
 11885 0190 E2E7     		b	.L1126
 11886              	.LVL1796:
 11887              	.L1152:
6109:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 11888              		.loc 1 6111 0 is_stmt 1
 11889 0192 2722     		movs	r2, #39
 11890              	.L1130:
 11891              		.loc 1 6111 0 is_stmt 0 discriminator 5
 11892 0194 1344     		add	r3, r3, r2
 11893              	.LVL1797:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 345


 11894 0196 DBB2     		uxtb	r3, r3
 11895              	.LVL1798:
 11896              	.L1129:
6112:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 11897              		.loc 1 6112 0 is_stmt 1
 11898 0198 0CF10107 		add	r7, ip, #1
 11899              	.LVL1799:
 11900 019c 3033     		adds	r3, r3, #48
 11901              	.LVL1800:
 11902 019e 1CAA     		add	r2, sp, #112
 11903 01a0 6244     		add	r2, r2, ip
 11904 01a2 02F8703C 		strb	r3, [r2, #-112]
6113:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 11905              		.loc 1 6113 0
 11906 01a6 1F2F     		cmp	r7, #31
 11907 01a8 8CBF     		ite	hi
 11908 01aa 0022     		movhi	r2, #0
 11909 01ac 0122     		movls	r2, #1
 11910 01ae 0028     		cmp	r0, #0
 11911 01b0 08BF     		it	eq
 11912 01b2 0022     		moveq	r2, #0
 11913 01b4 62B1     		cbz	r2, .L1151
6112:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 11914              		.loc 1 6112 0
 11915 01b6 BC46     		mov	ip, r7
 11916              	.LVL1801:
 11917              	.L1131:
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 11918              		.loc 1 6110 0
 11919 01b8 B8FBFEF0 		udiv	r0, r8, lr
 11920 01bc 0EFB1083 		mls	r3, lr, r0, r8
 11921 01c0 DBB2     		uxtb	r3, r3
 11922              	.LVL1802:
 11923 01c2 8046     		mov	r8, r0
 11924              	.LVL1803:
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 11925              		.loc 1 6111 0
 11926 01c4 092B     		cmp	r3, #9
 11927 01c6 E7D9     		bls	.L1129
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 11928              		.loc 1 6111 0 is_stmt 0 discriminator 1
 11929 01c8 7829     		cmp	r1, #120
 11930 01ca E2D0     		beq	.L1152
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 11931              		.loc 1 6111 0
 11932 01cc 0722     		movs	r2, #7
 11933 01ce E1E7     		b	.L1130
 11934              	.LVL1804:
 11935              	.L1151:
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (f & 8) str[i++] = '-';
 11936              		.loc 1 6114 0 is_stmt 1
 11937 01d0 16F0080F 		tst	r6, #8
 11938 01d4 06D0     		beq	.L1132
 11939              	.LVL1805:
 11940              		.loc 1 6114 0 is_stmt 0 discriminator 1
 11941 01d6 1CAB     		add	r3, sp, #112
 11942 01d8 1F44     		add	r7, r7, r3
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 346


 11943 01da 2D23     		movs	r3, #45
 11944 01dc 07F8703C 		strb	r3, [r7, #-112]
 11945 01e0 0CF10207 		add	r7, ip, #2
 11946              	.LVL1806:
 11947              	.L1132:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 11948              		.loc 1 6115 0 is_stmt 1
 11949 01e4 16F0010F 		tst	r6, #1
 11950 01e8 03D0     		beq	.L1145
 11951 01ea 4FF0300A 		mov	r10, #48
 11952              	.L1133:
 11953              	.LVL1807:
 11954              		.loc 1 6115 0 is_stmt 0 discriminator 4
 11955 01ee B846     		mov	r8, r7
6116:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 11956              		.loc 1 6116 0 is_stmt 1 discriminator 4
 11957 01f0 07E0     		b	.L1134
 11958              	.LVL1808:
 11959              	.L1145:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 11960              		.loc 1 6115 0
 11961 01f2 4FF0200A 		mov	r10, #32
 11962 01f6 FAE7     		b	.L1133
 11963              	.LVL1809:
 11964              	.L1136:
 11965              		.loc 1 6116 0 discriminator 3
 11966 01f8 5146     		mov	r1, r10
 11967 01fa 08A8     		add	r0, sp, #32
 11968 01fc FFF7FEFF 		bl	putc_bfd
 11969              	.LVL1810:
 11970 0200 C846     		mov	r8, r9
 11971              	.LVL1811:
 11972              	.L1134:
 11973              		.loc 1 6116 0 is_stmt 0 discriminator 1
 11974 0202 16F0020F 		tst	r6, #2
 11975 0206 04D1     		bne	.L1137
 11976              		.loc 1 6116 0 discriminator 2
 11977 0208 08F10109 		add	r9, r8, #1
 11978              	.LVL1812:
 11979 020c A045     		cmp	r8, r4
 11980 020e F3D3     		bcc	.L1136
 11981              		.loc 1 6116 0
 11982 0210 C846     		mov	r8, r9
 11983              	.LVL1813:
 11984              	.L1137:
6117:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6118:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, str[--i]);
 11985              		.loc 1 6118 0 is_stmt 1 discriminator 1
 11986 0212 013F     		subs	r7, r7, #1
 11987              	.LVL1814:
 11988 0214 1CAB     		add	r3, sp, #112
 11989 0216 3B44     		add	r3, r3, r7
 11990 0218 13F8701C 		ldrb	r1, [r3, #-112]	@ zero_extendqisi2
 11991 021c 08A8     		add	r0, sp, #32
 11992 021e FFF7FEFF 		bl	putc_bfd
 11993              	.LVL1815:
6119:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (i);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 347


 11994              		.loc 1 6119 0 discriminator 1
 11995 0222 002F     		cmp	r7, #0
 11996 0224 F5D1     		bne	.L1137
 11997 0226 04E0     		b	.L1138
 11998              	.LVL1816:
 11999              	.L1139:
6120:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 12000              		.loc 1 6120 0 discriminator 2
 12001 0228 5146     		mov	r1, r10
 12002 022a 08A8     		add	r0, sp, #32
 12003 022c FFF7FEFF 		bl	putc_bfd
 12004              	.LVL1817:
 12005 0230 B046     		mov	r8, r6
 12006              	.LVL1818:
 12007              	.L1138:
 12008              		.loc 1 6120 0 is_stmt 0 discriminator 1
 12009 0232 08F10106 		add	r6, r8, #1
 12010              	.LVL1819:
 12011 0236 A045     		cmp	r8, r4
 12012 0238 F6D3     		bcc	.L1139
 12013 023a F2E6     		b	.L1098
 12014              	.LVL1820:
 12015              	.L1099:
6121:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 
6123:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_end(arp);
6124:Middlewares/Third_Party/FatFs/src/ff.c **** 
6125:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 12016              		.loc 1 6125 0 is_stmt 1
 12017 023c 08A8     		add	r0, sp, #32
 12018 023e FFF7FEFF 		bl	putc_flush
 12019              	.LVL1821:
6126:Middlewares/Third_Party/FatFs/src/ff.c **** }
 12020              		.loc 1 6126 0
 12021 0242 1DB0     		add	sp, sp, #116
 12022              	.LCFI159:
 12023              		.cfi_def_cfa_offset 44
 12024              		@ sp needed
 12025 0244 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 12026              	.LCFI160:
 12027              		.cfi_restore 14
 12028              		.cfi_restore 10
 12029              		.cfi_restore 9
 12030              		.cfi_restore 8
 12031              		.cfi_restore 7
 12032              		.cfi_restore 6
 12033              		.cfi_restore 5
 12034              		.cfi_restore 4
 12035              		.cfi_def_cfa_offset 12
 12036 0248 03B0     		add	sp, sp, #12
 12037              	.LCFI161:
 12038              		.cfi_restore 3
 12039              		.cfi_restore 2
 12040              		.cfi_restore 1
 12041              		.cfi_def_cfa_offset 0
 12042 024a 7047     		bx	lr
 12043              		.cfi_endproc
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 348


 12044              	.LFE217:
 12046              		.section	.bss.CurrVol,"aw",%nobits
 12047              		.set	.LANCHOR3,. + 0
 12050              	CurrVol:
 12051 0000 00       		.space	1
 12052              		.section	.bss.FatFs,"aw",%nobits
 12053              		.align	2
 12054              		.set	.LANCHOR4,. + 0
 12057              	FatFs:
 12058 0000 00000000 		.space	8
 12058      00000000 
 12059              		.section	.bss.Files,"aw",%nobits
 12060              		.align	2
 12061              		.set	.LANCHOR0,. + 0
 12064              	Files:
 12065 0000 00000000 		.space	32
 12065      00000000 
 12065      00000000 
 12065      00000000 
 12065      00000000 
 12066              		.section	.bss.Fsid,"aw",%nobits
 12067              		.align	1
 12068              		.set	.LANCHOR5,. + 0
 12071              	Fsid:
 12072 0000 0000     		.space	2
 12073              		.section	.rodata.ExCvt,"a",%progbits
 12074              		.align	2
 12075              		.set	.LANCHOR2,. + 0
 12078              	ExCvt:
 12079 0000 43       		.byte	67
 12080 0001 55       		.byte	85
 12081 0002 45       		.byte	69
 12082 0003 41       		.byte	65
 12083 0004 41       		.byte	65
 12084 0005 41       		.byte	65
 12085 0006 41       		.byte	65
 12086 0007 43       		.byte	67
 12087 0008 45       		.byte	69
 12088 0009 45       		.byte	69
 12089 000a 45       		.byte	69
 12090 000b 49       		.byte	73
 12091 000c 49       		.byte	73
 12092 000d 49       		.byte	73
 12093 000e 41       		.byte	65
 12094 000f 41       		.byte	65
 12095 0010 45       		.byte	69
 12096 0011 92       		.byte	-110
 12097 0012 92       		.byte	-110
 12098 0013 4F       		.byte	79
 12099 0014 4F       		.byte	79
 12100 0015 4F       		.byte	79
 12101 0016 55       		.byte	85
 12102 0017 55       		.byte	85
 12103 0018 59       		.byte	89
 12104 0019 4F       		.byte	79
 12105 001a 55       		.byte	85
 12106 001b 4F       		.byte	79
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 349


 12107 001c 9C       		.byte	-100
 12108 001d 4F       		.byte	79
 12109 001e 9E       		.byte	-98
 12110 001f 9F       		.byte	-97
 12111 0020 41       		.byte	65
 12112 0021 49       		.byte	73
 12113 0022 4F       		.byte	79
 12114 0023 55       		.byte	85
 12115 0024 A5       		.byte	-91
 12116 0025 A5       		.byte	-91
 12117 0026 A6       		.byte	-90
 12118 0027 A7       		.byte	-89
 12119 0028 A8       		.byte	-88
 12120 0029 A9       		.byte	-87
 12121 002a AA       		.byte	-86
 12122 002b AB       		.byte	-85
 12123 002c AC       		.byte	-84
 12124 002d AD       		.byte	-83
 12125 002e AE       		.byte	-82
 12126 002f AF       		.byte	-81
 12127 0030 B0       		.byte	-80
 12128 0031 B1       		.byte	-79
 12129 0032 B2       		.byte	-78
 12130 0033 B3       		.byte	-77
 12131 0034 B4       		.byte	-76
 12132 0035 41       		.byte	65
 12133 0036 41       		.byte	65
 12134 0037 41       		.byte	65
 12135 0038 B8       		.byte	-72
 12136 0039 B9       		.byte	-71
 12137 003a BA       		.byte	-70
 12138 003b BB       		.byte	-69
 12139 003c BC       		.byte	-68
 12140 003d BD       		.byte	-67
 12141 003e BE       		.byte	-66
 12142 003f BF       		.byte	-65
 12143 0040 C0       		.byte	-64
 12144 0041 C1       		.byte	-63
 12145 0042 C2       		.byte	-62
 12146 0043 C3       		.byte	-61
 12147 0044 C4       		.byte	-60
 12148 0045 C5       		.byte	-59
 12149 0046 41       		.byte	65
 12150 0047 41       		.byte	65
 12151 0048 C8       		.byte	-56
 12152 0049 C9       		.byte	-55
 12153 004a CA       		.byte	-54
 12154 004b CB       		.byte	-53
 12155 004c CC       		.byte	-52
 12156 004d CD       		.byte	-51
 12157 004e CE       		.byte	-50
 12158 004f CF       		.byte	-49
 12159 0050 D1       		.byte	-47
 12160 0051 D1       		.byte	-47
 12161 0052 45       		.byte	69
 12162 0053 45       		.byte	69
 12163 0054 45       		.byte	69
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 350


 12164 0055 49       		.byte	73
 12165 0056 49       		.byte	73
 12166 0057 49       		.byte	73
 12167 0058 49       		.byte	73
 12168 0059 D9       		.byte	-39
 12169 005a DA       		.byte	-38
 12170 005b DB       		.byte	-37
 12171 005c DC       		.byte	-36
 12172 005d DD       		.byte	-35
 12173 005e 49       		.byte	73
 12174 005f DF       		.byte	-33
 12175 0060 4F       		.byte	79
 12176 0061 E1       		.byte	-31
 12177 0062 4F       		.byte	79
 12178 0063 4F       		.byte	79
 12179 0064 4F       		.byte	79
 12180 0065 4F       		.byte	79
 12181 0066 E6       		.byte	-26
 12182 0067 E8       		.byte	-24
 12183 0068 E8       		.byte	-24
 12184 0069 55       		.byte	85
 12185 006a 55       		.byte	85
 12186 006b 55       		.byte	85
 12187 006c 59       		.byte	89
 12188 006d 59       		.byte	89
 12189 006e EE       		.byte	-18
 12190 006f EF       		.byte	-17
 12191 0070 F0       		.byte	-16
 12192 0071 F1       		.byte	-15
 12193 0072 F2       		.byte	-14
 12194 0073 F3       		.byte	-13
 12195 0074 F4       		.byte	-12
 12196 0075 F5       		.byte	-11
 12197 0076 F6       		.byte	-10
 12198 0077 F7       		.byte	-9
 12199 0078 F8       		.byte	-8
 12200 0079 F9       		.byte	-7
 12201 007a FA       		.byte	-6
 12202 007b FB       		.byte	-5
 12203 007c FC       		.byte	-4
 12204 007d FD       		.byte	-3
 12205 007e FE       		.byte	-2
 12206 007f FF       		.byte	-1
 12207              		.section	.rodata.LfnOfs,"a",%progbits
 12208              		.align	2
 12209              		.set	.LANCHOR1,. + 0
 12212              	LfnOfs:
 12213 0000 01       		.byte	1
 12214 0001 03       		.byte	3
 12215 0002 05       		.byte	5
 12216 0003 07       		.byte	7
 12217 0004 09       		.byte	9
 12218 0005 0E       		.byte	14
 12219 0006 10       		.byte	16
 12220 0007 12       		.byte	18
 12221 0008 14       		.byte	20
 12222 0009 16       		.byte	22
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 351


 12223 000a 18       		.byte	24
 12224 000b 1C       		.byte	28
 12225 000c 1E       		.byte	30
 12226              		.section	.rodata.create_name.str1.4,"aMS",%progbits,1
 12227              		.align	2
 12228              	.LC0:
 12229 0000 222A3A3C 		.ascii	"\"*:<>?|\177\000"
 12229      3E3F7C7F 
 12229      00
 12230 0009 000000   		.space	3
 12231              	.LC1:
 12232 000c 2B2C3B3D 		.ascii	"+,;=[]\000"
 12232      5B5D00
 12233              		.section	.rodata.cst.14762,"a",%progbits
 12234              		.align	2
 12235              		.set	.LANCHOR7,. + 0
 12238              	cst.14762:
 12239 0000 0100     		.short	1
 12240 0002 0400     		.short	4
 12241 0004 1000     		.short	16
 12242 0006 4000     		.short	64
 12243 0008 0001     		.short	256
 12244 000a 0002     		.short	512
 12245 000c 0000     		.short	0
 12246              		.section	.rodata.cst32.14763,"a",%progbits
 12247              		.align	2
 12248              		.set	.LANCHOR6,. + 0
 12251              	cst32.14763:
 12252 0000 0100     		.short	1
 12253 0002 0200     		.short	2
 12254 0004 0400     		.short	4
 12255 0006 0800     		.short	8
 12256 0008 1000     		.short	16
 12257 000a 2000     		.short	32
 12258 000c 0000     		.short	0
 12259              		.section	.rodata.f_mkfs.str1.4,"aMS",%progbits,1
 12260              		.align	2
 12261              	.LC2:
 12262 0000 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 12262      53444F53 
 12262      352E3000 
 12263              	.LC3:
 12264 000c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 12264      414D4520 
 12264      20202046 
 12264      41543332 
 12264      20202000 
 12265              	.LC4:
 12266 0020 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 12266      414D4520 
 12266      20202046 
 12266      41542020 
 12266      20202000 
 12267              		.text
 12268              	.Letext0:
 12269              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 12270              		.file 3 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\machine\\_default
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 352


 12271              		.file 4 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 12272              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 12273              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 12274              		.file 7 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\
 12275              		.file 8 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\stdio.h"
 12276              		.file 9 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 12277              		.file 10 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 12278              		.file 11 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\
 12279              		.file 12 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 12280              		.file 13 "<built-in>"
 12281              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 12282              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 12283              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 12284              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 12285              		.file 18 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\stdlib.h"
 12286              		.file 19 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 12287              		.file 20 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 12288              		.file 21 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 12289              		.file 22 "Middlewares/Third_Party/FatFs/src/ff.h"
 12290              		.file 23 "Middlewares/Third_Party/FatFs/src/diskio.h"
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 353


DEFINED SYMBOLS
                            *ABS*:00000000 ff.c
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:18     .text.ld_word:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:24     .text.ld_word:00000000 ld_word
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:47     .text.ld_dword:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:53     .text.ld_dword:00000000 ld_dword
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:83     .text.st_word:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:89     .text.st_word:00000000 st_word
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:110    .text.st_dword:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:116    .text.st_dword:00000000 st_dword
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:145    .text.mem_cpy:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:151    .text.mem_cpy:00000000 mem_cpy
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:183    .text.mem_set:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:189    .text.mem_set:00000000 mem_set
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:213    .text.mem_cmp:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:219    .text.mem_cmp:00000000 mem_cmp
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:269    .text.chk_chr:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:275    .text.chk_chr:00000000 chk_chr
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:305    .text.chk_lock:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:311    .text.chk_lock:00000000 chk_lock
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:427    .text.chk_lock:00000070 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:432    .text.enq_lock:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:438    .text.enq_lock:00000000 enq_lock
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:475    .text.enq_lock:0000001c $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:480    .text.inc_lock:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:486    .text.inc_lock:00000000 inc_lock
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:639    .text.inc_lock:000000a0 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:644    .text.dec_lock:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:650    .text.dec_lock:00000000 dec_lock
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:715    .text.dec_lock:0000003c $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:720    .text.clear_lock:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:726    .text.clear_lock:00000000 clear_lock
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:792    .text.clear_lock:00000038 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:797    .text.clust2sect:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:803    .text.clust2sect:00000000 clust2sect
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:836    .text.clmt_clust:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:842    .text.clmt_clust:00000000 clmt_clust
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:893    .text.ld_clust:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:899    .text.ld_clust:00000000 ld_clust
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:944    .text.st_clust:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:950    .text.st_clust:00000000 st_clust
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:994    .text.pick_lfn:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1000   .text.pick_lfn:00000000 pick_lfn
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1114   .text.pick_lfn:00000084 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1119   .text.put_lfn:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1125   .text.put_lfn:00000000 put_lfn
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1225   .text.put_lfn:00000074 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1230   .text.gen_numname:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1236   .text.gen_numname:00000000 gen_numname
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1397   .text.sum_sfn:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1403   .text.sum_sfn:00000000 sum_sfn
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1440   .text.get_achar:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1446   .text.get_achar:00000000 get_achar
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1486   .text.get_achar:00000024 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1491   .text.pattern_matching:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1497   .text.pattern_matching:00000000 pattern_matching
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1660   .text.get_ldnumber:00000000 $t
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 354


C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1666   .text.get_ldnumber:00000000 get_ldnumber
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1763   .text.get_ldnumber:00000054 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1768   .text.putc_init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1774   .text.putc_init:00000000 putc_init
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1794   .text.lock_fs:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1800   .text.lock_fs:00000000 lock_fs
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1836   .text.validate:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1842   .text.validate:00000000 validate
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1912   .text.sync_window:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:1918   .text.sync_window:00000000 sync_window
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:2008   .text.move_window:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:2014   .text.move_window:00000000 move_window
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:2072   .text.check_fs:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:2078   .text.check_fs:00000000 check_fs
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:2161   .text.check_fs:00000070 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:2168   .text.find_volume:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:2174   .text.find_volume:00000000 find_volume
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:2740   .text.find_volume:00000308 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:2748   .text.put_fat:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:2754   .text.put_fat:00000000 put_fat
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:2952   .text.get_fat:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:2958   .text.get_fat:00000000 get_fat
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:3124   .text.dir_sdi:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:3130   .text.dir_sdi:00000000 dir_sdi
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:3287   .text.create_chain:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:3293   .text.create_chain:00000000 create_chain
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:3477   .text.remove_chain:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:3483   .text.remove_chain:00000000 remove_chain
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:3604   .text.dir_next:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:3610   .text.dir_next:00000000 dir_next
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:3839   .text.dir_alloc:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:3845   .text.dir_alloc:00000000 dir_alloc
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:3935   .text.dir_read:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:3941   .text.dir_read:00000000 dir_read
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:4117   .text.dir_remove:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:4123   .text.dir_remove:00000000 dir_remove
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:4209   .text.unlock_fs:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:4215   .text.unlock_fs:00000000 unlock_fs
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:4256   .text.create_name:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:4262   .text.create_name:00000000 create_name
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:4753   .text.create_name:0000028c $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:4761   .text.get_fileinfo:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:4767   .text.get_fileinfo:00000000 get_fileinfo
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:4990   .text.cmp_lfn:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:4996   .text.cmp_lfn:00000000 cmp_lfn
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5131   .text.cmp_lfn:000000a0 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5136   .text.dir_find:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5142   .text.dir_find:00000000 dir_find
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5335   .text.follow_path:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5341   .text.follow_path:00000000 follow_path
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5503   .text.dir_register:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5509   .text.dir_register:00000000 dir_register
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5755   .text.dir_register:00000140 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5760   .text.sync_fs:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5766   .text.sync_fs:00000000 sync_fs
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5862   .text.sync_fs:00000084 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5868   .text.f_mount:00000000 $t
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 355


C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5875   .text.f_mount:00000000 f_mount
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:5998   .text.f_mount:00000088 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:6003   .text.f_open:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:6010   .text.f_open:00000000 f_open
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:6478   .text.f_read:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:6485   .text.f_read:00000000 f_read
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:6844   .text.f_write:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:6851   .text.f_write:00000000 f_write
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7242   .text.putc_bfd:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7248   .text.putc_bfd:00000000 putc_bfd
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7338   .text.putc_flush:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7344   .text.putc_flush:00000000 putc_flush
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7414   .text.f_sync:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7421   .text.f_sync:00000000 f_sync
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7562   .text.f_close:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7569   .text.f_close:00000000 f_close
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7639   .text.f_chdrive:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7646   .text.f_chdrive:00000000 f_chdrive
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7695   .text.f_chdrive:00000024 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7700   .text.f_chdir:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7707   .text.f_chdir:00000000 f_chdir
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7832   .text.f_lseek:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:7839   .text.f_lseek:00000000 f_lseek
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:8435   .text.f_opendir:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:8442   .text.f_opendir:00000000 f_opendir
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:8605   .text.f_closedir:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:8612   .text.f_closedir:00000000 f_closedir
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:8676   .text.f_readdir:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:8683   .text.f_readdir:00000000 f_readdir
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:8801   .text.f_findnext:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:8808   .text.f_findnext:00000000 f_findnext
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:8861   .text.f_findfirst:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:8868   .text.f_findfirst:00000000 f_findfirst
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:8914   .text.f_stat:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:8921   .text.f_stat:00000000 f_stat
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:9021   .text.f_getfree:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:9028   .text.f_getfree:00000000 f_getfree
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:9247   .text.f_truncate:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:9254   .text.f_truncate:00000000 f_truncate
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:9433   .text.f_unlink:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:9440   .text.f_unlink:00000000 f_unlink
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:9673   .text.f_mkdir:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:9680   .text.f_mkdir:00000000 f_mkdir
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:10021  .text.f_rename:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:10028  .text.f_rename:00000000 f_rename
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:10289  .text.f_mkfs:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:10296  .text.f_mkfs:00000000 f_mkfs
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:10720  .text.f_mkfs:00000268 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:10727  .text.f_mkfs:00000280 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:11306  .text.f_mkfs:0000062c $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:11315  .text.f_mkfs:00000644 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:11336  .text.f_gets:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:11343  .text.f_gets:00000000 f_gets
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:11439  .text.f_putc:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:11446  .text.f_putc:00000000 f_putc
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:11486  .text.f_puts:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:11493  .text.f_puts:00000000 f_puts
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s 			page 356


C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:11542  .text.f_printf:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:11549  .text.f_printf:00000000 f_printf
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:11699  .text.f_printf:000000a0 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12050  .bss.CurrVol:00000000 CurrVol
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12051  .bss.CurrVol:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12053  .bss.FatFs:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12057  .bss.FatFs:00000000 FatFs
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12060  .bss.Files:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12064  .bss.Files:00000000 Files
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12067  .bss.Fsid:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12071  .bss.Fsid:00000000 Fsid
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12074  .rodata.ExCvt:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12078  .rodata.ExCvt:00000000 ExCvt
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12208  .rodata.LfnOfs:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12212  .rodata.LfnOfs:00000000 LfnOfs
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12227  .rodata.create_name.str1.4:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12234  .rodata.cst.14762:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12238  .rodata.cst.14762:00000000 cst.14762
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12247  .rodata.cst32.14763:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12251  .rodata.cst32.14763:00000000 cst32.14763
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:12260  .rodata.f_mkfs.str1.4:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:11723  .text.f_printf:000000b7 $d
C:\Users\Patryk\AppData\Local\Temp\ccM4HbZB.s:11723  .text.f_printf:000000b8 $t

UNDEFINED SYMBOLS
ff_req_grant
disk_status
disk_write
disk_read
disk_initialize
ff_rel_grant
ff_convert
ff_wtoupper
disk_ioctl
ff_del_syncobj
ff_cre_syncobj
ff_memalloc
get_fattime
ff_memfree
