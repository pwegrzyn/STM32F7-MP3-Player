ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"gui.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lcd_start,"ax",%progbits
  18              		.align	1
  19              		.global	lcd_start
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	lcd_start:
  26              	.LFB138:
  27              		.file 1 "Src/gui.c"
   1:Src/gui.c     **** /*
   2:Src/gui.c     ****  *	Graphical User Interface
   3:Src/gui.c     ****  *  Touchscreen
   4:Src/gui.c     ****  */
   5:Src/gui.c     **** 
   6:Src/gui.c     **** #include <stdio.h>
   7:Src/gui.c     **** #include <string.h>
   8:Src/gui.c     **** 
   9:Src/gui.c     **** #include "mp3_player.h"
  10:Src/gui.c     **** #include "stm32746g_discovery_lcd.h"
  11:Src/gui.c     **** #include "Utilities/Fonts/fonts.h"
  12:Src/gui.c     **** #include "stm32746g_discovery_ts.h"
  13:Src/gui.c     **** #include "term_io.h"
  14:Src/gui.c     **** #include "dbgu.h"
  15:Src/gui.c     **** #include "ansi.h"
  16:Src/gui.c     **** #include "stm32f7xx_hal.h"
  17:Src/gui.c     **** 
  18:Src/gui.c     **** #define LCD_X_SIZE			RK043FN48H_WIDTH
  19:Src/gui.c     **** #define LCD_Y_SIZE			RK043FN48H_HEIGHT
  20:Src/gui.c     **** #define LAYER_FG 1
  21:Src/gui.c     **** #define LAYER_BG 0
  22:Src/gui.c     **** 
  23:Src/gui.c     **** #define CONTROL_BUTTON_SIZE 0.15 * LCD_X_SIZE
  24:Src/gui.c     **** #define CONTROL_BUTTONS_NUMBER 4
  25:Src/gui.c     **** #define TICKS_DELTA 100
  26:Src/gui.c     **** 
  27:Src/gui.c     **** #define XPix(x) x * LCD_X_SIZE
  28:Src/gui.c     **** #define YPix(x) x * LCD_Y_SIZE
  29:Src/gui.c     **** // Not sure about these two guys (may be used in LCD_START_V2() in LayerDefaultInit()?)
  30:Src/gui.c     **** // static uint32_t lcd_image_fg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attrib
  31:Src/gui.c     **** // static uint32_t lcd_image_bg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attrib
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 2


  32:Src/gui.c     **** 
  33:Src/gui.c     **** /* ------------------------------------------------------------------- */
  34:Src/gui.c     **** 
  35:Src/gui.c     **** static TS_StateTypeDef TS_State;
  36:Src/gui.c     **** static TS_StateTypeDef lastState;
  37:Src/gui.c     **** uint16_t newX;
  38:Src/gui.c     **** uint16_t newY;
  39:Src/gui.c     **** uint16_t buttonsLeftUpper[4][2] = { {XPix(0.08), YPix(0.7)}, {XPix(0.31), YPix(0.7)}, {XPix(0.54), 
  40:Src/gui.c     **** Mp3_Player_State buttonState[4] = { PREV, PLAY, STOP, NEXT };
  41:Src/gui.c     **** Mp3_Player_State playButtonState = PLAY;
  42:Src/gui.c     **** uint32_t lastTicks = 0;
  43:Src/gui.c     **** 
  44:Src/gui.c     **** /* ------------------------------------------------------------------- */
  45:Src/gui.c     **** 
  46:Src/gui.c     **** void lcd_start(void);
  47:Src/gui.c     **** void LCD_Start_v2(void);
  48:Src/gui.c     **** void draw_background(void);
  49:Src/gui.c     **** int initialize_touchscreen(void);
  50:Src/gui.c     **** void touchscreen_loop_init(void);
  51:Src/gui.c     **** Mp3_Player_State check_touchscreen(void);
  52:Src/gui.c     **** uint16_t getXPix (double factor);
  53:Src/gui.c     **** uint16_t getYPix (double factor);
  54:Src/gui.c     **** 
  55:Src/gui.c     **** /* ------------------------------------------------------------------- */
  56:Src/gui.c     **** 
  57:Src/gui.c     **** // Initialize the LCD display
  58:Src/gui.c     **** void lcd_start(void)
  59:Src/gui.c     **** {
  28              		.loc 1 59 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  60:Src/gui.c     ****   /* LCD Initialization */
  61:Src/gui.c     ****   BSP_LCD_Init();
  37              		.loc 1 61 0
  38 0002 FFF7FEFF 		bl	BSP_LCD_Init
  39              	.LVL0:
  62:Src/gui.c     **** 
  63:Src/gui.c     ****   /* LCD Initialization */
  64:Src/gui.c     ****   BSP_LCD_LayerDefaultInit(LAYER_BG, (unsigned int)0xC0000000);
  40              		.loc 1 64 0
  41 0006 4FF04041 		mov	r1, #-1073741824
  42 000a 0020     		movs	r0, #0
  43 000c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
  44              	.LVL1:
  65:Src/gui.c     ****   //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
  66:Src/gui.c     ****   BSP_LCD_LayerDefaultInit(LAYER_FG, (unsigned int)0xC0000000+(LCD_X_SIZE*LCD_Y_SIZE*4));
  45              		.loc 1 66 0
  46 0010 1449     		ldr	r1, .L3
  47 0012 0120     		movs	r0, #1
  48 0014 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
  49              	.LVL2:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 3


  67:Src/gui.c     **** 
  68:Src/gui.c     ****   /* Enable the LCD */
  69:Src/gui.c     ****   BSP_LCD_DisplayOn();
  50              		.loc 1 69 0
  51 0018 FFF7FEFF 		bl	BSP_LCD_DisplayOn
  52              	.LVL3:
  70:Src/gui.c     **** 
  71:Src/gui.c     ****   /* Select the LCD Background Layer  */
  72:Src/gui.c     ****   BSP_LCD_SelectLayer(LAYER_BG);
  53              		.loc 1 72 0
  54 001c 0020     		movs	r0, #0
  55 001e FFF7FEFF 		bl	BSP_LCD_SelectLayer
  56              	.LVL4:
  73:Src/gui.c     **** 
  74:Src/gui.c     ****   /* Clear the Background Layer */
  75:Src/gui.c     ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
  57              		.loc 1 75 0
  58 0022 4FF0FF30 		mov	r0, #-1
  59 0026 FFF7FEFF 		bl	BSP_LCD_Clear
  60              	.LVL5:
  76:Src/gui.c     ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
  61              		.loc 1 76 0
  62 002a 4FF0FF30 		mov	r0, #-1
  63 002e FFF7FEFF 		bl	BSP_LCD_SetBackColor
  64              	.LVL6:
  77:Src/gui.c     **** 
  78:Src/gui.c     ****   BSP_LCD_SetColorKeying(LAYER_FG,LCD_COLOR_WHITE);
  65              		.loc 1 78 0
  66 0032 4FF0FF31 		mov	r1, #-1
  67 0036 0120     		movs	r0, #1
  68 0038 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
  69              	.LVL7:
  79:Src/gui.c     **** 
  80:Src/gui.c     ****   /* Select the LCD Foreground Layer  */
  81:Src/gui.c     ****   BSP_LCD_SelectLayer(LAYER_FG);
  70              		.loc 1 81 0
  71 003c 0120     		movs	r0, #1
  72 003e FFF7FEFF 		bl	BSP_LCD_SelectLayer
  73              	.LVL8:
  82:Src/gui.c     **** 
  83:Src/gui.c     ****   /* Clear the Foreground Layer */
  84:Src/gui.c     ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
  74              		.loc 1 84 0
  75 0042 4FF0FF30 		mov	r0, #-1
  76 0046 FFF7FEFF 		bl	BSP_LCD_Clear
  77              	.LVL9:
  85:Src/gui.c     ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
  78              		.loc 1 85 0
  79 004a 4FF0FF30 		mov	r0, #-1
  80 004e FFF7FEFF 		bl	BSP_LCD_SetBackColor
  81              	.LVL10:
  86:Src/gui.c     **** 
  87:Src/gui.c     ****   /* Configure the transparency for foreground and background :
  88:Src/gui.c     ****      Increase the transparency */
  89:Src/gui.c     ****   BSP_LCD_SetTransparency(LAYER_BG, 255);
  82              		.loc 1 89 0
  83 0052 FF21     		movs	r1, #255
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 4


  84 0054 0020     		movs	r0, #0
  85 0056 FFF7FEFF 		bl	BSP_LCD_SetTransparency
  86              	.LVL11:
  90:Src/gui.c     ****   BSP_LCD_SetTransparency(LAYER_FG, 255);
  87              		.loc 1 90 0
  88 005a FF21     		movs	r1, #255
  89 005c 0120     		movs	r0, #1
  90 005e FFF7FEFF 		bl	BSP_LCD_SetTransparency
  91              	.LVL12:
  91:Src/gui.c     **** }
  92              		.loc 1 91 0
  93 0062 08BD     		pop	{r3, pc}
  94              	.L4:
  95              		.align	2
  96              	.L3:
  97 0064 00F807C0 		.word	-1073219584
  98              		.cfi_endproc
  99              	.LFE138:
 101              		.section	.text.LCD_Start_v2,"ax",%progbits
 102              		.align	1
 103              		.global	LCD_Start_v2
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv5-sp-d16
 109              	LCD_Start_v2:
 110              	.LFB139:
  92:Src/gui.c     **** 
  93:Src/gui.c     **** // We can go with this instead probably
  94:Src/gui.c     **** void LCD_Start_v2(void)
  95:Src/gui.c     **** {
 111              		.loc 1 95 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115 0000 08B5     		push	{r3, lr}
 116              	.LCFI1:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 3, -8
 119              		.cfi_offset 14, -4
  96:Src/gui.c     **** 	BSP_LCD_Init();
 120              		.loc 1 96 0
 121 0002 FFF7FEFF 		bl	BSP_LCD_Init
 122              	.LVL13:
  97:Src/gui.c     **** 	BSP_LCD_LayerDefaultInit(LAYER_FG, (unsigned int)0xC0000000);
 123              		.loc 1 97 0
 124 0006 4FF04041 		mov	r1, #-1073741824
 125 000a 0120     		movs	r0, #1
 126 000c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 127              	.LVL14:
  98:Src/gui.c     **** 	BSP_LCD_LayerDefaultInit(LAYER_BG, (unsigned int)0xC0000000+(LCD_X_SIZE*LCD_Y_SIZE*4));
 128              		.loc 1 98 0
 129 0010 1649     		ldr	r1, .L7
 130 0012 0020     		movs	r0, #0
 131 0014 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 132              	.LVL15:
  99:Src/gui.c     **** 	
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 5


 100:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 133              		.loc 1 100 0
 134 0018 0120     		movs	r0, #1
 135 001a FFF7FEFF 		bl	BSP_LCD_SelectLayer
 136              	.LVL16:
 101:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 137              		.loc 1 101 0
 138 001e 4FF0FF30 		mov	r0, #-1
 139 0022 FFF7FEFF 		bl	BSP_LCD_Clear
 140              	.LVL17:
 102:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 141              		.loc 1 102 0
 142 0026 0020     		movs	r0, #0
 143 0028 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 144              	.LVL18:
 103:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 145              		.loc 1 103 0
 146 002c 4FF0FF30 		mov	r0, #-1
 147 0030 FFF7FEFF 		bl	BSP_LCD_Clear
 148              	.LVL19:
 104:Src/gui.c     **** 	BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 149              		.loc 1 104 0
 150 0034 4FF0FF30 		mov	r0, #-1
 151 0038 FFF7FEFF 		bl	BSP_LCD_SetBackColor
 152              	.LVL20:
 105:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 153              		.loc 1 105 0
 154 003c 4FF07F40 		mov	r0, #-16777216
 155 0040 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 156              	.LVL21:
 106:Src/gui.c     **** 	
 107:Src/gui.c     **** 	BSP_LCD_ResetColorKeying(LAYER_FG);
 157              		.loc 1 107 0
 158 0044 0120     		movs	r0, #1
 159 0046 FFF7FEFF 		bl	BSP_LCD_ResetColorKeying
 160              	.LVL22:
 108:Src/gui.c     **** 	BSP_LCD_ResetColorKeying(LAYER_BG);
 161              		.loc 1 108 0
 162 004a 0020     		movs	r0, #0
 163 004c FFF7FEFF 		bl	BSP_LCD_ResetColorKeying
 164              	.LVL23:
 109:Src/gui.c     **** 	
 110:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_FG, (uint8_t) 100);
 165              		.loc 1 110 0
 166 0050 6421     		movs	r1, #100
 167 0052 0120     		movs	r0, #1
 168 0054 FFF7FEFF 		bl	BSP_LCD_SetTransparency
 169              	.LVL24:
 111:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_BG, (uint8_t) 0xFF);
 170              		.loc 1 111 0
 171 0058 FF21     		movs	r1, #255
 172 005a 0020     		movs	r0, #0
 173 005c FFF7FEFF 		bl	BSP_LCD_SetTransparency
 174              	.LVL25:
 112:Src/gui.c     **** 	
 113:Src/gui.c     **** 	BSP_LCD_Reload(LCD_RELOAD_VERTICAL_BLANKING);
 175              		.loc 1 113 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 6


 176 0060 0220     		movs	r0, #2
 177 0062 FFF7FEFF 		bl	BSP_LCD_Reload
 178              	.LVL26:
 114:Src/gui.c     **** 	BSP_LCD_DisplayOn();
 179              		.loc 1 114 0
 180 0066 FFF7FEFF 		bl	BSP_LCD_DisplayOn
 181              	.LVL27:
 115:Src/gui.c     **** }
 182              		.loc 1 115 0
 183 006a 08BD     		pop	{r3, pc}
 184              	.L8:
 185              		.align	2
 186              	.L7:
 187 006c 00F807C0 		.word	-1073219584
 188              		.cfi_endproc
 189              	.LFE139:
 191              		.section	.text.draw_background,"ax",%progbits
 192              		.align	1
 193              		.global	draw_background
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv5-sp-d16
 199              	draw_background:
 200              	.LFB140:
 116:Src/gui.c     **** 
 117:Src/gui.c     **** // Draw the screen background
 118:Src/gui.c     **** void draw_background(void)
 119:Src/gui.c     **** {
 201              		.loc 1 119 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 10B5     		push	{r4, lr}
 206              	.LCFI2:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 4, -8
 209              		.cfi_offset 14, -4
 120:Src/gui.c     **** 	/* Select the LCD Background Layer  */
 121:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 210              		.loc 1 121 0
 211 0002 0020     		movs	r0, #0
 212 0004 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 213              	.LVL28:
 122:Src/gui.c     **** 	
 123:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 214              		.loc 1 123 0
 215 0008 4FF07F40 		mov	r0, #-16777216
 216 000c FFF7FEFF 		bl	BSP_LCD_SetTextColor
 217              	.LVL29:
 124:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[0][0], buttonsLeftUpper[0][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 218              		.loc 1 124 0
 219 0010 0E4C     		ldr	r4, .L11
 220 0012 4823     		movs	r3, #72
 221 0014 1A46     		mov	r2, r3
 222 0016 6188     		ldrh	r1, [r4, #2]
 223 0018 2088     		ldrh	r0, [r4]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 7


 224 001a FFF7FEFF 		bl	BSP_LCD_FillRect
 225              	.LVL30:
 125:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[1][0], buttonsLeftUpper[1][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 226              		.loc 1 125 0
 227 001e 4823     		movs	r3, #72
 228 0020 1A46     		mov	r2, r3
 229 0022 E188     		ldrh	r1, [r4, #6]
 230 0024 A088     		ldrh	r0, [r4, #4]
 231 0026 FFF7FEFF 		bl	BSP_LCD_FillRect
 232              	.LVL31:
 126:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[2][0], buttonsLeftUpper[2][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 233              		.loc 1 126 0
 234 002a 4823     		movs	r3, #72
 235 002c 1A46     		mov	r2, r3
 236 002e 6189     		ldrh	r1, [r4, #10]
 237 0030 2089     		ldrh	r0, [r4, #8]
 238 0032 FFF7FEFF 		bl	BSP_LCD_FillRect
 239              	.LVL32:
 127:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[3][0], buttonsLeftUpper[3][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 240              		.loc 1 127 0
 241 0036 4823     		movs	r3, #72
 242 0038 1A46     		mov	r2, r3
 243 003a E189     		ldrh	r1, [r4, #14]
 244 003c A089     		ldrh	r0, [r4, #12]
 245 003e FFF7FEFF 		bl	BSP_LCD_FillRect
 246              	.LVL33:
 128:Src/gui.c     **** 
 129:Src/gui.c     **** 	//select Foreground Layer
 130:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 247              		.loc 1 130 0
 248 0042 0120     		movs	r0, #1
 249 0044 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 250              	.LVL34:
 131:Src/gui.c     **** }
 251              		.loc 1 131 0
 252 0048 10BD     		pop	{r4, pc}
 253              	.L12:
 254 004a 00BF     		.align	2
 255              	.L11:
 256 004c 00000000 		.word	.LANCHOR0
 257              		.cfi_endproc
 258              	.LFE140:
 260              		.section	.text.initialize_touchscreen,"ax",%progbits
 261              		.align	1
 262              		.global	initialize_touchscreen
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu fpv5-sp-d16
 268              	initialize_touchscreen:
 269              	.LFB141:
 132:Src/gui.c     **** 
 133:Src/gui.c     **** // Initialize the touchscreen
 134:Src/gui.c     **** int initialize_touchscreen(void)
 135:Src/gui.c     **** {
 270              		.loc 1 135 0
 271              		.cfi_startproc
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 8


 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 10B5     		push	{r4, lr}
 275              	.LCFI3:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 4, -8
 278              		.cfi_offset 14, -4
 279              	.LVL35:
 136:Src/gui.c     **** 	uint8_t status = 0;
 137:Src/gui.c     **** 	status = BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
 280              		.loc 1 137 0
 281 0002 FFF7FEFF 		bl	BSP_LCD_GetXSize
 282              	.LVL36:
 283 0006 84B2     		uxth	r4, r0
 284 0008 FFF7FEFF 		bl	BSP_LCD_GetYSize
 285              	.LVL37:
 286 000c 81B2     		uxth	r1, r0
 287 000e 2046     		mov	r0, r4
 288 0010 FFF7FEFF 		bl	BSP_TS_Init
 289              	.LVL38:
 138:Src/gui.c     **** 	if(status != TS_OK) return -1;
 290              		.loc 1 138 0
 291 0014 08B9     		cbnz	r0, .L17
 139:Src/gui.c     **** 	return 0;
 292              		.loc 1 139 0
 293 0016 0020     		movs	r0, #0
 294              	.LVL39:
 295              	.L13:
 140:Src/gui.c     **** }
 296              		.loc 1 140 0
 297 0018 10BD     		pop	{r4, pc}
 298              	.LVL40:
 299              	.L17:
 138:Src/gui.c     **** 	if(status != TS_OK) return -1;
 300              		.loc 1 138 0
 301 001a 4FF0FF30 		mov	r0, #-1
 302              	.LVL41:
 303 001e FBE7     		b	.L13
 304              		.cfi_endproc
 305              	.LFE141:
 307              		.section	.text.touchscreen_loop_init,"ax",%progbits
 308              		.align	1
 309              		.global	touchscreen_loop_init
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 313              		.fpu fpv5-sp-d16
 315              	touchscreen_loop_init:
 316              	.LFB142:
 141:Src/gui.c     **** 
 142:Src/gui.c     **** // Call this once to init the TS-input-reading-loop
 143:Src/gui.c     **** void touchscreen_loop_init(void) 
 144:Src/gui.c     **** {
 317              		.loc 1 144 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 9


 321 0000 08B5     		push	{r3, lr}
 322              	.LCFI4:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 3, -8
 325              		.cfi_offset 14, -4
 145:Src/gui.c     ****     newX = 120;
 326              		.loc 1 145 0
 327 0002 7823     		movs	r3, #120
 328 0004 0A4A     		ldr	r2, .L20
 329 0006 1380     		strh	r3, [r2]	@ movhi
 146:Src/gui.c     **** 	newY = 120;
 330              		.loc 1 146 0
 331 0008 0A4A     		ldr	r2, .L20+4
 332 000a 1380     		strh	r3, [r2]	@ movhi
 147:Src/gui.c     ****     BSP_LCD_SelectLayer(LAYER_FG);
 333              		.loc 1 147 0
 334 000c 0120     		movs	r0, #1
 335 000e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 336              	.LVL42:
 148:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_GREEN);
 337              		.loc 1 148 0
 338 0012 4FF0FF20 		mov	r0, #-16711936
 339 0016 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 340              	.LVL43:
 149:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_FG, (uint8_t) 0xFF);
 341              		.loc 1 149 0
 342 001a FF21     		movs	r1, #255
 343 001c 0120     		movs	r0, #1
 344 001e FFF7FEFF 		bl	BSP_LCD_SetTransparency
 345              	.LVL44:
 150:Src/gui.c     **** 	BSP_LCD_SetColorKeying(LAYER_FG, LCD_COLOR_WHITE);
 346              		.loc 1 150 0
 347 0022 4FF0FF31 		mov	r1, #-1
 348 0026 0120     		movs	r0, #1
 349 0028 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
 350              	.LVL45:
 151:Src/gui.c     **** }
 351              		.loc 1 151 0
 352 002c 08BD     		pop	{r3, pc}
 353              	.L21:
 354 002e 00BF     		.align	2
 355              	.L20:
 356 0030 00000000 		.word	newX
 357 0034 00000000 		.word	newY
 358              		.cfi_endproc
 359              	.LFE142:
 361              		.global	__aeabi_i2d
 362              		.global	__aeabi_dadd
 363              		.global	__aeabi_dcmple
 364              		.section	.text.check_touchscreen,"ax",%progbits
 365              		.align	1
 366              		.global	check_touchscreen
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu fpv5-sp-d16
 372              	check_touchscreen:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 10


 373              	.LFB143:
 152:Src/gui.c     **** 
 153:Src/gui.c     **** // Single iteration of getting TS input
 154:Src/gui.c     **** Mp3_Player_State check_touchscreen(void) 
 155:Src/gui.c     **** {
 374              		.loc 1 155 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 379              	.LCFI5:
 380              		.cfi_def_cfa_offset 32
 381              		.cfi_offset 4, -32
 382              		.cfi_offset 5, -28
 383              		.cfi_offset 6, -24
 384              		.cfi_offset 7, -20
 385              		.cfi_offset 8, -16
 386              		.cfi_offset 9, -12
 387              		.cfi_offset 10, -8
 388              		.cfi_offset 14, -4
 156:Src/gui.c     **** 	uint32_t currentTicks = HAL_GetTick();
 389              		.loc 1 156 0
 390 0004 FFF7FEFF 		bl	HAL_GetTick
 391              	.LVL46:
 157:Src/gui.c     **** 	if (currentTicks < lastTicks + TICKS_DELTA)
 392              		.loc 1 157 0
 393 0008 3C4B     		ldr	r3, .L42
 394 000a 1B68     		ldr	r3, [r3]
 395 000c 6433     		adds	r3, r3, #100
 396 000e 8342     		cmp	r3, r0
 397 0010 6FD8     		bhi	.L33
 158:Src/gui.c     **** 		return EMPTY;
 159:Src/gui.c     **** 		
 160:Src/gui.c     **** 	
 161:Src/gui.c     ****     BSP_TS_GetState(&TS_State);
 398              		.loc 1 161 0
 399 0012 3B4C     		ldr	r4, .L42+4
 400 0014 2046     		mov	r0, r4
 401              	.LVL47:
 402 0016 FFF7FEFF 		bl	BSP_TS_GetState
 403              	.LVL48:
 162:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 404              		.loc 1 162 0
 405 001a 4FF0FF30 		mov	r0, #-1
 406 001e FFF7FEFF 		bl	BSP_LCD_Clear
 407              	.LVL49:
 163:Src/gui.c     **** 	if ((TS_State.touchX[0] & 0x0FFF) >= 40) 
 408              		.loc 1 163 0
 409 0022 6388     		ldrh	r3, [r4, #2]
 410 0024 C3F30B03 		ubfx	r3, r3, #0, #12
 411 0028 272B     		cmp	r3, #39
 412 002a 01D9     		bls	.L24
 164:Src/gui.c     ****     {
 165:Src/gui.c     **** 		newX = TS_State.touchX[0] & 0x0FFF;
 413              		.loc 1 165 0
 414 002c 354A     		ldr	r2, .L42+8
 415 002e 1380     		strh	r3, [r2]	@ movhi
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 11


 416              	.L24:
 166:Src/gui.c     **** 	}
 167:Src/gui.c     **** 	if ((TS_State.touchY[0] & 0x0FFF) >= 40) 
 417              		.loc 1 167 0
 418 0030 334B     		ldr	r3, .L42+4
 419 0032 9B89     		ldrh	r3, [r3, #12]
 420 0034 C3F30B03 		ubfx	r3, r3, #0, #12
 421 0038 272B     		cmp	r3, #39
 422 003a 01D9     		bls	.L25
 168:Src/gui.c     ****     {
 169:Src/gui.c     **** 		newY = TS_State.touchY[0] & 0x0FFF;
 423              		.loc 1 169 0
 424 003c 324A     		ldr	r2, .L42+12
 425 003e 1380     		strh	r3, [r2]	@ movhi
 426              	.L25:
 170:Src/gui.c     **** 	}
 171:Src/gui.c     **** 	
 172:Src/gui.c     **** 	if (lastState.touchX[0] == newX && lastState.touchY[0] == newY)
 427              		.loc 1 172 0
 428 0040 324B     		ldr	r3, .L42+16
 429 0042 5B88     		ldrh	r3, [r3, #2]
 430 0044 2F4A     		ldr	r2, .L42+8
 431 0046 1688     		ldrh	r6, [r2]
 432 0048 B342     		cmp	r3, r6
 433 004a 08D0     		beq	.L39
 434              	.L26:
 173:Src/gui.c     **** 		return EMPTY;
 174:Src/gui.c     **** 	
 175:Src/gui.c     **** 	lastState.touchX[0] = newX;
 435              		.loc 1 175 0
 436 004c 2F4B     		ldr	r3, .L42+16
 437 004e 5E80     		strh	r6, [r3, #2]	@ movhi
 176:Src/gui.c     **** 	lastState.touchY[0] = newY;
 438              		.loc 1 176 0
 439 0050 2D4A     		ldr	r2, .L42+12
 440 0052 B2F800A0 		ldrh	r10, [r2]
 441 0056 A3F80CA0 		strh	r10, [r3, #12]	@ movhi
 442              	.LVL50:
 443              	.LBB2:
 177:Src/gui.c     **** 	
 178:Src/gui.c     **** 	
 179:Src/gui.c     **** 	for(int i = 0; i < CONTROL_BUTTONS_NUMBER; i++) {
 444              		.loc 1 179 0
 445 005a 0024     		movs	r4, #0
 446 005c 0EE0     		b	.L27
 447              	.LVL51:
 448              	.L39:
 449              	.LBE2:
 172:Src/gui.c     **** 		return EMPTY;
 450              		.loc 1 172 0 discriminator 1
 451 005e 2B4B     		ldr	r3, .L42+16
 452 0060 9A89     		ldrh	r2, [r3, #12]
 453 0062 294B     		ldr	r3, .L42+12
 454 0064 1B88     		ldrh	r3, [r3]
 455 0066 9A42     		cmp	r2, r3
 456 0068 F0D1     		bne	.L26
 173:Src/gui.c     **** 	
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 12


 457              		.loc 1 173 0
 458 006a 0620     		movs	r0, #6
 459 006c 42E0     		b	.L23
 460              	.LVL52:
 461              	.L41:
 462              	.LBB6:
 463              	.LBB3:
 180:Src/gui.c     **** 	
 181:Src/gui.c     **** 		uint16_t buttonCornerX = buttonsLeftUpper[i][0];
 182:Src/gui.c     **** 		uint16_t buttonCornerY = buttonsLeftUpper[i][1];
 183:Src/gui.c     **** 		
 184:Src/gui.c     **** 		if (newX <= buttonCornerX + CONTROL_BUTTON_SIZE &&
 185:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 186:Src/gui.c     **** 			newX > buttonCornerX &&
 187:Src/gui.c     **** 			newY > buttonCornerY
 188:Src/gui.c     **** 		) {
 189:Src/gui.c     **** 		
 190:Src/gui.c     **** 		if (i == 1)
 191:Src/gui.c     **** 			if (playButtonState == PLAY)
 464              		.loc 1 191 0
 465 006e 284B     		ldr	r3, .L42+20
 466 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 467 0072 002B     		cmp	r3, #0
 468 0074 40D1     		bne	.L35
 192:Src/gui.c     **** 				return PAUSE;
 469              		.loc 1 192 0
 470 0076 0120     		movs	r0, #1
 471 0078 3CE0     		b	.L23
 472              	.L28:
 473              	.LBE3:
 179:Src/gui.c     **** 	
 474              		.loc 1 179 0 discriminator 2
 475 007a 0134     		adds	r4, r4, #1
 476              	.LVL53:
 477              	.L27:
 179:Src/gui.c     **** 	
 478              		.loc 1 179 0 is_stmt 0 discriminator 1
 479 007c 032C     		cmp	r4, #3
 480 007e 36DC     		bgt	.L40
 481              	.LBB4:
 181:Src/gui.c     **** 		uint16_t buttonCornerY = buttonsLeftUpper[i][1];
 482              		.loc 1 181 0 is_stmt 1
 483 0080 244B     		ldr	r3, .L42+24
 484 0082 33F82450 		ldrh	r5, [r3, r4, lsl #2]
 485              	.LVL54:
 182:Src/gui.c     **** 		
 486              		.loc 1 182 0
 487 0086 03EB8403 		add	r3, r3, r4, lsl #2
 488 008a 5F88     		ldrh	r7, [r3, #2]
 489              	.LVL55:
 184:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 490              		.loc 1 184 0
 491 008c 3046     		mov	r0, r6
 492 008e FFF7FEFF 		bl	__aeabi_i2d
 493              	.LVL56:
 494 0092 8046     		mov	r8, r0
 495 0094 8946     		mov	r9, r1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 13


 496 0096 2846     		mov	r0, r5
 497 0098 FFF7FEFF 		bl	__aeabi_i2d
 498              	.LVL57:
 499 009c 0022     		movs	r2, #0
 500 009e 1E4B     		ldr	r3, .L42+28
 501 00a0 FFF7FEFF 		bl	__aeabi_dadd
 502              	.LVL58:
 503 00a4 0246     		mov	r2, r0
 504 00a6 0B46     		mov	r3, r1
 505 00a8 4046     		mov	r0, r8
 506 00aa 4946     		mov	r1, r9
 507 00ac FFF7FEFF 		bl	__aeabi_dcmple
 508              	.LVL59:
 509 00b0 0028     		cmp	r0, #0
 510 00b2 E2D0     		beq	.L28
 185:Src/gui.c     **** 			newX > buttonCornerX &&
 511              		.loc 1 185 0 discriminator 1
 512 00b4 5046     		mov	r0, r10
 513 00b6 FFF7FEFF 		bl	__aeabi_i2d
 514              	.LVL60:
 515 00ba 8046     		mov	r8, r0
 516 00bc 8946     		mov	r9, r1
 517 00be 3846     		mov	r0, r7
 518 00c0 FFF7FEFF 		bl	__aeabi_i2d
 519              	.LVL61:
 520 00c4 0022     		movs	r2, #0
 521 00c6 144B     		ldr	r3, .L42+28
 522 00c8 FFF7FEFF 		bl	__aeabi_dadd
 523              	.LVL62:
 184:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 524              		.loc 1 184 0 discriminator 1
 525 00cc 0246     		mov	r2, r0
 526 00ce 0B46     		mov	r3, r1
 527 00d0 4046     		mov	r0, r8
 528 00d2 4946     		mov	r1, r9
 529 00d4 FFF7FEFF 		bl	__aeabi_dcmple
 530              	.LVL63:
 531 00d8 0028     		cmp	r0, #0
 532 00da CED0     		beq	.L28
 185:Src/gui.c     **** 			newX > buttonCornerX &&
 533              		.loc 1 185 0
 534 00dc AE42     		cmp	r6, r5
 535 00de CCD9     		bls	.L28
 186:Src/gui.c     **** 			newY > buttonCornerY
 536              		.loc 1 186 0
 537 00e0 BA45     		cmp	r10, r7
 538 00e2 CAD9     		bls	.L28
 190:Src/gui.c     **** 			if (playButtonState == PLAY)
 539              		.loc 1 190 0
 540 00e4 012C     		cmp	r4, #1
 541 00e6 C2D0     		beq	.L41
 193:Src/gui.c     **** 			else
 194:Src/gui.c     **** 				return PLAY;
 195:Src/gui.c     **** 		
 196:Src/gui.c     **** 		
 197:Src/gui.c     **** 		else
 198:Src/gui.c     **** 			return buttonState[i];	
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 14


 542              		.loc 1 198 0
 543 00e8 0C4B     		ldr	r3, .L42+32
 544 00ea 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 545 00ec 02E0     		b	.L23
 546              	.LVL64:
 547              	.L40:
 548              	.LBE4:
 549              	.LBE6:
 199:Src/gui.c     **** 		}
 200:Src/gui.c     **** 	}
 201:Src/gui.c     **** 	
 202:Src/gui.c     **** 	return EMPTY;
 550              		.loc 1 202 0
 551 00ee 0620     		movs	r0, #6
 552              	.LBB7:
 553 00f0 00E0     		b	.L23
 554              	.LVL65:
 555              	.L33:
 556              	.LBE7:
 158:Src/gui.c     **** 		
 557              		.loc 1 158 0
 558 00f2 0620     		movs	r0, #6
 559              	.LVL66:
 560              	.L23:
 203:Src/gui.c     **** 
 204:Src/gui.c     **** 	// vTaskDelay(10);
 205:Src/gui.c     **** }
 561              		.loc 1 205 0
 562 00f4 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 563              	.LVL67:
 564              	.L35:
 565              	.LBB8:
 566              	.LBB5:
 194:Src/gui.c     **** 		
 567              		.loc 1 194 0
 568 00f8 0020     		movs	r0, #0
 569 00fa FBE7     		b	.L23
 570              	.L43:
 571              		.align	2
 572              	.L42:
 573 00fc 00000000 		.word	.LANCHOR1
 574 0100 00000000 		.word	.LANCHOR2
 575 0104 00000000 		.word	newX
 576 0108 00000000 		.word	newY
 577 010c 00000000 		.word	.LANCHOR3
 578 0110 00000000 		.word	.LANCHOR4
 579 0114 00000000 		.word	.LANCHOR0
 580 0118 00005240 		.word	1079115776
 581 011c 00000000 		.word	.LANCHOR5
 582              	.LBE5:
 583              	.LBE8:
 584              		.cfi_endproc
 585              	.LFE143:
 587              		.global	__aeabi_dmul
 588              		.global	__aeabi_d2uiz
 589              		.section	.text.getXPix,"ax",%progbits
 590              		.align	1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 15


 591              		.global	getXPix
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 595              		.fpu fpv5-sp-d16
 597              	getXPix:
 598              	.LFB144:
 206:Src/gui.c     **** 
 207:Src/gui.c     **** uint16_t getXPix (double factor)  {
 599              		.loc 1 207 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              	.LVL68:
 604 0000 08B5     		push	{r3, lr}
 605              	.LCFI6:
 606              		.cfi_def_cfa_offset 8
 607              		.cfi_offset 3, -8
 608              		.cfi_offset 14, -4
 208:Src/gui.c     **** 	return factor * LCD_X_SIZE;
 609              		.loc 1 208 0
 610 0002 0022     		movs	r2, #0
 611 0004 044B     		ldr	r3, .L46
 612 0006 51EC100B 		vmov	r0, r1, d0
 613 000a FFF7FEFF 		bl	__aeabi_dmul
 614              	.LVL69:
 615 000e FFF7FEFF 		bl	__aeabi_d2uiz
 616              	.LVL70:
 209:Src/gui.c     **** }
 617              		.loc 1 209 0
 618 0012 80B2     		uxth	r0, r0
 619 0014 08BD     		pop	{r3, pc}
 620              	.L47:
 621 0016 00BF     		.align	2
 622              	.L46:
 623 0018 00007E40 		.word	1081999360
 624              		.cfi_endproc
 625              	.LFE144:
 627              		.section	.text.getYPix,"ax",%progbits
 628              		.align	1
 629              		.global	getYPix
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu fpv5-sp-d16
 635              	getYPix:
 636              	.LFB145:
 210:Src/gui.c     **** 
 211:Src/gui.c     **** uint16_t getYPix (double factor)  {
 637              		.loc 1 211 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              	.LVL71:
 642 0000 08B5     		push	{r3, lr}
 643              	.LCFI7:
 644              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 16


 645              		.cfi_offset 3, -8
 646              		.cfi_offset 14, -4
 212:Src/gui.c     **** 	return factor * LCD_Y_SIZE;
 647              		.loc 1 212 0
 648 0002 0022     		movs	r2, #0
 649 0004 044B     		ldr	r3, .L50
 650 0006 51EC100B 		vmov	r0, r1, d0
 651 000a FFF7FEFF 		bl	__aeabi_dmul
 652              	.LVL72:
 653 000e FFF7FEFF 		bl	__aeabi_d2uiz
 654              	.LVL73:
 213:Src/gui.c     **** }...
 655              		.loc 1 213 0
 656 0012 80B2     		uxth	r0, r0
 657 0014 08BD     		pop	{r3, pc}
 658              	.L51:
 659 0016 00BF     		.align	2
 660              	.L50:
 661 0018 00007140 		.word	1081147392
 662              		.cfi_endproc
 663              	.LFE145:
 665              		.global	lastTicks
 666              		.global	playButtonState
 667              		.global	buttonState
 668              		.global	buttonsLeftUpper
 669              		.comm	newY,2,2
 670              		.comm	newX,2,2
 671              		.section	.bss.TS_State,"aw",%nobits
 672              		.align	2
 673              		.set	.LANCHOR2,. + 0
 676              	TS_State:
 677 0000 00000000 		.space	44
 677      00000000 
 677      00000000 
 677      00000000 
 677      00000000 
 678              		.section	.bss.lastState,"aw",%nobits
 679              		.align	2
 680              		.set	.LANCHOR3,. + 0
 683              	lastState:
 684 0000 00000000 		.space	44
 684      00000000 
 684      00000000 
 684      00000000 
 684      00000000 
 685              		.section	.bss.lastTicks,"aw",%nobits
 686              		.align	2
 687              		.set	.LANCHOR1,. + 0
 690              	lastTicks:
 691 0000 00000000 		.space	4
 692              		.section	.bss.playButtonState,"aw",%nobits
 693              		.set	.LANCHOR4,. + 0
 696              	playButtonState:
 697 0000 00       		.space	1
 698              		.section	.data.buttonState,"aw",%progbits
 699              		.align	2
 700              		.set	.LANCHOR5,. + 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 17


 703              	buttonState:
 704 0000 04       		.byte	4
 705 0001 00       		.byte	0
 706 0002 02       		.byte	2
 707 0003 03       		.byte	3
 708              		.section	.data.buttonsLeftUpper,"aw",%progbits
 709              		.align	2
 710              		.set	.LANCHOR0,. + 0
 713              	buttonsLeftUpper:
 714 0000 2600     		.short	38
 715 0002 BE00     		.short	190
 716 0004 9400     		.short	148
 717 0006 BE00     		.short	190
 718 0008 0301     		.short	259
 719 000a BE00     		.short	190
 720 000c 7101     		.short	369
 721 000e BE00     		.short	190
 722              		.text
 723              	.Letext0:
 724              		.file 2 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\machine\\_default
 725              		.file 3 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 726              		.file 4 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 727              		.file 5 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\
 728              		.file 6 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 729              		.file 7 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 730              		.file 8 "Inc/mp3_player.h"
 731              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 732              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 733              		.file 11 "c:\\users\\patryk\\desktop\\aaaaa13\\utilities\\fonts\\fonts.h"
 734              		.file 12 "c:\\users\\patryk\\desktop\\aaaaa13\\drivers\\bsp\\components\\common\\ts.h"
 735              		.file 13 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/ft5336.h"
 736              		.file 14 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_ts.h"
 737              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 738              		.file 16 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_lcd.h"
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 gui.c
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:18     .text.lcd_start:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:25     .text.lcd_start:00000000 lcd_start
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:97     .text.lcd_start:00000064 $d
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:102    .text.LCD_Start_v2:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:109    .text.LCD_Start_v2:00000000 LCD_Start_v2
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:187    .text.LCD_Start_v2:0000006c $d
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:192    .text.draw_background:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:199    .text.draw_background:00000000 draw_background
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:256    .text.draw_background:0000004c $d
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:261    .text.initialize_touchscreen:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:268    .text.initialize_touchscreen:00000000 initialize_touchscreen
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:308    .text.touchscreen_loop_init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:315    .text.touchscreen_loop_init:00000000 touchscreen_loop_init
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:356    .text.touchscreen_loop_init:00000030 $d
                            *COM*:00000002 newX
                            *COM*:00000002 newY
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:365    .text.check_touchscreen:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:372    .text.check_touchscreen:00000000 check_touchscreen
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:573    .text.check_touchscreen:000000fc $d
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:590    .text.getXPix:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:597    .text.getXPix:00000000 getXPix
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:623    .text.getXPix:00000018 $d
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:628    .text.getYPix:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:635    .text.getYPix:00000000 getYPix
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:661    .text.getYPix:00000018 $d
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:690    .bss.lastTicks:00000000 lastTicks
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:696    .bss.playButtonState:00000000 playButtonState
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:703    .data.buttonState:00000000 buttonState
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:713    .data.buttonsLeftUpper:00000000 buttonsLeftUpper
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:672    .bss.TS_State:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:676    .bss.TS_State:00000000 TS_State
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:679    .bss.lastState:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:683    .bss.lastState:00000000 lastState
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:686    .bss.lastTicks:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:697    .bss.playButtonState:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:699    .data.buttonState:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s:709    .data.buttonsLeftUpper:00000000 $d

UNDEFINED SYMBOLS
BSP_LCD_Init
BSP_LCD_LayerDefaultInit
BSP_LCD_DisplayOn
BSP_LCD_SelectLayer
BSP_LCD_Clear
BSP_LCD_SetBackColor
BSP_LCD_SetColorKeying
BSP_LCD_SetTransparency
BSP_LCD_SetTextColor
BSP_LCD_ResetColorKeying
BSP_LCD_Reload
BSP_LCD_FillRect
BSP_LCD_GetXSize
BSP_LCD_GetYSize
BSP_TS_Init
__aeabi_i2d
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccG2bHrl.s 			page 19


__aeabi_dadd
__aeabi_dcmple
HAL_GetTick
BSP_TS_GetState
__aeabi_dmul
__aeabi_d2uiz
