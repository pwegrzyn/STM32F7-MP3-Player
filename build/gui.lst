ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"gui.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lcd_start,"ax",%progbits
  18              		.align	1
  19              		.global	lcd_start
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	lcd_start:
  26              	.LFB136:
  27              		.file 1 "Src/gui.c"
   1:Src/gui.c     **** /*
   2:Src/gui.c     ****  *	Graphical User Interface
   3:Src/gui.c     ****  *  Touchscreen
   4:Src/gui.c     ****  */
   5:Src/gui.c     **** 
   6:Src/gui.c     **** #include <stdio.h>
   7:Src/gui.c     **** #include <string.h>
   8:Src/gui.c     **** 
   9:Src/gui.c     **** #include "mp3_player.h"
  10:Src/gui.c     **** #include "stm32746g_discovery_lcd.h"
  11:Src/gui.c     **** #include "Utilities/Fonts/fonts.h"
  12:Src/gui.c     **** #include "stm32746g_discovery_ts.h"
  13:Src/gui.c     **** #include "term_io.h"
  14:Src/gui.c     **** #include "dbgu.h"
  15:Src/gui.c     **** #include "ansi.h"
  16:Src/gui.c     **** #include "stm32f7xx_hal.h"
  17:Src/gui.c     **** 
  18:Src/gui.c     **** #define LCD_X_SIZE			RK043FN48H_WIDTH
  19:Src/gui.c     **** #define LCD_Y_SIZE			RK043FN48H_HEIGHT
  20:Src/gui.c     **** #define LAYER_FG 1
  21:Src/gui.c     **** #define LAYER_BG 0
  22:Src/gui.c     **** 
  23:Src/gui.c     **** #define CONTROL_BUTTON_SIZE 0.15 * LCD_X_SIZE
  24:Src/gui.c     **** #define CONTROL_BUTTONS_NUMBER 4
  25:Src/gui.c     **** #define TICKS_DELTA 100
  26:Src/gui.c     **** 
  27:Src/gui.c     **** #define XPix(x) x * LCD_X_SIZE
  28:Src/gui.c     **** #define YPix(x) x * LCD_Y_SIZE
  29:Src/gui.c     **** // Not sure about these two guys (may be used in LCD_START_V2() in LayerDefaultInit()?)
  30:Src/gui.c     **** // static uint32_t lcd_image_fg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attrib
  31:Src/gui.c     **** // static uint32_t lcd_image_bg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attrib
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 2


  32:Src/gui.c     **** 
  33:Src/gui.c     **** /* ------------------------------------------------------------------- */
  34:Src/gui.c     **** 
  35:Src/gui.c     **** static TS_StateTypeDef TS_State;
  36:Src/gui.c     **** static TS_StateTypeDef lastState;
  37:Src/gui.c     **** uint16_t newX;
  38:Src/gui.c     **** uint16_t newY;
  39:Src/gui.c     **** uint16_t buttonsLeftUpper[4][2] = { {XPix(0.08), YPix(0.7)}, {XPix(0.31), YPix(0.7)}, {XPix(0.54), 
  40:Src/gui.c     **** Mp3_Player_State buttonState[4] = { PREV, PLAY, STOP, NEXT };
  41:Src/gui.c     **** Mp3_Player_State playButtonState = PLAY;
  42:Src/gui.c     **** uint32_t lastTicks = 0;
  43:Src/gui.c     **** 
  44:Src/gui.c     **** /* ------------------------------------------------------------------- */
  45:Src/gui.c     **** 
  46:Src/gui.c     **** void lcd_start(void);
  47:Src/gui.c     **** void LCD_Start_v2(void);
  48:Src/gui.c     **** void draw_background(void);
  49:Src/gui.c     **** int initialize_touchscreen(void);
  50:Src/gui.c     **** void touchscreen_loop_init(void);
  51:Src/gui.c     **** Mp3_Player_State check_touchscreen(double);
  52:Src/gui.c     **** uint16_t getXPix (double factor);
  53:Src/gui.c     **** uint16_t getYPix (double factor);
  54:Src/gui.c     **** void refresh_screen(const char *info_text);
  55:Src/gui.c     **** void draw_buttons(void);
  56:Src/gui.c     **** 
  57:Src/gui.c     **** /* ------------------------------------------------------------------- */
  58:Src/gui.c     **** 
  59:Src/gui.c     **** // Initialize the LCD display
  60:Src/gui.c     **** void lcd_start(void)
  61:Src/gui.c     **** {
  28              		.loc 1 61 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  62:Src/gui.c     ****   /* LCD Initialization */
  63:Src/gui.c     ****   BSP_LCD_Init();
  37              		.loc 1 63 0
  38 0002 FFF7FEFF 		bl	BSP_LCD_Init
  39              	.LVL0:
  64:Src/gui.c     **** 
  65:Src/gui.c     ****   /* LCD Initialization */
  66:Src/gui.c     ****   BSP_LCD_LayerDefaultInit(LAYER_BG, (unsigned int)0xC0000000);
  40              		.loc 1 66 0
  41 0006 4FF04041 		mov	r1, #-1073741824
  42 000a 0020     		movs	r0, #0
  43 000c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
  44              	.LVL1:
  67:Src/gui.c     ****   //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
  68:Src/gui.c     ****   BSP_LCD_LayerDefaultInit(LAYER_FG, (unsigned int)0xC0000000+(LCD_X_SIZE*LCD_Y_SIZE*4));
  45              		.loc 1 68 0
  46 0010 1449     		ldr	r1, .L3
  47 0012 0120     		movs	r0, #1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 3


  48 0014 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
  49              	.LVL2:
  69:Src/gui.c     **** 
  70:Src/gui.c     ****   /* Enable the LCD */
  71:Src/gui.c     ****   BSP_LCD_DisplayOn();
  50              		.loc 1 71 0
  51 0018 FFF7FEFF 		bl	BSP_LCD_DisplayOn
  52              	.LVL3:
  72:Src/gui.c     **** 
  73:Src/gui.c     ****   /* Select the LCD Background Layer  */
  74:Src/gui.c     ****   BSP_LCD_SelectLayer(LAYER_BG);
  53              		.loc 1 74 0
  54 001c 0020     		movs	r0, #0
  55 001e FFF7FEFF 		bl	BSP_LCD_SelectLayer
  56              	.LVL4:
  75:Src/gui.c     **** 
  76:Src/gui.c     ****   /* Clear the Background Layer */
  77:Src/gui.c     ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
  57              		.loc 1 77 0
  58 0022 4FF0FF30 		mov	r0, #-1
  59 0026 FFF7FEFF 		bl	BSP_LCD_Clear
  60              	.LVL5:
  78:Src/gui.c     ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
  61              		.loc 1 78 0
  62 002a 4FF0FF30 		mov	r0, #-1
  63 002e FFF7FEFF 		bl	BSP_LCD_SetBackColor
  64              	.LVL6:
  79:Src/gui.c     **** 
  80:Src/gui.c     ****   BSP_LCD_SetColorKeying(LAYER_FG,LCD_COLOR_WHITE);
  65              		.loc 1 80 0
  66 0032 4FF0FF31 		mov	r1, #-1
  67 0036 0120     		movs	r0, #1
  68 0038 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
  69              	.LVL7:
  81:Src/gui.c     **** 
  82:Src/gui.c     ****   /* Select the LCD Foreground Layer  */
  83:Src/gui.c     ****   BSP_LCD_SelectLayer(LAYER_FG);
  70              		.loc 1 83 0
  71 003c 0120     		movs	r0, #1
  72 003e FFF7FEFF 		bl	BSP_LCD_SelectLayer
  73              	.LVL8:
  84:Src/gui.c     **** 
  85:Src/gui.c     ****   /* Clear the Foreground Layer */
  86:Src/gui.c     ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
  74              		.loc 1 86 0
  75 0042 4FF0FF30 		mov	r0, #-1
  76 0046 FFF7FEFF 		bl	BSP_LCD_Clear
  77              	.LVL9:
  87:Src/gui.c     ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
  78              		.loc 1 87 0
  79 004a 4FF0FF30 		mov	r0, #-1
  80 004e FFF7FEFF 		bl	BSP_LCD_SetBackColor
  81              	.LVL10:
  88:Src/gui.c     **** 
  89:Src/gui.c     ****   /* Configure the transparency for foreground and background :
  90:Src/gui.c     ****      Increase the transparency */
  91:Src/gui.c     ****   BSP_LCD_SetTransparency(LAYER_BG, 255);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 4


  82              		.loc 1 91 0
  83 0052 FF21     		movs	r1, #255
  84 0054 0020     		movs	r0, #0
  85 0056 FFF7FEFF 		bl	BSP_LCD_SetTransparency
  86              	.LVL11:
  92:Src/gui.c     ****   BSP_LCD_SetTransparency(LAYER_FG, 255);
  87              		.loc 1 92 0
  88 005a FF21     		movs	r1, #255
  89 005c 0120     		movs	r0, #1
  90 005e FFF7FEFF 		bl	BSP_LCD_SetTransparency
  91              	.LVL12:
  92 0062 08BD     		pop	{r3, pc}
  93              	.L4:
  94              		.align	2
  95              	.L3:
  96 0064 00F807C0 		.word	-1073219584
  97              		.cfi_endproc
  98              	.LFE136:
 100              		.section	.text.LCD_Start_v2,"ax",%progbits
 101              		.align	1
 102              		.global	LCD_Start_v2
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv5-sp-d16
 108              	LCD_Start_v2:
 109              	.LFB137:
  93:Src/gui.c     **** }
  94:Src/gui.c     **** 
  95:Src/gui.c     **** // We can go with this instead probably
  96:Src/gui.c     **** void LCD_Start_v2(void)
  97:Src/gui.c     **** {
 110              		.loc 1 97 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114 0000 08B5     		push	{r3, lr}
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 3, -8
 118              		.cfi_offset 14, -4
  98:Src/gui.c     **** 	BSP_LCD_Init();
 119              		.loc 1 98 0
 120 0002 FFF7FEFF 		bl	BSP_LCD_Init
 121              	.LVL13:
  99:Src/gui.c     **** 	BSP_LCD_LayerDefaultInit(LAYER_FG, (unsigned int)0xC0000000);
 122              		.loc 1 99 0
 123 0006 4FF04041 		mov	r1, #-1073741824
 124 000a 0120     		movs	r0, #1
 125 000c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 126              	.LVL14:
 100:Src/gui.c     **** 	BSP_LCD_LayerDefaultInit(LAYER_BG, (unsigned int)0xC0000000+(LCD_X_SIZE*LCD_Y_SIZE*4));
 127              		.loc 1 100 0
 128 0010 1649     		ldr	r1, .L7
 129 0012 0020     		movs	r0, #0
 130 0014 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 131              	.LVL15:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 5


 101:Src/gui.c     **** 
 102:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 132              		.loc 1 102 0
 133 0018 0120     		movs	r0, #1
 134 001a FFF7FEFF 		bl	BSP_LCD_SelectLayer
 135              	.LVL16:
 103:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 136              		.loc 1 103 0
 137 001e 4FF0FF30 		mov	r0, #-1
 138 0022 FFF7FEFF 		bl	BSP_LCD_Clear
 139              	.LVL17:
 104:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 140              		.loc 1 104 0
 141 0026 0020     		movs	r0, #0
 142 0028 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 143              	.LVL18:
 105:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 144              		.loc 1 105 0
 145 002c 4FF0FF30 		mov	r0, #-1
 146 0030 FFF7FEFF 		bl	BSP_LCD_Clear
 147              	.LVL19:
 106:Src/gui.c     **** 	BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 148              		.loc 1 106 0
 149 0034 4FF0FF30 		mov	r0, #-1
 150 0038 FFF7FEFF 		bl	BSP_LCD_SetBackColor
 151              	.LVL20:
 107:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 152              		.loc 1 107 0
 153 003c 4FF07F40 		mov	r0, #-16777216
 154 0040 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 155              	.LVL21:
 108:Src/gui.c     **** 
 109:Src/gui.c     **** 	BSP_LCD_ResetColorKeying(LAYER_FG);
 156              		.loc 1 109 0
 157 0044 0120     		movs	r0, #1
 158 0046 FFF7FEFF 		bl	BSP_LCD_ResetColorKeying
 159              	.LVL22:
 110:Src/gui.c     **** 	BSP_LCD_ResetColorKeying(LAYER_BG);
 160              		.loc 1 110 0
 161 004a 0020     		movs	r0, #0
 162 004c FFF7FEFF 		bl	BSP_LCD_ResetColorKeying
 163              	.LVL23:
 111:Src/gui.c     **** 
 112:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_FG, (uint8_t) 100);
 164              		.loc 1 112 0
 165 0050 6421     		movs	r1, #100
 166 0052 0120     		movs	r0, #1
 167 0054 FFF7FEFF 		bl	BSP_LCD_SetTransparency
 168              	.LVL24:
 113:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_BG, (uint8_t) 0xFF);
 169              		.loc 1 113 0
 170 0058 FF21     		movs	r1, #255
 171 005a 0020     		movs	r0, #0
 172 005c FFF7FEFF 		bl	BSP_LCD_SetTransparency
 173              	.LVL25:
 114:Src/gui.c     **** 
 115:Src/gui.c     **** 	BSP_LCD_Reload(LCD_RELOAD_VERTICAL_BLANKING);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 6


 174              		.loc 1 115 0
 175 0060 0220     		movs	r0, #2
 176 0062 FFF7FEFF 		bl	BSP_LCD_Reload
 177              	.LVL26:
 116:Src/gui.c     **** 	BSP_LCD_DisplayOn();
 178              		.loc 1 116 0
 179 0066 FFF7FEFF 		bl	BSP_LCD_DisplayOn
 180              	.LVL27:
 181 006a 08BD     		pop	{r3, pc}
 182              	.L8:
 183              		.align	2
 184              	.L7:
 185 006c 00F807C0 		.word	-1073219584
 186              		.cfi_endproc
 187              	.LFE137:
 189              		.section	.text.initialize_touchscreen,"ax",%progbits
 190              		.align	1
 191              		.global	initialize_touchscreen
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv5-sp-d16
 197              	initialize_touchscreen:
 198              	.LFB139:
 117:Src/gui.c     **** }
 118:Src/gui.c     **** 
 119:Src/gui.c     **** // Draw the screen background
 120:Src/gui.c     **** void draw_background(void)
 121:Src/gui.c     **** {
 122:Src/gui.c     **** 	/* Select the LCD Background Layer  */
 123:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 124:Src/gui.c     **** 
 125:Src/gui.c     **** 	draw_buttons();
 126:Src/gui.c     **** 
 127:Src/gui.c     **** 	BSP_LCD_DrawHLine(0, YPix(0.4), LCD_X_SIZE);
 128:Src/gui.c     **** 	BSP_LCD_DrawHLine(0, YPix(0.5), LCD_X_SIZE);
 129:Src/gui.c     **** 
 130:Src/gui.c     **** 	//select Foreground Layer
 131:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 132:Src/gui.c     **** }
 133:Src/gui.c     **** 
 134:Src/gui.c     **** // Initialize the touchscreen
 135:Src/gui.c     **** int initialize_touchscreen(void)
 136:Src/gui.c     **** {
 199              		.loc 1 136 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 10B5     		push	{r4, lr}
 204              	.LCFI2:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 4, -8
 207              		.cfi_offset 14, -4
 208              	.LVL28:
 137:Src/gui.c     **** 	uint8_t status = 0;
 138:Src/gui.c     **** 	status = BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
 209              		.loc 1 138 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 7


 210 0002 FFF7FEFF 		bl	BSP_LCD_GetXSize
 211              	.LVL29:
 212 0006 84B2     		uxth	r4, r0
 213 0008 FFF7FEFF 		bl	BSP_LCD_GetYSize
 214              	.LVL30:
 215 000c 81B2     		uxth	r1, r0
 216 000e 2046     		mov	r0, r4
 217 0010 FFF7FEFF 		bl	BSP_TS_Init
 218              	.LVL31:
 139:Src/gui.c     **** 	if(status != TS_OK) return -1;
 219              		.loc 1 139 0
 220 0014 08B9     		cbnz	r0, .L13
 140:Src/gui.c     **** 	return 0;
 221              		.loc 1 140 0
 222 0016 0020     		movs	r0, #0
 223              	.LVL32:
 141:Src/gui.c     **** }
 224              		.loc 1 141 0
 225 0018 10BD     		pop	{r4, pc}
 226              	.LVL33:
 227              	.L13:
 139:Src/gui.c     **** 	if(status != TS_OK) return -1;
 228              		.loc 1 139 0
 229 001a 4FF0FF30 		mov	r0, #-1
 230              	.LVL34:
 231 001e 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE139:
 235              		.section	.text.touchscreen_loop_init,"ax",%progbits
 236              		.align	1
 237              		.global	touchscreen_loop_init
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu fpv5-sp-d16
 243              	touchscreen_loop_init:
 244              	.LFB140:
 142:Src/gui.c     **** 
 143:Src/gui.c     **** // Call this once to init the TS-input-reading-loop
 144:Src/gui.c     **** void touchscreen_loop_init(void)
 145:Src/gui.c     **** {
 245              		.loc 1 145 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249 0000 08B5     		push	{r3, lr}
 250              	.LCFI3:
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 3, -8
 253              		.cfi_offset 14, -4
 146:Src/gui.c     ****     newX = 120;
 254              		.loc 1 146 0
 255 0002 7823     		movs	r3, #120
 256 0004 0A4A     		ldr	r2, .L16
 257 0006 1380     		strh	r3, [r2]	@ movhi
 147:Src/gui.c     **** 	newY = 120;
 258              		.loc 1 147 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 8


 259 0008 0A4A     		ldr	r2, .L16+4
 260 000a 1380     		strh	r3, [r2]	@ movhi
 148:Src/gui.c     ****     BSP_LCD_SelectLayer(LAYER_FG);
 261              		.loc 1 148 0
 262 000c 0120     		movs	r0, #1
 263 000e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 264              	.LVL35:
 149:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_GREEN);
 265              		.loc 1 149 0
 266 0012 4FF0FF20 		mov	r0, #-16711936
 267 0016 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 268              	.LVL36:
 150:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_FG, (uint8_t) 0xFF);
 269              		.loc 1 150 0
 270 001a FF21     		movs	r1, #255
 271 001c 0120     		movs	r0, #1
 272 001e FFF7FEFF 		bl	BSP_LCD_SetTransparency
 273              	.LVL37:
 151:Src/gui.c     **** 	BSP_LCD_SetColorKeying(LAYER_FG, LCD_COLOR_WHITE);
 274              		.loc 1 151 0
 275 0022 4FF0FF31 		mov	r1, #-1
 276 0026 0120     		movs	r0, #1
 277 0028 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
 278              	.LVL38:
 279 002c 08BD     		pop	{r3, pc}
 280              	.L17:
 281 002e 00BF     		.align	2
 282              	.L16:
 283 0030 00000000 		.word	newX
 284 0034 00000000 		.word	newY
 285              		.cfi_endproc
 286              	.LFE140:
 288              		.global	__aeabi_dmul
 289              		.global	__aeabi_d2uiz
 290              		.global	__aeabi_i2d
 291              		.global	__aeabi_dadd
 292              		.global	__aeabi_dcmple
 293              		.section	.text.check_touchscreen,"ax",%progbits
 294              		.align	1
 295              		.global	check_touchscreen
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu fpv5-sp-d16
 301              	check_touchscreen:
 302              	.LFB141:
 152:Src/gui.c     **** }
 153:Src/gui.c     **** 
 154:Src/gui.c     **** // Single iteration of getting TS input
 155:Src/gui.c     **** Mp3_Player_State check_touchscreen(double percent)
 156:Src/gui.c     **** {
 303              		.loc 1 156 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              	.LVL39:
 308 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 9


 309              	.LCFI4:
 310              		.cfi_def_cfa_offset 32
 311              		.cfi_offset 4, -32
 312              		.cfi_offset 5, -28
 313              		.cfi_offset 6, -24
 314              		.cfi_offset 7, -20
 315              		.cfi_offset 8, -16
 316              		.cfi_offset 9, -12
 317              		.cfi_offset 10, -8
 318              		.cfi_offset 14, -4
 157:Src/gui.c     **** 	BSP_LCD_FillRect(0, YPix(0.2),  percent * LCD_X_SIZE, 30);
 319              		.loc 1 157 0
 320 0004 0022     		movs	r2, #0
 321 0006 4D4B     		ldr	r3, .L42
 322 0008 51EC100B 		vmov	r0, r1, d0
 323 000c FFF7FEFF 		bl	__aeabi_dmul
 324              	.LVL40:
 325 0010 FFF7FEFF 		bl	__aeabi_d2uiz
 326              	.LVL41:
 327 0014 1E23     		movs	r3, #30
 328 0016 82B2     		uxth	r2, r0
 329 0018 3621     		movs	r1, #54
 330 001a 0020     		movs	r0, #0
 331 001c FFF7FEFF 		bl	BSP_LCD_FillRect
 332              	.LVL42:
 158:Src/gui.c     **** 	
 159:Src/gui.c     **** 	uint32_t currentTicks = HAL_GetTick();
 333              		.loc 1 159 0
 334 0020 FFF7FEFF 		bl	HAL_GetTick
 335              	.LVL43:
 160:Src/gui.c     **** 	
 161:Src/gui.c     **** 	if (currentTicks < lastTicks + TICKS_DELTA)
 336              		.loc 1 161 0
 337 0024 464B     		ldr	r3, .L42+4
 338 0026 1B68     		ldr	r3, [r3]
 339 0028 6433     		adds	r3, r3, #100
 340 002a 9842     		cmp	r0, r3
 341 002c 02D2     		bcs	.L36
 162:Src/gui.c     **** 		return EMPTY;
 342              		.loc 1 162 0
 343 002e 0620     		movs	r0, #6
 344              	.LVL44:
 345 0030 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 346              	.LVL45:
 347              	.L36:
 163:Src/gui.c     **** 	
 164:Src/gui.c     **** 	lastTicks = currentTicks;
 348              		.loc 1 164 0
 349 0034 424B     		ldr	r3, .L42+4
 350 0036 1860     		str	r0, [r3]
 165:Src/gui.c     **** 	
 166:Src/gui.c     ****     BSP_TS_GetState(&TS_State);
 351              		.loc 1 166 0
 352 0038 424C     		ldr	r4, .L42+8
 353 003a 2046     		mov	r0, r4
 354              	.LVL46:
 355 003c FFF7FEFF 		bl	BSP_TS_GetState
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 10


 356              	.LVL47:
 167:Src/gui.c     **** 	if (TS_State.touchDetected == 0)
 357              		.loc 1 167 0
 358 0040 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 359 0042 13B9     		cbnz	r3, .L37
 168:Src/gui.c     **** 		return EMPTY;
 360              		.loc 1 168 0
 361 0044 0620     		movs	r0, #6
 169:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 170:Src/gui.c     **** 	if ((TS_State.touchX[0] & 0x0FFF) >= 40)
 171:Src/gui.c     ****     {
 172:Src/gui.c     **** 		newX = TS_State.touchX[0] & 0x0FFF;
 173:Src/gui.c     **** 	}
 174:Src/gui.c     **** 	if ((TS_State.touchY[0] & 0x0FFF) >= 40)
 175:Src/gui.c     ****     {
 176:Src/gui.c     **** 		newY = TS_State.touchY[0] & 0x0FFF;
 177:Src/gui.c     **** 	}
 178:Src/gui.c     **** 	xprintf("%d\n", TS_State.touchDetected);
 179:Src/gui.c     **** 
 180:Src/gui.c     **** 	//if (lastState.touchX[0] == newX && lastState.touchY[0] == newY)
 181:Src/gui.c     **** 	//	return EMPTY;
 182:Src/gui.c     **** 
 183:Src/gui.c     **** 	lastState.touchX[0] = newX;
 184:Src/gui.c     **** 	lastState.touchY[0] = newY;
 185:Src/gui.c     **** 
 186:Src/gui.c     **** 
 187:Src/gui.c     **** 	for(int i = 0; i < CONTROL_BUTTONS_NUMBER; i++) {
 188:Src/gui.c     **** 
 189:Src/gui.c     **** 		uint16_t buttonCornerX = buttonsLeftUpper[i][0];
 190:Src/gui.c     **** 		uint16_t buttonCornerY = buttonsLeftUpper[i][1];
 191:Src/gui.c     **** 
 192:Src/gui.c     **** 		if (newX <= buttonCornerX + CONTROL_BUTTON_SIZE &&
 193:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 194:Src/gui.c     **** 			newX > buttonCornerX &&
 195:Src/gui.c     **** 			newY > buttonCornerY
 196:Src/gui.c     **** 		) {
 197:Src/gui.c     **** 
 198:Src/gui.c     **** 		if (i == 1 || i == 2) {
 199:Src/gui.c     **** 			if (playButtonState == PLAY) {
 200:Src/gui.c     ****                 playButtonState = PAUSE;
 201:Src/gui.c     **** 			}
 202:Src/gui.c     **** 
 203:Src/gui.c     **** 			else {
 204:Src/gui.c     ****                 playButtonState = PLAY;
 205:Src/gui.c     **** 			}
 206:Src/gui.c     **** 		}
 207:Src/gui.c     **** 		if (i == 1)
 208:Src/gui.c     **** 			return playButtonState;
 209:Src/gui.c     **** 		else if (i == 2) {
 210:Src/gui.c     **** 			playButtonState = PAUSE;
 211:Src/gui.c     **** 			return STOP;
 212:Src/gui.c     **** 		}
 213:Src/gui.c     **** 		
 214:Src/gui.c     **** 		else
 215:Src/gui.c     **** 			return buttonState[i];
 216:Src/gui.c     **** 		}
 217:Src/gui.c     **** 	}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 11


 218:Src/gui.c     **** 
 219:Src/gui.c     **** 	return EMPTY;
 220:Src/gui.c     **** 
 221:Src/gui.c     **** 	// vTaskDelay(10);
 222:Src/gui.c     **** }
 362              		.loc 1 222 0
 363 0046 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 364              	.L37:
 169:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 365              		.loc 1 169 0
 366 004a 4FF0FF30 		mov	r0, #-1
 367 004e FFF7FEFF 		bl	BSP_LCD_Clear
 368              	.LVL48:
 170:Src/gui.c     ****     {
 369              		.loc 1 170 0
 370 0052 6388     		ldrh	r3, [r4, #2]
 371 0054 C3F30B03 		ubfx	r3, r3, #0, #12
 372 0058 272B     		cmp	r3, #39
 373 005a 01DD     		ble	.L20
 172:Src/gui.c     **** 	}
 374              		.loc 1 172 0
 375 005c 3A4A     		ldr	r2, .L42+12
 376 005e 1380     		strh	r3, [r2]	@ movhi
 377              	.L20:
 174:Src/gui.c     ****     {
 378              		.loc 1 174 0
 379 0060 384B     		ldr	r3, .L42+8
 380 0062 9B89     		ldrh	r3, [r3, #12]
 381 0064 C3F30B03 		ubfx	r3, r3, #0, #12
 382 0068 272B     		cmp	r3, #39
 383 006a 01DD     		ble	.L21
 176:Src/gui.c     **** 	}
 384              		.loc 1 176 0
 385 006c 374A     		ldr	r2, .L42+16
 386 006e 1380     		strh	r3, [r2]	@ movhi
 387              	.L21:
 178:Src/gui.c     **** 
 388              		.loc 1 178 0
 389 0070 344B     		ldr	r3, .L42+8
 390 0072 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 391 0074 3648     		ldr	r0, .L42+20
 392 0076 FFF7FEFF 		bl	xprintf
 393              	.LVL49:
 183:Src/gui.c     **** 	lastState.touchY[0] = newY;
 394              		.loc 1 183 0
 395 007a 334B     		ldr	r3, .L42+12
 396 007c B3F80090 		ldrh	r9, [r3]
 184:Src/gui.c     **** 
 397              		.loc 1 184 0
 398 0080 324B     		ldr	r3, .L42+16
 399 0082 B3F800A0 		ldrh	r10, [r3]
 400              	.LVL50:
 401              	.LBB2:
 187:Src/gui.c     **** 
 402              		.loc 1 187 0
 403 0086 0024     		movs	r4, #0
 404 0088 15E0     		b	.L22
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 12


 405              	.LVL51:
 406              	.L39:
 407              	.LBB3:
 199:Src/gui.c     ****                 playButtonState = PAUSE;
 408              		.loc 1 199 0
 409 008a 324B     		ldr	r3, .L42+24
 410 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 411 008e 1BB9     		cbnz	r3, .L27
 200:Src/gui.c     **** 			}
 412              		.loc 1 200 0
 413 0090 0122     		movs	r2, #1
 414 0092 304B     		ldr	r3, .L42+24
 415 0094 1A70     		strb	r2, [r3]
 416 0096 46E0     		b	.L26
 417              	.L27:
 204:Src/gui.c     **** 			}
 418              		.loc 1 204 0
 419 0098 0022     		movs	r2, #0
 420 009a 2E4B     		ldr	r3, .L42+24
 421 009c 1A70     		strb	r2, [r3]
 422 009e 42E0     		b	.L26
 423              	.L40:
 208:Src/gui.c     **** 		else if (i == 2) {
 424              		.loc 1 208 0
 425 00a0 2C4B     		ldr	r3, .L42+24
 426 00a2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 427 00a4 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 428              	.LVL52:
 429              	.L41:
 210:Src/gui.c     **** 			return STOP;
 430              		.loc 1 210 0
 431 00a8 0122     		movs	r2, #1
 432 00aa 2A4B     		ldr	r3, .L42+24
 433 00ac 1A70     		strb	r2, [r3]
 211:Src/gui.c     **** 		}
 434              		.loc 1 211 0
 435 00ae 0220     		movs	r0, #2
 436 00b0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 437              	.LVL53:
 438              	.L23:
 439              	.LBE3:
 187:Src/gui.c     **** 
 440              		.loc 1 187 0 discriminator 2
 441 00b4 0134     		adds	r4, r4, #1
 442              	.LVL54:
 443              	.L22:
 187:Src/gui.c     **** 
 444              		.loc 1 187 0 is_stmt 0 discriminator 1
 445 00b6 032C     		cmp	r4, #3
 446 00b8 3DDC     		bgt	.L38
 447              	.LBB4:
 189:Src/gui.c     **** 		uint16_t buttonCornerY = buttonsLeftUpper[i][1];
 448              		.loc 1 189 0 is_stmt 1
 449 00ba 274B     		ldr	r3, .L42+28
 450 00bc 33F82450 		ldrh	r5, [r3, r4, lsl #2]
 451              	.LVL55:
 190:Src/gui.c     **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 13


 452              		.loc 1 190 0
 453 00c0 03EB8403 		add	r3, r3, r4, lsl #2
 454 00c4 B3F80280 		ldrh	r8, [r3, #2]
 455              	.LVL56:
 192:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 456              		.loc 1 192 0
 457 00c8 4846     		mov	r0, r9
 458 00ca FFF7FEFF 		bl	__aeabi_i2d
 459              	.LVL57:
 460 00ce 0646     		mov	r6, r0
 461 00d0 0F46     		mov	r7, r1
 462 00d2 2846     		mov	r0, r5
 463 00d4 FFF7FEFF 		bl	__aeabi_i2d
 464              	.LVL58:
 465 00d8 0022     		movs	r2, #0
 466 00da 204B     		ldr	r3, .L42+32
 467 00dc FFF7FEFF 		bl	__aeabi_dadd
 468              	.LVL59:
 469 00e0 0246     		mov	r2, r0
 470 00e2 0B46     		mov	r3, r1
 471 00e4 3046     		mov	r0, r6
 472 00e6 3946     		mov	r1, r7
 473 00e8 FFF7FEFF 		bl	__aeabi_dcmple
 474              	.LVL60:
 475 00ec 0028     		cmp	r0, #0
 476 00ee E1D0     		beq	.L23
 193:Src/gui.c     **** 			newX > buttonCornerX &&
 477              		.loc 1 193 0 discriminator 1
 478 00f0 5046     		mov	r0, r10
 479 00f2 FFF7FEFF 		bl	__aeabi_i2d
 480              	.LVL61:
 481 00f6 0646     		mov	r6, r0
 482 00f8 0F46     		mov	r7, r1
 483 00fa 4046     		mov	r0, r8
 484 00fc FFF7FEFF 		bl	__aeabi_i2d
 485              	.LVL62:
 486 0100 0022     		movs	r2, #0
 487 0102 164B     		ldr	r3, .L42+32
 488 0104 FFF7FEFF 		bl	__aeabi_dadd
 489              	.LVL63:
 192:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 490              		.loc 1 192 0 discriminator 1
 491 0108 0246     		mov	r2, r0
 492 010a 0B46     		mov	r3, r1
 493 010c 3046     		mov	r0, r6
 494 010e 3946     		mov	r1, r7
 495 0110 FFF7FEFF 		bl	__aeabi_dcmple
 496              	.LVL64:
 497 0114 0028     		cmp	r0, #0
 498 0116 CDD0     		beq	.L23
 193:Src/gui.c     **** 			newX > buttonCornerX &&
 499              		.loc 1 193 0
 500 0118 A945     		cmp	r9, r5
 501 011a CBD9     		bls	.L23
 194:Src/gui.c     **** 			newY > buttonCornerY
 502              		.loc 1 194 0
 503 011c C245     		cmp	r10, r8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 14


 504 011e C9D9     		bls	.L23
 198:Src/gui.c     **** 			if (playButtonState == PLAY) {
 505              		.loc 1 198 0
 506 0120 631E     		subs	r3, r4, #1
 507 0122 012B     		cmp	r3, #1
 508 0124 B1D9     		bls	.L39
 509              	.L26:
 207:Src/gui.c     **** 			return playButtonState;
 510              		.loc 1 207 0
 511 0126 012C     		cmp	r4, #1
 512 0128 BAD0     		beq	.L40
 209:Src/gui.c     **** 			playButtonState = PAUSE;
 513              		.loc 1 209 0
 514 012a 022C     		cmp	r4, #2
 515 012c BCD0     		beq	.L41
 215:Src/gui.c     **** 		}
 516              		.loc 1 215 0
 517 012e 0C4B     		ldr	r3, .L42+36
 518 0130 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 519 0132 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 520              	.LVL65:
 521              	.L38:
 522              	.LBE4:
 523              	.LBE2:
 219:Src/gui.c     **** 
 524              		.loc 1 219 0
 525 0136 0620     		movs	r0, #6
 526              	.LBB5:
 527 0138 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 528              	.LVL66:
 529              	.L43:
 530              		.align	2
 531              	.L42:
 532 013c 00007E40 		.word	1081999360
 533 0140 00000000 		.word	.LANCHOR0
 534 0144 00000000 		.word	.LANCHOR1
 535 0148 00000000 		.word	newX
 536 014c 00000000 		.word	newY
 537 0150 00000000 		.word	.LC0
 538 0154 00000000 		.word	.LANCHOR3
 539 0158 00000000 		.word	.LANCHOR2
 540 015c 00005240 		.word	1079115776
 541 0160 00000000 		.word	.LANCHOR4
 542              	.LBE5:
 543              		.cfi_endproc
 544              	.LFE141:
 546              		.section	.text.draw_buttons,"ax",%progbits
 547              		.align	1
 548              		.global	draw_buttons
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 552              		.fpu fpv5-sp-d16
 554              	draw_buttons:
 555              	.LFB143:
 223:Src/gui.c     **** 
 224:Src/gui.c     **** // Refresh the state of the screen
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 15


 225:Src/gui.c     **** void refresh_screen(const char *info_text) {
 226:Src/gui.c     **** 
 227:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 228:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 229:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 230:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 231:Src/gui.c     **** 	BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 232:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 233:Src/gui.c     **** 
 234:Src/gui.c     **** 	draw_background();
 235:Src/gui.c     **** 
 236:Src/gui.c     **** 	BSP_LCD_DisplayStringAt(XPix(0.10), YPix(0.45), (unsigned char *)info_text, CENTER_MODE);
 237:Src/gui.c     **** 
 238:Src/gui.c     **** }
 239:Src/gui.c     **** 
 240:Src/gui.c     **** // Draw the 4 main state control buttons: PREV/PLAY_PAUSE/STOP/NEXT
 241:Src/gui.c     **** void draw_buttons() {
 556              		.loc 1 241 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560 0000 10B5     		push	{r4, lr}
 561              	.LCFI5:
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 4, -8
 564              		.cfi_offset 14, -4
 242:Src/gui.c     **** 
 243:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 565              		.loc 1 243 0
 566 0002 4FF07F40 		mov	r0, #-16777216
 567 0006 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 568              	.LVL67:
 244:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[0][0], buttonsLeftUpper[0][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 569              		.loc 1 244 0
 570 000a 0D4C     		ldr	r4, .L46
 571 000c 4823     		movs	r3, #72
 572 000e 1A46     		mov	r2, r3
 573 0010 6188     		ldrh	r1, [r4, #2]
 574 0012 2088     		ldrh	r0, [r4]
 575 0014 FFF7FEFF 		bl	BSP_LCD_FillRect
 576              	.LVL68:
 245:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[1][0], buttonsLeftUpper[1][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 577              		.loc 1 245 0
 578 0018 4823     		movs	r3, #72
 579 001a 1A46     		mov	r2, r3
 580 001c E188     		ldrh	r1, [r4, #6]
 581 001e A088     		ldrh	r0, [r4, #4]
 582 0020 FFF7FEFF 		bl	BSP_LCD_FillRect
 583              	.LVL69:
 246:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[2][0], buttonsLeftUpper[2][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 584              		.loc 1 246 0
 585 0024 4823     		movs	r3, #72
 586 0026 1A46     		mov	r2, r3
 587 0028 6189     		ldrh	r1, [r4, #10]
 588 002a 2089     		ldrh	r0, [r4, #8]
 589 002c FFF7FEFF 		bl	BSP_LCD_FillRect
 590              	.LVL70:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 16


 247:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[3][0], buttonsLeftUpper[3][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 591              		.loc 1 247 0
 592 0030 4823     		movs	r3, #72
 593 0032 1A46     		mov	r2, r3
 594 0034 E189     		ldrh	r1, [r4, #14]
 595 0036 A089     		ldrh	r0, [r4, #12]
 596 0038 FFF7FEFF 		bl	BSP_LCD_FillRect
 597              	.LVL71:
 598 003c 10BD     		pop	{r4, pc}
 599              	.L47:
 600 003e 00BF     		.align	2
 601              	.L46:
 602 0040 00000000 		.word	.LANCHOR2
 603              		.cfi_endproc
 604              	.LFE143:
 606              		.section	.text.draw_background,"ax",%progbits
 607              		.align	1
 608              		.global	draw_background
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv5-sp-d16
 614              	draw_background:
 615              	.LFB138:
 121:Src/gui.c     **** 	/* Select the LCD Background Layer  */
 616              		.loc 1 121 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620 0000 08B5     		push	{r3, lr}
 621              	.LCFI6:
 622              		.cfi_def_cfa_offset 8
 623              		.cfi_offset 3, -8
 624              		.cfi_offset 14, -4
 123:Src/gui.c     **** 
 625              		.loc 1 123 0
 626 0002 0020     		movs	r0, #0
 627 0004 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 628              	.LVL72:
 125:Src/gui.c     **** 
 629              		.loc 1 125 0
 630 0008 FFF7FEFF 		bl	draw_buttons
 631              	.LVL73:
 127:Src/gui.c     **** 	BSP_LCD_DrawHLine(0, YPix(0.5), LCD_X_SIZE);
 632              		.loc 1 127 0
 633 000c 4FF4F072 		mov	r2, #480
 634 0010 6C21     		movs	r1, #108
 635 0012 0020     		movs	r0, #0
 636 0014 FFF7FEFF 		bl	BSP_LCD_DrawHLine
 637              	.LVL74:
 128:Src/gui.c     **** 
 638              		.loc 1 128 0
 639 0018 4FF4F072 		mov	r2, #480
 640 001c 8821     		movs	r1, #136
 641 001e 0020     		movs	r0, #0
 642 0020 FFF7FEFF 		bl	BSP_LCD_DrawHLine
 643              	.LVL75:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 17


 131:Src/gui.c     **** }
 644              		.loc 1 131 0
 645 0024 0120     		movs	r0, #1
 646 0026 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 647              	.LVL76:
 648 002a 08BD     		pop	{r3, pc}
 649              		.cfi_endproc
 650              	.LFE138:
 652              		.section	.text.refresh_screen,"ax",%progbits
 653              		.align	1
 654              		.global	refresh_screen
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 658              		.fpu fpv5-sp-d16
 660              	refresh_screen:
 661              	.LFB142:
 225:Src/gui.c     **** 
 662              		.loc 1 225 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              	.LVL77:
 667 0000 10B5     		push	{r4, lr}
 668              	.LCFI7:
 669              		.cfi_def_cfa_offset 8
 670              		.cfi_offset 4, -8
 671              		.cfi_offset 14, -4
 672 0002 0446     		mov	r4, r0
 227:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 673              		.loc 1 227 0
 674 0004 0120     		movs	r0, #1
 675              	.LVL78:
 676 0006 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 677              	.LVL79:
 228:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 678              		.loc 1 228 0
 679 000a 4FF0FF30 		mov	r0, #-1
 680 000e FFF7FEFF 		bl	BSP_LCD_Clear
 681              	.LVL80:
 229:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 682              		.loc 1 229 0
 683 0012 0020     		movs	r0, #0
 684 0014 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 685              	.LVL81:
 230:Src/gui.c     **** 	BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 686              		.loc 1 230 0
 687 0018 4FF0FF30 		mov	r0, #-1
 688 001c FFF7FEFF 		bl	BSP_LCD_Clear
 689              	.LVL82:
 231:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 690              		.loc 1 231 0
 691 0020 4FF0FF30 		mov	r0, #-1
 692 0024 FFF7FEFF 		bl	BSP_LCD_SetBackColor
 693              	.LVL83:
 232:Src/gui.c     **** 
 694              		.loc 1 232 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 18


 695 0028 4FF07F40 		mov	r0, #-16777216
 696 002c FFF7FEFF 		bl	BSP_LCD_SetTextColor
 697              	.LVL84:
 234:Src/gui.c     **** 
 698              		.loc 1 234 0
 699 0030 FFF7FEFF 		bl	draw_background
 700              	.LVL85:
 236:Src/gui.c     **** 
 701              		.loc 1 236 0
 702 0034 0123     		movs	r3, #1
 703 0036 2246     		mov	r2, r4
 704 0038 7A21     		movs	r1, #122
 705 003a 3020     		movs	r0, #48
 706 003c FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 707              	.LVL86:
 708 0040 10BD     		pop	{r4, pc}
 709              		.cfi_endproc
 710              	.LFE142:
 712              		.section	.text.getXPix,"ax",%progbits
 713              		.align	1
 714              		.global	getXPix
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 718              		.fpu fpv5-sp-d16
 720              	getXPix:
 721              	.LFB144:
 248:Src/gui.c     **** 
 249:Src/gui.c     **** }
 250:Src/gui.c     **** 
 251:Src/gui.c     **** // Auxillary functions
 252:Src/gui.c     **** uint16_t getXPix (double factor)  {
 722              		.loc 1 252 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726              	.LVL87:
 727 0000 08B5     		push	{r3, lr}
 728              	.LCFI8:
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 3, -8
 731              		.cfi_offset 14, -4
 253:Src/gui.c     **** 	return factor * LCD_X_SIZE;
 732              		.loc 1 253 0
 733 0002 0022     		movs	r2, #0
 734 0004 044B     		ldr	r3, .L54
 735 0006 51EC100B 		vmov	r0, r1, d0
 736 000a FFF7FEFF 		bl	__aeabi_dmul
 737              	.LVL88:
 738 000e FFF7FEFF 		bl	__aeabi_d2uiz
 739              	.LVL89:
 254:Src/gui.c     **** }
 740              		.loc 1 254 0
 741 0012 80B2     		uxth	r0, r0
 742 0014 08BD     		pop	{r3, pc}
 743              	.L55:
 744 0016 00BF     		.align	2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 19


 745              	.L54:
 746 0018 00007E40 		.word	1081999360
 747              		.cfi_endproc
 748              	.LFE144:
 750              		.section	.text.getYPix,"ax",%progbits
 751              		.align	1
 752              		.global	getYPix
 753              		.syntax unified
 754              		.thumb
 755              		.thumb_func
 756              		.fpu fpv5-sp-d16
 758              	getYPix:
 759              	.LFB145:
 255:Src/gui.c     **** 
 256:Src/gui.c     **** uint16_t getYPix (double factor)  {
 760              		.loc 1 256 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              	.LVL90:
 765 0000 08B5     		push	{r3, lr}
 766              	.LCFI9:
 767              		.cfi_def_cfa_offset 8
 768              		.cfi_offset 3, -8
 769              		.cfi_offset 14, -4
 257:Src/gui.c     **** 	return factor * LCD_Y_SIZE;
 770              		.loc 1 257 0
 771 0002 0022     		movs	r2, #0
 772 0004 044B     		ldr	r3, .L58
 773 0006 51EC100B 		vmov	r0, r1, d0
 774 000a FFF7FEFF 		bl	__aeabi_dmul
 775              	.LVL91:
 776 000e FFF7FEFF 		bl	__aeabi_d2uiz
 777              	.LVL92:
 258:Src/gui.c     **** }
 778              		.loc 1 258 0
 779 0012 80B2     		uxth	r0, r0
 780 0014 08BD     		pop	{r3, pc}
 781              	.L59:
 782 0016 00BF     		.align	2
 783              	.L58:
 784 0018 00007140 		.word	1081147392
 785              		.cfi_endproc
 786              	.LFE145:
 788              		.global	lastTicks
 789              		.global	playButtonState
 790              		.global	buttonState
 791              		.global	buttonsLeftUpper
 792              		.comm	newY,2,2
 793              		.comm	newX,2,2
 794              		.section	.bss.TS_State,"aw",%nobits
 795              		.align	2
 796              		.set	.LANCHOR1,. + 0
 799              	TS_State:
 800 0000 00000000 		.space	44
 800      00000000 
 800      00000000 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 20


 800      00000000 
 800      00000000 
 801              		.section	.bss.lastTicks,"aw",%nobits
 802              		.align	2
 803              		.set	.LANCHOR0,. + 0
 806              	lastTicks:
 807 0000 00000000 		.space	4
 808              		.section	.bss.playButtonState,"aw",%nobits
 809              		.set	.LANCHOR3,. + 0
 812              	playButtonState:
 813 0000 00       		.space	1
 814              		.section	.data.buttonState,"aw",%progbits
 815              		.align	2
 816              		.set	.LANCHOR4,. + 0
 819              	buttonState:
 820 0000 04       		.byte	4
 821 0001 00       		.byte	0
 822 0002 02       		.byte	2
 823 0003 03       		.byte	3
 824              		.section	.data.buttonsLeftUpper,"aw",%progbits
 825              		.align	2
 826              		.set	.LANCHOR2,. + 0
 829              	buttonsLeftUpper:
 830 0000 2600     		.short	38
 831 0002 BE00     		.short	190
 832 0004 9400     		.short	148
 833 0006 BE00     		.short	190
 834 0008 0301     		.short	259
 835 000a BE00     		.short	190
 836 000c 7101     		.short	369
 837 000e BE00     		.short	190
 838              		.section	.rodata.check_touchscreen.str1.4,"aMS",%progbits,1
 839              		.align	2
 840              	.LC0:
 841 0000 25640A00 		.ascii	"%d\012\000"
 842              		.text
 843              	.Letext0:
 844              		.file 2 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 845              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 846              		.file 4 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 847              		.file 5 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 848              		.file 6 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 849              		.file 7 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 850              		.file 8 "Inc/mp3_player.h"
 851              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 852              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 853              		.file 11 "Drivers/BSP/STM32746G-Discovery/../../../Utilities/Fonts/fonts.h"
 854              		.file 12 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/../Common/ts.h"
 855              		.file 13 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/ft5336.h"
 856              		.file 14 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_ts.h"
 857              		.file 15 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_lcd.h"
 858              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 859              		.file 17 "Inc/term_io.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 gui.c
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:18     .text.lcd_start:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:25     .text.lcd_start:00000000 lcd_start
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:96     .text.lcd_start:00000064 $d
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:101    .text.LCD_Start_v2:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:108    .text.LCD_Start_v2:00000000 LCD_Start_v2
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:185    .text.LCD_Start_v2:0000006c $d
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:190    .text.initialize_touchscreen:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:197    .text.initialize_touchscreen:00000000 initialize_touchscreen
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:236    .text.touchscreen_loop_init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:243    .text.touchscreen_loop_init:00000000 touchscreen_loop_init
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:283    .text.touchscreen_loop_init:00000030 $d
                            *COM*:00000002 newX
                            *COM*:00000002 newY
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:294    .text.check_touchscreen:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:301    .text.check_touchscreen:00000000 check_touchscreen
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:532    .text.check_touchscreen:0000013c $d
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:547    .text.draw_buttons:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:554    .text.draw_buttons:00000000 draw_buttons
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:602    .text.draw_buttons:00000040 $d
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:607    .text.draw_background:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:614    .text.draw_background:00000000 draw_background
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:653    .text.refresh_screen:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:660    .text.refresh_screen:00000000 refresh_screen
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:713    .text.getXPix:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:720    .text.getXPix:00000000 getXPix
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:746    .text.getXPix:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:751    .text.getYPix:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:758    .text.getYPix:00000000 getYPix
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:784    .text.getYPix:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:806    .bss.lastTicks:00000000 lastTicks
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:812    .bss.playButtonState:00000000 playButtonState
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:819    .data.buttonState:00000000 buttonState
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:829    .data.buttonsLeftUpper:00000000 buttonsLeftUpper
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:795    .bss.TS_State:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:799    .bss.TS_State:00000000 TS_State
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:802    .bss.lastTicks:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:813    .bss.playButtonState:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:815    .data.buttonState:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:825    .data.buttonsLeftUpper:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s:839    .rodata.check_touchscreen.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
BSP_LCD_Init
BSP_LCD_LayerDefaultInit
BSP_LCD_DisplayOn
BSP_LCD_SelectLayer
BSP_LCD_Clear
BSP_LCD_SetBackColor
BSP_LCD_SetColorKeying
BSP_LCD_SetTransparency
BSP_LCD_SetTextColor
BSP_LCD_ResetColorKeying
BSP_LCD_Reload
BSP_LCD_GetXSize
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccgVMJhz.s 			page 22


BSP_LCD_GetYSize
BSP_TS_Init
__aeabi_dmul
__aeabi_d2uiz
__aeabi_i2d
__aeabi_dadd
__aeabi_dcmple
BSP_LCD_FillRect
HAL_GetTick
BSP_TS_GetState
xprintf
BSP_LCD_DrawHLine
BSP_LCD_DisplayStringAt
