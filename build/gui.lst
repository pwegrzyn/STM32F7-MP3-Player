ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"gui.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lcd_start,"ax",%progbits
  18              		.align	1
  19              		.global	lcd_start
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	lcd_start:
  26              	.LFB136:
  27              		.file 1 "Src/gui.c"
   1:Src/gui.c     **** /*
   2:Src/gui.c     ****  *	Graphical User Interface
   3:Src/gui.c     ****  *  Touchscreen
   4:Src/gui.c     ****  */
   5:Src/gui.c     **** 
   6:Src/gui.c     **** #include <stdio.h>
   7:Src/gui.c     **** #include <string.h>
   8:Src/gui.c     **** 
   9:Src/gui.c     **** #include "mp3_player.h"
  10:Src/gui.c     **** #include "stm32746g_discovery_lcd.h"
  11:Src/gui.c     **** #include "Utilities/Fonts/fonts.h"
  12:Src/gui.c     **** #include "stm32746g_discovery_ts.h"
  13:Src/gui.c     **** #include "term_io.h"
  14:Src/gui.c     **** #include "dbgu.h"
  15:Src/gui.c     **** #include "ansi.h"
  16:Src/gui.c     **** #include "stm32f7xx_hal.h"
  17:Src/gui.c     **** 
  18:Src/gui.c     **** #define LCD_X_SIZE			RK043FN48H_WIDTH
  19:Src/gui.c     **** #define LCD_Y_SIZE			RK043FN48H_HEIGHT
  20:Src/gui.c     **** #define LAYER_FG 1
  21:Src/gui.c     **** #define LAYER_BG 0
  22:Src/gui.c     **** 
  23:Src/gui.c     **** #define CONTROL_BUTTON_SIZE 0.15 * LCD_X_SIZE
  24:Src/gui.c     **** #define CONTROL_BUTTONS_NUMBER 4
  25:Src/gui.c     **** #define TICKS_DELTA 100
  26:Src/gui.c     **** 
  27:Src/gui.c     **** #define XPix(x) x * LCD_X_SIZE
  28:Src/gui.c     **** #define YPix(x) x * LCD_Y_SIZE
  29:Src/gui.c     **** // Not sure about these two guys (may be used in LCD_START_V2() in LayerDefaultInit()?)
  30:Src/gui.c     **** // static uint32_t lcd_image_fg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attrib
  31:Src/gui.c     **** // static uint32_t lcd_image_bg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attrib
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 2


  32:Src/gui.c     **** 
  33:Src/gui.c     **** /* ------------------------------------------------------------------- */
  34:Src/gui.c     **** 
  35:Src/gui.c     **** static TS_StateTypeDef TS_State;
  36:Src/gui.c     **** static TS_StateTypeDef lastState;
  37:Src/gui.c     **** uint16_t newX;
  38:Src/gui.c     **** uint16_t newY;
  39:Src/gui.c     **** uint16_t buttonsLeftUpper[4][2] = { {XPix(0.08), YPix(0.7)}, {XPix(0.31), YPix(0.7)}, {XPix(0.54), 
  40:Src/gui.c     **** Mp3_Player_State buttonState[4] = { PREV, PLAY, STOP, NEXT };
  41:Src/gui.c     **** Mp3_Player_State playButtonState = PLAY;
  42:Src/gui.c     **** uint32_t lastTicks = 0;
  43:Src/gui.c     **** 
  44:Src/gui.c     **** /* ------------------------------------------------------------------- */
  45:Src/gui.c     **** 
  46:Src/gui.c     **** void lcd_start(void);
  47:Src/gui.c     **** void LCD_Start_v2(void);
  48:Src/gui.c     **** void draw_background(void);
  49:Src/gui.c     **** int initialize_touchscreen(void);
  50:Src/gui.c     **** void touchscreen_loop_init(void);
  51:Src/gui.c     **** Mp3_Player_State check_touchscreen(void);
  52:Src/gui.c     **** uint16_t getXPix (double factor);
  53:Src/gui.c     **** uint16_t getYPix (double factor);
  54:Src/gui.c     **** 
  55:Src/gui.c     **** /* ------------------------------------------------------------------- */
  56:Src/gui.c     **** 
  57:Src/gui.c     **** // Initialize the LCD display
  58:Src/gui.c     **** void lcd_start(void)
  59:Src/gui.c     **** {
  28              		.loc 1 59 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  60:Src/gui.c     ****   /* LCD Initialization */
  61:Src/gui.c     ****   BSP_LCD_Init();
  37              		.loc 1 61 0
  38 0002 FFF7FEFF 		bl	BSP_LCD_Init
  39              	.LVL0:
  62:Src/gui.c     **** 
  63:Src/gui.c     ****   /* LCD Initialization */
  64:Src/gui.c     ****   BSP_LCD_LayerDefaultInit(LAYER_BG, (unsigned int)0xC0000000);
  40              		.loc 1 64 0
  41 0006 4FF04041 		mov	r1, #-1073741824
  42 000a 0020     		movs	r0, #0
  43 000c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
  44              	.LVL1:
  65:Src/gui.c     ****   //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
  66:Src/gui.c     ****   BSP_LCD_LayerDefaultInit(LAYER_FG, (unsigned int)0xC0000000+(LCD_X_SIZE*LCD_Y_SIZE*4));
  45              		.loc 1 66 0
  46 0010 1449     		ldr	r1, .L3
  47 0012 0120     		movs	r0, #1
  48 0014 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
  49              	.LVL2:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 3


  67:Src/gui.c     **** 
  68:Src/gui.c     ****   /* Enable the LCD */
  69:Src/gui.c     ****   BSP_LCD_DisplayOn();
  50              		.loc 1 69 0
  51 0018 FFF7FEFF 		bl	BSP_LCD_DisplayOn
  52              	.LVL3:
  70:Src/gui.c     **** 
  71:Src/gui.c     ****   /* Select the LCD Background Layer  */
  72:Src/gui.c     ****   BSP_LCD_SelectLayer(LAYER_BG);
  53              		.loc 1 72 0
  54 001c 0020     		movs	r0, #0
  55 001e FFF7FEFF 		bl	BSP_LCD_SelectLayer
  56              	.LVL4:
  73:Src/gui.c     **** 
  74:Src/gui.c     ****   /* Clear the Background Layer */
  75:Src/gui.c     ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
  57              		.loc 1 75 0
  58 0022 4FF0FF30 		mov	r0, #-1
  59 0026 FFF7FEFF 		bl	BSP_LCD_Clear
  60              	.LVL5:
  76:Src/gui.c     ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
  61              		.loc 1 76 0
  62 002a 4FF0FF30 		mov	r0, #-1
  63 002e FFF7FEFF 		bl	BSP_LCD_SetBackColor
  64              	.LVL6:
  77:Src/gui.c     **** 
  78:Src/gui.c     ****   BSP_LCD_SetColorKeying(LAYER_FG,LCD_COLOR_WHITE);
  65              		.loc 1 78 0
  66 0032 4FF0FF31 		mov	r1, #-1
  67 0036 0120     		movs	r0, #1
  68 0038 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
  69              	.LVL7:
  79:Src/gui.c     **** 
  80:Src/gui.c     ****   /* Select the LCD Foreground Layer  */
  81:Src/gui.c     ****   BSP_LCD_SelectLayer(LAYER_FG);
  70              		.loc 1 81 0
  71 003c 0120     		movs	r0, #1
  72 003e FFF7FEFF 		bl	BSP_LCD_SelectLayer
  73              	.LVL8:
  82:Src/gui.c     **** 
  83:Src/gui.c     ****   /* Clear the Foreground Layer */
  84:Src/gui.c     ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
  74              		.loc 1 84 0
  75 0042 4FF0FF30 		mov	r0, #-1
  76 0046 FFF7FEFF 		bl	BSP_LCD_Clear
  77              	.LVL9:
  85:Src/gui.c     ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
  78              		.loc 1 85 0
  79 004a 4FF0FF30 		mov	r0, #-1
  80 004e FFF7FEFF 		bl	BSP_LCD_SetBackColor
  81              	.LVL10:
  86:Src/gui.c     **** 
  87:Src/gui.c     ****   /* Configure the transparency for foreground and background :
  88:Src/gui.c     ****      Increase the transparency */
  89:Src/gui.c     ****   BSP_LCD_SetTransparency(LAYER_BG, 255);
  82              		.loc 1 89 0
  83 0052 FF21     		movs	r1, #255
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 4


  84 0054 0020     		movs	r0, #0
  85 0056 FFF7FEFF 		bl	BSP_LCD_SetTransparency
  86              	.LVL11:
  90:Src/gui.c     ****   BSP_LCD_SetTransparency(LAYER_FG, 255);
  87              		.loc 1 90 0
  88 005a FF21     		movs	r1, #255
  89 005c 0120     		movs	r0, #1
  90 005e FFF7FEFF 		bl	BSP_LCD_SetTransparency
  91              	.LVL12:
  92 0062 08BD     		pop	{r3, pc}
  93              	.L4:
  94              		.align	2
  95              	.L3:
  96 0064 00F807C0 		.word	-1073219584
  97              		.cfi_endproc
  98              	.LFE136:
 100              		.section	.text.LCD_Start_v2,"ax",%progbits
 101              		.align	1
 102              		.global	LCD_Start_v2
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv5-sp-d16
 108              	LCD_Start_v2:
 109              	.LFB137:
  91:Src/gui.c     **** }
  92:Src/gui.c     **** 
  93:Src/gui.c     **** // We can go with this instead probably
  94:Src/gui.c     **** void LCD_Start_v2(void)
  95:Src/gui.c     **** {
 110              		.loc 1 95 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114 0000 08B5     		push	{r3, lr}
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 3, -8
 118              		.cfi_offset 14, -4
  96:Src/gui.c     **** 	BSP_LCD_Init();
 119              		.loc 1 96 0
 120 0002 FFF7FEFF 		bl	BSP_LCD_Init
 121              	.LVL13:
  97:Src/gui.c     **** 	BSP_LCD_LayerDefaultInit(LAYER_FG, (unsigned int)0xC0000000);
 122              		.loc 1 97 0
 123 0006 4FF04041 		mov	r1, #-1073741824
 124 000a 0120     		movs	r0, #1
 125 000c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 126              	.LVL14:
  98:Src/gui.c     **** 	BSP_LCD_LayerDefaultInit(LAYER_BG, (unsigned int)0xC0000000+(LCD_X_SIZE*LCD_Y_SIZE*4));
 127              		.loc 1 98 0
 128 0010 1649     		ldr	r1, .L7
 129 0012 0020     		movs	r0, #0
 130 0014 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 131              	.LVL15:
  99:Src/gui.c     **** 	
 100:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 5


 132              		.loc 1 100 0
 133 0018 0120     		movs	r0, #1
 134 001a FFF7FEFF 		bl	BSP_LCD_SelectLayer
 135              	.LVL16:
 101:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 136              		.loc 1 101 0
 137 001e 4FF0FF30 		mov	r0, #-1
 138 0022 FFF7FEFF 		bl	BSP_LCD_Clear
 139              	.LVL17:
 102:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 140              		.loc 1 102 0
 141 0026 0020     		movs	r0, #0
 142 0028 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 143              	.LVL18:
 103:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 144              		.loc 1 103 0
 145 002c 4FF0FF30 		mov	r0, #-1
 146 0030 FFF7FEFF 		bl	BSP_LCD_Clear
 147              	.LVL19:
 104:Src/gui.c     **** 	BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 148              		.loc 1 104 0
 149 0034 4FF0FF30 		mov	r0, #-1
 150 0038 FFF7FEFF 		bl	BSP_LCD_SetBackColor
 151              	.LVL20:
 105:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 152              		.loc 1 105 0
 153 003c 4FF07F40 		mov	r0, #-16777216
 154 0040 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 155              	.LVL21:
 106:Src/gui.c     **** 	
 107:Src/gui.c     **** 	BSP_LCD_ResetColorKeying(LAYER_FG);
 156              		.loc 1 107 0
 157 0044 0120     		movs	r0, #1
 158 0046 FFF7FEFF 		bl	BSP_LCD_ResetColorKeying
 159              	.LVL22:
 108:Src/gui.c     **** 	BSP_LCD_ResetColorKeying(LAYER_BG);
 160              		.loc 1 108 0
 161 004a 0020     		movs	r0, #0
 162 004c FFF7FEFF 		bl	BSP_LCD_ResetColorKeying
 163              	.LVL23:
 109:Src/gui.c     **** 	
 110:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_FG, (uint8_t) 100);
 164              		.loc 1 110 0
 165 0050 6421     		movs	r1, #100
 166 0052 0120     		movs	r0, #1
 167 0054 FFF7FEFF 		bl	BSP_LCD_SetTransparency
 168              	.LVL24:
 111:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_BG, (uint8_t) 0xFF);
 169              		.loc 1 111 0
 170 0058 FF21     		movs	r1, #255
 171 005a 0020     		movs	r0, #0
 172 005c FFF7FEFF 		bl	BSP_LCD_SetTransparency
 173              	.LVL25:
 112:Src/gui.c     **** 	
 113:Src/gui.c     **** 	BSP_LCD_Reload(LCD_RELOAD_VERTICAL_BLANKING);
 174              		.loc 1 113 0
 175 0060 0220     		movs	r0, #2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 6


 176 0062 FFF7FEFF 		bl	BSP_LCD_Reload
 177              	.LVL26:
 114:Src/gui.c     **** 	BSP_LCD_DisplayOn();
 178              		.loc 1 114 0
 179 0066 FFF7FEFF 		bl	BSP_LCD_DisplayOn
 180              	.LVL27:
 181 006a 08BD     		pop	{r3, pc}
 182              	.L8:
 183              		.align	2
 184              	.L7:
 185 006c 00F807C0 		.word	-1073219584
 186              		.cfi_endproc
 187              	.LFE137:
 189              		.section	.text.draw_background,"ax",%progbits
 190              		.align	1
 191              		.global	draw_background
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv5-sp-d16
 197              	draw_background:
 198              	.LFB138:
 115:Src/gui.c     **** }
 116:Src/gui.c     **** 
 117:Src/gui.c     **** // Draw the screen background
 118:Src/gui.c     **** void draw_background(void)
 119:Src/gui.c     **** {
 199              		.loc 1 119 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 10B5     		push	{r4, lr}
 204              	.LCFI2:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 4, -8
 207              		.cfi_offset 14, -4
 120:Src/gui.c     **** 	/* Select the LCD Background Layer  */
 121:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 208              		.loc 1 121 0
 209 0002 0020     		movs	r0, #0
 210 0004 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 211              	.LVL28:
 122:Src/gui.c     **** 	
 123:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 212              		.loc 1 123 0
 213 0008 4FF07F40 		mov	r0, #-16777216
 214 000c FFF7FEFF 		bl	BSP_LCD_SetTextColor
 215              	.LVL29:
 124:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[0][0], buttonsLeftUpper[0][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 216              		.loc 1 124 0
 217 0010 0E4C     		ldr	r4, .L11
 218 0012 4823     		movs	r3, #72
 219 0014 1A46     		mov	r2, r3
 220 0016 6188     		ldrh	r1, [r4, #2]
 221 0018 2088     		ldrh	r0, [r4]
 222 001a FFF7FEFF 		bl	BSP_LCD_FillRect
 223              	.LVL30:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 7


 125:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[1][0], buttonsLeftUpper[1][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 224              		.loc 1 125 0
 225 001e 4823     		movs	r3, #72
 226 0020 1A46     		mov	r2, r3
 227 0022 E188     		ldrh	r1, [r4, #6]
 228 0024 A088     		ldrh	r0, [r4, #4]
 229 0026 FFF7FEFF 		bl	BSP_LCD_FillRect
 230              	.LVL31:
 126:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[2][0], buttonsLeftUpper[2][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 231              		.loc 1 126 0
 232 002a 4823     		movs	r3, #72
 233 002c 1A46     		mov	r2, r3
 234 002e 6189     		ldrh	r1, [r4, #10]
 235 0030 2089     		ldrh	r0, [r4, #8]
 236 0032 FFF7FEFF 		bl	BSP_LCD_FillRect
 237              	.LVL32:
 127:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[3][0], buttonsLeftUpper[3][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 238              		.loc 1 127 0
 239 0036 4823     		movs	r3, #72
 240 0038 1A46     		mov	r2, r3
 241 003a E189     		ldrh	r1, [r4, #14]
 242 003c A089     		ldrh	r0, [r4, #12]
 243 003e FFF7FEFF 		bl	BSP_LCD_FillRect
 244              	.LVL33:
 128:Src/gui.c     **** 
 129:Src/gui.c     **** 	//select Foreground Layer
 130:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 245              		.loc 1 130 0
 246 0042 0120     		movs	r0, #1
 247 0044 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 248              	.LVL34:
 249 0048 10BD     		pop	{r4, pc}
 250              	.L12:
 251 004a 00BF     		.align	2
 252              	.L11:
 253 004c 00000000 		.word	.LANCHOR0
 254              		.cfi_endproc
 255              	.LFE138:
 257              		.section	.text.initialize_touchscreen,"ax",%progbits
 258              		.align	1
 259              		.global	initialize_touchscreen
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu fpv5-sp-d16
 265              	initialize_touchscreen:
 266              	.LFB139:
 131:Src/gui.c     **** }
 132:Src/gui.c     **** 
 133:Src/gui.c     **** // Initialize the touchscreen
 134:Src/gui.c     **** int initialize_touchscreen(void)
 135:Src/gui.c     **** {
 267              		.loc 1 135 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 8


 272              	.LCFI3:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 4, -8
 275              		.cfi_offset 14, -4
 276              	.LVL35:
 136:Src/gui.c     **** 	uint8_t status = 0;
 137:Src/gui.c     **** 	status = BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
 277              		.loc 1 137 0
 278 0002 FFF7FEFF 		bl	BSP_LCD_GetXSize
 279              	.LVL36:
 280 0006 84B2     		uxth	r4, r0
 281 0008 FFF7FEFF 		bl	BSP_LCD_GetYSize
 282              	.LVL37:
 283 000c 81B2     		uxth	r1, r0
 284 000e 2046     		mov	r0, r4
 285 0010 FFF7FEFF 		bl	BSP_TS_Init
 286              	.LVL38:
 138:Src/gui.c     **** 	if(status != TS_OK) return -1;
 287              		.loc 1 138 0
 288 0014 08B9     		cbnz	r0, .L17
 139:Src/gui.c     **** 	return 0;
 289              		.loc 1 139 0
 290 0016 0020     		movs	r0, #0
 291              	.LVL39:
 140:Src/gui.c     **** }
 292              		.loc 1 140 0
 293 0018 10BD     		pop	{r4, pc}
 294              	.LVL40:
 295              	.L17:
 138:Src/gui.c     **** 	if(status != TS_OK) return -1;
 296              		.loc 1 138 0
 297 001a 4FF0FF30 		mov	r0, #-1
 298              	.LVL41:
 299 001e 10BD     		pop	{r4, pc}
 300              		.cfi_endproc
 301              	.LFE139:
 303              		.section	.text.touchscreen_loop_init,"ax",%progbits
 304              		.align	1
 305              		.global	touchscreen_loop_init
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-sp-d16
 311              	touchscreen_loop_init:
 312              	.LFB140:
 141:Src/gui.c     **** 
 142:Src/gui.c     **** // Call this once to init the TS-input-reading-loop
 143:Src/gui.c     **** void touchscreen_loop_init(void) 
 144:Src/gui.c     **** {
 313              		.loc 1 144 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 08B5     		push	{r3, lr}
 318              	.LCFI4:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 3, -8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 9


 321              		.cfi_offset 14, -4
 145:Src/gui.c     ****     newX = 120;
 322              		.loc 1 145 0
 323 0002 7823     		movs	r3, #120
 324 0004 0A4A     		ldr	r2, .L20
 325 0006 1380     		strh	r3, [r2]	@ movhi
 146:Src/gui.c     **** 	newY = 120;
 326              		.loc 1 146 0
 327 0008 0A4A     		ldr	r2, .L20+4
 328 000a 1380     		strh	r3, [r2]	@ movhi
 147:Src/gui.c     ****     BSP_LCD_SelectLayer(LAYER_FG);
 329              		.loc 1 147 0
 330 000c 0120     		movs	r0, #1
 331 000e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 332              	.LVL42:
 148:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_GREEN);
 333              		.loc 1 148 0
 334 0012 4FF0FF20 		mov	r0, #-16711936
 335 0016 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 336              	.LVL43:
 149:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_FG, (uint8_t) 0xFF);
 337              		.loc 1 149 0
 338 001a FF21     		movs	r1, #255
 339 001c 0120     		movs	r0, #1
 340 001e FFF7FEFF 		bl	BSP_LCD_SetTransparency
 341              	.LVL44:
 150:Src/gui.c     **** 	BSP_LCD_SetColorKeying(LAYER_FG, LCD_COLOR_WHITE);
 342              		.loc 1 150 0
 343 0022 4FF0FF31 		mov	r1, #-1
 344 0026 0120     		movs	r0, #1
 345 0028 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
 346              	.LVL45:
 347 002c 08BD     		pop	{r3, pc}
 348              	.L21:
 349 002e 00BF     		.align	2
 350              	.L20:
 351 0030 00000000 		.word	newX
 352 0034 00000000 		.word	newY
 353              		.cfi_endproc
 354              	.LFE140:
 356              		.global	__aeabi_i2d
 357              		.global	__aeabi_dadd
 358              		.global	__aeabi_dcmple
 359              		.section	.text.check_touchscreen,"ax",%progbits
 360              		.align	1
 361              		.global	check_touchscreen
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 365              		.fpu fpv5-sp-d16
 367              	check_touchscreen:
 368              	.LFB141:
 151:Src/gui.c     **** }
 152:Src/gui.c     **** 
 153:Src/gui.c     **** // Single iteration of getting TS input
 154:Src/gui.c     **** Mp3_Player_State check_touchscreen(void) 
 155:Src/gui.c     **** {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 10


 369              		.loc 1 155 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 374              	.LCFI5:
 375              		.cfi_def_cfa_offset 32
 376              		.cfi_offset 4, -32
 377              		.cfi_offset 5, -28
 378              		.cfi_offset 6, -24
 379              		.cfi_offset 7, -20
 380              		.cfi_offset 8, -16
 381              		.cfi_offset 9, -12
 382              		.cfi_offset 10, -8
 383              		.cfi_offset 14, -4
 156:Src/gui.c     **** 	uint32_t currentTicks = HAL_GetTick();
 384              		.loc 1 156 0
 385 0004 FFF7FEFF 		bl	HAL_GetTick
 386              	.LVL46:
 157:Src/gui.c     **** 	if (currentTicks < lastTicks + TICKS_DELTA)
 387              		.loc 1 157 0
 388 0008 3F4B     		ldr	r3, .L43
 389 000a 1B68     		ldr	r3, [r3]
 390 000c 6433     		adds	r3, r3, #100
 391 000e 9842     		cmp	r0, r3
 392 0010 02D2     		bcs	.L39
 158:Src/gui.c     **** 		return EMPTY;
 393              		.loc 1 158 0
 394 0012 0620     		movs	r0, #6
 395              	.LVL47:
 396 0014 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 397              	.LVL48:
 398              	.L39:
 159:Src/gui.c     **** 		
 160:Src/gui.c     **** 	
 161:Src/gui.c     ****     BSP_TS_GetState(&TS_State);
 399              		.loc 1 161 0
 400 0018 3C4C     		ldr	r4, .L43+4
 401 001a 2046     		mov	r0, r4
 402              	.LVL49:
 403 001c FFF7FEFF 		bl	BSP_TS_GetState
 404              	.LVL50:
 162:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 405              		.loc 1 162 0
 406 0020 4FF0FF30 		mov	r0, #-1
 407 0024 FFF7FEFF 		bl	BSP_LCD_Clear
 408              	.LVL51:
 163:Src/gui.c     **** 	if ((TS_State.touchX[0] & 0x0FFF) >= 40) 
 409              		.loc 1 163 0
 410 0028 6388     		ldrh	r3, [r4, #2]
 411 002a C3F30B03 		ubfx	r3, r3, #0, #12
 412 002e 272B     		cmp	r3, #39
 413 0030 01DD     		ble	.L24
 164:Src/gui.c     ****     {
 165:Src/gui.c     **** 		newX = TS_State.touchX[0] & 0x0FFF;
 414              		.loc 1 165 0
 415 0032 374A     		ldr	r2, .L43+8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 11


 416 0034 1380     		strh	r3, [r2]	@ movhi
 417              	.L24:
 166:Src/gui.c     **** 	}
 167:Src/gui.c     **** 	if ((TS_State.touchY[0] & 0x0FFF) >= 40) 
 418              		.loc 1 167 0
 419 0036 354B     		ldr	r3, .L43+4
 420 0038 9B89     		ldrh	r3, [r3, #12]
 421 003a C3F30B03 		ubfx	r3, r3, #0, #12
 422 003e 272B     		cmp	r3, #39
 423 0040 01DD     		ble	.L25
 168:Src/gui.c     ****     {
 169:Src/gui.c     **** 		newY = TS_State.touchY[0] & 0x0FFF;
 424              		.loc 1 169 0
 425 0042 344A     		ldr	r2, .L43+12
 426 0044 1380     		strh	r3, [r2]	@ movhi
 427              	.L25:
 170:Src/gui.c     **** 	}
 171:Src/gui.c     **** 	
 172:Src/gui.c     **** 	if (lastState.touchX[0] == newX && lastState.touchY[0] == newY)
 428              		.loc 1 172 0
 429 0046 344B     		ldr	r3, .L43+16
 430 0048 5B88     		ldrh	r3, [r3, #2]
 431 004a 314A     		ldr	r2, .L43+8
 432 004c 1688     		ldrh	r6, [r2]
 433 004e B342     		cmp	r3, r6
 434 0050 08D0     		beq	.L40
 435              	.L26:
 173:Src/gui.c     **** 		return EMPTY;
 174:Src/gui.c     **** 	
 175:Src/gui.c     **** 	lastState.touchX[0] = newX;
 436              		.loc 1 175 0
 437 0052 314B     		ldr	r3, .L43+16
 438 0054 5E80     		strh	r6, [r3, #2]	@ movhi
 176:Src/gui.c     **** 	lastState.touchY[0] = newY;
 439              		.loc 1 176 0
 440 0056 2F4A     		ldr	r2, .L43+12
 441 0058 B2F800A0 		ldrh	r10, [r2]
 442 005c A3F80CA0 		strh	r10, [r3, #12]	@ movhi
 443              	.LVL52:
 444              	.LBB2:
 177:Src/gui.c     **** 	
 178:Src/gui.c     **** 	
 179:Src/gui.c     **** 	for(int i = 0; i < CONTROL_BUTTONS_NUMBER; i++) {
 445              		.loc 1 179 0
 446 0060 0024     		movs	r4, #0
 447 0062 10E0     		b	.L27
 448              	.LVL53:
 449              	.L40:
 450              	.LBE2:
 172:Src/gui.c     **** 		return EMPTY;
 451              		.loc 1 172 0 discriminator 1
 452 0064 2C4B     		ldr	r3, .L43+16
 453 0066 9A89     		ldrh	r2, [r3, #12]
 454 0068 2A4B     		ldr	r3, .L43+12
 455 006a 1B88     		ldrh	r3, [r3]
 456 006c 9A42     		cmp	r2, r3
 457 006e F0D1     		bne	.L26
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 12


 173:Src/gui.c     **** 	
 458              		.loc 1 173 0
 459 0070 0620     		movs	r0, #6
 460 0072 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 461              	.LVL54:
 462              	.L42:
 463              	.LBB6:
 464              	.LBB3:
 180:Src/gui.c     **** 	
 181:Src/gui.c     **** 		uint16_t buttonCornerX = buttonsLeftUpper[i][0];
 182:Src/gui.c     **** 		uint16_t buttonCornerY = buttonsLeftUpper[i][1];
 183:Src/gui.c     **** 		
 184:Src/gui.c     **** 		if (newX <= buttonCornerX + CONTROL_BUTTON_SIZE &&
 185:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 186:Src/gui.c     **** 			newX > buttonCornerX &&
 187:Src/gui.c     **** 			newY > buttonCornerY
 188:Src/gui.c     **** 		) {
 189:Src/gui.c     **** 		
 190:Src/gui.c     **** 		if (i == 1)
 191:Src/gui.c     **** 			if (playButtonState == PLAY)
 465              		.loc 1 191 0
 466 0076 294B     		ldr	r3, .L43+20
 467 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 468 007a 002B     		cmp	r3, #0
 469 007c 40D1     		bne	.L35
 192:Src/gui.c     **** 				return PAUSE;
 470              		.loc 1 192 0
 471 007e 0120     		movs	r0, #1
 472 0080 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 473              	.LVL55:
 474              	.L28:
 475              	.LBE3:
 179:Src/gui.c     **** 	
 476              		.loc 1 179 0 discriminator 2
 477 0084 0134     		adds	r4, r4, #1
 478              	.LVL56:
 479              	.L27:
 179:Src/gui.c     **** 	
 480              		.loc 1 179 0 is_stmt 0 discriminator 1
 481 0086 032C     		cmp	r4, #3
 482 0088 37DC     		bgt	.L41
 483              	.LBB4:
 181:Src/gui.c     **** 		uint16_t buttonCornerY = buttonsLeftUpper[i][1];
 484              		.loc 1 181 0 is_stmt 1
 485 008a 254B     		ldr	r3, .L43+24
 486 008c 33F82450 		ldrh	r5, [r3, r4, lsl #2]
 487              	.LVL57:
 182:Src/gui.c     **** 		
 488              		.loc 1 182 0
 489 0090 03EB8403 		add	r3, r3, r4, lsl #2
 490 0094 5F88     		ldrh	r7, [r3, #2]
 491              	.LVL58:
 184:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 492              		.loc 1 184 0
 493 0096 3046     		mov	r0, r6
 494 0098 FFF7FEFF 		bl	__aeabi_i2d
 495              	.LVL59:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 13


 496 009c 8046     		mov	r8, r0
 497 009e 8946     		mov	r9, r1
 498 00a0 2846     		mov	r0, r5
 499 00a2 FFF7FEFF 		bl	__aeabi_i2d
 500              	.LVL60:
 501 00a6 0022     		movs	r2, #0
 502 00a8 1E4B     		ldr	r3, .L43+28
 503 00aa FFF7FEFF 		bl	__aeabi_dadd
 504              	.LVL61:
 505 00ae 0246     		mov	r2, r0
 506 00b0 0B46     		mov	r3, r1
 507 00b2 4046     		mov	r0, r8
 508 00b4 4946     		mov	r1, r9
 509 00b6 FFF7FEFF 		bl	__aeabi_dcmple
 510              	.LVL62:
 511 00ba 0028     		cmp	r0, #0
 512 00bc E2D0     		beq	.L28
 185:Src/gui.c     **** 			newX > buttonCornerX &&
 513              		.loc 1 185 0 discriminator 1
 514 00be 5046     		mov	r0, r10
 515 00c0 FFF7FEFF 		bl	__aeabi_i2d
 516              	.LVL63:
 517 00c4 8046     		mov	r8, r0
 518 00c6 8946     		mov	r9, r1
 519 00c8 3846     		mov	r0, r7
 520 00ca FFF7FEFF 		bl	__aeabi_i2d
 521              	.LVL64:
 522 00ce 0022     		movs	r2, #0
 523 00d0 144B     		ldr	r3, .L43+28
 524 00d2 FFF7FEFF 		bl	__aeabi_dadd
 525              	.LVL65:
 184:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 526              		.loc 1 184 0 discriminator 1
 527 00d6 0246     		mov	r2, r0
 528 00d8 0B46     		mov	r3, r1
 529 00da 4046     		mov	r0, r8
 530 00dc 4946     		mov	r1, r9
 531 00de FFF7FEFF 		bl	__aeabi_dcmple
 532              	.LVL66:
 533 00e2 0028     		cmp	r0, #0
 534 00e4 CED0     		beq	.L28
 185:Src/gui.c     **** 			newX > buttonCornerX &&
 535              		.loc 1 185 0
 536 00e6 AE42     		cmp	r6, r5
 537 00e8 CCD9     		bls	.L28
 186:Src/gui.c     **** 			newY > buttonCornerY
 538              		.loc 1 186 0
 539 00ea BA45     		cmp	r10, r7
 540 00ec CAD9     		bls	.L28
 190:Src/gui.c     **** 			if (playButtonState == PLAY)
 541              		.loc 1 190 0
 542 00ee 012C     		cmp	r4, #1
 543 00f0 C1D0     		beq	.L42
 193:Src/gui.c     **** 			else
 194:Src/gui.c     **** 				return PLAY;
 195:Src/gui.c     **** 		
 196:Src/gui.c     **** 		
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 14


 197:Src/gui.c     **** 		else
 198:Src/gui.c     **** 			return buttonState[i];	
 544              		.loc 1 198 0
 545 00f2 0D4B     		ldr	r3, .L43+32
 546 00f4 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 547 00f6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 548              	.LVL67:
 549              	.L41:
 550              	.LBE4:
 551              	.LBE6:
 199:Src/gui.c     **** 		}
 200:Src/gui.c     **** 	}
 201:Src/gui.c     **** 	
 202:Src/gui.c     **** 	return EMPTY;
 552              		.loc 1 202 0
 553 00fa 0620     		movs	r0, #6
 554              	.LBB7:
 555 00fc BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 556              	.LVL68:
 557              	.L35:
 558              	.LBB5:
 194:Src/gui.c     **** 		
 559              		.loc 1 194 0
 560 0100 0020     		movs	r0, #0
 561              	.LBE5:
 562              	.LBE7:
 203:Src/gui.c     **** 
 204:Src/gui.c     **** 	// vTaskDelay(10);
 205:Src/gui.c     **** }
 563              		.loc 1 205 0
 564 0102 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 565              	.LVL69:
 566              	.L44:
 567 0106 00BF     		.align	2
 568              	.L43:
 569 0108 00000000 		.word	.LANCHOR1
 570 010c 00000000 		.word	.LANCHOR2
 571 0110 00000000 		.word	newX
 572 0114 00000000 		.word	newY
 573 0118 00000000 		.word	.LANCHOR3
 574 011c 00000000 		.word	.LANCHOR4
 575 0120 00000000 		.word	.LANCHOR0
 576 0124 00005240 		.word	1079115776
 577 0128 00000000 		.word	.LANCHOR5
 578              		.cfi_endproc
 579              	.LFE141:
 581              		.global	__aeabi_dmul
 582              		.global	__aeabi_d2uiz
 583              		.section	.text.getXPix,"ax",%progbits
 584              		.align	1
 585              		.global	getXPix
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 589              		.fpu fpv5-sp-d16
 591              	getXPix:
 592              	.LFB142:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 15


 206:Src/gui.c     **** 
 207:Src/gui.c     **** uint16_t getXPix (double factor)  {
 593              		.loc 1 207 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              	.LVL70:
 598 0000 08B5     		push	{r3, lr}
 599              	.LCFI6:
 600              		.cfi_def_cfa_offset 8
 601              		.cfi_offset 3, -8
 602              		.cfi_offset 14, -4
 208:Src/gui.c     **** 	return factor * LCD_X_SIZE;
 603              		.loc 1 208 0
 604 0002 0022     		movs	r2, #0
 605 0004 044B     		ldr	r3, .L47
 606 0006 51EC100B 		vmov	r0, r1, d0
 607 000a FFF7FEFF 		bl	__aeabi_dmul
 608              	.LVL71:
 609 000e FFF7FEFF 		bl	__aeabi_d2uiz
 610              	.LVL72:
 209:Src/gui.c     **** }
 611              		.loc 1 209 0
 612 0012 80B2     		uxth	r0, r0
 613 0014 08BD     		pop	{r3, pc}
 614              	.L48:
 615 0016 00BF     		.align	2
 616              	.L47:
 617 0018 00007E40 		.word	1081999360
 618              		.cfi_endproc
 619              	.LFE142:
 621              		.section	.text.getYPix,"ax",%progbits
 622              		.align	1
 623              		.global	getYPix
 624              		.syntax unified
 625              		.thumb
 626              		.thumb_func
 627              		.fpu fpv5-sp-d16
 629              	getYPix:
 630              	.LFB143:
 210:Src/gui.c     **** 
 211:Src/gui.c     **** uint16_t getYPix (double factor)  {
 631              		.loc 1 211 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              	.LVL73:
 636 0000 08B5     		push	{r3, lr}
 637              	.LCFI7:
 638              		.cfi_def_cfa_offset 8
 639              		.cfi_offset 3, -8
 640              		.cfi_offset 14, -4
 212:Src/gui.c     **** 	return factor * LCD_Y_SIZE;
 641              		.loc 1 212 0
 642 0002 0022     		movs	r2, #0
 643 0004 044B     		ldr	r3, .L51
 644 0006 51EC100B 		vmov	r0, r1, d0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 16


 645 000a FFF7FEFF 		bl	__aeabi_dmul
 646              	.LVL74:
 647 000e FFF7FEFF 		bl	__aeabi_d2uiz
 648              	.LVL75:
 213:Src/gui.c     **** }...
 649              		.loc 1 213 0
 650 0012 80B2     		uxth	r0, r0
 651 0014 08BD     		pop	{r3, pc}
 652              	.L52:
 653 0016 00BF     		.align	2
 654              	.L51:
 655 0018 00007140 		.word	1081147392
 656              		.cfi_endproc
 657              	.LFE143:
 659              		.global	lastTicks
 660              		.global	playButtonState
 661              		.global	buttonState
 662              		.global	buttonsLeftUpper
 663              		.comm	newY,2,2
 664              		.comm	newX,2,2
 665              		.section	.bss.TS_State,"aw",%nobits
 666              		.align	2
 667              		.set	.LANCHOR2,. + 0
 670              	TS_State:
 671 0000 00000000 		.space	44
 671      00000000 
 671      00000000 
 671      00000000 
 671      00000000 
 672              		.section	.bss.lastState,"aw",%nobits
 673              		.align	2
 674              		.set	.LANCHOR3,. + 0
 677              	lastState:
 678 0000 00000000 		.space	44
 678      00000000 
 678      00000000 
 678      00000000 
 678      00000000 
 679              		.section	.bss.lastTicks,"aw",%nobits
 680              		.align	2
 681              		.set	.LANCHOR1,. + 0
 684              	lastTicks:
 685 0000 00000000 		.space	4
 686              		.section	.bss.playButtonState,"aw",%nobits
 687              		.set	.LANCHOR4,. + 0
 690              	playButtonState:
 691 0000 00       		.space	1
 692              		.section	.data.buttonState,"aw",%progbits
 693              		.align	2
 694              		.set	.LANCHOR5,. + 0
 697              	buttonState:
 698 0000 04       		.byte	4
 699 0001 00       		.byte	0
 700 0002 02       		.byte	2
 701 0003 03       		.byte	3
 702              		.section	.data.buttonsLeftUpper,"aw",%progbits
 703              		.align	2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 17


 704              		.set	.LANCHOR0,. + 0
 707              	buttonsLeftUpper:
 708 0000 2600     		.short	38
 709 0002 BE00     		.short	190
 710 0004 9400     		.short	148
 711 0006 BE00     		.short	190
 712 0008 0301     		.short	259
 713 000a BE00     		.short	190
 714 000c 7101     		.short	369
 715 000e BE00     		.short	190
 716              		.text
 717              	.Letext0:
 718              		.file 2 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 719              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 720              		.file 4 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 721              		.file 5 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 722              		.file 6 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 723              		.file 7 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 724              		.file 8 "Inc/mp3_player.h"
 725              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 726              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 727              		.file 11 "c:\\users\\student\\downloads\\aaaaa13\\utilities\\fonts\\fonts.h"
 728              		.file 12 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/../Common/ts.h"
 729              		.file 13 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/ft5336.h"
 730              		.file 14 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_ts.h"
 731              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 732              		.file 16 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_lcd.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 gui.c
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:18     .text.lcd_start:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:25     .text.lcd_start:00000000 lcd_start
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:96     .text.lcd_start:00000064 $d
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:101    .text.LCD_Start_v2:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:108    .text.LCD_Start_v2:00000000 LCD_Start_v2
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:185    .text.LCD_Start_v2:0000006c $d
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:190    .text.draw_background:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:197    .text.draw_background:00000000 draw_background
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:253    .text.draw_background:0000004c $d
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:258    .text.initialize_touchscreen:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:265    .text.initialize_touchscreen:00000000 initialize_touchscreen
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:304    .text.touchscreen_loop_init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:311    .text.touchscreen_loop_init:00000000 touchscreen_loop_init
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:351    .text.touchscreen_loop_init:00000030 $d
                            *COM*:00000002 newX
                            *COM*:00000002 newY
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:360    .text.check_touchscreen:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:367    .text.check_touchscreen:00000000 check_touchscreen
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:569    .text.check_touchscreen:00000108 $d
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:584    .text.getXPix:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:591    .text.getXPix:00000000 getXPix
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:617    .text.getXPix:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:622    .text.getYPix:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:629    .text.getYPix:00000000 getYPix
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:655    .text.getYPix:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:684    .bss.lastTicks:00000000 lastTicks
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:690    .bss.playButtonState:00000000 playButtonState
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:697    .data.buttonState:00000000 buttonState
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:707    .data.buttonsLeftUpper:00000000 buttonsLeftUpper
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:666    .bss.TS_State:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:670    .bss.TS_State:00000000 TS_State
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:673    .bss.lastState:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:677    .bss.lastState:00000000 lastState
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:680    .bss.lastTicks:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:691    .bss.playButtonState:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:693    .data.buttonState:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccI4biD9.s:703    .data.buttonsLeftUpper:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
BSP_LCD_Init
BSP_LCD_LayerDefaultInit
BSP_LCD_DisplayOn
BSP_LCD_SelectLayer
BSP_LCD_Clear
BSP_LCD_SetBackColor
BSP_LCD_SetColorKeying
BSP_LCD_SetTransparency
BSP_LCD_SetTextColor
BSP_LCD_ResetColorKeying
BSP_LCD_Reload
BSP_LCD_FillRect
BSP_LCD_GetXSize
BSP_LCD_GetYSize
BSP_TS_Init
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccI4biD9.s 			page 19


__aeabi_i2d
__aeabi_dadd
__aeabi_dcmple
HAL_GetTick
BSP_TS_GetState
__aeabi_dmul
__aeabi_d2uiz
