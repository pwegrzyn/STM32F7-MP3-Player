ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"gui.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lcd_start,"ax",%progbits
  18              		.align	1
  19              		.global	lcd_start
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	lcd_start:
  26              	.LFB136:
  27              		.file 1 "Src/gui.c"
   1:Src/gui.c     **** /*
   2:Src/gui.c     ****  *	Graphical User Interface
   3:Src/gui.c     ****  *  Touchscreen
   4:Src/gui.c     ****  */
   5:Src/gui.c     **** 
   6:Src/gui.c     **** #include <stdio.h>
   7:Src/gui.c     **** #include <string.h>
   8:Src/gui.c     **** 
   9:Src/gui.c     **** #include "mp3_player.h"
  10:Src/gui.c     **** #include "stm32746g_discovery_lcd.h"
  11:Src/gui.c     **** #include "Utilities/Fonts/fonts.h"
  12:Src/gui.c     **** #include "stm32746g_discovery_ts.h"
  13:Src/gui.c     **** #include "term_io.h"
  14:Src/gui.c     **** #include "dbgu.h"
  15:Src/gui.c     **** #include "ansi.h"
  16:Src/gui.c     **** #include "stm32f7xx_hal.h"
  17:Src/gui.c     **** 
  18:Src/gui.c     **** #define LCD_X_SIZE			RK043FN48H_WIDTH
  19:Src/gui.c     **** #define LCD_Y_SIZE			RK043FN48H_HEIGHT
  20:Src/gui.c     **** #define LAYER_FG 1
  21:Src/gui.c     **** #define LAYER_BG 0
  22:Src/gui.c     **** 
  23:Src/gui.c     **** #define CONTROL_BUTTON_SIZE 0.15 * LCD_X_SIZE
  24:Src/gui.c     **** #define CONTROL_BUTTONS_NUMBER 4
  25:Src/gui.c     **** #define TICKS_DELTA 100
  26:Src/gui.c     **** 
  27:Src/gui.c     **** #define XPix(x) x * LCD_X_SIZE
  28:Src/gui.c     **** #define YPix(x) x * LCD_Y_SIZE
  29:Src/gui.c     **** // Not sure about these two guys (may be used in LCD_START_V2() in LayerDefaultInit()?)
  30:Src/gui.c     **** // static uint32_t lcd_image_fg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attrib
  31:Src/gui.c     **** // static uint32_t lcd_image_bg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attrib
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 2


  32:Src/gui.c     **** 
  33:Src/gui.c     **** /* ------------------------------------------------------------------- */
  34:Src/gui.c     **** 
  35:Src/gui.c     **** static TS_StateTypeDef TS_State;
  36:Src/gui.c     **** static TS_StateTypeDef lastState;
  37:Src/gui.c     **** uint16_t newX;
  38:Src/gui.c     **** uint16_t newY;
  39:Src/gui.c     **** uint16_t buttonsLeftUpper[4][2] = { {XPix(0.08), YPix(0.7)}, {XPix(0.31), YPix(0.7)}, {XPix(0.54), 
  40:Src/gui.c     **** Mp3_Player_State buttonState[4] = { PREV, PLAY, STOP, NEXT };
  41:Src/gui.c     **** Mp3_Player_State playButtonState = PLAY;
  42:Src/gui.c     **** uint32_t lastTicks = 0;
  43:Src/gui.c     **** 
  44:Src/gui.c     **** /* ------------------------------------------------------------------- */
  45:Src/gui.c     **** 
  46:Src/gui.c     **** void lcd_start(void);
  47:Src/gui.c     **** void LCD_Start_v2(void);
  48:Src/gui.c     **** void draw_background(void);
  49:Src/gui.c     **** int initialize_touchscreen(void);
  50:Src/gui.c     **** void touchscreen_loop_init(void);
  51:Src/gui.c     **** Mp3_Player_State check_touchscreen();
  52:Src/gui.c     **** void update_progress_bar(double);
  53:Src/gui.c     **** uint16_t getXPix (double factor);
  54:Src/gui.c     **** uint16_t getYPix (double factor);
  55:Src/gui.c     **** void refresh_screen(const char *info_text);
  56:Src/gui.c     **** void draw_buttons(void);
  57:Src/gui.c     **** void update_play_pause_button(void);
  58:Src/gui.c     **** 
  59:Src/gui.c     **** /* ------------------------------------------------------------------- */
  60:Src/gui.c     **** 
  61:Src/gui.c     **** // Initialize the LCD display
  62:Src/gui.c     **** void lcd_start(void)
  63:Src/gui.c     **** {
  28              		.loc 1 63 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  64:Src/gui.c     ****   /* LCD Initialization */
  65:Src/gui.c     ****   BSP_LCD_Init();
  37              		.loc 1 65 0
  38 0002 FFF7FEFF 		bl	BSP_LCD_Init
  39              	.LVL0:
  66:Src/gui.c     **** 
  67:Src/gui.c     ****   /* LCD Initialization */
  68:Src/gui.c     ****   BSP_LCD_LayerDefaultInit(LAYER_BG, (unsigned int)0xC0000000);
  40              		.loc 1 68 0
  41 0006 4FF04041 		mov	r1, #-1073741824
  42 000a 0020     		movs	r0, #0
  43 000c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
  44              	.LVL1:
  69:Src/gui.c     ****   //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
  70:Src/gui.c     ****   BSP_LCD_LayerDefaultInit(LAYER_FG, (unsigned int)0xC0000000+(LCD_X_SIZE*LCD_Y_SIZE*4));
  45              		.loc 1 70 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 3


  46 0010 1449     		ldr	r1, .L3
  47 0012 0120     		movs	r0, #1
  48 0014 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
  49              	.LVL2:
  71:Src/gui.c     **** 
  72:Src/gui.c     ****   /* Enable the LCD */
  73:Src/gui.c     ****   BSP_LCD_DisplayOn();
  50              		.loc 1 73 0
  51 0018 FFF7FEFF 		bl	BSP_LCD_DisplayOn
  52              	.LVL3:
  74:Src/gui.c     **** 
  75:Src/gui.c     ****   /* Select the LCD Background Layer  */
  76:Src/gui.c     ****   BSP_LCD_SelectLayer(LAYER_BG);
  53              		.loc 1 76 0
  54 001c 0020     		movs	r0, #0
  55 001e FFF7FEFF 		bl	BSP_LCD_SelectLayer
  56              	.LVL4:
  77:Src/gui.c     **** 
  78:Src/gui.c     ****   /* Clear the Background Layer */
  79:Src/gui.c     ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
  57              		.loc 1 79 0
  58 0022 4FF0FF30 		mov	r0, #-1
  59 0026 FFF7FEFF 		bl	BSP_LCD_Clear
  60              	.LVL5:
  80:Src/gui.c     ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
  61              		.loc 1 80 0
  62 002a 4FF0FF30 		mov	r0, #-1
  63 002e FFF7FEFF 		bl	BSP_LCD_SetBackColor
  64              	.LVL6:
  81:Src/gui.c     **** 
  82:Src/gui.c     ****   BSP_LCD_SetColorKeying(LAYER_FG,LCD_COLOR_WHITE);
  65              		.loc 1 82 0
  66 0032 4FF0FF31 		mov	r1, #-1
  67 0036 0120     		movs	r0, #1
  68 0038 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
  69              	.LVL7:
  83:Src/gui.c     **** 
  84:Src/gui.c     ****   /* Select the LCD Foreground Layer  */
  85:Src/gui.c     ****   BSP_LCD_SelectLayer(LAYER_FG);
  70              		.loc 1 85 0
  71 003c 0120     		movs	r0, #1
  72 003e FFF7FEFF 		bl	BSP_LCD_SelectLayer
  73              	.LVL8:
  86:Src/gui.c     **** 
  87:Src/gui.c     ****   /* Clear the Foreground Layer */
  88:Src/gui.c     ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
  74              		.loc 1 88 0
  75 0042 4FF0FF30 		mov	r0, #-1
  76 0046 FFF7FEFF 		bl	BSP_LCD_Clear
  77              	.LVL9:
  89:Src/gui.c     ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
  78              		.loc 1 89 0
  79 004a 4FF0FF30 		mov	r0, #-1
  80 004e FFF7FEFF 		bl	BSP_LCD_SetBackColor
  81              	.LVL10:
  90:Src/gui.c     **** 
  91:Src/gui.c     ****   /* Configure the transparency for foreground and background :
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 4


  92:Src/gui.c     ****      Increase the transparency */
  93:Src/gui.c     ****   BSP_LCD_SetTransparency(LAYER_BG, 255);
  82              		.loc 1 93 0
  83 0052 FF21     		movs	r1, #255
  84 0054 0020     		movs	r0, #0
  85 0056 FFF7FEFF 		bl	BSP_LCD_SetTransparency
  86              	.LVL11:
  94:Src/gui.c     ****   BSP_LCD_SetTransparency(LAYER_FG, 255);
  87              		.loc 1 94 0
  88 005a FF21     		movs	r1, #255
  89 005c 0120     		movs	r0, #1
  90 005e FFF7FEFF 		bl	BSP_LCD_SetTransparency
  91              	.LVL12:
  92 0062 08BD     		pop	{r3, pc}
  93              	.L4:
  94              		.align	2
  95              	.L3:
  96 0064 00F807C0 		.word	-1073219584
  97              		.cfi_endproc
  98              	.LFE136:
 100              		.section	.text.LCD_Start_v2,"ax",%progbits
 101              		.align	1
 102              		.global	LCD_Start_v2
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv5-sp-d16
 108              	LCD_Start_v2:
 109              	.LFB137:
  95:Src/gui.c     **** }
  96:Src/gui.c     **** 
  97:Src/gui.c     **** // We can go with this instead probably
  98:Src/gui.c     **** void LCD_Start_v2(void)
  99:Src/gui.c     **** {
 110              		.loc 1 99 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114 0000 08B5     		push	{r3, lr}
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 3, -8
 118              		.cfi_offset 14, -4
 100:Src/gui.c     **** 	BSP_LCD_Init();
 119              		.loc 1 100 0
 120 0002 FFF7FEFF 		bl	BSP_LCD_Init
 121              	.LVL13:
 101:Src/gui.c     **** 	BSP_LCD_LayerDefaultInit(LAYER_FG, (unsigned int)0xC0000000);
 122              		.loc 1 101 0
 123 0006 4FF04041 		mov	r1, #-1073741824
 124 000a 0120     		movs	r0, #1
 125 000c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 126              	.LVL14:
 102:Src/gui.c     **** 	BSP_LCD_LayerDefaultInit(LAYER_BG, (unsigned int)0xC0000000+(LCD_X_SIZE*LCD_Y_SIZE*4));
 127              		.loc 1 102 0
 128 0010 1649     		ldr	r1, .L7
 129 0012 0020     		movs	r0, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 5


 130 0014 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 131              	.LVL15:
 103:Src/gui.c     **** 
 104:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 132              		.loc 1 104 0
 133 0018 0120     		movs	r0, #1
 134 001a FFF7FEFF 		bl	BSP_LCD_SelectLayer
 135              	.LVL16:
 105:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 136              		.loc 1 105 0
 137 001e 4FF0FF30 		mov	r0, #-1
 138 0022 FFF7FEFF 		bl	BSP_LCD_Clear
 139              	.LVL17:
 106:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 140              		.loc 1 106 0
 141 0026 0020     		movs	r0, #0
 142 0028 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 143              	.LVL18:
 107:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 144              		.loc 1 107 0
 145 002c 4FF0FF30 		mov	r0, #-1
 146 0030 FFF7FEFF 		bl	BSP_LCD_Clear
 147              	.LVL19:
 108:Src/gui.c     **** 	BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 148              		.loc 1 108 0
 149 0034 4FF0FF30 		mov	r0, #-1
 150 0038 FFF7FEFF 		bl	BSP_LCD_SetBackColor
 151              	.LVL20:
 109:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 152              		.loc 1 109 0
 153 003c 4FF07F40 		mov	r0, #-16777216
 154 0040 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 155              	.LVL21:
 110:Src/gui.c     **** 
 111:Src/gui.c     **** 	BSP_LCD_ResetColorKeying(LAYER_FG);
 156              		.loc 1 111 0
 157 0044 0120     		movs	r0, #1
 158 0046 FFF7FEFF 		bl	BSP_LCD_ResetColorKeying
 159              	.LVL22:
 112:Src/gui.c     **** 	BSP_LCD_ResetColorKeying(LAYER_BG);
 160              		.loc 1 112 0
 161 004a 0020     		movs	r0, #0
 162 004c FFF7FEFF 		bl	BSP_LCD_ResetColorKeying
 163              	.LVL23:
 113:Src/gui.c     **** 
 114:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_FG, (uint8_t) 100);
 164              		.loc 1 114 0
 165 0050 6421     		movs	r1, #100
 166 0052 0120     		movs	r0, #1
 167 0054 FFF7FEFF 		bl	BSP_LCD_SetTransparency
 168              	.LVL24:
 115:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_BG, (uint8_t) 0xFF);
 169              		.loc 1 115 0
 170 0058 FF21     		movs	r1, #255
 171 005a 0020     		movs	r0, #0
 172 005c FFF7FEFF 		bl	BSP_LCD_SetTransparency
 173              	.LVL25:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 6


 116:Src/gui.c     **** 
 117:Src/gui.c     **** 	BSP_LCD_Reload(LCD_RELOAD_VERTICAL_BLANKING);
 174              		.loc 1 117 0
 175 0060 0220     		movs	r0, #2
 176 0062 FFF7FEFF 		bl	BSP_LCD_Reload
 177              	.LVL26:
 118:Src/gui.c     **** 	BSP_LCD_DisplayOn();
 178              		.loc 1 118 0
 179 0066 FFF7FEFF 		bl	BSP_LCD_DisplayOn
 180              	.LVL27:
 181 006a 08BD     		pop	{r3, pc}
 182              	.L8:
 183              		.align	2
 184              	.L7:
 185 006c 00F807C0 		.word	-1073219584
 186              		.cfi_endproc
 187              	.LFE137:
 189              		.section	.text.initialize_touchscreen,"ax",%progbits
 190              		.align	1
 191              		.global	initialize_touchscreen
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv5-sp-d16
 197              	initialize_touchscreen:
 198              	.LFB139:
 119:Src/gui.c     **** }
 120:Src/gui.c     **** 
 121:Src/gui.c     **** // Draw the screen background
 122:Src/gui.c     **** void draw_background(void)
 123:Src/gui.c     **** {
 124:Src/gui.c     **** 	/* Select the LCD Background Layer  */
 125:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 126:Src/gui.c     **** 
 127:Src/gui.c     **** 	draw_buttons();
 128:Src/gui.c     **** 	
 129:Src/gui.c     **** 	//select Foreground Layer
 130:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 131:Src/gui.c     **** }
 132:Src/gui.c     **** 
 133:Src/gui.c     **** // Initialize the touchscreen
 134:Src/gui.c     **** int initialize_touchscreen(void)
 135:Src/gui.c     **** {
 199              		.loc 1 135 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 10B5     		push	{r4, lr}
 204              	.LCFI2:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 4, -8
 207              		.cfi_offset 14, -4
 208              	.LVL28:
 136:Src/gui.c     **** 	uint8_t status = 0;
 137:Src/gui.c     **** 	status = BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
 209              		.loc 1 137 0
 210 0002 FFF7FEFF 		bl	BSP_LCD_GetXSize
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 7


 211              	.LVL29:
 212 0006 84B2     		uxth	r4, r0
 213 0008 FFF7FEFF 		bl	BSP_LCD_GetYSize
 214              	.LVL30:
 215 000c 81B2     		uxth	r1, r0
 216 000e 2046     		mov	r0, r4
 217 0010 FFF7FEFF 		bl	BSP_TS_Init
 218              	.LVL31:
 138:Src/gui.c     **** 	if(status != TS_OK) return -1;
 219              		.loc 1 138 0
 220 0014 08B9     		cbnz	r0, .L13
 139:Src/gui.c     **** 	return 0;
 221              		.loc 1 139 0
 222 0016 0020     		movs	r0, #0
 223              	.LVL32:
 140:Src/gui.c     **** }
 224              		.loc 1 140 0
 225 0018 10BD     		pop	{r4, pc}
 226              	.LVL33:
 227              	.L13:
 138:Src/gui.c     **** 	if(status != TS_OK) return -1;
 228              		.loc 1 138 0
 229 001a 4FF0FF30 		mov	r0, #-1
 230              	.LVL34:
 231 001e 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE139:
 235              		.section	.text.touchscreen_loop_init,"ax",%progbits
 236              		.align	1
 237              		.global	touchscreen_loop_init
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu fpv5-sp-d16
 243              	touchscreen_loop_init:
 244              	.LFB140:
 141:Src/gui.c     **** 
 142:Src/gui.c     **** // Call this once to init the TS-input-reading-loop
 143:Src/gui.c     **** void touchscreen_loop_init(void)
 144:Src/gui.c     **** {
 245              		.loc 1 144 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249 0000 08B5     		push	{r3, lr}
 250              	.LCFI3:
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 3, -8
 253              		.cfi_offset 14, -4
 145:Src/gui.c     ****     newX = 120;
 254              		.loc 1 145 0
 255 0002 7823     		movs	r3, #120
 256 0004 0A4A     		ldr	r2, .L16
 257 0006 1380     		strh	r3, [r2]	@ movhi
 146:Src/gui.c     **** 	newY = 120;
 258              		.loc 1 146 0
 259 0008 0A4A     		ldr	r2, .L16+4
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 8


 260 000a 1380     		strh	r3, [r2]	@ movhi
 147:Src/gui.c     ****     BSP_LCD_SelectLayer(LAYER_FG);
 261              		.loc 1 147 0
 262 000c 0120     		movs	r0, #1
 263 000e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 264              	.LVL35:
 148:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_GREEN);
 265              		.loc 1 148 0
 266 0012 4FF0FF20 		mov	r0, #-16711936
 267 0016 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 268              	.LVL36:
 149:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_FG, (uint8_t) 0xFF);
 269              		.loc 1 149 0
 270 001a FF21     		movs	r1, #255
 271 001c 0120     		movs	r0, #1
 272 001e FFF7FEFF 		bl	BSP_LCD_SetTransparency
 273              	.LVL37:
 150:Src/gui.c     **** 	BSP_LCD_SetColorKeying(LAYER_FG, LCD_COLOR_WHITE);
 274              		.loc 1 150 0
 275 0022 4FF0FF31 		mov	r1, #-1
 276 0026 0120     		movs	r0, #1
 277 0028 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
 278              	.LVL38:
 279 002c 08BD     		pop	{r3, pc}
 280              	.L17:
 281 002e 00BF     		.align	2
 282              	.L16:
 283 0030 00000000 		.word	newX
 284 0034 00000000 		.word	newY
 285              		.cfi_endproc
 286              	.LFE140:
 288              		.global	__aeabi_i2d
 289              		.global	__aeabi_dadd
 290              		.global	__aeabi_dcmple
 291              		.section	.text.check_touchscreen,"ax",%progbits
 292              		.align	1
 293              		.global	check_touchscreen
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 297              		.fpu fpv5-sp-d16
 299              	check_touchscreen:
 300              	.LFB141:
 151:Src/gui.c     **** }
 152:Src/gui.c     **** 
 153:Src/gui.c     **** // Single iteration of getting TS input
 154:Src/gui.c     **** Mp3_Player_State check_touchscreen()
 155:Src/gui.c     **** {	
 301              		.loc 1 155 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 306              	.LCFI4:
 307              		.cfi_def_cfa_offset 32
 308              		.cfi_offset 4, -32
 309              		.cfi_offset 5, -28
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 9


 310              		.cfi_offset 6, -24
 311              		.cfi_offset 7, -20
 312              		.cfi_offset 8, -16
 313              		.cfi_offset 9, -12
 314              		.cfi_offset 10, -8
 315              		.cfi_offset 14, -4
 156:Src/gui.c     **** 	uint32_t currentTicks = HAL_GetTick();
 316              		.loc 1 156 0
 317 0004 FFF7FEFF 		bl	HAL_GetTick
 318              	.LVL39:
 157:Src/gui.c     **** 	
 158:Src/gui.c     **** 	if (currentTicks < lastTicks + TICKS_DELTA)
 319              		.loc 1 158 0
 320 0008 414B     		ldr	r3, .L42
 321 000a 1B68     		ldr	r3, [r3]
 322 000c 6433     		adds	r3, r3, #100
 323 000e 9842     		cmp	r0, r3
 324 0010 02D2     		bcs	.L36
 159:Src/gui.c     **** 		return EMPTY;
 325              		.loc 1 159 0
 326 0012 0620     		movs	r0, #6
 327              	.LVL40:
 328 0014 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 329              	.LVL41:
 330              	.L36:
 160:Src/gui.c     **** 	
 161:Src/gui.c     **** 	lastTicks = currentTicks;
 331              		.loc 1 161 0
 332 0018 3D4B     		ldr	r3, .L42
 333 001a 1860     		str	r0, [r3]
 162:Src/gui.c     **** 	
 163:Src/gui.c     ****     BSP_TS_GetState(&TS_State);
 334              		.loc 1 163 0
 335 001c 3D4C     		ldr	r4, .L42+4
 336 001e 2046     		mov	r0, r4
 337              	.LVL42:
 338 0020 FFF7FEFF 		bl	BSP_TS_GetState
 339              	.LVL43:
 164:Src/gui.c     **** 	if (TS_State.touchDetected == 0)
 340              		.loc 1 164 0
 341 0024 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 342 0026 13B9     		cbnz	r3, .L37
 165:Src/gui.c     **** 		return EMPTY;
 343              		.loc 1 165 0
 344 0028 0620     		movs	r0, #6
 166:Src/gui.c     **** 	if ((TS_State.touchX[0] & 0x0FFF) >= 40)
 167:Src/gui.c     ****     {
 168:Src/gui.c     **** 		newX = TS_State.touchX[0] & 0x0FFF;
 169:Src/gui.c     **** 	}
 170:Src/gui.c     **** 	if ((TS_State.touchY[0] & 0x0FFF) >= 40)
 171:Src/gui.c     ****     {
 172:Src/gui.c     **** 		newY = TS_State.touchY[0] & 0x0FFF;
 173:Src/gui.c     **** 	}
 174:Src/gui.c     **** 
 175:Src/gui.c     **** 	//if (lastState.touchX[0] == newX && lastState.touchY[0] == newY)
 176:Src/gui.c     **** 	//	return EMPTY;
 177:Src/gui.c     **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 10


 178:Src/gui.c     **** 	lastState.touchX[0] = newX;
 179:Src/gui.c     **** 	lastState.touchY[0] = newY;
 180:Src/gui.c     **** 
 181:Src/gui.c     **** 
 182:Src/gui.c     **** 	for(int i = 0; i < CONTROL_BUTTONS_NUMBER; i++) {
 183:Src/gui.c     **** 
 184:Src/gui.c     **** 		uint16_t buttonCornerX = buttonsLeftUpper[i][0];
 185:Src/gui.c     **** 		uint16_t buttonCornerY = buttonsLeftUpper[i][1];
 186:Src/gui.c     **** 
 187:Src/gui.c     **** 		if (newX <= buttonCornerX + CONTROL_BUTTON_SIZE &&
 188:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 189:Src/gui.c     **** 			newX > buttonCornerX &&
 190:Src/gui.c     **** 			newY > buttonCornerY
 191:Src/gui.c     **** 		) {
 192:Src/gui.c     **** 
 193:Src/gui.c     **** 		if (i == 1 || i == 2) {
 194:Src/gui.c     **** 			if (playButtonState == PLAY) {
 195:Src/gui.c     ****                 playButtonState = PAUSE;
 196:Src/gui.c     **** 			}
 197:Src/gui.c     **** 
 198:Src/gui.c     **** 			else {
 199:Src/gui.c     ****                 playButtonState = PLAY;
 200:Src/gui.c     **** 			}
 201:Src/gui.c     **** 		}
 202:Src/gui.c     **** 		if (i == 1)
 203:Src/gui.c     **** 			return playButtonState;
 204:Src/gui.c     **** 		else if (i == 2) {
 205:Src/gui.c     **** 			playButtonState = PAUSE;
 206:Src/gui.c     **** 			return STOP;
 207:Src/gui.c     **** 		}
 208:Src/gui.c     **** 		
 209:Src/gui.c     **** 		else
 210:Src/gui.c     **** 			return buttonState[i];
 211:Src/gui.c     **** 		}
 212:Src/gui.c     **** 	}
 213:Src/gui.c     **** 
 214:Src/gui.c     **** 	return EMPTY;
 215:Src/gui.c     **** 
 216:Src/gui.c     **** 	// vTaskDelay(10);
 217:Src/gui.c     **** }
 345              		.loc 1 217 0
 346 002a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 347              	.L37:
 166:Src/gui.c     **** 	if ((TS_State.touchX[0] & 0x0FFF) >= 40)
 348              		.loc 1 166 0
 349 002e 6388     		ldrh	r3, [r4, #2]
 350 0030 C3F30B03 		ubfx	r3, r3, #0, #12
 351 0034 272B     		cmp	r3, #39
 352 0036 01DD     		ble	.L20
 168:Src/gui.c     **** 	}
 353              		.loc 1 168 0
 354 0038 374A     		ldr	r2, .L42+8
 355 003a 1380     		strh	r3, [r2]	@ movhi
 356              	.L20:
 170:Src/gui.c     ****     {
 357              		.loc 1 170 0
 358 003c 354B     		ldr	r3, .L42+4
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 11


 359 003e 9B89     		ldrh	r3, [r3, #12]
 360 0040 C3F30B03 		ubfx	r3, r3, #0, #12
 361 0044 272B     		cmp	r3, #39
 362 0046 01DD     		ble	.L21
 172:Src/gui.c     **** 	}
 363              		.loc 1 172 0
 364 0048 344A     		ldr	r2, .L42+12
 365 004a 1380     		strh	r3, [r2]	@ movhi
 366              	.L21:
 178:Src/gui.c     **** 	lastState.touchY[0] = newY;
 367              		.loc 1 178 0
 368 004c 324B     		ldr	r3, .L42+8
 369 004e B3F80090 		ldrh	r9, [r3]
 179:Src/gui.c     **** 
 370              		.loc 1 179 0
 371 0052 324B     		ldr	r3, .L42+12
 372 0054 B3F800A0 		ldrh	r10, [r3]
 373              	.LVL44:
 374              	.LBB2:
 182:Src/gui.c     **** 
 375              		.loc 1 182 0
 376 0058 0024     		movs	r4, #0
 377 005a 15E0     		b	.L22
 378              	.LVL45:
 379              	.L39:
 380              	.LBB3:
 194:Src/gui.c     ****                 playButtonState = PAUSE;
 381              		.loc 1 194 0
 382 005c 304B     		ldr	r3, .L42+16
 383 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 384 0060 1BB9     		cbnz	r3, .L27
 195:Src/gui.c     **** 			}
 385              		.loc 1 195 0
 386 0062 0122     		movs	r2, #1
 387 0064 2E4B     		ldr	r3, .L42+16
 388 0066 1A70     		strb	r2, [r3]
 389 0068 46E0     		b	.L26
 390              	.L27:
 199:Src/gui.c     **** 			}
 391              		.loc 1 199 0
 392 006a 0022     		movs	r2, #0
 393 006c 2C4B     		ldr	r3, .L42+16
 394 006e 1A70     		strb	r2, [r3]
 395 0070 42E0     		b	.L26
 396              	.L40:
 203:Src/gui.c     **** 		else if (i == 2) {
 397              		.loc 1 203 0
 398 0072 2B4B     		ldr	r3, .L42+16
 399 0074 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 400 0076 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 401              	.LVL46:
 402              	.L41:
 205:Src/gui.c     **** 			return STOP;
 403              		.loc 1 205 0
 404 007a 0122     		movs	r2, #1
 405 007c 284B     		ldr	r3, .L42+16
 406 007e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 12


 206:Src/gui.c     **** 		}
 407              		.loc 1 206 0
 408 0080 0220     		movs	r0, #2
 409 0082 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 410              	.LVL47:
 411              	.L23:
 412              	.LBE3:
 182:Src/gui.c     **** 
 413              		.loc 1 182 0 discriminator 2
 414 0086 0134     		adds	r4, r4, #1
 415              	.LVL48:
 416              	.L22:
 182:Src/gui.c     **** 
 417              		.loc 1 182 0 is_stmt 0 discriminator 1
 418 0088 032C     		cmp	r4, #3
 419 008a 3DDC     		bgt	.L38
 420              	.LBB4:
 184:Src/gui.c     **** 		uint16_t buttonCornerY = buttonsLeftUpper[i][1];
 421              		.loc 1 184 0 is_stmt 1
 422 008c 254B     		ldr	r3, .L42+20
 423 008e 33F82450 		ldrh	r5, [r3, r4, lsl #2]
 424              	.LVL49:
 185:Src/gui.c     **** 
 425              		.loc 1 185 0
 426 0092 03EB8403 		add	r3, r3, r4, lsl #2
 427 0096 B3F80280 		ldrh	r8, [r3, #2]
 428              	.LVL50:
 187:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 429              		.loc 1 187 0
 430 009a 4846     		mov	r0, r9
 431 009c FFF7FEFF 		bl	__aeabi_i2d
 432              	.LVL51:
 433 00a0 0646     		mov	r6, r0
 434 00a2 0F46     		mov	r7, r1
 435 00a4 2846     		mov	r0, r5
 436 00a6 FFF7FEFF 		bl	__aeabi_i2d
 437              	.LVL52:
 438 00aa 0022     		movs	r2, #0
 439 00ac 1E4B     		ldr	r3, .L42+24
 440 00ae FFF7FEFF 		bl	__aeabi_dadd
 441              	.LVL53:
 442 00b2 0246     		mov	r2, r0
 443 00b4 0B46     		mov	r3, r1
 444 00b6 3046     		mov	r0, r6
 445 00b8 3946     		mov	r1, r7
 446 00ba FFF7FEFF 		bl	__aeabi_dcmple
 447              	.LVL54:
 448 00be 0028     		cmp	r0, #0
 449 00c0 E1D0     		beq	.L23
 188:Src/gui.c     **** 			newX > buttonCornerX &&
 450              		.loc 1 188 0 discriminator 1
 451 00c2 5046     		mov	r0, r10
 452 00c4 FFF7FEFF 		bl	__aeabi_i2d
 453              	.LVL55:
 454 00c8 0646     		mov	r6, r0
 455 00ca 0F46     		mov	r7, r1
 456 00cc 4046     		mov	r0, r8
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 13


 457 00ce FFF7FEFF 		bl	__aeabi_i2d
 458              	.LVL56:
 459 00d2 0022     		movs	r2, #0
 460 00d4 144B     		ldr	r3, .L42+24
 461 00d6 FFF7FEFF 		bl	__aeabi_dadd
 462              	.LVL57:
 187:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 463              		.loc 1 187 0 discriminator 1
 464 00da 0246     		mov	r2, r0
 465 00dc 0B46     		mov	r3, r1
 466 00de 3046     		mov	r0, r6
 467 00e0 3946     		mov	r1, r7
 468 00e2 FFF7FEFF 		bl	__aeabi_dcmple
 469              	.LVL58:
 470 00e6 0028     		cmp	r0, #0
 471 00e8 CDD0     		beq	.L23
 188:Src/gui.c     **** 			newX > buttonCornerX &&
 472              		.loc 1 188 0
 473 00ea A945     		cmp	r9, r5
 474 00ec CBD9     		bls	.L23
 189:Src/gui.c     **** 			newY > buttonCornerY
 475              		.loc 1 189 0
 476 00ee C245     		cmp	r10, r8
 477 00f0 C9D9     		bls	.L23
 193:Src/gui.c     **** 			if (playButtonState == PLAY) {
 478              		.loc 1 193 0
 479 00f2 631E     		subs	r3, r4, #1
 480 00f4 012B     		cmp	r3, #1
 481 00f6 B1D9     		bls	.L39
 482              	.L26:
 202:Src/gui.c     **** 			return playButtonState;
 483              		.loc 1 202 0
 484 00f8 012C     		cmp	r4, #1
 485 00fa BAD0     		beq	.L40
 204:Src/gui.c     **** 			playButtonState = PAUSE;
 486              		.loc 1 204 0
 487 00fc 022C     		cmp	r4, #2
 488 00fe BCD0     		beq	.L41
 210:Src/gui.c     **** 		}
 489              		.loc 1 210 0
 490 0100 0A4B     		ldr	r3, .L42+28
 491 0102 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 492 0104 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 493              	.LVL59:
 494              	.L38:
 495              	.LBE4:
 496              	.LBE2:
 214:Src/gui.c     **** 
 497              		.loc 1 214 0
 498 0108 0620     		movs	r0, #6
 499              	.LBB5:
 500 010a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 501              	.LVL60:
 502              	.L43:
 503 010e 00BF     		.align	2
 504              	.L42:
 505 0110 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 14


 506 0114 00000000 		.word	.LANCHOR1
 507 0118 00000000 		.word	newX
 508 011c 00000000 		.word	newY
 509 0120 00000000 		.word	.LANCHOR3
 510 0124 00000000 		.word	.LANCHOR2
 511 0128 00005240 		.word	1079115776
 512 012c 00000000 		.word	.LANCHOR4
 513              	.LBE5:
 514              		.cfi_endproc
 515              	.LFE141:
 517              		.global	__aeabi_dmul
 518              		.global	__aeabi_d2uiz
 519              		.section	.text.update_progress_bar,"ax",%progbits
 520              		.align	1
 521              		.global	update_progress_bar
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 525              		.fpu fpv5-sp-d16
 527              	update_progress_bar:
 528              	.LFB142:
 218:Src/gui.c     **** 
 219:Src/gui.c     **** // Update the visual progress bar
 220:Src/gui.c     **** void update_progress_bar(double progress) {
 529              		.loc 1 220 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              	.LVL61:
 534 0000 38B5     		push	{r3, r4, r5, lr}
 535              	.LCFI5:
 536              		.cfi_def_cfa_offset 16
 537              		.cfi_offset 3, -16
 538              		.cfi_offset 4, -12
 539              		.cfi_offset 5, -8
 540              		.cfi_offset 14, -4
 541 0002 55EC104B 		vmov	r4, r5, d0
 221:Src/gui.c     **** 
 222:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 542              		.loc 1 222 0
 543 0006 0120     		movs	r0, #1
 544 0008 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 545              	.LVL62:
 223:Src/gui.c     **** 	
 224:Src/gui.c     **** 	double epsilon = 1e-2;
 225:Src/gui.c     **** 	if(progress <= epsilon) {
 546              		.loc 1 225 0
 547 000c 15A3     		adr	r3, .L52+4
 548 000e D3E90023 		ldrd	r2, [r3]
 549 0012 2046     		mov	r0, r4
 550 0014 2946     		mov	r1, r5
 551 0016 FFF7FEFF 		bl	__aeabi_dcmple
 552              	.LVL63:
 553 001a 90B9     		cbnz	r0, .L51
 226:Src/gui.c     **** 		//BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 227:Src/gui.c     **** 		BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 228:Src/gui.c     **** 		BSP_LCD_FillRect(0, YPix(0.45) - 1, LCD_X_SIZE, 21);
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 15


 229:Src/gui.c     **** 		return;
 230:Src/gui.c     **** 	}
 231:Src/gui.c     **** 
 232:Src/gui.c     **** 	//SP_LCD_SetBackColor(LCD_COLOR_BLACK);
 233:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 554              		.loc 1 233 0
 555 001c 4FF07F40 		mov	r0, #-16777216
 556 0020 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 557              	.LVL64:
 234:Src/gui.c     **** 	BSP_LCD_FillRect(30, YPix(0.45),  (uint16_t)(progress * (LCD_X_SIZE - 60)), 19);
 558              		.loc 1 234 0
 559 0024 0022     		movs	r2, #0
 560 0026 0E4B     		ldr	r3, .L52
 561 0028 2046     		mov	r0, r4
 562 002a 2946     		mov	r1, r5
 563 002c FFF7FEFF 		bl	__aeabi_dmul
 564              	.LVL65:
 565 0030 FFF7FEFF 		bl	__aeabi_d2uiz
 566              	.LVL66:
 567 0034 1323     		movs	r3, #19
 568 0036 82B2     		uxth	r2, r0
 569 0038 7A21     		movs	r1, #122
 570 003a 1E20     		movs	r0, #30
 571 003c FFF7FEFF 		bl	BSP_LCD_FillRect
 572              	.LVL67:
 573 0040 38BD     		pop	{r3, r4, r5, pc}
 574              	.LVL68:
 575              	.L51:
 227:Src/gui.c     **** 		BSP_LCD_FillRect(0, YPix(0.45) - 1, LCD_X_SIZE, 21);
 576              		.loc 1 227 0
 577 0042 4FF0FF30 		mov	r0, #-1
 578 0046 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 579              	.LVL69:
 228:Src/gui.c     **** 		return;
 580              		.loc 1 228 0
 581 004a 1523     		movs	r3, #21
 582 004c 4FF4F072 		mov	r2, #480
 583 0050 7921     		movs	r1, #121
 584 0052 0020     		movs	r0, #0
 585 0054 FFF7FEFF 		bl	BSP_LCD_FillRect
 586              	.LVL70:
 229:Src/gui.c     **** 	}
 587              		.loc 1 229 0
 588 0058 38BD     		pop	{r3, r4, r5, pc}
 589              	.LVL71:
 590              	.L53:
 591 005a 00BFAFF3 		.align	3
 591      0080
 592              	.L52:
 593 0060 00407A40 		.word	1081753600
 594 0064 7B14AE47 		.word	1202590843
 595 0068 E17A843F 		.word	1065646817
 596              		.cfi_endproc
 597              	.LFE142:
 599              		.global	__aeabi_d2iz
 600              		.section	.text.update_play_pause_button,"ax",%progbits
 601              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 16


 602              		.global	update_play_pause_button
 603              		.syntax unified
 604              		.thumb
 605              		.thumb_func
 606              		.fpu fpv5-sp-d16
 608              	update_play_pause_button:
 609              	.LFB145:
 235:Src/gui.c     **** 
 236:Src/gui.c     **** }
 237:Src/gui.c     **** 
 238:Src/gui.c     **** // Refresh the state of the screen
 239:Src/gui.c     **** void refresh_screen(const char *info_text) {
 240:Src/gui.c     **** 
 241:Src/gui.c     **** 	// Text
 242:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 243:Src/gui.c     **** 	//BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 244:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 245:Src/gui.c     **** 	BSP_LCD_FillRect(0, YPix(0.20) - 1, LCD_X_SIZE, 30);
 246:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 247:Src/gui.c     **** 	//BSP_LCD_SetBackColor(LCD_COLOR_BLACK);
 248:Src/gui.c     **** 	char buf[100];
 249:Src/gui.c     **** 	sprintf(buf, " %s", info_text);
 250:Src/gui.c     **** 	BSP_LCD_DisplayStringAt(XPix(0.05), YPix(0.20), (unsigned char *)buf,LEFT_MODE);
 251:Src/gui.c     **** 
 252:Src/gui.c     **** 	// Play/Pause Button
 253:Src/gui.c     **** 	update_play_pause_button();
 254:Src/gui.c     **** 	
 255:Src/gui.c     **** 	//BSP_LCD_SelectLayer(LAYER_FG);
 256:Src/gui.c     **** 
 257:Src/gui.c     **** }
 258:Src/gui.c     **** 
 259:Src/gui.c     **** // Draw the 4 main state control buttons: PREV/PLAY_PAUSE/STOP/NEXT
 260:Src/gui.c     **** void draw_buttons() {
 261:Src/gui.c     **** 
 262:Src/gui.c     **** 	//BSP_LCD_SetBackColor(LCD_COLOR_RED);
 263:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 264:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[0][0], buttonsLeftUpper[0][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 265:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[1][0], buttonsLeftUpper[1][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 266:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[2][0], buttonsLeftUpper[2][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 267:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[3][0], buttonsLeftUpper[3][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 268:Src/gui.c     **** 
 269:Src/gui.c     **** //	BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 270:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 271:Src/gui.c     **** 	uint16_t xButton, yButton;
 272:Src/gui.c     **** 	
 273:Src/gui.c     **** 	// Previous button label
 274:Src/gui.c     **** 	xButton = buttonsLeftUpper[0][0];
 275:Src/gui.c     **** 	yButton = buttonsLeftUpper[0][1];
 276:Src/gui.c     **** 	Point Points1[]= {{xButton + 7, yButton + CONTROL_BUTTON_SIZE / 2}, {xButton + CONTROL_BUTTON_SIZE
 277:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points1, 3);
 278:Src/gui.c     **** 	Points1[0].X += 29;
 279:Src/gui.c     **** 	Points1[1].X += 29;
 280:Src/gui.c     **** 	Points1[2].X += 29;
 281:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points1, 3);
 282:Src/gui.c     **** 
 283:Src/gui.c     **** 	// Play/Pause button label
 284:Src/gui.c     **** 	update_play_pause_button();
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 17


 285:Src/gui.c     **** 
 286:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 287:Src/gui.c     **** 	// Stop button label
 288:Src/gui.c     **** 	xButton = buttonsLeftUpper[2][0];
 289:Src/gui.c     **** 	yButton = buttonsLeftUpper[2][1];
 290:Src/gui.c     **** 	BSP_LCD_FillRect(xButton + 15, yButton + 15, 42, 42);
 291:Src/gui.c     **** 
 292:Src/gui.c     **** 	// Next button label
 293:Src/gui.c     **** 	xButton = buttonsLeftUpper[3][0];
 294:Src/gui.c     **** 	yButton = buttonsLeftUpper[3][1];
 295:Src/gui.c     **** 	Point Points3[]= {{xButton + 7, yButton + 7}, {xButton + 7, yButton + 7 + 58}, {xButton + CONTROL_
 296:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points3, 3);
 297:Src/gui.c     **** 	Points3[0].X += 29;
 298:Src/gui.c     **** 	Points3[1].X += 29;
 299:Src/gui.c     **** 	Points3[2].X += 29;
 300:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points3, 3);
 301:Src/gui.c     **** 
 302:Src/gui.c     **** }
 303:Src/gui.c     **** 
 304:Src/gui.c     **** // Refresh only the PLAY/PAUSE button
 305:Src/gui.c     **** void update_play_pause_button() {
 610              		.loc 1 305 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 16
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614 0000 30B5     		push	{r4, r5, lr}
 615              	.LCFI6:
 616              		.cfi_def_cfa_offset 12
 617              		.cfi_offset 4, -12
 618              		.cfi_offset 5, -8
 619              		.cfi_offset 14, -4
 620 0002 85B0     		sub	sp, sp, #20
 621              	.LCFI7:
 622              		.cfi_def_cfa_offset 32
 306:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 623              		.loc 1 306 0
 624 0004 0020     		movs	r0, #0
 625 0006 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 626              	.LVL72:
 307:Src/gui.c     **** 	uint16_t xButton = buttonsLeftUpper[1][0];
 627              		.loc 1 307 0
 628 000a 284B     		ldr	r3, .L60
 629 000c 9D88     		ldrh	r5, [r3, #4]
 630              	.LVL73:
 308:Src/gui.c     **** 	uint16_t yButton = buttonsLeftUpper[1][1];
 631              		.loc 1 308 0
 632 000e DC88     		ldrh	r4, [r3, #6]
 633              	.LVL74:
 309:Src/gui.c     **** 	//BSP_LCD_SetBackColor(LCD_COLOR_BLACK);
 310:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 634              		.loc 1 310 0
 635 0010 4FF07F40 		mov	r0, #-16777216
 636 0014 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 637              	.LVL75:
 311:Src/gui.c     **** 	BSP_LCD_FillRect(xButton, yButton,  CONTROL_BUTTON_SIZE, CONTROL_BUTTON_SIZE);
 638              		.loc 1 311 0
 639 0018 4823     		movs	r3, #72
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 18


 640 001a 1A46     		mov	r2, r3
 641 001c 2146     		mov	r1, r4
 642 001e 2846     		mov	r0, r5
 643 0020 FFF7FEFF 		bl	BSP_LCD_FillRect
 644              	.LVL76:
 312:Src/gui.c     **** 	//BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 313:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 645              		.loc 1 313 0
 646 0024 4FF0FF30 		mov	r0, #-1
 647 0028 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 648              	.LVL77:
 314:Src/gui.c     **** 	if(playButtonState == PAUSE) {
 649              		.loc 1 314 0
 650 002c 204B     		ldr	r3, .L60+4
 651 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 652 0030 012B     		cmp	r3, #1
 653 0032 02D0     		beq	.L58
 315:Src/gui.c     **** 		Point Points2[]= {{xButton + 7, yButton + 7}, {xButton + 7, yButton + 7 + 58}, {xButton + 7 + 58,
 316:Src/gui.c     **** 		BSP_LCD_FillPolygon(Points2, 3);
 317:Src/gui.c     **** 	} else if(playButtonState == PLAY) {
 654              		.loc 1 317 0
 655 0034 0BB3     		cbz	r3, .L59
 656              	.LVL78:
 657              	.L54:
 318:Src/gui.c     **** 		BSP_LCD_FillRect(0, 0, 1, 1);
 319:Src/gui.c     **** 		BSP_LCD_FillRect(xButton + 7, yButton + 7, 27, CONTROL_BUTTON_SIZE - 14);
 320:Src/gui.c     **** 		BSP_LCD_FillRect(xButton + 7 + 31, yButton + 7, 27, CONTROL_BUTTON_SIZE - 14);
 321:Src/gui.c     **** 	}
 322:Src/gui.c     **** }
 658              		.loc 1 322 0
 659 0036 05B0     		add	sp, sp, #20
 660              	.LCFI8:
 661              		.cfi_remember_state
 662              		.cfi_def_cfa_offset 12
 663              		@ sp needed
 664 0038 30BD     		pop	{r4, r5, pc}
 665              	.LVL79:
 666              	.L58:
 667              	.LCFI9:
 668              		.cfi_restore_state
 669              	.LBB6:
 315:Src/gui.c     **** 		Point Points2[]= {{xButton + 7, yButton + 7}, {xButton + 7, yButton + 7 + 58}, {xButton + 7 + 58,
 670              		.loc 1 315 0
 671 003a EB1D     		adds	r3, r5, #7
 672 003c 1BB2     		sxth	r3, r3
 673 003e ADF80430 		strh	r3, [sp, #4]	@ movhi
 674 0042 E21D     		adds	r2, r4, #7
 675 0044 ADF80620 		strh	r2, [sp, #6]	@ movhi
 676 0048 ADF80830 		strh	r3, [sp, #8]	@ movhi
 677 004c 04F14103 		add	r3, r4, #65
 678 0050 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 679 0054 4135     		adds	r5, r5, #65
 680              	.LVL80:
 681 0056 ADF80C50 		strh	r5, [sp, #12]	@ movhi
 682 005a 2046     		mov	r0, r4
 683 005c FFF7FEFF 		bl	__aeabi_i2d
 684              	.LVL81:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 19


 685 0060 0022     		movs	r2, #0
 686 0062 144B     		ldr	r3, .L60+8
 687 0064 FFF7FEFF 		bl	__aeabi_dadd
 688              	.LVL82:
 689 0068 FFF7FEFF 		bl	__aeabi_d2iz
 690              	.LVL83:
 691 006c ADF80E00 		strh	r0, [sp, #14]	@ movhi
 316:Src/gui.c     **** 	} else if(playButtonState == PLAY) {
 692              		.loc 1 316 0
 693 0070 0321     		movs	r1, #3
 694 0072 01A8     		add	r0, sp, #4
 695 0074 FFF7FEFF 		bl	BSP_LCD_FillPolygon
 696              	.LVL84:
 697              	.LBE6:
 698 0078 DDE7     		b	.L54
 699              	.LVL85:
 700              	.L59:
 318:Src/gui.c     **** 		BSP_LCD_FillRect(0, 0, 1, 1);
 701              		.loc 1 318 0
 702 007a 0123     		movs	r3, #1
 703 007c 1A46     		mov	r2, r3
 704 007e 0021     		movs	r1, #0
 705 0080 0846     		mov	r0, r1
 706 0082 FFF7FEFF 		bl	BSP_LCD_FillRect
 707              	.LVL86:
 319:Src/gui.c     **** 		BSP_LCD_FillRect(xButton + 7 + 31, yButton + 7, 27, CONTROL_BUTTON_SIZE - 14);
 708              		.loc 1 319 0
 709 0086 0734     		adds	r4, r4, #7
 710              	.LVL87:
 711 0088 A4B2     		uxth	r4, r4
 712              	.LVL88:
 713 008a E81D     		adds	r0, r5, #7
 714 008c 3A23     		movs	r3, #58
 715 008e 1B22     		movs	r2, #27
 716 0090 2146     		mov	r1, r4
 717 0092 80B2     		uxth	r0, r0
 718 0094 FFF7FEFF 		bl	BSP_LCD_FillRect
 719              	.LVL89:
 320:Src/gui.c     **** 	}
 720              		.loc 1 320 0
 721 0098 05F12600 		add	r0, r5, #38
 722 009c 3A23     		movs	r3, #58
 723 009e 1B22     		movs	r2, #27
 724 00a0 2146     		mov	r1, r4
 725 00a2 80B2     		uxth	r0, r0
 726 00a4 FFF7FEFF 		bl	BSP_LCD_FillRect
 727              	.LVL90:
 728              		.loc 1 322 0
 729 00a8 C5E7     		b	.L54
 730              	.L61:
 731 00aa 00BF     		.align	2
 732              	.L60:
 733 00ac 00000000 		.word	.LANCHOR2
 734 00b0 00000000 		.word	.LANCHOR3
 735 00b4 00004240 		.word	1078067200
 736              		.cfi_endproc
 737              	.LFE145:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 20


 739              		.section	.text.refresh_screen,"ax",%progbits
 740              		.align	1
 741              		.global	refresh_screen
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu fpv5-sp-d16
 747              	refresh_screen:
 748              	.LFB143:
 239:Src/gui.c     **** 
 749              		.loc 1 239 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 104
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753              	.LVL91:
 754 0000 10B5     		push	{r4, lr}
 755              	.LCFI10:
 756              		.cfi_def_cfa_offset 8
 757              		.cfi_offset 4, -8
 758              		.cfi_offset 14, -4
 759 0002 9AB0     		sub	sp, sp, #104
 760              	.LCFI11:
 761              		.cfi_def_cfa_offset 112
 762 0004 0446     		mov	r4, r0
 242:Src/gui.c     **** 	//BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 763              		.loc 1 242 0
 764 0006 0120     		movs	r0, #1
 765              	.LVL92:
 766 0008 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 767              	.LVL93:
 244:Src/gui.c     **** 	BSP_LCD_FillRect(0, YPix(0.20) - 1, LCD_X_SIZE, 30);
 768              		.loc 1 244 0
 769 000c 4FF0FF30 		mov	r0, #-1
 770 0010 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 771              	.LVL94:
 245:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 772              		.loc 1 245 0
 773 0014 1E23     		movs	r3, #30
 774 0016 4FF4F072 		mov	r2, #480
 775 001a 3521     		movs	r1, #53
 776 001c 0020     		movs	r0, #0
 777 001e FFF7FEFF 		bl	BSP_LCD_FillRect
 778              	.LVL95:
 246:Src/gui.c     **** 	//BSP_LCD_SetBackColor(LCD_COLOR_BLACK);
 779              		.loc 1 246 0
 780 0022 4FF07F40 		mov	r0, #-16777216
 781 0026 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 782              	.LVL96:
 249:Src/gui.c     **** 	BSP_LCD_DisplayStringAt(XPix(0.05), YPix(0.20), (unsigned char *)buf,LEFT_MODE);
 783              		.loc 1 249 0
 784 002a 2246     		mov	r2, r4
 785 002c 0649     		ldr	r1, .L64
 786 002e 01A8     		add	r0, sp, #4
 787 0030 FFF7FEFF 		bl	sprintf
 788              	.LVL97:
 250:Src/gui.c     **** 
 789              		.loc 1 250 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 21


 790 0034 0323     		movs	r3, #3
 791 0036 01AA     		add	r2, sp, #4
 792 0038 3621     		movs	r1, #54
 793 003a 1820     		movs	r0, #24
 794 003c FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 795              	.LVL98:
 253:Src/gui.c     **** 	
 796              		.loc 1 253 0
 797 0040 FFF7FEFF 		bl	update_play_pause_button
 798              	.LVL99:
 257:Src/gui.c     **** 
 799              		.loc 1 257 0
 800 0044 1AB0     		add	sp, sp, #104
 801              	.LCFI12:
 802              		.cfi_def_cfa_offset 8
 803              		@ sp needed
 804 0046 10BD     		pop	{r4, pc}
 805              	.LVL100:
 806              	.L65:
 807              		.align	2
 808              	.L64:
 809 0048 00000000 		.word	.LC0
 810              		.cfi_endproc
 811              	.LFE143:
 813              		.section	.text.draw_buttons,"ax",%progbits
 814              		.align	1
 815              		.global	draw_buttons
 816              		.syntax unified
 817              		.thumb
 818              		.thumb_func
 819              		.fpu fpv5-sp-d16
 821              	draw_buttons:
 822              	.LFB144:
 260:Src/gui.c     **** 
 823              		.loc 1 260 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 24
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827 0000 70B5     		push	{r4, r5, r6, lr}
 828              	.LCFI13:
 829              		.cfi_def_cfa_offset 16
 830              		.cfi_offset 4, -16
 831              		.cfi_offset 5, -12
 832              		.cfi_offset 6, -8
 833              		.cfi_offset 14, -4
 834 0002 86B0     		sub	sp, sp, #24
 835              	.LCFI14:
 836              		.cfi_def_cfa_offset 40
 263:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[0][0], buttonsLeftUpper[0][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 837              		.loc 1 263 0
 838 0004 4FF07F40 		mov	r0, #-16777216
 839 0008 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 840              	.LVL101:
 264:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[1][0], buttonsLeftUpper[1][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 841              		.loc 1 264 0
 842 000c 524C     		ldr	r4, .L68
 843 000e 4823     		movs	r3, #72
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 22


 844 0010 1A46     		mov	r2, r3
 845 0012 6188     		ldrh	r1, [r4, #2]
 846 0014 2088     		ldrh	r0, [r4]
 847 0016 FFF7FEFF 		bl	BSP_LCD_FillRect
 848              	.LVL102:
 265:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[2][0], buttonsLeftUpper[2][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 849              		.loc 1 265 0
 850 001a 4823     		movs	r3, #72
 851 001c 1A46     		mov	r2, r3
 852 001e E188     		ldrh	r1, [r4, #6]
 853 0020 A088     		ldrh	r0, [r4, #4]
 854 0022 FFF7FEFF 		bl	BSP_LCD_FillRect
 855              	.LVL103:
 266:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[3][0], buttonsLeftUpper[3][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 856              		.loc 1 266 0
 857 0026 4823     		movs	r3, #72
 858 0028 1A46     		mov	r2, r3
 859 002a 6189     		ldrh	r1, [r4, #10]
 860 002c 2089     		ldrh	r0, [r4, #8]
 861 002e FFF7FEFF 		bl	BSP_LCD_FillRect
 862              	.LVL104:
 267:Src/gui.c     **** 
 863              		.loc 1 267 0
 864 0032 4823     		movs	r3, #72
 865 0034 1A46     		mov	r2, r3
 866 0036 E189     		ldrh	r1, [r4, #14]
 867 0038 A089     		ldrh	r0, [r4, #12]
 868 003a FFF7FEFF 		bl	BSP_LCD_FillRect
 869              	.LVL105:
 270:Src/gui.c     **** 	uint16_t xButton, yButton;
 870              		.loc 1 270 0
 871 003e 4FF0FF30 		mov	r0, #-1
 872 0042 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 873              	.LVL106:
 274:Src/gui.c     **** 	yButton = buttonsLeftUpper[0][1];
 874              		.loc 1 274 0
 875 0046 2688     		ldrh	r6, [r4]
 876              	.LVL107:
 275:Src/gui.c     **** 	Point Points1[]= {{xButton + 7, yButton + CONTROL_BUTTON_SIZE / 2}, {xButton + CONTROL_BUTTON_SIZE
 877              		.loc 1 275 0
 878 0048 6588     		ldrh	r5, [r4, #2]
 879              	.LVL108:
 276:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points1, 3);
 880              		.loc 1 276 0
 881 004a F31D     		adds	r3, r6, #7
 882 004c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 883 0050 2846     		mov	r0, r5
 884 0052 FFF7FEFF 		bl	__aeabi_i2d
 885              	.LVL109:
 886 0056 0022     		movs	r2, #0
 887 0058 404B     		ldr	r3, .L68+4
 888 005a FFF7FEFF 		bl	__aeabi_dadd
 889              	.LVL110:
 890 005e FFF7FEFF 		bl	__aeabi_d2iz
 891              	.LVL111:
 892 0062 ADF80E00 		strh	r0, [sp, #14]	@ movhi
 893 0066 3046     		mov	r0, r6
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 23


 894 0068 FFF7FEFF 		bl	__aeabi_i2d
 895              	.LVL112:
 896 006c 0022     		movs	r2, #0
 897 006e 3B4B     		ldr	r3, .L68+4
 898 0070 FFF7FEFF 		bl	__aeabi_dadd
 899              	.LVL113:
 900 0074 FFF7FEFF 		bl	__aeabi_d2iz
 901              	.LVL114:
 902 0078 00B2     		sxth	r0, r0
 903 007a ADF81000 		strh	r0, [sp, #16]	@ movhi
 904 007e EB1D     		adds	r3, r5, #7
 905 0080 ADF81230 		strh	r3, [sp, #18]	@ movhi
 906 0084 ADF81400 		strh	r0, [sp, #20]	@ movhi
 907 0088 4135     		adds	r5, r5, #65
 908              	.LVL115:
 909 008a ADF81650 		strh	r5, [sp, #22]	@ movhi
 277:Src/gui.c     **** 	Points1[0].X += 29;
 910              		.loc 1 277 0
 911 008e 0321     		movs	r1, #3
 912 0090 03A8     		add	r0, sp, #12
 913 0092 FFF7FEFF 		bl	BSP_LCD_FillPolygon
 914              	.LVL116:
 278:Src/gui.c     **** 	Points1[1].X += 29;
 915              		.loc 1 278 0
 916 0096 BDF80C30 		ldrh	r3, [sp, #12]
 917 009a 1D33     		adds	r3, r3, #29
 918 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 279:Src/gui.c     **** 	Points1[2].X += 29;
 919              		.loc 1 279 0
 920 00a0 BDF81030 		ldrh	r3, [sp, #16]
 921 00a4 1D33     		adds	r3, r3, #29
 922 00a6 ADF81030 		strh	r3, [sp, #16]	@ movhi
 280:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points1, 3);
 923              		.loc 1 280 0
 924 00aa BDF81430 		ldrh	r3, [sp, #20]
 925 00ae 1D33     		adds	r3, r3, #29
 926 00b0 ADF81430 		strh	r3, [sp, #20]	@ movhi
 281:Src/gui.c     **** 
 927              		.loc 1 281 0
 928 00b4 0321     		movs	r1, #3
 929 00b6 03A8     		add	r0, sp, #12
 930 00b8 FFF7FEFF 		bl	BSP_LCD_FillPolygon
 931              	.LVL117:
 284:Src/gui.c     **** 
 932              		.loc 1 284 0
 933 00bc FFF7FEFF 		bl	update_play_pause_button
 934              	.LVL118:
 286:Src/gui.c     **** 	// Stop button label
 935              		.loc 1 286 0
 936 00c0 4FF0FF30 		mov	r0, #-1
 937 00c4 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 938              	.LVL119:
 288:Src/gui.c     **** 	yButton = buttonsLeftUpper[2][1];
 939              		.loc 1 288 0
 940 00c8 2089     		ldrh	r0, [r4, #8]
 941              	.LVL120:
 289:Src/gui.c     **** 	BSP_LCD_FillRect(xButton + 15, yButton + 15, 42, 42);
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 24


 942              		.loc 1 289 0
 943 00ca 6189     		ldrh	r1, [r4, #10]
 944              	.LVL121:
 290:Src/gui.c     **** 
 945              		.loc 1 290 0
 946 00cc 0F31     		adds	r1, r1, #15
 947              	.LVL122:
 948 00ce 0F30     		adds	r0, r0, #15
 949              	.LVL123:
 950 00d0 2A23     		movs	r3, #42
 951 00d2 1A46     		mov	r2, r3
 952 00d4 89B2     		uxth	r1, r1
 953              	.LVL124:
 954 00d6 80B2     		uxth	r0, r0
 955              	.LVL125:
 956 00d8 FFF7FEFF 		bl	BSP_LCD_FillRect
 957              	.LVL126:
 293:Src/gui.c     **** 	yButton = buttonsLeftUpper[3][1];
 958              		.loc 1 293 0
 959 00dc A089     		ldrh	r0, [r4, #12]
 960              	.LVL127:
 294:Src/gui.c     **** 	Point Points3[]= {{xButton + 7, yButton + 7}, {xButton + 7, yButton + 7 + 58}, {xButton + CONTROL_
 961              		.loc 1 294 0
 962 00de E489     		ldrh	r4, [r4, #14]
 963              	.LVL128:
 295:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points3, 3);
 964              		.loc 1 295 0
 965 00e0 C31D     		adds	r3, r0, #7
 966 00e2 1BB2     		sxth	r3, r3
 967 00e4 ADF80030 		strh	r3, [sp]	@ movhi
 968 00e8 E21D     		adds	r2, r4, #7
 969 00ea ADF80220 		strh	r2, [sp, #2]	@ movhi
 970 00ee ADF80430 		strh	r3, [sp, #4]	@ movhi
 971 00f2 04F14103 		add	r3, r4, #65
 972 00f6 ADF80630 		strh	r3, [sp, #6]	@ movhi
 973 00fa FFF7FEFF 		bl	__aeabi_i2d
 974              	.LVL129:
 975 00fe 0022     		movs	r2, #0
 976 0100 164B     		ldr	r3, .L68+4
 977 0102 FFF7FEFF 		bl	__aeabi_dadd
 978              	.LVL130:
 979 0106 FFF7FEFF 		bl	__aeabi_d2iz
 980              	.LVL131:
 981 010a ADF80800 		strh	r0, [sp, #8]	@ movhi
 982 010e 2046     		mov	r0, r4
 983 0110 FFF7FEFF 		bl	__aeabi_i2d
 984              	.LVL132:
 985 0114 0022     		movs	r2, #0
 986 0116 114B     		ldr	r3, .L68+4
 987 0118 FFF7FEFF 		bl	__aeabi_dadd
 988              	.LVL133:
 989 011c FFF7FEFF 		bl	__aeabi_d2iz
 990              	.LVL134:
 991 0120 ADF80A00 		strh	r0, [sp, #10]	@ movhi
 296:Src/gui.c     **** 	Points3[0].X += 29;
 992              		.loc 1 296 0
 993 0124 0321     		movs	r1, #3
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 25


 994 0126 6846     		mov	r0, sp
 995 0128 FFF7FEFF 		bl	BSP_LCD_FillPolygon
 996              	.LVL135:
 297:Src/gui.c     **** 	Points3[1].X += 29;
 997              		.loc 1 297 0
 998 012c BDF80030 		ldrh	r3, [sp]
 999 0130 1D33     		adds	r3, r3, #29
 1000 0132 ADF80030 		strh	r3, [sp]	@ movhi
 298:Src/gui.c     **** 	Points3[2].X += 29;
 1001              		.loc 1 298 0
 1002 0136 BDF80430 		ldrh	r3, [sp, #4]
 1003 013a 1D33     		adds	r3, r3, #29
 1004 013c ADF80430 		strh	r3, [sp, #4]	@ movhi
 299:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points3, 3);
 1005              		.loc 1 299 0
 1006 0140 BDF80830 		ldrh	r3, [sp, #8]
 1007 0144 1D33     		adds	r3, r3, #29
 1008 0146 ADF80830 		strh	r3, [sp, #8]	@ movhi
 300:Src/gui.c     **** 
 1009              		.loc 1 300 0
 1010 014a 0321     		movs	r1, #3
 1011 014c 6846     		mov	r0, sp
 1012 014e FFF7FEFF 		bl	BSP_LCD_FillPolygon
 1013              	.LVL136:
 302:Src/gui.c     **** 
 1014              		.loc 1 302 0
 1015 0152 06B0     		add	sp, sp, #24
 1016              	.LCFI15:
 1017              		.cfi_def_cfa_offset 16
 1018              		@ sp needed
 1019 0154 70BD     		pop	{r4, r5, r6, pc}
 1020              	.LVL137:
 1021              	.L69:
 1022 0156 00BF     		.align	2
 1023              	.L68:
 1024 0158 00000000 		.word	.LANCHOR2
 1025 015c 00004240 		.word	1078067200
 1026              		.cfi_endproc
 1027              	.LFE144:
 1029              		.section	.text.draw_background,"ax",%progbits
 1030              		.align	1
 1031              		.global	draw_background
 1032              		.syntax unified
 1033              		.thumb
 1034              		.thumb_func
 1035              		.fpu fpv5-sp-d16
 1037              	draw_background:
 1038              	.LFB138:
 123:Src/gui.c     **** 	/* Select the LCD Background Layer  */
 1039              		.loc 1 123 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043 0000 08B5     		push	{r3, lr}
 1044              	.LCFI16:
 1045              		.cfi_def_cfa_offset 8
 1046              		.cfi_offset 3, -8
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 26


 1047              		.cfi_offset 14, -4
 125:Src/gui.c     **** 
 1048              		.loc 1 125 0
 1049 0002 0020     		movs	r0, #0
 1050 0004 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1051              	.LVL138:
 127:Src/gui.c     **** 	
 1052              		.loc 1 127 0
 1053 0008 FFF7FEFF 		bl	draw_buttons
 1054              	.LVL139:
 130:Src/gui.c     **** }
 1055              		.loc 1 130 0
 1056 000c 0120     		movs	r0, #1
 1057 000e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1058              	.LVL140:
 1059 0012 08BD     		pop	{r3, pc}
 1060              		.cfi_endproc
 1061              	.LFE138:
 1063              		.section	.text.getXPix,"ax",%progbits
 1064              		.align	1
 1065              		.global	getXPix
 1066              		.syntax unified
 1067              		.thumb
 1068              		.thumb_func
 1069              		.fpu fpv5-sp-d16
 1071              	getXPix:
 1072              	.LFB146:
 323:Src/gui.c     **** 
 324:Src/gui.c     **** // Auxillary functions
 325:Src/gui.c     **** uint16_t getXPix (double factor)  {
 1073              		.loc 1 325 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 0
 1076              		@ frame_needed = 0, uses_anonymous_args = 0
 1077              	.LVL141:
 1078 0000 08B5     		push	{r3, lr}
 1079              	.LCFI17:
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 3, -8
 1082              		.cfi_offset 14, -4
 326:Src/gui.c     **** 	return factor * LCD_X_SIZE;
 1083              		.loc 1 326 0
 1084 0002 0022     		movs	r2, #0
 1085 0004 044B     		ldr	r3, .L74
 1086 0006 51EC100B 		vmov	r0, r1, d0
 1087 000a FFF7FEFF 		bl	__aeabi_dmul
 1088              	.LVL142:
 1089 000e FFF7FEFF 		bl	__aeabi_d2uiz
 1090              	.LVL143:
 327:Src/gui.c     **** }
 1091              		.loc 1 327 0
 1092 0012 80B2     		uxth	r0, r0
 1093 0014 08BD     		pop	{r3, pc}
 1094              	.L75:
 1095 0016 00BF     		.align	2
 1096              	.L74:
 1097 0018 00007E40 		.word	1081999360
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 27


 1098              		.cfi_endproc
 1099              	.LFE146:
 1101              		.section	.text.getYPix,"ax",%progbits
 1102              		.align	1
 1103              		.global	getYPix
 1104              		.syntax unified
 1105              		.thumb
 1106              		.thumb_func
 1107              		.fpu fpv5-sp-d16
 1109              	getYPix:
 1110              	.LFB147:
 328:Src/gui.c     **** 
 329:Src/gui.c     **** uint16_t getYPix (double factor)  {
 1111              		.loc 1 329 0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 0
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115              	.LVL144:
 1116 0000 08B5     		push	{r3, lr}
 1117              	.LCFI18:
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 3, -8
 1120              		.cfi_offset 14, -4
 330:Src/gui.c     **** 	return factor * LCD_Y_SIZE;
 1121              		.loc 1 330 0
 1122 0002 0022     		movs	r2, #0
 1123 0004 044B     		ldr	r3, .L78
 1124 0006 51EC100B 		vmov	r0, r1, d0
 1125 000a FFF7FEFF 		bl	__aeabi_dmul
 1126              	.LVL145:
 1127 000e FFF7FEFF 		bl	__aeabi_d2uiz
 1128              	.LVL146:
 331:Src/gui.c     **** }
 1129              		.loc 1 331 0
 1130 0012 80B2     		uxth	r0, r0
 1131 0014 08BD     		pop	{r3, pc}
 1132              	.L79:
 1133 0016 00BF     		.align	2
 1134              	.L78:
 1135 0018 00007140 		.word	1081147392
 1136              		.cfi_endproc
 1137              	.LFE147:
 1139              		.global	lastTicks
 1140              		.global	playButtonState
 1141              		.global	buttonState
 1142              		.global	buttonsLeftUpper
 1143              		.comm	newY,2,2
 1144              		.comm	newX,2,2
 1145              		.section	.bss.TS_State,"aw",%nobits
 1146              		.align	2
 1147              		.set	.LANCHOR1,. + 0
 1150              	TS_State:
 1151 0000 00000000 		.space	44
 1151      00000000 
 1151      00000000 
 1151      00000000 
 1151      00000000 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 28


 1152              		.section	.bss.lastTicks,"aw",%nobits
 1153              		.align	2
 1154              		.set	.LANCHOR0,. + 0
 1157              	lastTicks:
 1158 0000 00000000 		.space	4
 1159              		.section	.bss.playButtonState,"aw",%nobits
 1160              		.set	.LANCHOR3,. + 0
 1163              	playButtonState:
 1164 0000 00       		.space	1
 1165              		.section	.data.buttonState,"aw",%progbits
 1166              		.align	2
 1167              		.set	.LANCHOR4,. + 0
 1170              	buttonState:
 1171 0000 04       		.byte	4
 1172 0001 00       		.byte	0
 1173 0002 02       		.byte	2
 1174 0003 03       		.byte	3
 1175              		.section	.data.buttonsLeftUpper,"aw",%progbits
 1176              		.align	2
 1177              		.set	.LANCHOR2,. + 0
 1180              	buttonsLeftUpper:
 1181 0000 2600     		.short	38
 1182 0002 BE00     		.short	190
 1183 0004 9400     		.short	148
 1184 0006 BE00     		.short	190
 1185 0008 0301     		.short	259
 1186 000a BE00     		.short	190
 1187 000c 7101     		.short	369
 1188 000e BE00     		.short	190
 1189              		.section	.rodata.refresh_screen.str1.4,"aMS",%progbits,1
 1190              		.align	2
 1191              	.LC0:
 1192 0000 20257300 		.ascii	" %s\000"
 1193              		.text
 1194              	.Letext0:
 1195              		.file 2 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 1196              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 1197              		.file 4 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 1198              		.file 5 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 1199              		.file 6 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 1200              		.file 7 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 1201              		.file 8 "Inc/mp3_player.h"
 1202              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 1203              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1204              		.file 11 "Drivers/BSP/STM32746G-Discovery/../../../Utilities/Fonts/fonts.h"
 1205              		.file 12 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_lcd.h"
 1206              		.file 13 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/../Common/ts.h"
 1207              		.file 14 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/ft5336.h"
 1208              		.file 15 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_ts.h"
 1209              		.file 16 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdio.h"
 1210              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 gui.c
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:18     .text.lcd_start:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:25     .text.lcd_start:00000000 lcd_start
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:96     .text.lcd_start:00000064 $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:101    .text.LCD_Start_v2:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:108    .text.LCD_Start_v2:00000000 LCD_Start_v2
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:185    .text.LCD_Start_v2:0000006c $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:190    .text.initialize_touchscreen:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:197    .text.initialize_touchscreen:00000000 initialize_touchscreen
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:236    .text.touchscreen_loop_init:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:243    .text.touchscreen_loop_init:00000000 touchscreen_loop_init
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:283    .text.touchscreen_loop_init:00000030 $d
                            *COM*:00000002 newX
                            *COM*:00000002 newY
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:292    .text.check_touchscreen:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:299    .text.check_touchscreen:00000000 check_touchscreen
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:505    .text.check_touchscreen:00000110 $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:520    .text.update_progress_bar:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:527    .text.update_progress_bar:00000000 update_progress_bar
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:593    .text.update_progress_bar:00000060 $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:601    .text.update_play_pause_button:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:608    .text.update_play_pause_button:00000000 update_play_pause_button
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:733    .text.update_play_pause_button:000000ac $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:740    .text.refresh_screen:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:747    .text.refresh_screen:00000000 refresh_screen
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:809    .text.refresh_screen:00000048 $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:814    .text.draw_buttons:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:821    .text.draw_buttons:00000000 draw_buttons
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1024   .text.draw_buttons:00000158 $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1030   .text.draw_background:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1037   .text.draw_background:00000000 draw_background
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1064   .text.getXPix:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1071   .text.getXPix:00000000 getXPix
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1097   .text.getXPix:00000018 $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1102   .text.getYPix:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1109   .text.getYPix:00000000 getYPix
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1135   .text.getYPix:00000018 $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1157   .bss.lastTicks:00000000 lastTicks
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1163   .bss.playButtonState:00000000 playButtonState
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1170   .data.buttonState:00000000 buttonState
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1180   .data.buttonsLeftUpper:00000000 buttonsLeftUpper
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1146   .bss.TS_State:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1150   .bss.TS_State:00000000 TS_State
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1153   .bss.lastTicks:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1164   .bss.playButtonState:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1166   .data.buttonState:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1176   .data.buttonsLeftUpper:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s:1190   .rodata.refresh_screen.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
BSP_LCD_Init
BSP_LCD_LayerDefaultInit
BSP_LCD_DisplayOn
BSP_LCD_SelectLayer
BSP_LCD_Clear
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc3UHqaS.s 			page 30


BSP_LCD_SetBackColor
BSP_LCD_SetColorKeying
BSP_LCD_SetTransparency
BSP_LCD_SetTextColor
BSP_LCD_ResetColorKeying
BSP_LCD_Reload
BSP_LCD_GetXSize
BSP_LCD_GetYSize
BSP_TS_Init
__aeabi_i2d
__aeabi_dadd
__aeabi_dcmple
HAL_GetTick
BSP_TS_GetState
__aeabi_dmul
__aeabi_d2uiz
BSP_LCD_FillRect
__aeabi_d2iz
BSP_LCD_FillPolygon
sprintf
BSP_LCD_DisplayStringAt
