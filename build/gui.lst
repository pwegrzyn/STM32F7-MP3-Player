ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"gui.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lcd_start,"ax",%progbits
  18              		.align	1
  19              		.global	lcd_start
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	lcd_start:
  26              	.LFB138:
  27              		.file 1 "Src/gui.c"
   1:Src/gui.c     **** /*
   2:Src/gui.c     ****  *	Graphical User Interface
   3:Src/gui.c     ****  *  Touchscreen
   4:Src/gui.c     ****  */
   5:Src/gui.c     **** 
   6:Src/gui.c     **** /* Includes ------------------------------------------------------------------*/
   7:Src/gui.c     **** #include <stdio.h>
   8:Src/gui.c     **** #include <string.h>
   9:Src/gui.c     **** #include "mp3_player.h"
  10:Src/gui.c     **** #include "stm32746g_discovery_lcd.h"
  11:Src/gui.c     **** #include "Utilities/Fonts/fonts.h"
  12:Src/gui.c     **** #include "stm32746g_discovery_ts.h"
  13:Src/gui.c     **** #include "term_io.h"
  14:Src/gui.c     **** #include "dbgu.h"
  15:Src/gui.c     **** #include "ansi.h"
  16:Src/gui.c     **** #include "stm32f7xx_hal.h"
  17:Src/gui.c     **** 
  18:Src/gui.c     **** #define LCD_X_SIZE			RK043FN48H_WIDTH
  19:Src/gui.c     **** #define LCD_Y_SIZE			RK043FN48H_HEIGHT
  20:Src/gui.c     **** #define LAYER_FG 1
  21:Src/gui.c     **** #define LAYER_BG 0
  22:Src/gui.c     **** 
  23:Src/gui.c     **** #define CONTROL_BUTTON_SIZE 0.15 * LCD_X_SIZE
  24:Src/gui.c     **** #define CONTROL_BUTTONS_NUMBER 4
  25:Src/gui.c     **** #define TICKS_DELTA 100
  26:Src/gui.c     **** 
  27:Src/gui.c     **** #define XPix(x) x * LCD_X_SIZE
  28:Src/gui.c     **** #define YPix(x) x * LCD_Y_SIZE
  29:Src/gui.c     **** 
  30:Src/gui.c     **** // Not sure about these two guys (may be used in LCD_START_V2() in LayerDefaultInit()?)
  31:Src/gui.c     **** // static uint32_t lcd_image_fg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attrib
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 2


  32:Src/gui.c     **** // static uint32_t lcd_image_bg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attrib
  33:Src/gui.c     **** 
  34:Src/gui.c     **** /* ------------------------------------------------------------------- */
  35:Src/gui.c     **** 
  36:Src/gui.c     **** static TS_StateTypeDef TS_State;
  37:Src/gui.c     **** static TS_StateTypeDef lastState;
  38:Src/gui.c     **** uint16_t newX;
  39:Src/gui.c     **** uint16_t newY;
  40:Src/gui.c     **** uint16_t buttonsLeftUpper[4][2] = { 
  41:Src/gui.c     **** 	{XPix(0.08), YPix(0.7)}, 
  42:Src/gui.c     **** 	{XPix(0.31), YPix(0.7)}, 
  43:Src/gui.c     **** 	{XPix(0.54), YPix(0.7)}, 
  44:Src/gui.c     **** 	{XPix(0.77), YPix(0.7)} };
  45:Src/gui.c     **** Mp3_Player_State buttonState[4] = { PREV, PLAY, STOP, NEXT };
  46:Src/gui.c     **** Mp3_Player_State playButtonState = PLAY;
  47:Src/gui.c     **** uint32_t lastTicks = 0;
  48:Src/gui.c     **** 
  49:Src/gui.c     **** /* ------------------------------------------------------------------- */
  50:Src/gui.c     **** 
  51:Src/gui.c     **** void lcd_start(void);
  52:Src/gui.c     **** void LCD_Start_v2(void);
  53:Src/gui.c     **** void draw_background(void);
  54:Src/gui.c     **** int initialize_touchscreen(void);
  55:Src/gui.c     **** void touchscreen_loop_init(void);
  56:Src/gui.c     **** Mp3_Player_State check_touchscreen();
  57:Src/gui.c     **** void update_progress_bar(double);
  58:Src/gui.c     **** uint16_t getXPix (double factor);
  59:Src/gui.c     **** uint16_t getYPix (double factor);
  60:Src/gui.c     **** void refresh_screen(const char *info_text);
  61:Src/gui.c     **** void draw_buttons(void);
  62:Src/gui.c     **** void update_play_pause_button(void);
  63:Src/gui.c     **** 
  64:Src/gui.c     **** /* ------------------------------------------------------------------- */
  65:Src/gui.c     **** 
  66:Src/gui.c     **** // Initialize the LCD display (call this only once at the start of the player!)
  67:Src/gui.c     **** void lcd_start(void)
  68:Src/gui.c     **** {
  28              		.loc 1 68 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  69:Src/gui.c     ****   /* LCD Initialization */
  70:Src/gui.c     ****   BSP_LCD_Init();
  37              		.loc 1 70 0
  38 0002 FFF7FEFF 		bl	BSP_LCD_Init
  39              	.LVL0:
  71:Src/gui.c     **** 
  72:Src/gui.c     ****   /* LCD Initialization */
  73:Src/gui.c     ****   BSP_LCD_LayerDefaultInit(LAYER_BG, (unsigned int)0xC0000000);
  40              		.loc 1 73 0
  41 0006 4FF04041 		mov	r1, #-1073741824
  42 000a 0020     		movs	r0, #0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 3


  43 000c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
  44              	.LVL1:
  74:Src/gui.c     ****   BSP_LCD_LayerDefaultInit(LAYER_FG, (unsigned int)0xC0000000+(LCD_X_SIZE*LCD_Y_SIZE*4));
  45              		.loc 1 74 0
  46 0010 1449     		ldr	r1, .L3
  47 0012 0120     		movs	r0, #1
  48 0014 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
  49              	.LVL2:
  75:Src/gui.c     **** 
  76:Src/gui.c     ****   /* Enable the LCD */
  77:Src/gui.c     ****   BSP_LCD_DisplayOn();
  50              		.loc 1 77 0
  51 0018 FFF7FEFF 		bl	BSP_LCD_DisplayOn
  52              	.LVL3:
  78:Src/gui.c     **** 
  79:Src/gui.c     ****   /* Select the LCD Background Layer  */
  80:Src/gui.c     ****   BSP_LCD_SelectLayer(LAYER_BG);
  53              		.loc 1 80 0
  54 001c 0020     		movs	r0, #0
  55 001e FFF7FEFF 		bl	BSP_LCD_SelectLayer
  56              	.LVL4:
  81:Src/gui.c     **** 
  82:Src/gui.c     ****   /* Clear the Background Layer */
  83:Src/gui.c     ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
  57              		.loc 1 83 0
  58 0022 4FF0FF30 		mov	r0, #-1
  59 0026 FFF7FEFF 		bl	BSP_LCD_Clear
  60              	.LVL5:
  84:Src/gui.c     ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
  61              		.loc 1 84 0
  62 002a 4FF0FF30 		mov	r0, #-1
  63 002e FFF7FEFF 		bl	BSP_LCD_SetBackColor
  64              	.LVL6:
  85:Src/gui.c     **** 
  86:Src/gui.c     ****   BSP_LCD_SetColorKeying(LAYER_FG,LCD_COLOR_WHITE);
  65              		.loc 1 86 0
  66 0032 4FF0FF31 		mov	r1, #-1
  67 0036 0120     		movs	r0, #1
  68 0038 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
  69              	.LVL7:
  87:Src/gui.c     **** 
  88:Src/gui.c     ****   /* Select the LCD Foreground Layer  */
  89:Src/gui.c     ****   BSP_LCD_SelectLayer(LAYER_FG);
  70              		.loc 1 89 0
  71 003c 0120     		movs	r0, #1
  72 003e FFF7FEFF 		bl	BSP_LCD_SelectLayer
  73              	.LVL8:
  90:Src/gui.c     **** 
  91:Src/gui.c     ****   /* Clear the Foreground Layer */
  92:Src/gui.c     ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
  74              		.loc 1 92 0
  75 0042 4FF0FF30 		mov	r0, #-1
  76 0046 FFF7FEFF 		bl	BSP_LCD_Clear
  77              	.LVL9:
  93:Src/gui.c     ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
  78              		.loc 1 93 0
  79 004a 4FF0FF30 		mov	r0, #-1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 4


  80 004e FFF7FEFF 		bl	BSP_LCD_SetBackColor
  81              	.LVL10:
  94:Src/gui.c     **** 
  95:Src/gui.c     ****   /* Configure the transparency for foreground and background :
  96:Src/gui.c     ****      Increase the transparency */
  97:Src/gui.c     ****   BSP_LCD_SetTransparency(LAYER_BG, 255);
  82              		.loc 1 97 0
  83 0052 FF21     		movs	r1, #255
  84 0054 0020     		movs	r0, #0
  85 0056 FFF7FEFF 		bl	BSP_LCD_SetTransparency
  86              	.LVL11:
  98:Src/gui.c     ****   BSP_LCD_SetTransparency(LAYER_FG, 255);
  87              		.loc 1 98 0
  88 005a FF21     		movs	r1, #255
  89 005c 0120     		movs	r0, #1
  90 005e FFF7FEFF 		bl	BSP_LCD_SetTransparency
  91              	.LVL12:
  99:Src/gui.c     **** }
  92              		.loc 1 99 0
  93 0062 08BD     		pop	{r3, pc}
  94              	.L4:
  95              		.align	2
  96              	.L3:
  97 0064 00F807C0 		.word	-1073219584
  98              		.cfi_endproc
  99              	.LFE138:
 101              		.section	.text.LCD_Start_v2,"ax",%progbits
 102              		.align	1
 103              		.global	LCD_Start_v2
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv5-sp-d16
 109              	LCD_Start_v2:
 110              	.LFB139:
 100:Src/gui.c     **** 
 101:Src/gui.c     **** // Alternative LCD start-up method
 102:Src/gui.c     **** void LCD_Start_v2(void)
 103:Src/gui.c     **** {
 111              		.loc 1 103 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115 0000 08B5     		push	{r3, lr}
 116              	.LCFI1:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 3, -8
 119              		.cfi_offset 14, -4
 104:Src/gui.c     **** 	BSP_LCD_Init();
 120              		.loc 1 104 0
 121 0002 FFF7FEFF 		bl	BSP_LCD_Init
 122              	.LVL13:
 105:Src/gui.c     **** 	BSP_LCD_LayerDefaultInit(LAYER_FG, (unsigned int)0xC0000000);
 123              		.loc 1 105 0
 124 0006 4FF04041 		mov	r1, #-1073741824
 125 000a 0120     		movs	r0, #1
 126 000c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 5


 127              	.LVL14:
 106:Src/gui.c     **** 	BSP_LCD_LayerDefaultInit(LAYER_BG, (unsigned int)0xC0000000+(LCD_X_SIZE*LCD_Y_SIZE*4));
 128              		.loc 1 106 0
 129 0010 1649     		ldr	r1, .L7
 130 0012 0020     		movs	r0, #0
 131 0014 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 132              	.LVL15:
 107:Src/gui.c     **** 
 108:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 133              		.loc 1 108 0
 134 0018 0120     		movs	r0, #1
 135 001a FFF7FEFF 		bl	BSP_LCD_SelectLayer
 136              	.LVL16:
 109:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 137              		.loc 1 109 0
 138 001e 4FF0FF30 		mov	r0, #-1
 139 0022 FFF7FEFF 		bl	BSP_LCD_Clear
 140              	.LVL17:
 110:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 141              		.loc 1 110 0
 142 0026 0020     		movs	r0, #0
 143 0028 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 144              	.LVL18:
 111:Src/gui.c     **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 145              		.loc 1 111 0
 146 002c 4FF0FF30 		mov	r0, #-1
 147 0030 FFF7FEFF 		bl	BSP_LCD_Clear
 148              	.LVL19:
 112:Src/gui.c     **** 	BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 149              		.loc 1 112 0
 150 0034 4FF0FF30 		mov	r0, #-1
 151 0038 FFF7FEFF 		bl	BSP_LCD_SetBackColor
 152              	.LVL20:
 113:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 153              		.loc 1 113 0
 154 003c 4FF07F40 		mov	r0, #-16777216
 155 0040 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 156              	.LVL21:
 114:Src/gui.c     **** 
 115:Src/gui.c     **** 	BSP_LCD_ResetColorKeying(LAYER_FG);
 157              		.loc 1 115 0
 158 0044 0120     		movs	r0, #1
 159 0046 FFF7FEFF 		bl	BSP_LCD_ResetColorKeying
 160              	.LVL22:
 116:Src/gui.c     **** 	BSP_LCD_ResetColorKeying(LAYER_BG);
 161              		.loc 1 116 0
 162 004a 0020     		movs	r0, #0
 163 004c FFF7FEFF 		bl	BSP_LCD_ResetColorKeying
 164              	.LVL23:
 117:Src/gui.c     **** 
 118:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_FG, (uint8_t) 100);
 165              		.loc 1 118 0
 166 0050 6421     		movs	r1, #100
 167 0052 0120     		movs	r0, #1
 168 0054 FFF7FEFF 		bl	BSP_LCD_SetTransparency
 169              	.LVL24:
 119:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_BG, (uint8_t) 0xFF);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 6


 170              		.loc 1 119 0
 171 0058 FF21     		movs	r1, #255
 172 005a 0020     		movs	r0, #0
 173 005c FFF7FEFF 		bl	BSP_LCD_SetTransparency
 174              	.LVL25:
 120:Src/gui.c     **** 
 121:Src/gui.c     **** 	BSP_LCD_Reload(LCD_RELOAD_VERTICAL_BLANKING);
 175              		.loc 1 121 0
 176 0060 0220     		movs	r0, #2
 177 0062 FFF7FEFF 		bl	BSP_LCD_Reload
 178              	.LVL26:
 122:Src/gui.c     **** 	BSP_LCD_DisplayOn();
 179              		.loc 1 122 0
 180 0066 FFF7FEFF 		bl	BSP_LCD_DisplayOn
 181              	.LVL27:
 123:Src/gui.c     **** }
 182              		.loc 1 123 0
 183 006a 08BD     		pop	{r3, pc}
 184              	.L8:
 185              		.align	2
 186              	.L7:
 187 006c 00F807C0 		.word	-1073219584
 188              		.cfi_endproc
 189              	.LFE139:
 191              		.section	.text.initialize_touchscreen,"ax",%progbits
 192              		.align	1
 193              		.global	initialize_touchscreen
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv5-sp-d16
 199              	initialize_touchscreen:
 200              	.LFB141:
 124:Src/gui.c     **** 
 125:Src/gui.c     **** // Draw the screen background
 126:Src/gui.c     **** // Should be called only once to draw all the necessary screen elements
 127:Src/gui.c     **** void draw_background(void)
 128:Src/gui.c     **** {
 129:Src/gui.c     **** 	/* Select the LCD Background Layer  */
 130:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 131:Src/gui.c     **** 
 132:Src/gui.c     **** 	draw_buttons();
 133:Src/gui.c     **** 	
 134:Src/gui.c     **** 	//select Foreground Layer
 135:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 136:Src/gui.c     **** }
 137:Src/gui.c     **** 
 138:Src/gui.c     **** // Initialize the touchscreen
 139:Src/gui.c     **** // Should be called once, to create all the necessary structures
 140:Src/gui.c     **** int initialize_touchscreen(void)
 141:Src/gui.c     **** {
 201              		.loc 1 141 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 10B5     		push	{r4, lr}
 206              	.LCFI2:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 7


 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 4, -8
 209              		.cfi_offset 14, -4
 210              	.LVL28:
 142:Src/gui.c     **** 	uint8_t status = 0;
 143:Src/gui.c     **** 	status = BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
 211              		.loc 1 143 0
 212 0002 FFF7FEFF 		bl	BSP_LCD_GetXSize
 213              	.LVL29:
 214 0006 84B2     		uxth	r4, r0
 215 0008 FFF7FEFF 		bl	BSP_LCD_GetYSize
 216              	.LVL30:
 217 000c 81B2     		uxth	r1, r0
 218 000e 2046     		mov	r0, r4
 219 0010 FFF7FEFF 		bl	BSP_TS_Init
 220              	.LVL31:
 144:Src/gui.c     **** 	if(status != TS_OK) return -1;
 221              		.loc 1 144 0
 222 0014 08B9     		cbnz	r0, .L13
 145:Src/gui.c     **** 	return 0;
 223              		.loc 1 145 0
 224 0016 0020     		movs	r0, #0
 225              	.LVL32:
 226              	.L9:
 146:Src/gui.c     **** }
 227              		.loc 1 146 0
 228 0018 10BD     		pop	{r4, pc}
 229              	.LVL33:
 230              	.L13:
 144:Src/gui.c     **** 	if(status != TS_OK) return -1;
 231              		.loc 1 144 0
 232 001a 4FF0FF30 		mov	r0, #-1
 233              	.LVL34:
 234 001e FBE7     		b	.L9
 235              		.cfi_endproc
 236              	.LFE141:
 238              		.section	.text.touchscreen_loop_init,"ax",%progbits
 239              		.align	1
 240              		.global	touchscreen_loop_init
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.fpu fpv5-sp-d16
 246              	touchscreen_loop_init:
 247              	.LFB142:
 147:Src/gui.c     **** 
 148:Src/gui.c     **** // Call this once to init the TS-input-reading-loop
 149:Src/gui.c     **** void touchscreen_loop_init(void)
 150:Src/gui.c     **** {
 248              		.loc 1 150 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252 0000 08B5     		push	{r3, lr}
 253              	.LCFI3:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 3, -8
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 8


 256              		.cfi_offset 14, -4
 151:Src/gui.c     ****     newX = 120;
 257              		.loc 1 151 0
 258 0002 7823     		movs	r3, #120
 259 0004 0A4A     		ldr	r2, .L16
 260 0006 1380     		strh	r3, [r2]	@ movhi
 152:Src/gui.c     **** 	newY = 120;
 261              		.loc 1 152 0
 262 0008 0A4A     		ldr	r2, .L16+4
 263 000a 1380     		strh	r3, [r2]	@ movhi
 153:Src/gui.c     ****     BSP_LCD_SelectLayer(LAYER_FG);
 264              		.loc 1 153 0
 265 000c 0120     		movs	r0, #1
 266 000e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 267              	.LVL35:
 154:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_GREEN);
 268              		.loc 1 154 0
 269 0012 4FF0FF20 		mov	r0, #-16711936
 270 0016 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 271              	.LVL36:
 155:Src/gui.c     **** 	BSP_LCD_SetTransparency(LAYER_FG, (uint8_t) 0xFF);
 272              		.loc 1 155 0
 273 001a FF21     		movs	r1, #255
 274 001c 0120     		movs	r0, #1
 275 001e FFF7FEFF 		bl	BSP_LCD_SetTransparency
 276              	.LVL37:
 156:Src/gui.c     **** 	BSP_LCD_SetColorKeying(LAYER_FG, LCD_COLOR_WHITE);
 277              		.loc 1 156 0
 278 0022 4FF0FF31 		mov	r1, #-1
 279 0026 0120     		movs	r0, #1
 280 0028 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
 281              	.LVL38:
 157:Src/gui.c     **** }
 282              		.loc 1 157 0
 283 002c 08BD     		pop	{r3, pc}
 284              	.L17:
 285 002e 00BF     		.align	2
 286              	.L16:
 287 0030 00000000 		.word	newX
 288 0034 00000000 		.word	newY
 289              		.cfi_endproc
 290              	.LFE142:
 292              		.global	__aeabi_i2d
 293              		.global	__aeabi_dadd
 294              		.global	__aeabi_dcmple
 295              		.section	.text.check_touchscreen,"ax",%progbits
 296              		.align	1
 297              		.global	check_touchscreen
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu fpv5-sp-d16
 303              	check_touchscreen:
 304              	.LFB143:
 158:Src/gui.c     **** 
 159:Src/gui.c     **** // Single iteration of getting TS input
 160:Src/gui.c     **** // RETURNS: new state according to the user choice or EMPTY if no new choice has been made
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 9


 161:Src/gui.c     **** Mp3_Player_State check_touchscreen()
 162:Src/gui.c     **** {	
 305              		.loc 1 162 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 310              	.LCFI4:
 311              		.cfi_def_cfa_offset 32
 312              		.cfi_offset 4, -32
 313              		.cfi_offset 5, -28
 314              		.cfi_offset 6, -24
 315              		.cfi_offset 7, -20
 316              		.cfi_offset 8, -16
 317              		.cfi_offset 9, -12
 318              		.cfi_offset 10, -8
 319              		.cfi_offset 14, -4
 163:Src/gui.c     **** 	uint32_t currentTicks = HAL_GetTick();
 320              		.loc 1 163 0
 321 0004 FFF7FEFF 		bl	HAL_GetTick
 322              	.LVL39:
 164:Src/gui.c     **** 	
 165:Src/gui.c     **** 	if (currentTicks < lastTicks + TICKS_DELTA)
 323              		.loc 1 165 0
 324 0008 3F4B     		ldr	r3, .L40
 325 000a 1B68     		ldr	r3, [r3]
 326 000c 6433     		adds	r3, r3, #100
 327 000e 8342     		cmp	r3, r0
 328 0010 74D8     		bhi	.L31
 166:Src/gui.c     **** 		return EMPTY;
 167:Src/gui.c     **** 	
 168:Src/gui.c     **** 	lastTicks = currentTicks;
 329              		.loc 1 168 0
 330 0012 3D4B     		ldr	r3, .L40
 331 0014 1860     		str	r0, [r3]
 169:Src/gui.c     **** 	
 170:Src/gui.c     ****     BSP_TS_GetState(&TS_State);
 332              		.loc 1 170 0
 333 0016 3D4C     		ldr	r4, .L40+4
 334 0018 2046     		mov	r0, r4
 335              	.LVL40:
 336 001a FFF7FEFF 		bl	BSP_TS_GetState
 337              	.LVL41:
 171:Src/gui.c     **** 	if (TS_State.touchDetected == 0)
 338              		.loc 1 171 0
 339 001e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 340 0020 002B     		cmp	r3, #0
 341 0022 6ED0     		beq	.L32
 172:Src/gui.c     **** 		return EMPTY;
 173:Src/gui.c     **** 	if ((TS_State.touchX[0] & 0x0FFF) >= 40)
 342              		.loc 1 173 0
 343 0024 6388     		ldrh	r3, [r4, #2]
 344 0026 C3F30B03 		ubfx	r3, r3, #0, #12
 345 002a 272B     		cmp	r3, #39
 346 002c 01D9     		bls	.L20
 174:Src/gui.c     ****     {
 175:Src/gui.c     **** 		newX = TS_State.touchX[0] & 0x0FFF;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 10


 347              		.loc 1 175 0
 348 002e 384A     		ldr	r2, .L40+8
 349 0030 1380     		strh	r3, [r2]	@ movhi
 350              	.L20:
 176:Src/gui.c     **** 	}
 177:Src/gui.c     **** 	if ((TS_State.touchY[0] & 0x0FFF) >= 40)
 351              		.loc 1 177 0
 352 0032 364B     		ldr	r3, .L40+4
 353 0034 9B89     		ldrh	r3, [r3, #12]
 354 0036 C3F30B03 		ubfx	r3, r3, #0, #12
 355 003a 272B     		cmp	r3, #39
 356 003c 01D9     		bls	.L21
 178:Src/gui.c     ****     {
 179:Src/gui.c     **** 		newY = TS_State.touchY[0] & 0x0FFF;
 357              		.loc 1 179 0
 358 003e 354A     		ldr	r2, .L40+12
 359 0040 1380     		strh	r3, [r2]	@ movhi
 360              	.L21:
 180:Src/gui.c     **** 	}
 181:Src/gui.c     **** 
 182:Src/gui.c     **** 	lastState.touchX[0] = newX;
 361              		.loc 1 182 0
 362 0042 334B     		ldr	r3, .L40+8
 363 0044 B3F80090 		ldrh	r9, [r3]
 183:Src/gui.c     **** 	lastState.touchY[0] = newY;
 364              		.loc 1 183 0
 365 0048 324B     		ldr	r3, .L40+12
 366 004a B3F800A0 		ldrh	r10, [r3]
 367              	.LVL42:
 368              	.LBB2:
 184:Src/gui.c     **** 
 185:Src/gui.c     **** 	for(int i = 0; i < CONTROL_BUTTONS_NUMBER; i++) {
 369              		.loc 1 185 0
 370 004e 0024     		movs	r4, #0
 371 0050 13E0     		b	.L22
 372              	.LVL43:
 373              	.L37:
 374              	.LBB3:
 186:Src/gui.c     **** 
 187:Src/gui.c     **** 		uint16_t buttonCornerX = buttonsLeftUpper[i][0];
 188:Src/gui.c     **** 		uint16_t buttonCornerY = buttonsLeftUpper[i][1];
 189:Src/gui.c     **** 
 190:Src/gui.c     **** 		if (newX <= buttonCornerX + CONTROL_BUTTON_SIZE &&
 191:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 192:Src/gui.c     **** 			newX > buttonCornerX &&
 193:Src/gui.c     **** 			newY > buttonCornerY
 194:Src/gui.c     **** 		) {
 195:Src/gui.c     **** 
 196:Src/gui.c     **** 		if (i == 1 || i == 2) {
 197:Src/gui.c     **** 			if (playButtonState == PLAY) {
 375              		.loc 1 197 0
 376 0052 314B     		ldr	r3, .L40+16
 377 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 378 0056 1BB9     		cbnz	r3, .L27
 198:Src/gui.c     ****                 playButtonState = PAUSE;
 379              		.loc 1 198 0
 380 0058 2F4B     		ldr	r3, .L40+16
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 11


 381 005a 0122     		movs	r2, #1
 382 005c 1A70     		strb	r2, [r3]
 383 005e 44E0     		b	.L26
 384              	.L27:
 199:Src/gui.c     **** 			}
 200:Src/gui.c     **** 
 201:Src/gui.c     **** 			else {
 202:Src/gui.c     ****                 playButtonState = PLAY;
 385              		.loc 1 202 0
 386 0060 2D4B     		ldr	r3, .L40+16
 387 0062 0022     		movs	r2, #0
 388 0064 1A70     		strb	r2, [r3]
 389 0066 40E0     		b	.L26
 390              	.L38:
 203:Src/gui.c     **** 			}
 204:Src/gui.c     **** 		}
 205:Src/gui.c     **** 		if (i == 1)
 206:Src/gui.c     **** 			return playButtonState;
 391              		.loc 1 206 0
 392 0068 2B4B     		ldr	r3, .L40+16
 393 006a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 394 006c 47E0     		b	.L19
 395              	.L39:
 207:Src/gui.c     **** 		else if (i == 2) {
 208:Src/gui.c     **** 			playButtonState = PAUSE;
 396              		.loc 1 208 0
 397 006e 2A4B     		ldr	r3, .L40+16
 398 0070 0122     		movs	r2, #1
 399 0072 1A70     		strb	r2, [r3]
 209:Src/gui.c     **** 			return STOP;
 400              		.loc 1 209 0
 401 0074 0220     		movs	r0, #2
 402 0076 42E0     		b	.L19
 403              	.L23:
 404              	.LBE3:
 185:Src/gui.c     **** 
 405              		.loc 1 185 0 discriminator 2
 406 0078 0134     		adds	r4, r4, #1
 407              	.LVL44:
 408              	.L22:
 185:Src/gui.c     **** 
 409              		.loc 1 185 0 is_stmt 0 discriminator 1
 410 007a 032C     		cmp	r4, #3
 411 007c 3CDC     		bgt	.L36
 412              	.LBB4:
 187:Src/gui.c     **** 		uint16_t buttonCornerY = buttonsLeftUpper[i][1];
 413              		.loc 1 187 0 is_stmt 1
 414 007e 274B     		ldr	r3, .L40+20
 415 0080 33F82450 		ldrh	r5, [r3, r4, lsl #2]
 416              	.LVL45:
 188:Src/gui.c     **** 
 417              		.loc 1 188 0
 418 0084 03EB8403 		add	r3, r3, r4, lsl #2
 419 0088 B3F80280 		ldrh	r8, [r3, #2]
 420              	.LVL46:
 190:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 421              		.loc 1 190 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 12


 422 008c 4846     		mov	r0, r9
 423 008e FFF7FEFF 		bl	__aeabi_i2d
 424              	.LVL47:
 425 0092 0646     		mov	r6, r0
 426 0094 0F46     		mov	r7, r1
 427 0096 2846     		mov	r0, r5
 428 0098 FFF7FEFF 		bl	__aeabi_i2d
 429              	.LVL48:
 430 009c 0022     		movs	r2, #0
 431 009e 204B     		ldr	r3, .L40+24
 432 00a0 FFF7FEFF 		bl	__aeabi_dadd
 433              	.LVL49:
 434 00a4 0246     		mov	r2, r0
 435 00a6 0B46     		mov	r3, r1
 436 00a8 3046     		mov	r0, r6
 437 00aa 3946     		mov	r1, r7
 438 00ac FFF7FEFF 		bl	__aeabi_dcmple
 439              	.LVL50:
 440 00b0 0028     		cmp	r0, #0
 441 00b2 E1D0     		beq	.L23
 191:Src/gui.c     **** 			newX > buttonCornerX &&
 442              		.loc 1 191 0 discriminator 1
 443 00b4 5046     		mov	r0, r10
 444 00b6 FFF7FEFF 		bl	__aeabi_i2d
 445              	.LVL51:
 446 00ba 0646     		mov	r6, r0
 447 00bc 0F46     		mov	r7, r1
 448 00be 4046     		mov	r0, r8
 449 00c0 FFF7FEFF 		bl	__aeabi_i2d
 450              	.LVL52:
 451 00c4 0022     		movs	r2, #0
 452 00c6 164B     		ldr	r3, .L40+24
 453 00c8 FFF7FEFF 		bl	__aeabi_dadd
 454              	.LVL53:
 190:Src/gui.c     **** 			newY <= buttonCornerY + CONTROL_BUTTON_SIZE &&
 455              		.loc 1 190 0 discriminator 1
 456 00cc 0246     		mov	r2, r0
 457 00ce 0B46     		mov	r3, r1
 458 00d0 3046     		mov	r0, r6
 459 00d2 3946     		mov	r1, r7
 460 00d4 FFF7FEFF 		bl	__aeabi_dcmple
 461              	.LVL54:
 462 00d8 0028     		cmp	r0, #0
 463 00da CDD0     		beq	.L23
 191:Src/gui.c     **** 			newX > buttonCornerX &&
 464              		.loc 1 191 0
 465 00dc A945     		cmp	r9, r5
 466 00de CBD9     		bls	.L23
 192:Src/gui.c     **** 			newY > buttonCornerY
 467              		.loc 1 192 0
 468 00e0 C245     		cmp	r10, r8
 469 00e2 C9D9     		bls	.L23
 196:Src/gui.c     **** 			if (playButtonState == PLAY) {
 470              		.loc 1 196 0
 471 00e4 631E     		subs	r3, r4, #1
 472 00e6 012B     		cmp	r3, #1
 473 00e8 B3D9     		bls	.L37
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 13


 474              	.L26:
 205:Src/gui.c     **** 			return playButtonState;
 475              		.loc 1 205 0
 476 00ea 012C     		cmp	r4, #1
 477 00ec BCD0     		beq	.L38
 207:Src/gui.c     **** 			playButtonState = PAUSE;
 478              		.loc 1 207 0
 479 00ee 022C     		cmp	r4, #2
 480 00f0 BDD0     		beq	.L39
 210:Src/gui.c     **** 		}
 211:Src/gui.c     **** 		
 212:Src/gui.c     **** 		else
 213:Src/gui.c     **** 			return buttonState[i];
 481              		.loc 1 213 0
 482 00f2 0C4B     		ldr	r3, .L40+28
 483 00f4 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 484 00f6 02E0     		b	.L19
 485              	.LVL55:
 486              	.L36:
 487              	.LBE4:
 488              	.LBE2:
 214:Src/gui.c     **** 		}
 215:Src/gui.c     **** 	}
 216:Src/gui.c     **** 
 217:Src/gui.c     **** 	return EMPTY;
 489              		.loc 1 217 0
 490 00f8 0620     		movs	r0, #6
 491              	.LBB5:
 492 00fa 00E0     		b	.L19
 493              	.LVL56:
 494              	.L31:
 495              	.LBE5:
 166:Src/gui.c     **** 	
 496              		.loc 1 166 0
 497 00fc 0620     		movs	r0, #6
 498              	.LVL57:
 499              	.L19:
 218:Src/gui.c     **** }
 500              		.loc 1 218 0
 501 00fe BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 502              	.L32:
 172:Src/gui.c     **** 	if ((TS_State.touchX[0] & 0x0FFF) >= 40)
 503              		.loc 1 172 0
 504 0102 0620     		movs	r0, #6
 505 0104 FBE7     		b	.L19
 506              	.L41:
 507 0106 00BF     		.align	2
 508              	.L40:
 509 0108 00000000 		.word	.LANCHOR0
 510 010c 00000000 		.word	.LANCHOR1
 511 0110 00000000 		.word	newX
 512 0114 00000000 		.word	newY
 513 0118 00000000 		.word	.LANCHOR3
 514 011c 00000000 		.word	.LANCHOR2
 515 0120 00005240 		.word	1079115776
 516 0124 00000000 		.word	.LANCHOR4
 517              		.cfi_endproc
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 14


 518              	.LFE143:
 520              		.global	__aeabi_dmul
 521              		.global	__aeabi_d2uiz
 522              		.section	.text.update_progress_bar,"ax",%progbits
 523              		.align	1
 524              		.global	update_progress_bar
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 528              		.fpu fpv5-sp-d16
 530              	update_progress_bar:
 531              	.LFB144:
 219:Src/gui.c     **** 
 220:Src/gui.c     **** // Update the visual progress bar for the current song
 221:Src/gui.c     **** // INPUT: progress - floating point value of 0 to 1 indicating the part of the whole song which has
 222:Src/gui.c     **** void update_progress_bar(double progress) {
 532              		.loc 1 222 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              	.LVL58:
 537 0000 38B5     		push	{r3, r4, r5, lr}
 538              	.LCFI5:
 539              		.cfi_def_cfa_offset 16
 540              		.cfi_offset 3, -16
 541              		.cfi_offset 4, -12
 542              		.cfi_offset 5, -8
 543              		.cfi_offset 14, -4
 544 0002 55EC104B 		vmov	r4, r5, d0
 223:Src/gui.c     **** 
 224:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 545              		.loc 1 224 0
 546 0006 0120     		movs	r0, #1
 547 0008 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 548              	.LVL59:
 225:Src/gui.c     **** 	
 226:Src/gui.c     **** 	double epsilon = 1e-2;
 227:Src/gui.c     **** 	if(progress <= epsilon) {
 549              		.loc 1 227 0
 550 000c 15A3     		adr	r3, .L50+4
 551 000e D3E90023 		ldrd	r2, [r3]
 552 0012 2046     		mov	r0, r4
 553 0014 2946     		mov	r1, r5
 554 0016 FFF7FEFF 		bl	__aeabi_dcmple
 555              	.LVL60:
 556 001a 90B9     		cbnz	r0, .L49
 228:Src/gui.c     **** 		BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 229:Src/gui.c     **** 		BSP_LCD_FillRect(0, YPix(0.45) - 1, LCD_X_SIZE, 21);
 230:Src/gui.c     **** 		return;
 231:Src/gui.c     **** 	}
 232:Src/gui.c     **** 
 233:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 557              		.loc 1 233 0
 558 001c 4FF07F40 		mov	r0, #-16777216
 559 0020 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 560              	.LVL61:
 234:Src/gui.c     **** 	BSP_LCD_FillRect(30, YPix(0.45),  (uint16_t)(progress * (LCD_X_SIZE - 60)), 19);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 15


 561              		.loc 1 234 0
 562 0024 0022     		movs	r2, #0
 563 0026 0E4B     		ldr	r3, .L50
 564 0028 2046     		mov	r0, r4
 565 002a 2946     		mov	r1, r5
 566 002c FFF7FEFF 		bl	__aeabi_dmul
 567              	.LVL62:
 568 0030 FFF7FEFF 		bl	__aeabi_d2uiz
 569              	.LVL63:
 570 0034 1323     		movs	r3, #19
 571 0036 82B2     		uxth	r2, r0
 572 0038 7A21     		movs	r1, #122
 573 003a 1E20     		movs	r0, #30
 574 003c FFF7FEFF 		bl	BSP_LCD_FillRect
 575              	.LVL64:
 576              	.L42:
 235:Src/gui.c     **** 
 236:Src/gui.c     **** }
 577              		.loc 1 236 0
 578 0040 38BD     		pop	{r3, r4, r5, pc}
 579              	.LVL65:
 580              	.L49:
 228:Src/gui.c     **** 		BSP_LCD_FillRect(0, YPix(0.45) - 1, LCD_X_SIZE, 21);
 581              		.loc 1 228 0
 582 0042 4FF0FF30 		mov	r0, #-1
 583 0046 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 584              	.LVL66:
 229:Src/gui.c     **** 		return;
 585              		.loc 1 229 0
 586 004a 1523     		movs	r3, #21
 587 004c 4FF4F072 		mov	r2, #480
 588 0050 7921     		movs	r1, #121
 589 0052 0020     		movs	r0, #0
 590 0054 FFF7FEFF 		bl	BSP_LCD_FillRect
 591              	.LVL67:
 230:Src/gui.c     **** 	}
 592              		.loc 1 230 0
 593 0058 F2E7     		b	.L42
 594              	.L51:
 595 005a 00BFAFF3 		.align	3
 595      0080
 596              	.L50:
 597 0060 00407A40 		.word	1081753600
 598 0064 7B14AE47 		.word	1202590843
 599 0068 E17A843F 		.word	1065646817
 600              		.cfi_endproc
 601              	.LFE144:
 603              		.global	__aeabi_d2iz
 604              		.section	.text.update_play_pause_button,"ax",%progbits
 605              		.align	1
 606              		.global	update_play_pause_button
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu fpv5-sp-d16
 612              	update_play_pause_button:
 613              	.LFB147:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 16


 237:Src/gui.c     **** 
 238:Src/gui.c     **** // Refresh the state of the screen
 239:Src/gui.c     **** // INPUT: info_text - text field which should be displayed on the main title-bar of the player
 240:Src/gui.c     **** void refresh_screen(const char *info_text) {
 241:Src/gui.c     **** 
 242:Src/gui.c     **** 	// Text
 243:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_FG);
 244:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 245:Src/gui.c     **** 	BSP_LCD_FillRect(0, YPix(0.20) - 1, LCD_X_SIZE, 30);
 246:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 247:Src/gui.c     **** 	// Workaround for a small visual bug (the first letter not showing up in displayStringAt())
 248:Src/gui.c     **** 	char buf[100];
 249:Src/gui.c     **** 	sprintf(buf, " %s", info_text);
 250:Src/gui.c     **** 	BSP_LCD_DisplayStringAt(XPix(0.05), YPix(0.20), (unsigned char *)buf,LEFT_MODE);
 251:Src/gui.c     **** 
 252:Src/gui.c     **** 	// Play/Pause Button (update label)
 253:Src/gui.c     **** 	update_play_pause_button();
 254:Src/gui.c     **** 
 255:Src/gui.c     **** }
 256:Src/gui.c     **** 
 257:Src/gui.c     **** // Draw the 4 main state control buttons: PREV/PLAY_PAUSE/STOP/NEXT
 258:Src/gui.c     **** void draw_buttons() {
 259:Src/gui.c     **** 
 260:Src/gui.c     **** 	//BSP_LCD_SetBackColor(LCD_COLOR_RED);
 261:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 262:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[0][0], buttonsLeftUpper[0][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 263:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[1][0], buttonsLeftUpper[1][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 264:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[2][0], buttonsLeftUpper[2][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 265:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[3][0], buttonsLeftUpper[3][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 266:Src/gui.c     **** 
 267:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 268:Src/gui.c     **** 	uint16_t xButton, yButton;
 269:Src/gui.c     **** 	
 270:Src/gui.c     **** 	// Previous button label
 271:Src/gui.c     **** 	xButton = buttonsLeftUpper[0][0];
 272:Src/gui.c     **** 	yButton = buttonsLeftUpper[0][1];
 273:Src/gui.c     **** 	Point Points1[]= {{xButton + 7, yButton + CONTROL_BUTTON_SIZE / 2}, {xButton + CONTROL_BUTTON_SIZE
 274:Src/gui.c     **** 		{xButton + CONTROL_BUTTON_SIZE / 2, yButton + 7 + 58}};	
 275:Src/gui.c     **** 	// Control button size in pixels is 72
 276:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points1, 3);
 277:Src/gui.c     **** 	Points1[0].X += 29;
 278:Src/gui.c     **** 	Points1[1].X += 29;
 279:Src/gui.c     **** 	Points1[2].X += 29;
 280:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points1, 3);
 281:Src/gui.c     **** 
 282:Src/gui.c     **** 	// Play/Pause button label
 283:Src/gui.c     **** 	update_play_pause_button();
 284:Src/gui.c     **** 
 285:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 286:Src/gui.c     **** 	// Stop button label
 287:Src/gui.c     **** 	xButton = buttonsLeftUpper[2][0];
 288:Src/gui.c     **** 	yButton = buttonsLeftUpper[2][1];
 289:Src/gui.c     **** 	BSP_LCD_FillRect(xButton + 15, yButton + 15, 42, 42);
 290:Src/gui.c     **** 
 291:Src/gui.c     **** 	// Next button label
 292:Src/gui.c     **** 	xButton = buttonsLeftUpper[3][0];
 293:Src/gui.c     **** 	yButton = buttonsLeftUpper[3][1];
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 17


 294:Src/gui.c     **** 	Point Points3[]= {{xButton + 7, yButton + 7}, {xButton + 7, yButton + 7 + 58}, 
 295:Src/gui.c     **** 		{xButton + CONTROL_BUTTON_SIZE / 2 , yButton + CONTROL_BUTTON_SIZE / 2}};
 296:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points3, 3);
 297:Src/gui.c     **** 	Points3[0].X += 29;
 298:Src/gui.c     **** 	Points3[1].X += 29;
 299:Src/gui.c     **** 	Points3[2].X += 29;
 300:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points3, 3);
 301:Src/gui.c     **** 
 302:Src/gui.c     **** }
 303:Src/gui.c     **** 
 304:Src/gui.c     **** // Refresh only the PLAY/PAUSE button
 305:Src/gui.c     **** void update_play_pause_button() {
 614              		.loc 1 305 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 16
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618 0000 30B5     		push	{r4, r5, lr}
 619              	.LCFI6:
 620              		.cfi_def_cfa_offset 12
 621              		.cfi_offset 4, -12
 622              		.cfi_offset 5, -8
 623              		.cfi_offset 14, -4
 624 0002 85B0     		sub	sp, sp, #20
 625              	.LCFI7:
 626              		.cfi_def_cfa_offset 32
 306:Src/gui.c     **** 
 307:Src/gui.c     **** 	BSP_LCD_SelectLayer(LAYER_BG);
 627              		.loc 1 307 0
 628 0004 0020     		movs	r0, #0
 629 0006 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 630              	.LVL68:
 308:Src/gui.c     **** 	uint16_t xButton = buttonsLeftUpper[1][0];
 631              		.loc 1 308 0
 632 000a 284B     		ldr	r3, .L58
 633 000c 9D88     		ldrh	r5, [r3, #4]
 634              	.LVL69:
 309:Src/gui.c     **** 	uint16_t yButton = buttonsLeftUpper[1][1];
 635              		.loc 1 309 0
 636 000e DC88     		ldrh	r4, [r3, #6]
 637              	.LVL70:
 310:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 638              		.loc 1 310 0
 639 0010 4FF07F40 		mov	r0, #-16777216
 640 0014 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 641              	.LVL71:
 311:Src/gui.c     **** 	BSP_LCD_FillRect(xButton, yButton,  CONTROL_BUTTON_SIZE, CONTROL_BUTTON_SIZE);
 642              		.loc 1 311 0
 643 0018 4823     		movs	r3, #72
 644 001a 1A46     		mov	r2, r3
 645 001c 2146     		mov	r1, r4
 646 001e 2846     		mov	r0, r5
 647 0020 FFF7FEFF 		bl	BSP_LCD_FillRect
 648              	.LVL72:
 312:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 649              		.loc 1 312 0
 650 0024 4FF0FF30 		mov	r0, #-1
 651 0028 FFF7FEFF 		bl	BSP_LCD_SetTextColor
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 18


 652              	.LVL73:
 313:Src/gui.c     **** 	if(playButtonState == PAUSE) {
 653              		.loc 1 313 0
 654 002c 204B     		ldr	r3, .L58+4
 655 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 656 0030 012B     		cmp	r3, #1
 657 0032 02D0     		beq	.L56
 314:Src/gui.c     **** 		Point Points2[]= {{xButton + 7, yButton + 7}, {xButton + 7, yButton + 7 + 58}, 
 315:Src/gui.c     **** 			{xButton + 7 + 58, yButton + CONTROL_BUTTON_SIZE / 2}};
 316:Src/gui.c     **** 		BSP_LCD_FillPolygon(Points2, 3);
 317:Src/gui.c     **** 	} else if(playButtonState == PLAY) {
 658              		.loc 1 317 0
 659 0034 0BB3     		cbz	r3, .L57
 660              	.LVL74:
 661              	.L52:
 318:Src/gui.c     **** 		// Workaround for a small visual bug (first pause-label figure not showing up)
 319:Src/gui.c     **** 		BSP_LCD_FillRect(0, 0, 1, 1);
 320:Src/gui.c     **** 		BSP_LCD_FillRect(xButton + 7, yButton + 7, 27, CONTROL_BUTTON_SIZE - 14);
 321:Src/gui.c     **** 		BSP_LCD_FillRect(xButton + 7 + 31, yButton + 7, 27, CONTROL_BUTTON_SIZE - 14);
 322:Src/gui.c     **** 	}
 323:Src/gui.c     **** 
 324:Src/gui.c     **** }
 662              		.loc 1 324 0
 663 0036 05B0     		add	sp, sp, #20
 664              	.LCFI8:
 665              		.cfi_remember_state
 666              		.cfi_def_cfa_offset 12
 667              		@ sp needed
 668 0038 30BD     		pop	{r4, r5, pc}
 669              	.LVL75:
 670              	.L56:
 671              	.LCFI9:
 672              		.cfi_restore_state
 673              	.LBB6:
 314:Src/gui.c     **** 		Point Points2[]= {{xButton + 7, yButton + 7}, {xButton + 7, yButton + 7 + 58}, 
 674              		.loc 1 314 0
 675 003a EB1D     		adds	r3, r5, #7
 676 003c 1BB2     		sxth	r3, r3
 677 003e ADF80430 		strh	r3, [sp, #4]	@ movhi
 678 0042 E21D     		adds	r2, r4, #7
 679 0044 ADF80620 		strh	r2, [sp, #6]	@ movhi
 680 0048 ADF80830 		strh	r3, [sp, #8]	@ movhi
 681 004c 04F14103 		add	r3, r4, #65
 682 0050 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 315:Src/gui.c     **** 		BSP_LCD_FillPolygon(Points2, 3);
 683              		.loc 1 315 0
 684 0054 4135     		adds	r5, r5, #65
 685              	.LVL76:
 314:Src/gui.c     **** 		Point Points2[]= {{xButton + 7, yButton + 7}, {xButton + 7, yButton + 7 + 58}, 
 686              		.loc 1 314 0
 687 0056 ADF80C50 		strh	r5, [sp, #12]	@ movhi
 315:Src/gui.c     **** 		BSP_LCD_FillPolygon(Points2, 3);
 688              		.loc 1 315 0
 689 005a 2046     		mov	r0, r4
 690 005c FFF7FEFF 		bl	__aeabi_i2d
 691              	.LVL77:
 692 0060 0022     		movs	r2, #0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 19


 693 0062 144B     		ldr	r3, .L58+8
 694 0064 FFF7FEFF 		bl	__aeabi_dadd
 695              	.LVL78:
 314:Src/gui.c     **** 		Point Points2[]= {{xButton + 7, yButton + 7}, {xButton + 7, yButton + 7 + 58}, 
 696              		.loc 1 314 0
 697 0068 FFF7FEFF 		bl	__aeabi_d2iz
 698              	.LVL79:
 699 006c ADF80E00 		strh	r0, [sp, #14]	@ movhi
 316:Src/gui.c     **** 	} else if(playButtonState == PLAY) {
 700              		.loc 1 316 0
 701 0070 0321     		movs	r1, #3
 702 0072 01A8     		add	r0, sp, #4
 703 0074 FFF7FEFF 		bl	BSP_LCD_FillPolygon
 704              	.LVL80:
 705              	.LBE6:
 706 0078 DDE7     		b	.L52
 707              	.LVL81:
 708              	.L57:
 319:Src/gui.c     **** 		BSP_LCD_FillRect(xButton + 7, yButton + 7, 27, CONTROL_BUTTON_SIZE - 14);
 709              		.loc 1 319 0
 710 007a 0123     		movs	r3, #1
 711 007c 1A46     		mov	r2, r3
 712 007e 0021     		movs	r1, #0
 713 0080 0846     		mov	r0, r1
 714 0082 FFF7FEFF 		bl	BSP_LCD_FillRect
 715              	.LVL82:
 320:Src/gui.c     **** 		BSP_LCD_FillRect(xButton + 7 + 31, yButton + 7, 27, CONTROL_BUTTON_SIZE - 14);
 716              		.loc 1 320 0
 717 0086 0734     		adds	r4, r4, #7
 718              	.LVL83:
 719 0088 A4B2     		uxth	r4, r4
 720              	.LVL84:
 721 008a E81D     		adds	r0, r5, #7
 722 008c 3A23     		movs	r3, #58
 723 008e 1B22     		movs	r2, #27
 724 0090 2146     		mov	r1, r4
 725 0092 80B2     		uxth	r0, r0
 726 0094 FFF7FEFF 		bl	BSP_LCD_FillRect
 727              	.LVL85:
 321:Src/gui.c     **** 	}
 728              		.loc 1 321 0
 729 0098 05F12600 		add	r0, r5, #38
 730 009c 3A23     		movs	r3, #58
 731 009e 1B22     		movs	r2, #27
 732 00a0 2146     		mov	r1, r4
 733 00a2 80B2     		uxth	r0, r0
 734 00a4 FFF7FEFF 		bl	BSP_LCD_FillRect
 735              	.LVL86:
 736              		.loc 1 324 0
 737 00a8 C5E7     		b	.L52
 738              	.L59:
 739 00aa 00BF     		.align	2
 740              	.L58:
 741 00ac 00000000 		.word	.LANCHOR2
 742 00b0 00000000 		.word	.LANCHOR3
 743 00b4 00004240 		.word	1078067200
 744              		.cfi_endproc
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 20


 745              	.LFE147:
 747              		.section	.text.refresh_screen,"ax",%progbits
 748              		.align	1
 749              		.global	refresh_screen
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 753              		.fpu fpv5-sp-d16
 755              	refresh_screen:
 756              	.LFB145:
 240:Src/gui.c     **** 
 757              		.loc 1 240 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 104
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              	.LVL87:
 762 0000 10B5     		push	{r4, lr}
 763              	.LCFI10:
 764              		.cfi_def_cfa_offset 8
 765              		.cfi_offset 4, -8
 766              		.cfi_offset 14, -4
 767 0002 9AB0     		sub	sp, sp, #104
 768              	.LCFI11:
 769              		.cfi_def_cfa_offset 112
 770 0004 0446     		mov	r4, r0
 243:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 771              		.loc 1 243 0
 772 0006 0120     		movs	r0, #1
 773              	.LVL88:
 774 0008 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 775              	.LVL89:
 244:Src/gui.c     **** 	BSP_LCD_FillRect(0, YPix(0.20) - 1, LCD_X_SIZE, 30);
 776              		.loc 1 244 0
 777 000c 4FF0FF30 		mov	r0, #-1
 778 0010 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 779              	.LVL90:
 245:Src/gui.c     **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 780              		.loc 1 245 0
 781 0014 1E23     		movs	r3, #30
 782 0016 4FF4F072 		mov	r2, #480
 783 001a 3521     		movs	r1, #53
 784 001c 0020     		movs	r0, #0
 785 001e FFF7FEFF 		bl	BSP_LCD_FillRect
 786              	.LVL91:
 246:Src/gui.c     **** 	// Workaround for a small visual bug (the first letter not showing up in displayStringAt())
 787              		.loc 1 246 0
 788 0022 4FF07F40 		mov	r0, #-16777216
 789 0026 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 790              	.LVL92:
 249:Src/gui.c     **** 	BSP_LCD_DisplayStringAt(XPix(0.05), YPix(0.20), (unsigned char *)buf,LEFT_MODE);
 791              		.loc 1 249 0
 792 002a 2246     		mov	r2, r4
 793 002c 0649     		ldr	r1, .L62
 794 002e 01A8     		add	r0, sp, #4
 795 0030 FFF7FEFF 		bl	sprintf
 796              	.LVL93:
 250:Src/gui.c     **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 21


 797              		.loc 1 250 0
 798 0034 0323     		movs	r3, #3
 799 0036 01AA     		add	r2, sp, #4
 800 0038 3621     		movs	r1, #54
 801 003a 1820     		movs	r0, #24
 802 003c FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 803              	.LVL94:
 253:Src/gui.c     **** 
 804              		.loc 1 253 0
 805 0040 FFF7FEFF 		bl	update_play_pause_button
 806              	.LVL95:
 255:Src/gui.c     **** 
 807              		.loc 1 255 0
 808 0044 1AB0     		add	sp, sp, #104
 809              	.LCFI12:
 810              		.cfi_def_cfa_offset 8
 811              		@ sp needed
 812 0046 10BD     		pop	{r4, pc}
 813              	.LVL96:
 814              	.L63:
 815              		.align	2
 816              	.L62:
 817 0048 00000000 		.word	.LC0
 818              		.cfi_endproc
 819              	.LFE145:
 821              		.section	.text.draw_buttons,"ax",%progbits
 822              		.align	1
 823              		.global	draw_buttons
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 827              		.fpu fpv5-sp-d16
 829              	draw_buttons:
 830              	.LFB146:
 258:Src/gui.c     **** 
 831              		.loc 1 258 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 24
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835 0000 70B5     		push	{r4, r5, r6, lr}
 836              	.LCFI13:
 837              		.cfi_def_cfa_offset 16
 838              		.cfi_offset 4, -16
 839              		.cfi_offset 5, -12
 840              		.cfi_offset 6, -8
 841              		.cfi_offset 14, -4
 842 0002 86B0     		sub	sp, sp, #24
 843              	.LCFI14:
 844              		.cfi_def_cfa_offset 40
 261:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[0][0], buttonsLeftUpper[0][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 845              		.loc 1 261 0
 846 0004 4FF07F40 		mov	r0, #-16777216
 847 0008 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 848              	.LVL97:
 262:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[1][0], buttonsLeftUpper[1][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 849              		.loc 1 262 0
 850 000c 524C     		ldr	r4, .L66
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 22


 851 000e 4823     		movs	r3, #72
 852 0010 1A46     		mov	r2, r3
 853 0012 6188     		ldrh	r1, [r4, #2]
 854 0014 2088     		ldrh	r0, [r4]
 855 0016 FFF7FEFF 		bl	BSP_LCD_FillRect
 856              	.LVL98:
 263:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[2][0], buttonsLeftUpper[2][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 857              		.loc 1 263 0
 858 001a 4823     		movs	r3, #72
 859 001c 1A46     		mov	r2, r3
 860 001e E188     		ldrh	r1, [r4, #6]
 861 0020 A088     		ldrh	r0, [r4, #4]
 862 0022 FFF7FEFF 		bl	BSP_LCD_FillRect
 863              	.LVL99:
 264:Src/gui.c     **** 	BSP_LCD_FillRect(buttonsLeftUpper[3][0], buttonsLeftUpper[3][1],  CONTROL_BUTTON_SIZE, CONTROL_BUT
 864              		.loc 1 264 0
 865 0026 4823     		movs	r3, #72
 866 0028 1A46     		mov	r2, r3
 867 002a 6189     		ldrh	r1, [r4, #10]
 868 002c 2089     		ldrh	r0, [r4, #8]
 869 002e FFF7FEFF 		bl	BSP_LCD_FillRect
 870              	.LVL100:
 265:Src/gui.c     **** 
 871              		.loc 1 265 0
 872 0032 4823     		movs	r3, #72
 873 0034 1A46     		mov	r2, r3
 874 0036 E189     		ldrh	r1, [r4, #14]
 875 0038 A089     		ldrh	r0, [r4, #12]
 876 003a FFF7FEFF 		bl	BSP_LCD_FillRect
 877              	.LVL101:
 267:Src/gui.c     **** 	uint16_t xButton, yButton;
 878              		.loc 1 267 0
 879 003e 4FF0FF30 		mov	r0, #-1
 880 0042 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 881              	.LVL102:
 271:Src/gui.c     **** 	yButton = buttonsLeftUpper[0][1];
 882              		.loc 1 271 0
 883 0046 2688     		ldrh	r6, [r4]
 884              	.LVL103:
 272:Src/gui.c     **** 	Point Points1[]= {{xButton + 7, yButton + CONTROL_BUTTON_SIZE / 2}, {xButton + CONTROL_BUTTON_SIZE
 885              		.loc 1 272 0
 886 0048 6588     		ldrh	r5, [r4, #2]
 887              	.LVL104:
 273:Src/gui.c     **** 		{xButton + CONTROL_BUTTON_SIZE / 2, yButton + 7 + 58}};	
 888              		.loc 1 273 0
 889 004a F31D     		adds	r3, r6, #7
 890 004c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 891 0050 2846     		mov	r0, r5
 892 0052 FFF7FEFF 		bl	__aeabi_i2d
 893              	.LVL105:
 894 0056 0022     		movs	r2, #0
 895 0058 404B     		ldr	r3, .L66+4
 896 005a FFF7FEFF 		bl	__aeabi_dadd
 897              	.LVL106:
 898 005e FFF7FEFF 		bl	__aeabi_d2iz
 899              	.LVL107:
 900 0062 ADF80E00 		strh	r0, [sp, #14]	@ movhi
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 23


 901 0066 3046     		mov	r0, r6
 902 0068 FFF7FEFF 		bl	__aeabi_i2d
 903              	.LVL108:
 904 006c 0022     		movs	r2, #0
 905 006e 3B4B     		ldr	r3, .L66+4
 906 0070 FFF7FEFF 		bl	__aeabi_dadd
 907              	.LVL109:
 908 0074 FFF7FEFF 		bl	__aeabi_d2iz
 909              	.LVL110:
 910 0078 00B2     		sxth	r0, r0
 911 007a ADF81000 		strh	r0, [sp, #16]	@ movhi
 912 007e EB1D     		adds	r3, r5, #7
 913 0080 ADF81230 		strh	r3, [sp, #18]	@ movhi
 914 0084 ADF81400 		strh	r0, [sp, #20]	@ movhi
 274:Src/gui.c     **** 	// Control button size in pixels is 72
 915              		.loc 1 274 0
 916 0088 4135     		adds	r5, r5, #65
 917              	.LVL111:
 273:Src/gui.c     **** 		{xButton + CONTROL_BUTTON_SIZE / 2, yButton + 7 + 58}};	
 918              		.loc 1 273 0
 919 008a ADF81650 		strh	r5, [sp, #22]	@ movhi
 276:Src/gui.c     **** 	Points1[0].X += 29;
 920              		.loc 1 276 0
 921 008e 0321     		movs	r1, #3
 922 0090 03A8     		add	r0, sp, #12
 923 0092 FFF7FEFF 		bl	BSP_LCD_FillPolygon
 924              	.LVL112:
 277:Src/gui.c     **** 	Points1[1].X += 29;
 925              		.loc 1 277 0
 926 0096 BDF80C30 		ldrh	r3, [sp, #12]
 927 009a 1D33     		adds	r3, r3, #29
 928 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 278:Src/gui.c     **** 	Points1[2].X += 29;
 929              		.loc 1 278 0
 930 00a0 BDF81030 		ldrh	r3, [sp, #16]
 931 00a4 1D33     		adds	r3, r3, #29
 932 00a6 ADF81030 		strh	r3, [sp, #16]	@ movhi
 279:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points1, 3);
 933              		.loc 1 279 0
 934 00aa BDF81430 		ldrh	r3, [sp, #20]
 935 00ae 1D33     		adds	r3, r3, #29
 936 00b0 ADF81430 		strh	r3, [sp, #20]	@ movhi
 280:Src/gui.c     **** 
 937              		.loc 1 280 0
 938 00b4 0321     		movs	r1, #3
 939 00b6 03A8     		add	r0, sp, #12
 940 00b8 FFF7FEFF 		bl	BSP_LCD_FillPolygon
 941              	.LVL113:
 283:Src/gui.c     **** 
 942              		.loc 1 283 0
 943 00bc FFF7FEFF 		bl	update_play_pause_button
 944              	.LVL114:
 285:Src/gui.c     **** 	// Stop button label
 945              		.loc 1 285 0
 946 00c0 4FF0FF30 		mov	r0, #-1
 947 00c4 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 948              	.LVL115:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 24


 287:Src/gui.c     **** 	yButton = buttonsLeftUpper[2][1];
 949              		.loc 1 287 0
 950 00c8 2089     		ldrh	r0, [r4, #8]
 951              	.LVL116:
 288:Src/gui.c     **** 	BSP_LCD_FillRect(xButton + 15, yButton + 15, 42, 42);
 952              		.loc 1 288 0
 953 00ca 6189     		ldrh	r1, [r4, #10]
 954              	.LVL117:
 289:Src/gui.c     **** 
 955              		.loc 1 289 0
 956 00cc 0F31     		adds	r1, r1, #15
 957              	.LVL118:
 958 00ce 0F30     		adds	r0, r0, #15
 959              	.LVL119:
 960 00d0 2A23     		movs	r3, #42
 961 00d2 1A46     		mov	r2, r3
 962 00d4 89B2     		uxth	r1, r1
 963              	.LVL120:
 964 00d6 80B2     		uxth	r0, r0
 965              	.LVL121:
 966 00d8 FFF7FEFF 		bl	BSP_LCD_FillRect
 967              	.LVL122:
 292:Src/gui.c     **** 	yButton = buttonsLeftUpper[3][1];
 968              		.loc 1 292 0
 969 00dc A089     		ldrh	r0, [r4, #12]
 970              	.LVL123:
 293:Src/gui.c     **** 	Point Points3[]= {{xButton + 7, yButton + 7}, {xButton + 7, yButton + 7 + 58}, 
 971              		.loc 1 293 0
 972 00de E489     		ldrh	r4, [r4, #14]
 973              	.LVL124:
 294:Src/gui.c     **** 		{xButton + CONTROL_BUTTON_SIZE / 2 , yButton + CONTROL_BUTTON_SIZE / 2}};
 974              		.loc 1 294 0
 975 00e0 C31D     		adds	r3, r0, #7
 976 00e2 1BB2     		sxth	r3, r3
 977 00e4 ADF80030 		strh	r3, [sp]	@ movhi
 978 00e8 E21D     		adds	r2, r4, #7
 979 00ea ADF80220 		strh	r2, [sp, #2]	@ movhi
 980 00ee ADF80430 		strh	r3, [sp, #4]	@ movhi
 981 00f2 04F14103 		add	r3, r4, #65
 982 00f6 ADF80630 		strh	r3, [sp, #6]	@ movhi
 295:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points3, 3);
 983              		.loc 1 295 0
 984 00fa FFF7FEFF 		bl	__aeabi_i2d
 985              	.LVL125:
 986 00fe 0022     		movs	r2, #0
 987 0100 164B     		ldr	r3, .L66+4
 988 0102 FFF7FEFF 		bl	__aeabi_dadd
 989              	.LVL126:
 294:Src/gui.c     **** 		{xButton + CONTROL_BUTTON_SIZE / 2 , yButton + CONTROL_BUTTON_SIZE / 2}};
 990              		.loc 1 294 0
 991 0106 FFF7FEFF 		bl	__aeabi_d2iz
 992              	.LVL127:
 993 010a ADF80800 		strh	r0, [sp, #8]	@ movhi
 295:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points3, 3);
 994              		.loc 1 295 0
 995 010e 2046     		mov	r0, r4
 996 0110 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 25


 997              	.LVL128:
 998 0114 0022     		movs	r2, #0
 999 0116 114B     		ldr	r3, .L66+4
 1000 0118 FFF7FEFF 		bl	__aeabi_dadd
 1001              	.LVL129:
 294:Src/gui.c     **** 		{xButton + CONTROL_BUTTON_SIZE / 2 , yButton + CONTROL_BUTTON_SIZE / 2}};
 1002              		.loc 1 294 0
 1003 011c FFF7FEFF 		bl	__aeabi_d2iz
 1004              	.LVL130:
 1005 0120 ADF80A00 		strh	r0, [sp, #10]	@ movhi
 296:Src/gui.c     **** 	Points3[0].X += 29;
 1006              		.loc 1 296 0
 1007 0124 0321     		movs	r1, #3
 1008 0126 6846     		mov	r0, sp
 1009 0128 FFF7FEFF 		bl	BSP_LCD_FillPolygon
 1010              	.LVL131:
 297:Src/gui.c     **** 	Points3[1].X += 29;
 1011              		.loc 1 297 0
 1012 012c BDF80030 		ldrh	r3, [sp]
 1013 0130 1D33     		adds	r3, r3, #29
 1014 0132 ADF80030 		strh	r3, [sp]	@ movhi
 298:Src/gui.c     **** 	Points3[2].X += 29;
 1015              		.loc 1 298 0
 1016 0136 BDF80430 		ldrh	r3, [sp, #4]
 1017 013a 1D33     		adds	r3, r3, #29
 1018 013c ADF80430 		strh	r3, [sp, #4]	@ movhi
 299:Src/gui.c     **** 	BSP_LCD_FillPolygon(Points3, 3);
 1019              		.loc 1 299 0
 1020 0140 BDF80830 		ldrh	r3, [sp, #8]
 1021 0144 1D33     		adds	r3, r3, #29
 1022 0146 ADF80830 		strh	r3, [sp, #8]	@ movhi
 300:Src/gui.c     **** 
 1023              		.loc 1 300 0
 1024 014a 0321     		movs	r1, #3
 1025 014c 6846     		mov	r0, sp
 1026 014e FFF7FEFF 		bl	BSP_LCD_FillPolygon
 1027              	.LVL132:
 302:Src/gui.c     **** 
 1028              		.loc 1 302 0
 1029 0152 06B0     		add	sp, sp, #24
 1030              	.LCFI15:
 1031              		.cfi_def_cfa_offset 16
 1032              		@ sp needed
 1033 0154 70BD     		pop	{r4, r5, r6, pc}
 1034              	.LVL133:
 1035              	.L67:
 1036 0156 00BF     		.align	2
 1037              	.L66:
 1038 0158 00000000 		.word	.LANCHOR2
 1039 015c 00004240 		.word	1078067200
 1040              		.cfi_endproc
 1041              	.LFE146:
 1043              		.section	.text.draw_background,"ax",%progbits
 1044              		.align	1
 1045              		.global	draw_background
 1046              		.syntax unified
 1047              		.thumb
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 26


 1048              		.thumb_func
 1049              		.fpu fpv5-sp-d16
 1051              	draw_background:
 1052              	.LFB140:
 128:Src/gui.c     **** 	/* Select the LCD Background Layer  */
 1053              		.loc 1 128 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057 0000 08B5     		push	{r3, lr}
 1058              	.LCFI16:
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 3, -8
 1061              		.cfi_offset 14, -4
 130:Src/gui.c     **** 
 1062              		.loc 1 130 0
 1063 0002 0020     		movs	r0, #0
 1064 0004 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1065              	.LVL134:
 132:Src/gui.c     **** 	
 1066              		.loc 1 132 0
 1067 0008 FFF7FEFF 		bl	draw_buttons
 1068              	.LVL135:
 135:Src/gui.c     **** }
 1069              		.loc 1 135 0
 1070 000c 0120     		movs	r0, #1
 1071 000e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1072              	.LVL136:
 136:Src/gui.c     **** 
 1073              		.loc 1 136 0
 1074 0012 08BD     		pop	{r3, pc}
 1075              		.cfi_endproc
 1076              	.LFE140:
 1078              		.section	.text.getXPix,"ax",%progbits
 1079              		.align	1
 1080              		.global	getXPix
 1081              		.syntax unified
 1082              		.thumb
 1083              		.thumb_func
 1084              		.fpu fpv5-sp-d16
 1086              	getXPix:
 1087              	.LFB148:
 325:Src/gui.c     **** 
 326:Src/gui.c     **** // Auxillary functions
 327:Src/gui.c     **** uint16_t getXPix (double factor)  {
 1088              		.loc 1 327 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 0
 1091              		@ frame_needed = 0, uses_anonymous_args = 0
 1092              	.LVL137:
 1093 0000 08B5     		push	{r3, lr}
 1094              	.LCFI17:
 1095              		.cfi_def_cfa_offset 8
 1096              		.cfi_offset 3, -8
 1097              		.cfi_offset 14, -4
 328:Src/gui.c     **** 	return factor * LCD_X_SIZE;
 1098              		.loc 1 328 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 27


 1099 0002 0022     		movs	r2, #0
 1100 0004 044B     		ldr	r3, .L72
 1101 0006 51EC100B 		vmov	r0, r1, d0
 1102 000a FFF7FEFF 		bl	__aeabi_dmul
 1103              	.LVL138:
 1104 000e FFF7FEFF 		bl	__aeabi_d2uiz
 1105              	.LVL139:
 329:Src/gui.c     **** }
 1106              		.loc 1 329 0
 1107 0012 80B2     		uxth	r0, r0
 1108 0014 08BD     		pop	{r3, pc}
 1109              	.L73:
 1110 0016 00BF     		.align	2
 1111              	.L72:
 1112 0018 00007E40 		.word	1081999360
 1113              		.cfi_endproc
 1114              	.LFE148:
 1116              		.section	.text.getYPix,"ax",%progbits
 1117              		.align	1
 1118              		.global	getYPix
 1119              		.syntax unified
 1120              		.thumb
 1121              		.thumb_func
 1122              		.fpu fpv5-sp-d16
 1124              	getYPix:
 1125              	.LFB149:
 330:Src/gui.c     **** 
 331:Src/gui.c     **** uint16_t getYPix (double factor)  {
 1126              		.loc 1 331 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              	.LVL140:
 1131 0000 08B5     		push	{r3, lr}
 1132              	.LCFI18:
 1133              		.cfi_def_cfa_offset 8
 1134              		.cfi_offset 3, -8
 1135              		.cfi_offset 14, -4
 332:Src/gui.c     **** 	return factor * LCD_Y_SIZE;
 1136              		.loc 1 332 0
 1137 0002 0022     		movs	r2, #0
 1138 0004 044B     		ldr	r3, .L76
 1139 0006 51EC100B 		vmov	r0, r1, d0
 1140 000a FFF7FEFF 		bl	__aeabi_dmul
 1141              	.LVL141:
 1142 000e FFF7FEFF 		bl	__aeabi_d2uiz
 1143              	.LVL142:
 333:Src/gui.c     **** }
 1144              		.loc 1 333 0
 1145 0012 80B2     		uxth	r0, r0
 1146 0014 08BD     		pop	{r3, pc}
 1147              	.L77:
 1148 0016 00BF     		.align	2
 1149              	.L76:
 1150 0018 00007140 		.word	1081147392
 1151              		.cfi_endproc
 1152              	.LFE149:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 28


 1154              		.global	lastTicks
 1155              		.global	playButtonState
 1156              		.global	buttonState
 1157              		.global	buttonsLeftUpper
 1158              		.comm	newY,2,2
 1159              		.comm	newX,2,2
 1160              		.section	.bss.TS_State,"aw",%nobits
 1161              		.align	2
 1162              		.set	.LANCHOR1,. + 0
 1165              	TS_State:
 1166 0000 00000000 		.space	44
 1166      00000000 
 1166      00000000 
 1166      00000000 
 1166      00000000 
 1167              		.section	.bss.lastTicks,"aw",%nobits
 1168              		.align	2
 1169              		.set	.LANCHOR0,. + 0
 1172              	lastTicks:
 1173 0000 00000000 		.space	4
 1174              		.section	.bss.playButtonState,"aw",%nobits
 1175              		.set	.LANCHOR3,. + 0
 1178              	playButtonState:
 1179 0000 00       		.space	1
 1180              		.section	.data.buttonState,"aw",%progbits
 1181              		.align	2
 1182              		.set	.LANCHOR4,. + 0
 1185              	buttonState:
 1186 0000 04       		.byte	4
 1187 0001 00       		.byte	0
 1188 0002 02       		.byte	2
 1189 0003 03       		.byte	3
 1190              		.section	.data.buttonsLeftUpper,"aw",%progbits
 1191              		.align	2
 1192              		.set	.LANCHOR2,. + 0
 1195              	buttonsLeftUpper:
 1196 0000 2600     		.short	38
 1197 0002 BE00     		.short	190
 1198 0004 9400     		.short	148
 1199 0006 BE00     		.short	190
 1200 0008 0301     		.short	259
 1201 000a BE00     		.short	190
 1202 000c 7101     		.short	369
 1203 000e BE00     		.short	190
 1204              		.section	.rodata.refresh_screen.str1.4,"aMS",%progbits,1
 1205              		.align	2
 1206              	.LC0:
 1207 0000 20257300 		.ascii	" %s\000"
 1208              		.text
 1209              	.Letext0:
 1210              		.file 2 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\machine\\_default
 1211              		.file 3 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 1212              		.file 4 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 1213              		.file 5 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\
 1214              		.file 6 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 1215              		.file 7 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 1216              		.file 8 "Inc/mp3_player.h"
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 29


 1217              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 1218              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1219              		.file 11 "Drivers/BSP/STM32746G-Discovery/../../../Utilities/Fonts/fonts.h"
 1220              		.file 12 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_lcd.h"
 1221              		.file 13 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/../Common/ts.h"
 1222              		.file 14 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/ft5336.h"
 1223              		.file 15 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_ts.h"
 1224              		.file 16 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\stdio.h"
 1225              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 gui.c
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:18     .text.lcd_start:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:25     .text.lcd_start:00000000 lcd_start
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:97     .text.lcd_start:00000064 $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:102    .text.LCD_Start_v2:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:109    .text.LCD_Start_v2:00000000 LCD_Start_v2
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:187    .text.LCD_Start_v2:0000006c $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:192    .text.initialize_touchscreen:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:199    .text.initialize_touchscreen:00000000 initialize_touchscreen
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:239    .text.touchscreen_loop_init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:246    .text.touchscreen_loop_init:00000000 touchscreen_loop_init
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:287    .text.touchscreen_loop_init:00000030 $d
                            *COM*:00000002 newX
                            *COM*:00000002 newY
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:296    .text.check_touchscreen:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:303    .text.check_touchscreen:00000000 check_touchscreen
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:509    .text.check_touchscreen:00000108 $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:523    .text.update_progress_bar:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:530    .text.update_progress_bar:00000000 update_progress_bar
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:597    .text.update_progress_bar:00000060 $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:605    .text.update_play_pause_button:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:612    .text.update_play_pause_button:00000000 update_play_pause_button
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:741    .text.update_play_pause_button:000000ac $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:748    .text.refresh_screen:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:755    .text.refresh_screen:00000000 refresh_screen
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:817    .text.refresh_screen:00000048 $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:822    .text.draw_buttons:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:829    .text.draw_buttons:00000000 draw_buttons
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1038   .text.draw_buttons:00000158 $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1044   .text.draw_background:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1051   .text.draw_background:00000000 draw_background
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1079   .text.getXPix:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1086   .text.getXPix:00000000 getXPix
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1112   .text.getXPix:00000018 $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1117   .text.getYPix:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1124   .text.getYPix:00000000 getYPix
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1150   .text.getYPix:00000018 $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1172   .bss.lastTicks:00000000 lastTicks
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1178   .bss.playButtonState:00000000 playButtonState
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1185   .data.buttonState:00000000 buttonState
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1195   .data.buttonsLeftUpper:00000000 buttonsLeftUpper
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1161   .bss.TS_State:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1165   .bss.TS_State:00000000 TS_State
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1168   .bss.lastTicks:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1179   .bss.playButtonState:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1181   .data.buttonState:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1191   .data.buttonsLeftUpper:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s:1205   .rodata.refresh_screen.str1.4:00000000 $d

UNDEFINED SYMBOLS
BSP_LCD_Init
BSP_LCD_LayerDefaultInit
BSP_LCD_DisplayOn
BSP_LCD_SelectLayer
BSP_LCD_Clear
BSP_LCD_SetBackColor
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccYublZX.s 			page 31


BSP_LCD_SetColorKeying
BSP_LCD_SetTransparency
BSP_LCD_SetTextColor
BSP_LCD_ResetColorKeying
BSP_LCD_Reload
BSP_LCD_GetXSize
BSP_LCD_GetYSize
BSP_TS_Init
__aeabi_i2d
__aeabi_dadd
__aeabi_dcmple
HAL_GetTick
BSP_TS_GetState
__aeabi_dmul
__aeabi_d2uiz
BSP_LCD_FillRect
__aeabi_d2iz
BSP_LCD_FillPolygon
sprintf
BSP_LCD_DisplayStringAt
