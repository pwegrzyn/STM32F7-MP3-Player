ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	MX_SDMMC1_SD_Init:
  25              	.LFB157:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V.
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice,
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under
  32:Src/main.c    ****   *    this license.
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 2


  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS"
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  50:Src/main.c    **** #include "main.h"
  51:Src/main.c    **** #include "stm32f7xx_hal.h"
  52:Src/main.c    **** #include "cmsis_os.h"
  53:Src/main.c    **** #include "fatfs.h"
  54:Src/main.c    **** #include "usb_host.h"
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE BEGIN Includes */
  57:Src/main.c    **** #include "mp3_player.h"
  58:Src/main.c    **** #include "gui.h"
  59:Src/main.c    **** 
  60:Src/main.c    **** #include  <errno.h>
  61:Src/main.c    **** #include  <sys/unistd.h>
  62:Src/main.c    **** 
  63:Src/main.c    **** #include "stm32746g_discovery_lcd.h"
  64:Src/main.c    **** #include "Utilities/Fonts/fonts.h"
  65:Src/main.c    **** #include "stm32746g_discovery_ts.h"
  66:Src/main.c    **** #include "stm32746g_discovery_audio.h"
  67:Src/main.c    **** #include "term_io.h"
  68:Src/main.c    **** #include "dbgu.h"
  69:Src/main.c    **** #include "ansi.h"
  70:Src/main.c    **** 
  71:Src/main.c    **** #include "FreeRTOS.h"
  72:Src/main.c    **** #include "task.h"
  73:Src/main.c    **** #include "queue.h"
  74:Src/main.c    **** 
  75:Src/main.c    **** #include "wm8994/wm8994.h"
  76:Src/main.c    **** 
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE END Includes */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  81:Src/main.c    **** ADC_HandleTypeDef hadc3;
  82:Src/main.c    **** 
  83:Src/main.c    **** CRC_HandleTypeDef hcrc;
  84:Src/main.c    **** 
  85:Src/main.c    **** DCMI_HandleTypeDef hdcmi;
  86:Src/main.c    **** 
  87:Src/main.c    **** DMA2D_HandleTypeDef hdma2d;
  88:Src/main.c    **** 
  89:Src/main.c    **** I2C_HandleTypeDef hi2c1;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 3


  90:Src/main.c    **** I2C_HandleTypeDef hi2c3;
  91:Src/main.c    **** 
  92:Src/main.c    **** LTDC_HandleTypeDef hltdc;
  93:Src/main.c    **** 
  94:Src/main.c    **** QSPI_HandleTypeDef hqspi;
  95:Src/main.c    **** 
  96:Src/main.c    **** RTC_HandleTypeDef hrtc;
  97:Src/main.c    **** 
  98:Src/main.c    **** SAI_HandleTypeDef hsai_BlockA2;
  99:Src/main.c    **** SAI_HandleTypeDef hsai_BlockB2;
 100:Src/main.c    **** 
 101:Src/main.c    **** SD_HandleTypeDef hsd1;
 102:Src/main.c    **** 
 103:Src/main.c    **** SPDIFRX_HandleTypeDef hspdif;
 104:Src/main.c    **** 
 105:Src/main.c    **** SPI_HandleTypeDef hspi2;
 106:Src/main.c    **** 
 107:Src/main.c    **** TIM_HandleTypeDef htim1;
 108:Src/main.c    **** TIM_HandleTypeDef htim2;
 109:Src/main.c    **** TIM_HandleTypeDef htim3;
 110:Src/main.c    **** TIM_HandleTypeDef htim5;
 111:Src/main.c    **** TIM_HandleTypeDef htim7;
 112:Src/main.c    **** TIM_HandleTypeDef htim8;
 113:Src/main.c    **** TIM_HandleTypeDef htim12;
 114:Src/main.c    **** 
 115:Src/main.c    **** UART_HandleTypeDef huart1;
 116:Src/main.c    **** UART_HandleTypeDef huart6;
 117:Src/main.c    **** 
 118:Src/main.c    **** SDRAM_HandleTypeDef hsdram1;
 119:Src/main.c    **** 
 120:Src/main.c    **** osThreadId defaultTaskHandle;
 121:Src/main.c    **** 
 122:Src/main.c    **** /* USER CODE BEGIN PV */
 123:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
 124:Src/main.c    **** 
 125:Src/main.c    **** /* USER CODE END PV */
 126:Src/main.c    **** 
 127:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 128:Src/main.c    **** void SystemClock_Config(void);
 129:Src/main.c    **** static void MX_GPIO_Init(void);
 130:Src/main.c    **** static void MX_ADC3_Init(void);
 131:Src/main.c    **** static void MX_CRC_Init(void);
 132:Src/main.c    **** static void MX_DCMI_Init(void);
 133:Src/main.c    **** static void MX_DMA2D_Init(void);
 134:Src/main.c    **** static void MX_FMC_Init(void);
 135:Src/main.c    **** static void MX_I2C1_Init(void);
 136:Src/main.c    **** static void MX_I2C3_Init(void);
 137:Src/main.c    **** static void MX_LTDC_Init(void);
 138:Src/main.c    **** static void MX_QUADSPI_Init(void);
 139:Src/main.c    **** static void MX_RTC_Init(void);
 140:Src/main.c    **** static void MX_SAI2_Init(void);
 141:Src/main.c    **** static void MX_SDMMC1_SD_Init(void);
 142:Src/main.c    **** static void MX_SPDIFRX_Init(void);
 143:Src/main.c    **** static void MX_SPI2_Init(void);
 144:Src/main.c    **** static void MX_TIM1_Init(void);
 145:Src/main.c    **** static void MX_TIM2_Init(void);
 146:Src/main.c    **** static void MX_TIM3_Init(void);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 4


 147:Src/main.c    **** static void MX_TIM5_Init(void);
 148:Src/main.c    **** static void MX_TIM8_Init(void);
 149:Src/main.c    **** static void MX_TIM12_Init(void);
 150:Src/main.c    **** static void MX_USART1_UART_Init(void);
 151:Src/main.c    **** static void MX_USART6_UART_Init(void);
 152:Src/main.c    **** static void MX_TIM7_Init(void);
 153:Src/main.c    **** void StartDefaultTask(void const * argument);
 154:Src/main.c    **** 
 155:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
 156:Src/main.c    **** 
 157:Src/main.c    **** /* USER CODE BEGIN PFP */
 158:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 159:Src/main.c    **** 
 160:Src/main.c    **** /* USER CODE END PFP */
 161:Src/main.c    **** 
 162:Src/main.c    **** /* USER CODE BEGIN 0 */
 163:Src/main.c    **** void mainTask(void* p);
 164:Src/main.c    **** 
 165:Src/main.c    **** #define LCD_X_SIZE			RK043FN48H_WIDTH
 166:Src/main.c    **** #define LCD_Y_SIZE			RK043FN48H_HEIGHT
 167:Src/main.c    **** 
 168:Src/main.c    **** #define PRINTF_USES_HAL_TX		0
 169:Src/main.c    **** 
 170:Src/main.c    **** int __io_putchar(int ch)
 171:Src/main.c    **** {
 172:Src/main.c    **** 	uint8_t data = ch;
 173:Src/main.c    **** 	#if PRINTF_USES_HAL_TX
 174:Src/main.c    **** 		HAL_StatusTypeDef status = HAL_UART_Transmit(&huart1, (uint8_t*)&data, len, 100);
 175:Src/main.c    **** 	#else
 176:Src/main.c    **** 		while(__HAL_UART_GET_FLAG(&huart1, UART_FLAG_TXE) == RESET) { ; }
 177:Src/main.c    **** 		huart1.Instance->TDR = (uint16_t)data;
 178:Src/main.c    **** 	#endif
 179:Src/main.c    **** 	return 0;
 180:Src/main.c    **** }
 181:Src/main.c    **** 
 182:Src/main.c    **** char inkey(void)
 183:Src/main.c    **** {
 184:Src/main.c    **** 	uint32_t flags = huart1.Instance->ISR;
 185:Src/main.c    **** 
 186:Src/main.c    **** 	if((flags & UART_FLAG_RXNE) || (flags & UART_FLAG_ORE))
 187:Src/main.c    **** 	{
 188:Src/main.c    **** 		__HAL_UART_CLEAR_OREFLAG(&huart1);
 189:Src/main.c    **** 		return (huart1.Instance->RDR);
 190:Src/main.c    **** 	}
 191:Src/main.c    **** 	else
 192:Src/main.c    **** 		return 0;
 193:Src/main.c    **** }
 194:Src/main.c    **** 
 195:Src/main.c    **** /* USER CODE END 0 */
 196:Src/main.c    **** 
 197:Src/main.c    **** /**
 198:Src/main.c    ****   * @brief  The application entry point.
 199:Src/main.c    ****   *
 200:Src/main.c    ****   * @retval None
 201:Src/main.c    ****   */
 202:Src/main.c    **** int main(void)
 203:Src/main.c    **** {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 5


 204:Src/main.c    ****   /* USER CODE BEGIN 1 */
 205:Src/main.c    **** 
 206:Src/main.c    ****   /* USER CODE END 1 */
 207:Src/main.c    **** 
 208:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 209:Src/main.c    **** 
 210:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 211:Src/main.c    ****   HAL_Init();
 212:Src/main.c    **** 
 213:Src/main.c    ****   /* USER CODE BEGIN Init */
 214:Src/main.c    **** 
 215:Src/main.c    ****   /* USER CODE END Init */
 216:Src/main.c    **** 
 217:Src/main.c    ****   /* Configure the system clock */
 218:Src/main.c    ****   SystemClock_Config();
 219:Src/main.c    **** 
 220:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 221:Src/main.c    **** 
 222:Src/main.c    ****   /* USER CODE END SysInit */
 223:Src/main.c    **** 
 224:Src/main.c    ****   /* Initialize all configured peripherals */
 225:Src/main.c    ****   MX_GPIO_Init();
 226:Src/main.c    ****   MX_ADC3_Init();
 227:Src/main.c    ****   MX_CRC_Init();
 228:Src/main.c    ****   MX_DCMI_Init();
 229:Src/main.c    ****   MX_DMA2D_Init();
 230:Src/main.c    ****   MX_FMC_Init();
 231:Src/main.c    ****   MX_I2C1_Init();
 232:Src/main.c    ****   MX_I2C3_Init();
 233:Src/main.c    ****   MX_LTDC_Init();
 234:Src/main.c    ****   MX_QUADSPI_Init();
 235:Src/main.c    ****   MX_RTC_Init();
 236:Src/main.c    ****   MX_SAI2_Init();
 237:Src/main.c    ****   MX_SDMMC1_SD_Init();
 238:Src/main.c    ****   MX_SPDIFRX_Init();
 239:Src/main.c    ****   MX_SPI2_Init();
 240:Src/main.c    ****   MX_TIM1_Init();
 241:Src/main.c    ****   MX_TIM2_Init();
 242:Src/main.c    ****   MX_TIM3_Init();
 243:Src/main.c    ****   MX_TIM5_Init();
 244:Src/main.c    ****   MX_TIM8_Init();
 245:Src/main.c    ****   MX_TIM12_Init();
 246:Src/main.c    ****   MX_USART1_UART_Init();
 247:Src/main.c    ****   MX_USART6_UART_Init();
 248:Src/main.c    ****   MX_TIM7_Init();
 249:Src/main.c    ****   /* USER CODE BEGIN 2 */
 250:Src/main.c    ****   debug_init(&huart1);
 251:Src/main.c    **** 
 252:Src/main.c    ****   xprintf(ANSI_FG_GREEN "STM32F746 Discovery Project" ANSI_FG_DEFAULT "\n");
 253:Src/main.c    **** 
 254:Src/main.c    ****   printf("Regular printf\n");
 255:Src/main.c    **** 
 256:Src/main.c    ****   // gui.h init
 257:Src/main.c    ****   lcd_start();
 258:Src/main.c    ****   draw_background();
 259:Src/main.c    ****   if(initialize_touchscreen() == -1) {
 260:Src/main.c    ****     xprintf("Error while initializing touchscreen!\n");
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 6


 261:Src/main.c    ****   }
 262:Src/main.c    **** 
 263:Src/main.c    ****   /* USER CODE END 2 */
 264:Src/main.c    **** 
 265:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 266:Src/main.c    ****   /* add mutexes, ... */
 267:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 268:Src/main.c    **** 
 269:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 270:Src/main.c    ****   /* add semaphores, ... */
 271:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 274:Src/main.c    ****   /* start timers, add new ones, ... */
 275:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 276:Src/main.c    **** 
 277:Src/main.c    ****   /* Create the thread(s) */
 278:Src/main.c    ****   /* definition and creation of defaultTask */
 279:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 4096);
 280:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 281:Src/main.c    **** 
 282:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 283:Src/main.c    ****   /* add threads, ... */
 284:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 285:Src/main.c    **** 
 286:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 287:Src/main.c    ****   /* add queues, ... */
 288:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 289:Src/main.c    **** 
 290:Src/main.c    **** 
 291:Src/main.c    ****   /* Start scheduler */
 292:Src/main.c    ****   osKernelStart();
 293:Src/main.c    **** 
 294:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 295:Src/main.c    **** 
 296:Src/main.c    ****   /* Infinite loop */
 297:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 298:Src/main.c    ****   while (1)
 299:Src/main.c    ****   {
 300:Src/main.c    **** 
 301:Src/main.c    ****   /* USER CODE END WHILE */
 302:Src/main.c    **** 
 303:Src/main.c    ****   /* USER CODE BEGIN 3 */
 304:Src/main.c    **** 
 305:Src/main.c    ****   }
 306:Src/main.c    ****   /* USER CODE END 3 */
 307:Src/main.c    **** 
 308:Src/main.c    **** }
 309:Src/main.c    **** 
 310:Src/main.c    **** /**
 311:Src/main.c    ****   * @brief System Clock Configuration
 312:Src/main.c    ****   * @retval None
 313:Src/main.c    ****   */
 314:Src/main.c    **** void SystemClock_Config(void)
 315:Src/main.c    **** {
 316:Src/main.c    **** 
 317:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 7


 318:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 319:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 320:Src/main.c    **** 
 321:Src/main.c    ****     /**Configure the main internal regulator output voltage
 322:Src/main.c    ****     */
 323:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 324:Src/main.c    **** 
 325:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 326:Src/main.c    **** 
 327:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 328:Src/main.c    ****     */
 329:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 330:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 331:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 332:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 333:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 334:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 335:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 336:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 337:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 338:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 339:Src/main.c    ****   {
 340:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 341:Src/main.c    ****   }
 342:Src/main.c    **** 
 343:Src/main.c    ****     /**Activate the Over-Drive mode
 344:Src/main.c    ****     */
 345:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 346:Src/main.c    ****   {
 347:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 348:Src/main.c    ****   }
 349:Src/main.c    **** 
 350:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 351:Src/main.c    ****     */
 352:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 353:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 354:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 355:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 356:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 357:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 358:Src/main.c    **** 
 359:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 360:Src/main.c    ****   {
 361:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 362:Src/main.c    ****   }
 363:Src/main.c    **** 
 364:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPDIFRX|RCC_PERIPHCLK_LTDC
 365:Src/main.c    ****                               |RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART1
 366:Src/main.c    ****                               |RCC_PERIPHCLK_USART6|RCC_PERIPHCLK_SAI2
 367:Src/main.c    ****                               |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_I2C3
 368:Src/main.c    ****                               |RCC_PERIPHCLK_SDMMC1|RCC_PERIPHCLK_CLK48;
 369:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 100;
 370:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 371:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 372:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 373:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 374:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 8


 375:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 376:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
 377:Src/main.c    ****   PeriphClkInitStruct.PLLI2SDivQ = 1;
 378:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 379:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 380:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 381:Src/main.c    ****   PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 382:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 383:Src/main.c    ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 384:Src/main.c    ****   PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 385:Src/main.c    ****   PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 386:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 387:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 388:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 389:Src/main.c    ****   {
 390:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 391:Src/main.c    ****   }
 392:Src/main.c    **** 
 393:Src/main.c    ****     /**Configure the Systick interrupt time
 394:Src/main.c    ****     */
 395:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 396:Src/main.c    **** 
 397:Src/main.c    ****     /**Configure the Systick
 398:Src/main.c    ****     */
 399:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 400:Src/main.c    **** 
 401:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 402:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 403:Src/main.c    **** }
 404:Src/main.c    **** 
 405:Src/main.c    **** /* ADC3 init function */
 406:Src/main.c    **** static void MX_ADC3_Init(void)
 407:Src/main.c    **** {
 408:Src/main.c    **** 
 409:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 410:Src/main.c    **** 
 411:Src/main.c    ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 412:Src/main.c    ****     */
 413:Src/main.c    ****   hadc3.Instance = ADC3;
 414:Src/main.c    ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 415:Src/main.c    ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 416:Src/main.c    ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 417:Src/main.c    ****   hadc3.Init.ContinuousConvMode = DISABLE;
 418:Src/main.c    ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 419:Src/main.c    ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 420:Src/main.c    ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 421:Src/main.c    ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 422:Src/main.c    ****   hadc3.Init.NbrOfConversion = 1;
 423:Src/main.c    ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 424:Src/main.c    ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 425:Src/main.c    ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 426:Src/main.c    ****   {
 427:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 428:Src/main.c    ****   }
 429:Src/main.c    **** 
 430:Src/main.c    ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 431:Src/main.c    ****     */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 9


 432:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_4;
 433:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 434:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 435:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 436:Src/main.c    ****   {
 437:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 438:Src/main.c    ****   }
 439:Src/main.c    **** 
 440:Src/main.c    **** }
 441:Src/main.c    **** 
 442:Src/main.c    **** /* CRC init function */
 443:Src/main.c    **** static void MX_CRC_Init(void)
 444:Src/main.c    **** {
 445:Src/main.c    **** 
 446:Src/main.c    ****   hcrc.Instance = CRC;
 447:Src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 448:Src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 449:Src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 450:Src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 451:Src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 452:Src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 453:Src/main.c    ****   {
 454:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 455:Src/main.c    ****   }
 456:Src/main.c    **** 
 457:Src/main.c    **** }
 458:Src/main.c    **** 
 459:Src/main.c    **** /* DCMI init function */
 460:Src/main.c    **** static void MX_DCMI_Init(void)
 461:Src/main.c    **** {
 462:Src/main.c    **** 
 463:Src/main.c    ****   hdcmi.Instance = DCMI;
 464:Src/main.c    ****   hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 465:Src/main.c    ****   hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 466:Src/main.c    ****   hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 467:Src/main.c    ****   hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 468:Src/main.c    ****   hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 469:Src/main.c    ****   hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
 470:Src/main.c    ****   hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 471:Src/main.c    ****   hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 472:Src/main.c    ****   hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 473:Src/main.c    ****   hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 474:Src/main.c    ****   hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 475:Src/main.c    ****   if (HAL_DCMI_Init(&hdcmi) != HAL_OK)
 476:Src/main.c    ****   {
 477:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 478:Src/main.c    ****   }
 479:Src/main.c    **** 
 480:Src/main.c    **** }
 481:Src/main.c    **** 
 482:Src/main.c    **** /* DMA2D init function */
 483:Src/main.c    **** static void MX_DMA2D_Init(void)
 484:Src/main.c    **** {
 485:Src/main.c    **** 
 486:Src/main.c    ****   hdma2d.Instance = DMA2D;
 487:Src/main.c    ****   hdma2d.Init.Mode = DMA2D_M2M;
 488:Src/main.c    ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 10


 489:Src/main.c    ****   hdma2d.Init.OutputOffset = 0;
 490:Src/main.c    ****   hdma2d.LayerCfg[1].InputOffset = 0;
 491:Src/main.c    ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 492:Src/main.c    ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 493:Src/main.c    ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 494:Src/main.c    ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 495:Src/main.c    ****   {
 496:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 497:Src/main.c    ****   }
 498:Src/main.c    **** 
 499:Src/main.c    ****   if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 500:Src/main.c    ****   {
 501:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 502:Src/main.c    ****   }
 503:Src/main.c    **** 
 504:Src/main.c    **** }
 505:Src/main.c    **** 
 506:Src/main.c    **** /* I2C1 init function */
 507:Src/main.c    **** static void MX_I2C1_Init(void)
 508:Src/main.c    **** {
 509:Src/main.c    **** 
 510:Src/main.c    ****   hi2c1.Instance = I2C1;
 511:Src/main.c    ****   hi2c1.Init.Timing = 0x00C0EAFF;
 512:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 513:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 514:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 515:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 516:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 517:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 518:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 519:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 520:Src/main.c    ****   {
 521:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 522:Src/main.c    ****   }
 523:Src/main.c    **** 
 524:Src/main.c    ****     /**Configure Analogue filter
 525:Src/main.c    ****     */
 526:Src/main.c    ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 527:Src/main.c    ****   {
 528:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 529:Src/main.c    ****   }
 530:Src/main.c    **** 
 531:Src/main.c    ****     /**Configure Digital filter
 532:Src/main.c    ****     */
 533:Src/main.c    ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 534:Src/main.c    ****   {
 535:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 536:Src/main.c    ****   }
 537:Src/main.c    **** 
 538:Src/main.c    **** }
 539:Src/main.c    **** 
 540:Src/main.c    **** /* I2C3 init function */
 541:Src/main.c    **** static void MX_I2C3_Init(void)
 542:Src/main.c    **** {
 543:Src/main.c    **** 
 544:Src/main.c    ****   hi2c3.Instance = I2C3;
 545:Src/main.c    ****   hi2c3.Init.Timing = 0x00C0EAFF;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 11


 546:Src/main.c    ****   hi2c3.Init.OwnAddress1 = 0;
 547:Src/main.c    ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 548:Src/main.c    ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 549:Src/main.c    ****   hi2c3.Init.OwnAddress2 = 0;
 550:Src/main.c    ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 551:Src/main.c    ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 552:Src/main.c    ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 553:Src/main.c    ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 554:Src/main.c    ****   {
 555:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 556:Src/main.c    ****   }
 557:Src/main.c    **** 
 558:Src/main.c    ****     /**Configure Analogue filter
 559:Src/main.c    ****     */
 560:Src/main.c    ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 561:Src/main.c    ****   {
 562:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 563:Src/main.c    ****   }
 564:Src/main.c    **** 
 565:Src/main.c    ****     /**Configure Digital filter
 566:Src/main.c    ****     */
 567:Src/main.c    ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 568:Src/main.c    ****   {
 569:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 570:Src/main.c    ****   }
 571:Src/main.c    **** 
 572:Src/main.c    **** }
 573:Src/main.c    **** 
 574:Src/main.c    **** /* LTDC init function */
 575:Src/main.c    **** static void MX_LTDC_Init(void)
 576:Src/main.c    **** {
 577:Src/main.c    **** 
 578:Src/main.c    ****   LTDC_LayerCfgTypeDef pLayerCfg;
 579:Src/main.c    **** 
 580:Src/main.c    ****   hltdc.Instance = LTDC;
 581:Src/main.c    ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 582:Src/main.c    ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 583:Src/main.c    ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 584:Src/main.c    ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 585:Src/main.c    ****   hltdc.Init.HorizontalSync = 40;
 586:Src/main.c    ****   hltdc.Init.VerticalSync = 9;
 587:Src/main.c    ****   hltdc.Init.AccumulatedHBP = 53;
 588:Src/main.c    ****   hltdc.Init.AccumulatedVBP = 11;
 589:Src/main.c    ****   hltdc.Init.AccumulatedActiveW = 533;
 590:Src/main.c    ****   hltdc.Init.AccumulatedActiveH = 283;
 591:Src/main.c    ****   hltdc.Init.TotalWidth = 565;
 592:Src/main.c    ****   hltdc.Init.TotalHeigh = 285;
 593:Src/main.c    ****   hltdc.Init.Backcolor.Blue = 0;
 594:Src/main.c    ****   hltdc.Init.Backcolor.Green = 0;
 595:Src/main.c    ****   hltdc.Init.Backcolor.Red = 0;
 596:Src/main.c    ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 597:Src/main.c    ****   {
 598:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 599:Src/main.c    ****   }
 600:Src/main.c    **** 
 601:Src/main.c    ****   pLayerCfg.WindowX0 = 0;
 602:Src/main.c    ****   pLayerCfg.WindowX1 = 480;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 12


 603:Src/main.c    ****   pLayerCfg.WindowY0 = 0;
 604:Src/main.c    ****   pLayerCfg.WindowY1 = 272;
 605:Src/main.c    ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
 606:Src/main.c    ****   pLayerCfg.Alpha = 255;
 607:Src/main.c    ****   pLayerCfg.Alpha0 = 0;
 608:Src/main.c    ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 609:Src/main.c    ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 610:Src/main.c    ****   pLayerCfg.FBStartAdress = 0xC0000000;
 611:Src/main.c    ****   pLayerCfg.ImageWidth = 480;
 612:Src/main.c    ****   pLayerCfg.ImageHeight = 272;
 613:Src/main.c    ****   pLayerCfg.Backcolor.Blue = 0;
 614:Src/main.c    ****   pLayerCfg.Backcolor.Green = 0;
 615:Src/main.c    ****   pLayerCfg.Backcolor.Red = 0;
 616:Src/main.c    ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 617:Src/main.c    ****   {
 618:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 619:Src/main.c    ****   }
 620:Src/main.c    **** 
 621:Src/main.c    **** }
 622:Src/main.c    **** 
 623:Src/main.c    **** /* QUADSPI init function */
 624:Src/main.c    **** static void MX_QUADSPI_Init(void)
 625:Src/main.c    **** {
 626:Src/main.c    **** 
 627:Src/main.c    ****   /* QUADSPI parameter configuration*/
 628:Src/main.c    ****   hqspi.Instance = QUADSPI;
 629:Src/main.c    ****   hqspi.Init.ClockPrescaler = 255;
 630:Src/main.c    ****   hqspi.Init.FifoThreshold = 1;
 631:Src/main.c    ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 632:Src/main.c    ****   hqspi.Init.FlashSize = 1;
 633:Src/main.c    ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 634:Src/main.c    ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 635:Src/main.c    ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 636:Src/main.c    ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 637:Src/main.c    ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 638:Src/main.c    ****   {
 639:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 640:Src/main.c    ****   }
 641:Src/main.c    **** 
 642:Src/main.c    **** }
 643:Src/main.c    **** 
 644:Src/main.c    **** /* RTC init function */
 645:Src/main.c    **** static void MX_RTC_Init(void)
 646:Src/main.c    **** {
 647:Src/main.c    **** 
 648:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 0 */
 649:Src/main.c    **** 
 650:Src/main.c    ****   /* USER CODE END RTC_Init 0 */
 651:Src/main.c    **** 
 652:Src/main.c    ****   RTC_TimeTypeDef sTime;
 653:Src/main.c    ****   RTC_DateTypeDef sDate;
 654:Src/main.c    ****   RTC_AlarmTypeDef sAlarm;
 655:Src/main.c    **** 
 656:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 1 */
 657:Src/main.c    **** 
 658:Src/main.c    ****   /* USER CODE END RTC_Init 1 */
 659:Src/main.c    **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 13


 660:Src/main.c    ****     /**Initialize RTC Only
 661:Src/main.c    ****     */
 662:Src/main.c    ****   hrtc.Instance = RTC;
 663:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 664:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 665:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 666:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 667:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 668:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 669:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 670:Src/main.c    ****   {
 671:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 672:Src/main.c    ****   }
 673:Src/main.c    **** 
 674:Src/main.c    ****     /**Initialize RTC and set the Time and Date
 675:Src/main.c    ****     */
 676:Src/main.c    ****   sTime.Hours = 0x0;
 677:Src/main.c    ****   sTime.Minutes = 0x0;
 678:Src/main.c    ****   sTime.Seconds = 0x0;
 679:Src/main.c    ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 680:Src/main.c    ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 681:Src/main.c    ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 682:Src/main.c    ****   {
 683:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 684:Src/main.c    ****   }
 685:Src/main.c    **** 
 686:Src/main.c    ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 687:Src/main.c    ****   sDate.Month = RTC_MONTH_JANUARY;
 688:Src/main.c    ****   sDate.Date = 0x1;
 689:Src/main.c    ****   sDate.Year = 0x0;
 690:Src/main.c    **** 
 691:Src/main.c    ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 692:Src/main.c    ****   {
 693:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 694:Src/main.c    ****   }
 695:Src/main.c    **** 
 696:Src/main.c    ****     /**Enable the Alarm A
 697:Src/main.c    ****     */
 698:Src/main.c    ****   sAlarm.AlarmTime.Hours = 0x0;
 699:Src/main.c    ****   sAlarm.AlarmTime.Minutes = 0x0;
 700:Src/main.c    ****   sAlarm.AlarmTime.Seconds = 0x0;
 701:Src/main.c    ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 702:Src/main.c    ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 703:Src/main.c    ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 704:Src/main.c    ****   sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 705:Src/main.c    ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 706:Src/main.c    ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 707:Src/main.c    ****   sAlarm.AlarmDateWeekDay = 0x1;
 708:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_A;
 709:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 710:Src/main.c    ****   {
 711:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 712:Src/main.c    ****   }
 713:Src/main.c    **** 
 714:Src/main.c    ****     /**Enable the Alarm B
 715:Src/main.c    ****     */
 716:Src/main.c    ****   sAlarm.AlarmDateWeekDay = 0x1;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 14


 717:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_B;
 718:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 719:Src/main.c    ****   {
 720:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 721:Src/main.c    ****   }
 722:Src/main.c    **** 
 723:Src/main.c    ****     /**Enable the TimeStamp
 724:Src/main.c    ****     */
 725:Src/main.c    ****   if (HAL_RTCEx_SetTimeStamp(&hrtc, RTC_TIMESTAMPEDGE_RISING, RTC_TIMESTAMPPIN_POS1) != HAL_OK)
 726:Src/main.c    ****   {
 727:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 728:Src/main.c    ****   }
 729:Src/main.c    **** 
 730:Src/main.c    **** }
 731:Src/main.c    **** 
 732:Src/main.c    **** /* SAI2 init function */
 733:Src/main.c    **** static void MX_SAI2_Init(void)
 734:Src/main.c    **** {
 735:Src/main.c    **** 
 736:Src/main.c    ****   hsai_BlockA2.Instance = SAI2_Block_A;
 737:Src/main.c    ****   hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 738:Src/main.c    ****   hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 739:Src/main.c    ****   hsai_BlockA2.Init.DataSize = SAI_DATASIZE_24;
 740:Src/main.c    ****   hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 741:Src/main.c    ****   hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 742:Src/main.c    ****   hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 743:Src/main.c    ****   hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 744:Src/main.c    ****   hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 745:Src/main.c    ****   hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 746:Src/main.c    ****   hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 747:Src/main.c    ****   hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 748:Src/main.c    ****   hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 749:Src/main.c    ****   hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 750:Src/main.c    ****   hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 751:Src/main.c    ****   hsai_BlockA2.FrameInit.FrameLength = 8;
 752:Src/main.c    ****   hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 753:Src/main.c    ****   hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 754:Src/main.c    ****   hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 755:Src/main.c    ****   hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 756:Src/main.c    ****   hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 757:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 758:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotNumber = 1;
 759:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 760:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK)
 761:Src/main.c    ****   {
 762:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 763:Src/main.c    ****   }
 764:Src/main.c    **** 
 765:Src/main.c    ****   hsai_BlockB2.Instance = SAI2_Block_B;
 766:Src/main.c    ****   hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 767:Src/main.c    ****   hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 768:Src/main.c    ****   hsai_BlockB2.Init.DataSize = SAI_DATASIZE_24;
 769:Src/main.c    ****   hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 770:Src/main.c    ****   hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 771:Src/main.c    ****   hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 772:Src/main.c    ****   hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 773:Src/main.c    ****   hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 15


 774:Src/main.c    ****   hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 775:Src/main.c    ****   hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 776:Src/main.c    ****   hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 777:Src/main.c    ****   hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 778:Src/main.c    ****   hsai_BlockB2.FrameInit.FrameLength = 8;
 779:Src/main.c    ****   hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 780:Src/main.c    ****   hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 781:Src/main.c    ****   hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 782:Src/main.c    ****   hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 783:Src/main.c    ****   hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 784:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 785:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotNumber = 1;
 786:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 787:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK)
 788:Src/main.c    ****   {
 789:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 790:Src/main.c    ****   }
 791:Src/main.c    **** 
 792:Src/main.c    **** }
 793:Src/main.c    **** 
 794:Src/main.c    **** /* SDMMC1 init function */
 795:Src/main.c    **** static void MX_SDMMC1_SD_Init(void)
 796:Src/main.c    **** {
  27              		.loc 1 796 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 797:Src/main.c    **** 
 798:Src/main.c    ****   hsd1.Instance = SDMMC1;
  32              		.loc 1 798 0
  33 0000 054B     		ldr	r3, .L2
  34 0002 064A     		ldr	r2, .L2+4
  35 0004 1A60     		str	r2, [r3]
 799:Src/main.c    ****   hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  36              		.loc 1 799 0
  37 0006 0022     		movs	r2, #0
  38 0008 5A60     		str	r2, [r3, #4]
 800:Src/main.c    ****   hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  39              		.loc 1 800 0
  40 000a 9A60     		str	r2, [r3, #8]
 801:Src/main.c    ****   hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  41              		.loc 1 801 0
  42 000c DA60     		str	r2, [r3, #12]
 802:Src/main.c    ****   hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
  43              		.loc 1 802 0
  44 000e 1A61     		str	r2, [r3, #16]
 803:Src/main.c    ****   hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  45              		.loc 1 803 0
  46 0010 5A61     		str	r2, [r3, #20]
 804:Src/main.c    ****   hsd1.Init.ClockDiv = 0;
  47              		.loc 1 804 0
  48 0012 9A61     		str	r2, [r3, #24]
 805:Src/main.c    **** 
 806:Src/main.c    **** }
  49              		.loc 1 806 0
  50 0014 7047     		bx	lr
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 16


  51              	.L3:
  52 0016 00BF     		.align	2
  53              	.L2:
  54 0018 00000000 		.word	hsd1
  55 001c 002C0140 		.word	1073818624
  56              		.cfi_endproc
  57              	.LFE157:
  59              		.section	.text.MX_GPIO_Init,"ax",%progbits
  60              		.align	1
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv5-sp-d16
  66              	MX_GPIO_Init:
  67              	.LFB170:
 807:Src/main.c    **** 
 808:Src/main.c    **** /* SPDIFRX init function */
 809:Src/main.c    **** static void MX_SPDIFRX_Init(void)
 810:Src/main.c    **** {
 811:Src/main.c    **** 
 812:Src/main.c    ****   hspdif.Instance = SPDIFRX;
 813:Src/main.c    ****   hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 814:Src/main.c    ****   hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 815:Src/main.c    ****   hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 816:Src/main.c    ****   hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 817:Src/main.c    ****   hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 818:Src/main.c    ****   hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 819:Src/main.c    ****   hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 820:Src/main.c    ****   hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 821:Src/main.c    ****   hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 822:Src/main.c    ****   hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 823:Src/main.c    ****   if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK)
 824:Src/main.c    ****   {
 825:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 826:Src/main.c    ****   }
 827:Src/main.c    **** 
 828:Src/main.c    **** }
 829:Src/main.c    **** 
 830:Src/main.c    **** /* SPI2 init function */
 831:Src/main.c    **** static void MX_SPI2_Init(void)
 832:Src/main.c    **** {
 833:Src/main.c    **** 
 834:Src/main.c    ****   /* SPI2 parameter configuration*/
 835:Src/main.c    ****   hspi2.Instance = SPI2;
 836:Src/main.c    ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 837:Src/main.c    ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 838:Src/main.c    ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 839:Src/main.c    ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 840:Src/main.c    ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 841:Src/main.c    ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 842:Src/main.c    ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 843:Src/main.c    ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 844:Src/main.c    ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 845:Src/main.c    ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 846:Src/main.c    ****   hspi2.Init.CRCPolynomial = 7;
 847:Src/main.c    ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 848:Src/main.c    ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 17


 849:Src/main.c    ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 850:Src/main.c    ****   {
 851:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 852:Src/main.c    ****   }
 853:Src/main.c    **** 
 854:Src/main.c    **** }
 855:Src/main.c    **** 
 856:Src/main.c    **** /* TIM1 init function */
 857:Src/main.c    **** static void MX_TIM1_Init(void)
 858:Src/main.c    **** {
 859:Src/main.c    **** 
 860:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 861:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 862:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 863:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 864:Src/main.c    **** 
 865:Src/main.c    ****   htim1.Instance = TIM1;
 866:Src/main.c    ****   htim1.Init.Prescaler = 0;
 867:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 868:Src/main.c    ****   htim1.Init.Period = 0;
 869:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 870:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 871:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 872:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 873:Src/main.c    ****   {
 874:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 875:Src/main.c    ****   }
 876:Src/main.c    **** 
 877:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 878:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 879:Src/main.c    ****   {
 880:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 881:Src/main.c    ****   }
 882:Src/main.c    **** 
 883:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 884:Src/main.c    ****   {
 885:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 886:Src/main.c    ****   }
 887:Src/main.c    **** 
 888:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 889:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 890:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 891:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 892:Src/main.c    ****   {
 893:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 894:Src/main.c    ****   }
 895:Src/main.c    **** 
 896:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 897:Src/main.c    ****   sConfigOC.Pulse = 0;
 898:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 899:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 900:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 901:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 902:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 903:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 904:Src/main.c    ****   {
 905:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 18


 906:Src/main.c    ****   }
 907:Src/main.c    **** 
 908:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 909:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 910:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 911:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 912:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 913:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 914:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 915:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 916:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 917:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 918:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 919:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 920:Src/main.c    ****   {
 921:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 922:Src/main.c    ****   }
 923:Src/main.c    **** 
 924:Src/main.c    ****   HAL_TIM_MspPostInit(&htim1);
 925:Src/main.c    **** 
 926:Src/main.c    **** }
 927:Src/main.c    **** 
 928:Src/main.c    **** /* TIM2 init function */
 929:Src/main.c    **** static void MX_TIM2_Init(void)
 930:Src/main.c    **** {
 931:Src/main.c    **** 
 932:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 933:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 934:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 935:Src/main.c    **** 
 936:Src/main.c    ****   htim2.Instance = TIM2;
 937:Src/main.c    ****   htim2.Init.Prescaler = 0;
 938:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 939:Src/main.c    ****   htim2.Init.Period = 0;
 940:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 941:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 942:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 943:Src/main.c    ****   {
 944:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 945:Src/main.c    ****   }
 946:Src/main.c    **** 
 947:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 948:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 949:Src/main.c    ****   {
 950:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 951:Src/main.c    ****   }
 952:Src/main.c    **** 
 953:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 954:Src/main.c    ****   {
 955:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 956:Src/main.c    ****   }
 957:Src/main.c    **** 
 958:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 959:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 960:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 961:Src/main.c    ****   {
 962:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 19


 963:Src/main.c    ****   }
 964:Src/main.c    **** 
 965:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 966:Src/main.c    ****   sConfigOC.Pulse = 0;
 967:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 968:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 969:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 970:Src/main.c    ****   {
 971:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 972:Src/main.c    ****   }
 973:Src/main.c    **** 
 974:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
 975:Src/main.c    **** 
 976:Src/main.c    **** }
 977:Src/main.c    **** 
 978:Src/main.c    **** /* TIM3 init function */
 979:Src/main.c    **** static void MX_TIM3_Init(void)
 980:Src/main.c    **** {
 981:Src/main.c    **** 
 982:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 983:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 984:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 985:Src/main.c    **** 
 986:Src/main.c    ****   htim3.Instance = TIM3;
 987:Src/main.c    ****   htim3.Init.Prescaler = 0;
 988:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 989:Src/main.c    ****   htim3.Init.Period = 0;
 990:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 991:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 992:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 993:Src/main.c    ****   {
 994:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 995:Src/main.c    ****   }
 996:Src/main.c    **** 
 997:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 998:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 999:Src/main.c    ****   {
1000:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1001:Src/main.c    ****   }
1002:Src/main.c    **** 
1003:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
1004:Src/main.c    ****   {
1005:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1006:Src/main.c    ****   }
1007:Src/main.c    **** 
1008:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1009:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1010:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
1011:Src/main.c    ****   {
1012:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1013:Src/main.c    ****   }
1014:Src/main.c    **** 
1015:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1016:Src/main.c    ****   sConfigOC.Pulse = 0;
1017:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1018:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1019:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 20


1020:Src/main.c    ****   {
1021:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1022:Src/main.c    ****   }
1023:Src/main.c    **** 
1024:Src/main.c    ****   HAL_TIM_MspPostInit(&htim3);
1025:Src/main.c    **** 
1026:Src/main.c    **** }
1027:Src/main.c    **** 
1028:Src/main.c    **** /* TIM5 init function */
1029:Src/main.c    **** static void MX_TIM5_Init(void)
1030:Src/main.c    **** {
1031:Src/main.c    **** 
1032:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
1033:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1034:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
1035:Src/main.c    **** 
1036:Src/main.c    ****   htim5.Instance = TIM5;
1037:Src/main.c    ****   htim5.Init.Prescaler = 0;
1038:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
1039:Src/main.c    ****   htim5.Init.Period = 0;
1040:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1041:Src/main.c    ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1042:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
1043:Src/main.c    ****   {
1044:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1045:Src/main.c    ****   }
1046:Src/main.c    **** 
1047:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1048:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
1049:Src/main.c    ****   {
1050:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1051:Src/main.c    ****   }
1052:Src/main.c    **** 
1053:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
1054:Src/main.c    ****   {
1055:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1056:Src/main.c    ****   }
1057:Src/main.c    **** 
1058:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1059:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1060:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
1061:Src/main.c    ****   {
1062:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1063:Src/main.c    ****   }
1064:Src/main.c    **** 
1065:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1066:Src/main.c    ****   sConfigOC.Pulse = 0;
1067:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1068:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1069:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
1070:Src/main.c    ****   {
1071:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1072:Src/main.c    ****   }
1073:Src/main.c    **** 
1074:Src/main.c    ****   HAL_TIM_MspPostInit(&htim5);
1075:Src/main.c    **** 
1076:Src/main.c    **** }
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 21


1077:Src/main.c    **** 
1078:Src/main.c    **** /* TIM7 init function */
1079:Src/main.c    **** static void MX_TIM7_Init(void)
1080:Src/main.c    **** {
1081:Src/main.c    **** 
1082:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1083:Src/main.c    **** 
1084:Src/main.c    ****   htim7.Instance = TIM7;
1085:Src/main.c    ****   htim7.Init.Prescaler = 0;
1086:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
1087:Src/main.c    ****   htim7.Init.Period = 0;
1088:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1089:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
1090:Src/main.c    ****   {
1091:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1092:Src/main.c    ****   }
1093:Src/main.c    **** 
1094:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1095:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1096:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
1097:Src/main.c    ****   {
1098:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1099:Src/main.c    ****   }
1100:Src/main.c    **** 
1101:Src/main.c    **** }
1102:Src/main.c    **** 
1103:Src/main.c    **** /* TIM8 init function */
1104:Src/main.c    **** static void MX_TIM8_Init(void)
1105:Src/main.c    **** {
1106:Src/main.c    **** 
1107:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
1108:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1109:Src/main.c    **** 
1110:Src/main.c    ****   htim8.Instance = TIM8;
1111:Src/main.c    ****   htim8.Init.Prescaler = 0;
1112:Src/main.c    ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
1113:Src/main.c    ****   htim8.Init.Period = 0;
1114:Src/main.c    ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1115:Src/main.c    ****   htim8.Init.RepetitionCounter = 0;
1116:Src/main.c    ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1117:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
1118:Src/main.c    ****   {
1119:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1120:Src/main.c    ****   }
1121:Src/main.c    **** 
1122:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1123:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
1124:Src/main.c    ****   {
1125:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1126:Src/main.c    ****   }
1127:Src/main.c    **** 
1128:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1129:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
1130:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1131:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
1132:Src/main.c    ****   {
1133:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 22


1134:Src/main.c    ****   }
1135:Src/main.c    **** 
1136:Src/main.c    **** }
1137:Src/main.c    **** 
1138:Src/main.c    **** /* TIM12 init function */
1139:Src/main.c    **** static void MX_TIM12_Init(void)
1140:Src/main.c    **** {
1141:Src/main.c    **** 
1142:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
1143:Src/main.c    **** 
1144:Src/main.c    ****   htim12.Instance = TIM12;
1145:Src/main.c    ****   htim12.Init.Prescaler = 0;
1146:Src/main.c    ****   htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
1147:Src/main.c    ****   htim12.Init.Period = 0;
1148:Src/main.c    ****   htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1149:Src/main.c    ****   htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1150:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
1151:Src/main.c    ****   {
1152:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1153:Src/main.c    ****   }
1154:Src/main.c    **** 
1155:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1156:Src/main.c    ****   sConfigOC.Pulse = 0;
1157:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1158:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1159:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1160:Src/main.c    ****   {
1161:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1162:Src/main.c    ****   }
1163:Src/main.c    **** 
1164:Src/main.c    ****   HAL_TIM_MspPostInit(&htim12);
1165:Src/main.c    **** 
1166:Src/main.c    **** }
1167:Src/main.c    **** 
1168:Src/main.c    **** /* USART1 init function */
1169:Src/main.c    **** static void MX_USART1_UART_Init(void)
1170:Src/main.c    **** {
1171:Src/main.c    **** 
1172:Src/main.c    ****   huart1.Instance = USART1;
1173:Src/main.c    ****   huart1.Init.BaudRate = 115200;
1174:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
1175:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
1176:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
1177:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
1178:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1179:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
1180:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1181:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1182:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
1183:Src/main.c    ****   {
1184:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1185:Src/main.c    ****   }
1186:Src/main.c    **** 
1187:Src/main.c    **** }
1188:Src/main.c    **** 
1189:Src/main.c    **** /* USART6 init function */
1190:Src/main.c    **** static void MX_USART6_UART_Init(void)
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 23


1191:Src/main.c    **** {
1192:Src/main.c    **** 
1193:Src/main.c    ****   huart6.Instance = USART6;
1194:Src/main.c    ****   huart6.Init.BaudRate = 115200;
1195:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
1196:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
1197:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
1198:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
1199:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1200:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
1201:Src/main.c    ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1202:Src/main.c    ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1203:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
1204:Src/main.c    ****   {
1205:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1206:Src/main.c    ****   }
1207:Src/main.c    **** 
1208:Src/main.c    **** }
1209:Src/main.c    **** 
1210:Src/main.c    **** /* FMC initialization function */
1211:Src/main.c    **** static void MX_FMC_Init(void)
1212:Src/main.c    **** {
1213:Src/main.c    ****   FMC_SDRAM_TimingTypeDef SdramTiming;
1214:Src/main.c    **** 
1215:Src/main.c    ****   /** Perform the SDRAM1 memory initialization sequence
1216:Src/main.c    ****   */
1217:Src/main.c    ****   hsdram1.Instance = FMC_SDRAM_DEVICE;
1218:Src/main.c    ****   /* hsdram1.Init */
1219:Src/main.c    ****   hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
1220:Src/main.c    ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
1221:Src/main.c    ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
1222:Src/main.c    ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
1223:Src/main.c    ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
1224:Src/main.c    ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
1225:Src/main.c    ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
1226:Src/main.c    ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
1227:Src/main.c    ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
1228:Src/main.c    ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
1229:Src/main.c    ****   /* SdramTiming */
1230:Src/main.c    ****   SdramTiming.LoadToActiveDelay = 2;
1231:Src/main.c    ****   SdramTiming.ExitSelfRefreshDelay = 7;
1232:Src/main.c    ****   SdramTiming.SelfRefreshTime = 4;
1233:Src/main.c    ****   SdramTiming.RowCycleDelay = 7;
1234:Src/main.c    ****   SdramTiming.WriteRecoveryTime = 3;
1235:Src/main.c    ****   SdramTiming.RPDelay = 2;
1236:Src/main.c    ****   SdramTiming.RCDDelay = 2;
1237:Src/main.c    **** 
1238:Src/main.c    ****   if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
1239:Src/main.c    ****   {
1240:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1241:Src/main.c    ****   }
1242:Src/main.c    **** 
1243:Src/main.c    **** }
1244:Src/main.c    **** 
1245:Src/main.c    **** /** Configure pins as
1246:Src/main.c    ****         * Analog
1247:Src/main.c    ****         * Input
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 24


1248:Src/main.c    ****         * Output
1249:Src/main.c    ****         * EVENT_OUT
1250:Src/main.c    ****         * EXTI
1251:Src/main.c    ****      PB5   ------> USB_OTG_HS_ULPI_D7
1252:Src/main.c    ****      PH4   ------> USB_OTG_HS_ULPI_NXT
1253:Src/main.c    ****      PB13   ------> USB_OTG_HS_ULPI_D6
1254:Src/main.c    ****      PB12   ------> USB_OTG_HS_ULPI_D5
1255:Src/main.c    ****      PC0   ------> USB_OTG_HS_ULPI_STP
1256:Src/main.c    ****      PC2   ------> USB_OTG_HS_ULPI_DIR
1257:Src/main.c    ****      PA5   ------> USB_OTG_HS_ULPI_CK
1258:Src/main.c    ****      PB10   ------> USB_OTG_HS_ULPI_D3
1259:Src/main.c    ****      PA3   ------> USB_OTG_HS_ULPI_D0
1260:Src/main.c    ****      PB1   ------> USB_OTG_HS_ULPI_D2
1261:Src/main.c    ****      PB0   ------> USB_OTG_HS_ULPI_D1
1262:Src/main.c    ****      PB11   ------> USB_OTG_HS_ULPI_D4
1263:Src/main.c    **** */
1264:Src/main.c    **** static void MX_GPIO_Init(void)
1265:Src/main.c    **** {
  68              		.loc 1 1265 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 64
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 36
  75              		.cfi_offset 4, -36
  76              		.cfi_offset 5, -32
  77              		.cfi_offset 6, -28
  78              		.cfi_offset 7, -24
  79              		.cfi_offset 8, -20
  80              		.cfi_offset 9, -16
  81              		.cfi_offset 10, -12
  82              		.cfi_offset 11, -8
  83              		.cfi_offset 14, -4
  84 0004 91B0     		sub	sp, sp, #68
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 104
  87              	.LBB2:
1266:Src/main.c    **** 
1267:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
1268:Src/main.c    **** 
1269:Src/main.c    ****   /* GPIO Ports Clock Enable */
1270:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  88              		.loc 1 1270 0
  89 0006 9A4B     		ldr	r3, .L6
  90 0008 1A6B     		ldr	r2, [r3, #48]
  91 000a 42F01002 		orr	r2, r2, #16
  92 000e 1A63     		str	r2, [r3, #48]
  93 0010 1A6B     		ldr	r2, [r3, #48]
  94 0012 02F01002 		and	r2, r2, #16
  95 0016 0092     		str	r2, [sp]
  96 0018 009A     		ldr	r2, [sp]
  97              	.LBE2:
  98              	.LBB3:
1271:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
  99              		.loc 1 1271 0
 100 001a 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 25


 101 001c 42F04002 		orr	r2, r2, #64
 102 0020 1A63     		str	r2, [r3, #48]
 103 0022 1A6B     		ldr	r2, [r3, #48]
 104 0024 02F04002 		and	r2, r2, #64
 105 0028 0192     		str	r2, [sp, #4]
 106 002a 019A     		ldr	r2, [sp, #4]
 107              	.LBE3:
 108              	.LBB4:
1272:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 109              		.loc 1 1272 0
 110 002c 1A6B     		ldr	r2, [r3, #48]
 111 002e 42F00202 		orr	r2, r2, #2
 112 0032 1A63     		str	r2, [r3, #48]
 113 0034 1A6B     		ldr	r2, [r3, #48]
 114 0036 02F00202 		and	r2, r2, #2
 115 003a 0292     		str	r2, [sp, #8]
 116 003c 029A     		ldr	r2, [sp, #8]
 117              	.LBE4:
 118              	.LBB5:
1273:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 119              		.loc 1 1273 0
 120 003e 1A6B     		ldr	r2, [r3, #48]
 121 0040 42F00802 		orr	r2, r2, #8
 122 0044 1A63     		str	r2, [r3, #48]
 123 0046 1A6B     		ldr	r2, [r3, #48]
 124 0048 02F00802 		and	r2, r2, #8
 125 004c 0392     		str	r2, [sp, #12]
 126 004e 039A     		ldr	r2, [sp, #12]
 127              	.LBE5:
 128              	.LBB6:
1274:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 129              		.loc 1 1274 0
 130 0050 1A6B     		ldr	r2, [r3, #48]
 131 0052 42F00402 		orr	r2, r2, #4
 132 0056 1A63     		str	r2, [r3, #48]
 133 0058 1A6B     		ldr	r2, [r3, #48]
 134 005a 02F00402 		and	r2, r2, #4
 135 005e 0492     		str	r2, [sp, #16]
 136 0060 049A     		ldr	r2, [sp, #16]
 137              	.LBE6:
 138              	.LBB7:
1275:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 139              		.loc 1 1275 0
 140 0062 1A6B     		ldr	r2, [r3, #48]
 141 0064 42F00102 		orr	r2, r2, #1
 142 0068 1A63     		str	r2, [r3, #48]
 143 006a 1A6B     		ldr	r2, [r3, #48]
 144 006c 02F00102 		and	r2, r2, #1
 145 0070 0592     		str	r2, [sp, #20]
 146 0072 059A     		ldr	r2, [sp, #20]
 147              	.LBE7:
 148              	.LBB8:
1276:Src/main.c    ****   __HAL_RCC_GPIOJ_CLK_ENABLE();
 149              		.loc 1 1276 0
 150 0074 1A6B     		ldr	r2, [r3, #48]
 151 0076 42F40072 		orr	r2, r2, #512
 152 007a 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 26


 153 007c 1A6B     		ldr	r2, [r3, #48]
 154 007e 02F40072 		and	r2, r2, #512
 155 0082 0692     		str	r2, [sp, #24]
 156 0084 069A     		ldr	r2, [sp, #24]
 157              	.LBE8:
 158              	.LBB9:
1277:Src/main.c    ****   __HAL_RCC_GPIOI_CLK_ENABLE();
 159              		.loc 1 1277 0
 160 0086 1A6B     		ldr	r2, [r3, #48]
 161 0088 42F48072 		orr	r2, r2, #256
 162 008c 1A63     		str	r2, [r3, #48]
 163 008e 1A6B     		ldr	r2, [r3, #48]
 164 0090 02F48072 		and	r2, r2, #256
 165 0094 0792     		str	r2, [sp, #28]
 166 0096 079A     		ldr	r2, [sp, #28]
 167              	.LBE9:
 168              	.LBB10:
1278:Src/main.c    ****   __HAL_RCC_GPIOK_CLK_ENABLE();
 169              		.loc 1 1278 0
 170 0098 1A6B     		ldr	r2, [r3, #48]
 171 009a 42F48062 		orr	r2, r2, #1024
 172 009e 1A63     		str	r2, [r3, #48]
 173 00a0 1A6B     		ldr	r2, [r3, #48]
 174 00a2 02F48062 		and	r2, r2, #1024
 175 00a6 0892     		str	r2, [sp, #32]
 176 00a8 089A     		ldr	r2, [sp, #32]
 177              	.LBE10:
 178              	.LBB11:
1279:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 179              		.loc 1 1279 0
 180 00aa 1A6B     		ldr	r2, [r3, #48]
 181 00ac 42F02002 		orr	r2, r2, #32
 182 00b0 1A63     		str	r2, [r3, #48]
 183 00b2 1A6B     		ldr	r2, [r3, #48]
 184 00b4 02F02002 		and	r2, r2, #32
 185 00b8 0992     		str	r2, [sp, #36]
 186 00ba 099A     		ldr	r2, [sp, #36]
 187              	.LBE11:
 188              	.LBB12:
1280:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 189              		.loc 1 1280 0
 190 00bc 1A6B     		ldr	r2, [r3, #48]
 191 00be 42F08002 		orr	r2, r2, #128
 192 00c2 1A63     		str	r2, [r3, #48]
 193 00c4 1B6B     		ldr	r3, [r3, #48]
 194 00c6 03F08003 		and	r3, r3, #128
 195 00ca 0A93     		str	r3, [sp, #40]
 196 00cc 0A9B     		ldr	r3, [sp, #40]
 197              	.LBE12:
1281:Src/main.c    **** 
1282:Src/main.c    ****   /*Configure GPIO pin Output Level */
1283:Src/main.c    ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 198              		.loc 1 1283 0
 199 00ce 0122     		movs	r2, #1
 200 00d0 2021     		movs	r1, #32
 201 00d2 6848     		ldr	r0, .L6+4
 202 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 27


 203              	.LVL0:
1284:Src/main.c    **** 
1285:Src/main.c    ****   /*Configure GPIO pin Output Level */
1286:Src/main.c    ****   HAL_GPIO_WritePin(GPIOI, ARDUINO_D7_Pin|ARDUINO_D8_Pin, GPIO_PIN_RESET);
 204              		.loc 1 1286 0
 205 00d8 0022     		movs	r2, #0
 206 00da 0C21     		movs	r1, #12
 207 00dc 6648     		ldr	r0, .L6+8
 208 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 209              	.LVL1:
1287:Src/main.c    **** 
1288:Src/main.c    ****   /*Configure GPIO pin Output Level */
1289:Src/main.c    ****   HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 210              		.loc 1 1289 0
 211 00e2 0122     		movs	r2, #1
 212 00e4 0821     		movs	r1, #8
 213 00e6 6548     		ldr	r0, .L6+12
 214 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 215              	.LVL2:
1290:Src/main.c    **** 
1291:Src/main.c    ****   /*Configure GPIO pin Output Level */
1292:Src/main.c    ****   HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 216              		.loc 1 1292 0
 217 00ec 0122     		movs	r2, #1
 218 00ee 4FF48051 		mov	r1, #4096
 219 00f2 6148     		ldr	r0, .L6+8
 220 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 221              	.LVL3:
1293:Src/main.c    **** 
1294:Src/main.c    ****   /*Configure GPIO pin Output Level */
1295:Src/main.c    ****   HAL_GPIO_WritePin(DCMI_PWR_EN_GPIO_Port, DCMI_PWR_EN_Pin, GPIO_PIN_RESET);
 222              		.loc 1 1295 0
 223 00f8 0022     		movs	r2, #0
 224 00fa 4FF40051 		mov	r1, #8192
 225 00fe 6048     		ldr	r0, .L6+16
 226 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 227              	.LVL4:
1296:Src/main.c    **** 
1297:Src/main.c    ****   /*Configure GPIO pin Output Level */
1298:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin, GPIO_PIN_RESET);
 228              		.loc 1 1298 0
 229 0104 0022     		movs	r2, #0
 230 0106 C821     		movs	r1, #200
 231 0108 5E48     		ldr	r0, .L6+20
 232 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 233              	.LVL5:
1299:Src/main.c    **** 
1300:Src/main.c    ****   /*Configure GPIO pin : OTG_HS_OverCurrent_Pin */
1301:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
 234              		.loc 1 1301 0
 235 010e 4FF0080A 		mov	r10, #8
 236 0112 CDF82CA0 		str	r10, [sp, #44]
1302:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 237              		.loc 1 1302 0
 238 0116 0024     		movs	r4, #0
 239 0118 0C94     		str	r4, [sp, #48]
1303:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 28


 240              		.loc 1 1303 0
 241 011a 0D94     		str	r4, [sp, #52]
1304:Src/main.c    ****   HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 242              		.loc 1 1304 0
 243 011c 0BA9     		add	r1, sp, #44
 244 011e 5A48     		ldr	r0, .L6+24
 245 0120 FFF7FEFF 		bl	HAL_GPIO_Init
 246              	.LVL6:
1305:Src/main.c    **** 
1306:Src/main.c    ****   /*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D3_Pin
1307:Src/main.c    ****                            ULPI_D2_Pin ULPI_D1_Pin ULPI_D4_Pin */
1308:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_D7_Pin|ULPI_D6_Pin|ULPI_D5_Pin|ULPI_D3_Pin
 247              		.loc 1 1308 0
 248 0124 43F62343 		movw	r3, #15395
 249 0128 0B93     		str	r3, [sp, #44]
1309:Src/main.c    ****                           |ULPI_D2_Pin|ULPI_D1_Pin|ULPI_D4_Pin;
1310:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 250              		.loc 1 1310 0
 251 012a 4FF00208 		mov	r8, #2
 252 012e CDF83080 		str	r8, [sp, #48]
1311:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 253              		.loc 1 1311 0
 254 0132 0D94     		str	r4, [sp, #52]
1312:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 255              		.loc 1 1312 0
 256 0134 0327     		movs	r7, #3
 257 0136 0E97     		str	r7, [sp, #56]
1313:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 258              		.loc 1 1313 0
 259 0138 0A26     		movs	r6, #10
 260 013a 0F96     		str	r6, [sp, #60]
1314:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 261              		.loc 1 1314 0
 262 013c 0BA9     		add	r1, sp, #44
 263 013e 5348     		ldr	r0, .L6+28
 264 0140 FFF7FEFF 		bl	HAL_GPIO_Init
 265              	.LVL7:
1315:Src/main.c    **** 
1316:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_VBUS_Pin */
1317:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 266              		.loc 1 1317 0
 267 0144 4FF48053 		mov	r3, #4096
 268 0148 0B93     		str	r3, [sp, #44]
1318:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 269              		.loc 1 1318 0
 270 014a 0C94     		str	r4, [sp, #48]
1319:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 271              		.loc 1 1319 0
 272 014c 0D94     		str	r4, [sp, #52]
1320:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 273              		.loc 1 1320 0
 274 014e 0BA9     		add	r1, sp, #44
 275 0150 4F48     		ldr	r0, .L6+32
 276 0152 FFF7FEFF 		bl	HAL_GPIO_Init
 277              	.LVL8:
1321:Src/main.c    **** 
1322:Src/main.c    ****   /*Configure GPIO pin : Audio_INT_Pin */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 29


1323:Src/main.c    ****   GPIO_InitStruct.Pin = Audio_INT_Pin;
 278              		.loc 1 1323 0
 279 0156 4023     		movs	r3, #64
 280 0158 0B93     		str	r3, [sp, #44]
1324:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 281              		.loc 1 1324 0
 282 015a DFF840B1 		ldr	fp, .L6+44
 283 015e CDF830B0 		str	fp, [sp, #48]
1325:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 284              		.loc 1 1325 0
 285 0162 0D94     		str	r4, [sp, #52]
1326:Src/main.c    ****   HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 286              		.loc 1 1326 0
 287 0164 0BA9     		add	r1, sp, #44
 288 0166 4348     		ldr	r0, .L6+4
 289 0168 FFF7FEFF 		bl	HAL_GPIO_Init
 290              	.LVL9:
1327:Src/main.c    **** 
1328:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
1329:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 291              		.loc 1 1329 0
 292 016c 2023     		movs	r3, #32
 293 016e 0B93     		str	r3, [sp, #44]
1330:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 294              		.loc 1 1330 0
 295 0170 0125     		movs	r5, #1
 296 0172 0C95     		str	r5, [sp, #48]
1331:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 297              		.loc 1 1331 0
 298 0174 0D94     		str	r4, [sp, #52]
1332:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 299              		.loc 1 1332 0
 300 0176 0E94     		str	r4, [sp, #56]
1333:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 301              		.loc 1 1333 0
 302 0178 0BA9     		add	r1, sp, #44
 303 017a 3E48     		ldr	r0, .L6+4
 304 017c FFF7FEFF 		bl	HAL_GPIO_Init
 305              	.LVL10:
1334:Src/main.c    **** 
1335:Src/main.c    ****   /*Configure GPIO pins : ARDUINO_D7_Pin ARDUINO_D8_Pin LCD_DISP_Pin */
1336:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_D7_Pin|ARDUINO_D8_Pin|LCD_DISP_Pin;
 306              		.loc 1 1336 0
 307 0180 41F20C03 		movw	r3, #4108
 308 0184 0B93     		str	r3, [sp, #44]
1337:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 309              		.loc 1 1337 0
 310 0186 0C95     		str	r5, [sp, #48]
1338:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 311              		.loc 1 1338 0
 312 0188 0D94     		str	r4, [sp, #52]
1339:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 313              		.loc 1 1339 0
 314 018a 0E94     		str	r4, [sp, #56]
1340:Src/main.c    ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 315              		.loc 1 1340 0
 316 018c 0BA9     		add	r1, sp, #44
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 30


 317 018e 3A48     		ldr	r0, .L6+8
 318 0190 FFF7FEFF 		bl	HAL_GPIO_Init
 319              	.LVL11:
1341:Src/main.c    **** 
1342:Src/main.c    ****   /*Configure GPIO pin : uSD_Detect_Pin */
1343:Src/main.c    ****   GPIO_InitStruct.Pin = uSD_Detect_Pin;
 320              		.loc 1 1343 0
 321 0194 4FF40059 		mov	r9, #8192
 322 0198 CDF82C90 		str	r9, [sp, #44]
1344:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 323              		.loc 1 1344 0
 324 019c 0C94     		str	r4, [sp, #48]
1345:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 325              		.loc 1 1345 0
 326 019e 0D94     		str	r4, [sp, #52]
1346:Src/main.c    ****   HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 327              		.loc 1 1346 0
 328 01a0 0BA9     		add	r1, sp, #44
 329 01a2 3C48     		ldr	r0, .L6+36
 330 01a4 FFF7FEFF 		bl	HAL_GPIO_Init
 331              	.LVL12:
1347:Src/main.c    **** 
1348:Src/main.c    ****   /*Configure GPIO pin : LCD_BL_CTRL_Pin */
1349:Src/main.c    ****   GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 332              		.loc 1 1349 0
 333 01a8 CDF82CA0 		str	r10, [sp, #44]
1350:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 334              		.loc 1 1350 0
 335 01ac 0C95     		str	r5, [sp, #48]
1351:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 336              		.loc 1 1351 0
 337 01ae 0D94     		str	r4, [sp, #52]
1352:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 338              		.loc 1 1352 0
 339 01b0 0E94     		str	r4, [sp, #56]
1353:Src/main.c    ****   HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 340              		.loc 1 1353 0
 341 01b2 0BA9     		add	r1, sp, #44
 342 01b4 3148     		ldr	r0, .L6+12
 343 01b6 FFF7FEFF 		bl	HAL_GPIO_Init
 344              	.LVL13:
1354:Src/main.c    **** 
1355:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
1356:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 345              		.loc 1 1356 0
 346 01ba 4FF0100A 		mov	r10, #16
 347 01be CDF82CA0 		str	r10, [sp, #44]
1357:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 348              		.loc 1 1357 0
 349 01c2 0C94     		str	r4, [sp, #48]
1358:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 350              		.loc 1 1358 0
 351 01c4 0D94     		str	r4, [sp, #52]
1359:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 352              		.loc 1 1359 0
 353 01c6 0BA9     		add	r1, sp, #44
 354 01c8 2A48     		ldr	r0, .L6+4
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 31


 355 01ca FFF7FEFF 		bl	HAL_GPIO_Init
 356              	.LVL14:
1360:Src/main.c    **** 
1361:Src/main.c    ****   /*Configure GPIO pins : TP3_Pin NC2_Pin */
1362:Src/main.c    ****   GPIO_InitStruct.Pin = TP3_Pin|NC2_Pin;
 357              		.loc 1 1362 0
 358 01ce 48F20403 		movw	r3, #32772
 359 01d2 0B93     		str	r3, [sp, #44]
1363:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 360              		.loc 1 1363 0
 361 01d4 0C94     		str	r4, [sp, #48]
1364:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 362              		.loc 1 1364 0
 363 01d6 0D94     		str	r4, [sp, #52]
1365:Src/main.c    ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 364              		.loc 1 1365 0
 365 01d8 0BA9     		add	r1, sp, #44
 366 01da 2948     		ldr	r0, .L6+16
 367 01dc FFF7FEFF 		bl	HAL_GPIO_Init
 368              	.LVL15:
1366:Src/main.c    **** 
1367:Src/main.c    ****   /*Configure GPIO pin : DCMI_PWR_EN_Pin */
1368:Src/main.c    ****   GPIO_InitStruct.Pin = DCMI_PWR_EN_Pin;
 369              		.loc 1 1368 0
 370 01e0 CDF82C90 		str	r9, [sp, #44]
1369:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 371              		.loc 1 1369 0
 372 01e4 0C95     		str	r5, [sp, #48]
1370:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 373              		.loc 1 1370 0
 374 01e6 0D94     		str	r4, [sp, #52]
1371:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 375              		.loc 1 1371 0
 376 01e8 0E94     		str	r4, [sp, #56]
1372:Src/main.c    ****   HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 377              		.loc 1 1372 0
 378 01ea 0BA9     		add	r1, sp, #44
 379 01ec 2448     		ldr	r0, .L6+16
 380 01ee FFF7FEFF 		bl	HAL_GPIO_Init
 381              	.LVL16:
1373:Src/main.c    **** 
1374:Src/main.c    ****   /*Configure GPIO pin : LCD_INT_Pin */
1375:Src/main.c    ****   GPIO_InitStruct.Pin = LCD_INT_Pin;
 382              		.loc 1 1375 0
 383 01f2 CDF82C90 		str	r9, [sp, #44]
1376:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 384              		.loc 1 1376 0
 385 01f6 CDF830B0 		str	fp, [sp, #48]
1377:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 386              		.loc 1 1377 0
 387 01fa 0D94     		str	r4, [sp, #52]
1378:Src/main.c    ****   HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 388              		.loc 1 1378 0
 389 01fc 0BA9     		add	r1, sp, #44
 390 01fe 1E48     		ldr	r0, .L6+8
 391 0200 FFF7FEFF 		bl	HAL_GPIO_Init
 392              	.LVL17:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 32


1379:Src/main.c    **** 
1380:Src/main.c    ****   /*Configure GPIO pin : ULPI_NXT_Pin */
1381:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 393              		.loc 1 1381 0
 394 0204 CDF82CA0 		str	r10, [sp, #44]
1382:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 395              		.loc 1 1382 0
 396 0208 CDF83080 		str	r8, [sp, #48]
1383:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 397              		.loc 1 1383 0
 398 020c 0D94     		str	r4, [sp, #52]
1384:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 399              		.loc 1 1384 0
 400 020e 0E97     		str	r7, [sp, #56]
1385:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 401              		.loc 1 1385 0
 402 0210 0F96     		str	r6, [sp, #60]
1386:Src/main.c    ****   HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 403              		.loc 1 1386 0
 404 0212 0BA9     		add	r1, sp, #44
 405 0214 1A48     		ldr	r0, .L6+16
 406 0216 FFF7FEFF 		bl	HAL_GPIO_Init
 407              	.LVL18:
1387:Src/main.c    **** 
1388:Src/main.c    ****   /*Configure GPIO pins : ARDUINO_D4_Pin ARDUINO_D2_Pin EXT_RST_Pin */
1389:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin;
 408              		.loc 1 1389 0
 409 021a C823     		movs	r3, #200
 410 021c 0B93     		str	r3, [sp, #44]
1390:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 411              		.loc 1 1390 0
 412 021e 0C95     		str	r5, [sp, #48]
1391:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 413              		.loc 1 1391 0
 414 0220 0D94     		str	r4, [sp, #52]
1392:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 415              		.loc 1 1392 0
 416 0222 0E94     		str	r4, [sp, #56]
1393:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 417              		.loc 1 1393 0
 418 0224 0BA9     		add	r1, sp, #44
 419 0226 1748     		ldr	r0, .L6+20
 420 0228 FFF7FEFF 		bl	HAL_GPIO_Init
 421              	.LVL19:
1394:Src/main.c    **** 
1395:Src/main.c    ****   /*Configure GPIO pins : ULPI_STP_Pin ULPI_DIR_Pin */
1396:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_STP_Pin|ULPI_DIR_Pin;
 422              		.loc 1 1396 0
 423 022c 0523     		movs	r3, #5
 424 022e 0B93     		str	r3, [sp, #44]
1397:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 425              		.loc 1 1397 0
 426 0230 CDF83080 		str	r8, [sp, #48]
1398:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 427              		.loc 1 1398 0
 428 0234 0D94     		str	r4, [sp, #52]
1399:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 33


 429              		.loc 1 1399 0
 430 0236 0E97     		str	r7, [sp, #56]
1400:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 431              		.loc 1 1400 0
 432 0238 0F96     		str	r6, [sp, #60]
1401:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 433              		.loc 1 1401 0
 434 023a 0BA9     		add	r1, sp, #44
 435 023c 1548     		ldr	r0, .L6+36
 436 023e FFF7FEFF 		bl	HAL_GPIO_Init
 437              	.LVL20:
1402:Src/main.c    **** 
1403:Src/main.c    ****   /*Configure GPIO pin : RMII_RXER_Pin */
1404:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_RXER_Pin;
 438              		.loc 1 1404 0
 439 0242 0423     		movs	r3, #4
 440 0244 0B93     		str	r3, [sp, #44]
1405:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 441              		.loc 1 1405 0
 442 0246 0C94     		str	r4, [sp, #48]
1406:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 443              		.loc 1 1406 0
 444 0248 0D94     		str	r4, [sp, #52]
1407:Src/main.c    ****   HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 445              		.loc 1 1407 0
 446 024a 0BA9     		add	r1, sp, #44
 447 024c 0D48     		ldr	r0, .L6+20
 448 024e FFF7FEFF 		bl	HAL_GPIO_Init
 449              	.LVL21:
1408:Src/main.c    **** 
1409:Src/main.c    ****   /*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
1410:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_CLK_Pin|ULPI_D0_Pin;
 450              		.loc 1 1410 0
 451 0252 2823     		movs	r3, #40
 452 0254 0B93     		str	r3, [sp, #44]
1411:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 453              		.loc 1 1411 0
 454 0256 CDF83080 		str	r8, [sp, #48]
1412:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 455              		.loc 1 1412 0
 456 025a 0D94     		str	r4, [sp, #52]
1413:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 457              		.loc 1 1413 0
 458 025c 0E97     		str	r7, [sp, #56]
1414:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 459              		.loc 1 1414 0
 460 025e 0F96     		str	r6, [sp, #60]
1415:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 461              		.loc 1 1415 0
 462 0260 0BA9     		add	r1, sp, #44
 463 0262 0D48     		ldr	r0, .L6+40
 464 0264 FFF7FEFF 		bl	HAL_GPIO_Init
 465              	.LVL22:
1416:Src/main.c    **** 
1417:Src/main.c    **** }
 466              		.loc 1 1417 0
 467 0268 11B0     		add	sp, sp, #68
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 34


 468              	.LCFI2:
 469              		.cfi_def_cfa_offset 36
 470              		@ sp needed
 471 026a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 472              	.L7:
 473 026e 00BF     		.align	2
 474              	.L6:
 475 0270 00380240 		.word	1073887232
 476 0274 000C0240 		.word	1073875968
 477 0278 00200240 		.word	1073881088
 478 027c 00280240 		.word	1073883136
 479 0280 001C0240 		.word	1073880064
 480 0284 00180240 		.word	1073879040
 481 0288 00100240 		.word	1073876992
 482 028c 00040240 		.word	1073873920
 483 0290 00240240 		.word	1073882112
 484 0294 00080240 		.word	1073874944
 485 0298 00000240 		.word	1073872896
 486 029c 00001210 		.word	269615104
 487              		.cfi_endproc
 488              	.LFE170:
 490              		.section	.text.StartDefaultTask,"ax",%progbits
 491              		.align	1
 492              		.global	StartDefaultTask
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 496              		.fpu fpv5-sp-d16
 498              	StartDefaultTask:
 499              	.LFB171:
1418:Src/main.c    **** 
1419:Src/main.c    **** /* USER CODE BEGIN 4 */
1420:Src/main.c    **** 
1421:Src/main.c    **** extern ApplicationTypeDef Appli_state;
1422:Src/main.c    **** 
1423:Src/main.c    **** /* USER CODE END 4 */
1424:Src/main.c    **** 
1425:Src/main.c    **** /* USER CODE BEGIN Header_StartDefaultTask */
1426:Src/main.c    **** /**
1427:Src/main.c    ****   * @brief  Function implementing the defaultTask thread.
1428:Src/main.c    ****   * @param  argument: Not used
1429:Src/main.c    ****   * @retval None
1430:Src/main.c    ****   */
1431:Src/main.c    **** /* USER CODE END Header_StartDefaultTask */
1432:Src/main.c    **** void StartDefaultTask(void const * argument)
1433:Src/main.c    **** {
 500              		.loc 1 1433 0
 501              		.cfi_startproc
 502              		@ Volatile: function does not return.
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              	.LVL23:
 506 0000 08B5     		push	{r3, lr}
 507              	.LCFI3:
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 3, -8
 510              		.cfi_offset 14, -4
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 35


1434:Src/main.c    ****   /* init code for FATFS */
1435:Src/main.c    ****   MX_FATFS_Init();
 511              		.loc 1 1435 0
 512 0002 FFF7FEFF 		bl	MX_FATFS_Init
 513              	.LVL24:
1436:Src/main.c    **** 
1437:Src/main.c    ****   /* init code for USB_HOST */
1438:Src/main.c    ****   MX_USB_HOST_Init();
 514              		.loc 1 1438 0
 515 0006 FFF7FEFF 		bl	MX_USB_HOST_Init
 516              	.LVL25:
1439:Src/main.c    **** 
1440:Src/main.c    ****   /* USER CODE BEGIN 5 */
1441:Src/main.c    **** 
1442:Src/main.c    ****   vTaskDelay(1000);
 517              		.loc 1 1442 0
 518 000a 4FF47A70 		mov	r0, #1000
 519 000e FFF7FEFF 		bl	vTaskDelay
 520              	.LVL26:
1443:Src/main.c    **** 
1444:Src/main.c    ****   xprintf("waiting for USB mass storage\n");
 521              		.loc 1 1444 0
 522 0012 0B48     		ldr	r0, .L12
 523 0014 FFF7FEFF 		bl	xprintf
 524              	.LVL27:
 525              	.L9:
1445:Src/main.c    **** 
1446:Src/main.c    ****   do
1447:Src/main.c    ****   {
1448:Src/main.c    **** 	  xprintf(".");
 526              		.loc 1 1448 0 discriminator 1
 527 0018 0A48     		ldr	r0, .L12+4
 528 001a FFF7FEFF 		bl	xprintf
 529              	.LVL28:
1449:Src/main.c    **** 	  vTaskDelay(250);
 530              		.loc 1 1449 0 discriminator 1
 531 001e FA20     		movs	r0, #250
 532 0020 FFF7FEFF 		bl	vTaskDelay
 533              	.LVL29:
1450:Src/main.c    ****   } while(Appli_state != APPLICATION_READY);
 534              		.loc 1 1450 0 discriminator 1
 535 0024 084B     		ldr	r3, .L12+8
 536 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 537 0028 022B     		cmp	r3, #2
 538 002a F5D1     		bne	.L9
1451:Src/main.c    **** 
1452:Src/main.c    **** 
1453:Src/main.c    ****   ////////////////////////////
1454:Src/main.c    ****   ////////////////////////////
1455:Src/main.c    **** 
1456:Src/main.c    ****   xprintf("Starting player...\n");
 539              		.loc 1 1456 0
 540 002c 0748     		ldr	r0, .L12+12
 541 002e FFF7FEFF 		bl	xprintf
 542              	.LVL30:
1457:Src/main.c    ****   mp3_player_fsm("1:/");
 543              		.loc 1 1457 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 36


 544 0032 0748     		ldr	r0, .L12+16
 545 0034 FFF7FEFF 		bl	mp3_player_fsm
 546              	.LVL31:
1458:Src/main.c    ****   xprintf("Player finished\n");
 547              		.loc 1 1458 0
 548 0038 0648     		ldr	r0, .L12+20
 549 003a FFF7FEFF 		bl	xprintf
 550              	.LVL32:
 551              	.L10:
 552 003e FEE7     		b	.L10
 553              	.L13:
 554              		.align	2
 555              	.L12:
 556 0040 00000000 		.word	.LC2
 557 0044 20000000 		.word	.LC3
 558 0048 00000000 		.word	Appli_state
 559 004c 24000000 		.word	.LC4
 560 0050 38000000 		.word	.LC5
 561 0054 3C000000 		.word	.LC6
 562              		.cfi_endproc
 563              	.LFE171:
 565              		.section	.text.__io_putchar,"ax",%progbits
 566              		.align	1
 567              		.global	__io_putchar
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 571              		.fpu fpv5-sp-d16
 573              	__io_putchar:
 574              	.LFB143:
 171:Src/main.c    **** 	uint8_t data = ch;
 575              		.loc 1 171 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580              	.LVL33:
 581              	.L15:
 176:Src/main.c    **** 		huart1.Instance->TDR = (uint16_t)data;
 582              		.loc 1 176 0 discriminator 1
 583 0000 044B     		ldr	r3, .L16
 584 0002 1B68     		ldr	r3, [r3]
 585 0004 DA69     		ldr	r2, [r3, #28]
 586 0006 12F0800F 		tst	r2, #128
 587 000a F9D0     		beq	.L15
 177:Src/main.c    **** 	#endif
 588              		.loc 1 177 0
 589 000c C0B2     		uxtb	r0, r0
 590              	.LVL34:
 591 000e 9862     		str	r0, [r3, #40]
 180:Src/main.c    **** 
 592              		.loc 1 180 0
 593 0010 0020     		movs	r0, #0
 594 0012 7047     		bx	lr
 595              	.L17:
 596              		.align	2
 597              	.L16:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 37


 598 0014 00000000 		.word	huart1
 599              		.cfi_endproc
 600              	.LFE143:
 602              		.section	.text.inkey,"ax",%progbits
 603              		.align	1
 604              		.global	inkey
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 608              		.fpu fpv5-sp-d16
 610              	inkey:
 611              	.LFB144:
 183:Src/main.c    **** 	uint32_t flags = huart1.Instance->ISR;
 612              		.loc 1 183 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 184:Src/main.c    **** 
 617              		.loc 1 184 0
 618 0000 064B     		ldr	r3, .L21
 619 0002 1B68     		ldr	r3, [r3]
 620 0004 DA69     		ldr	r2, [r3, #28]
 621              	.LVL35:
 186:Src/main.c    **** 	{
 622              		.loc 1 186 0
 623 0006 12F0280F 		tst	r2, #40
 624 000a 04D0     		beq	.L20
 188:Src/main.c    **** 		return (huart1.Instance->RDR);
 625              		.loc 1 188 0
 626 000c 0822     		movs	r2, #8
 627              	.LVL36:
 628 000e 1A62     		str	r2, [r3, #32]
 189:Src/main.c    **** 	}
 629              		.loc 1 189 0
 630 0010 586A     		ldr	r0, [r3, #36]
 631 0012 C0B2     		uxtb	r0, r0
 632 0014 7047     		bx	lr
 633              	.LVL37:
 634              	.L20:
 192:Src/main.c    **** }
 635              		.loc 1 192 0
 636 0016 0020     		movs	r0, #0
 193:Src/main.c    **** 
 637              		.loc 1 193 0
 638 0018 7047     		bx	lr
 639              	.L22:
 640 001a 00BF     		.align	2
 641              	.L21:
 642 001c 00000000 		.word	huart1
 643              		.cfi_endproc
 644              	.LFE144:
 646              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 647              		.align	1
 648              		.global	HAL_TIM_PeriodElapsedCallback
 649              		.syntax unified
 650              		.thumb
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 38


 651              		.thumb_func
 652              		.fpu fpv5-sp-d16
 654              	HAL_TIM_PeriodElapsedCallback:
 655              	.LFB172:
1459:Src/main.c    **** 
1460:Src/main.c    ****   /* Infinite loop */
1461:Src/main.c    ****   while(1);
1462:Src/main.c    ****   /* USER CODE END 5 */
1463:Src/main.c    **** }
1464:Src/main.c    **** 
1465:Src/main.c    **** /**
1466:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
1467:Src/main.c    ****   * @note   This function is called  when TIM6 interrupt took place, inside
1468:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
1469:Src/main.c    ****   * a global variable "uwTick" used as application time base.
1470:Src/main.c    ****   * @param  htim : TIM handle
1471:Src/main.c    ****   * @retval None
1472:Src/main.c    ****   */
1473:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1474:Src/main.c    **** {
 656              		.loc 1 1474 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              	.LVL38:
 661 0000 08B5     		push	{r3, lr}
 662              	.LCFI4:
 663              		.cfi_def_cfa_offset 8
 664              		.cfi_offset 3, -8
 665              		.cfi_offset 14, -4
1475:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
1476:Src/main.c    **** 
1477:Src/main.c    ****   /* USER CODE END Callback 0 */
1478:Src/main.c    ****   if (htim->Instance == TIM6) {
 666              		.loc 1 1478 0
 667 0002 0268     		ldr	r2, [r0]
 668 0004 034B     		ldr	r3, .L27
 669 0006 9A42     		cmp	r2, r3
 670 0008 00D0     		beq	.L26
 671              	.LVL39:
 672              	.L23:
1479:Src/main.c    ****     HAL_IncTick();
1480:Src/main.c    ****   }
1481:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
1482:Src/main.c    **** 
1483:Src/main.c    ****   /* USER CODE END Callback 1 */
1484:Src/main.c    **** }
 673              		.loc 1 1484 0
 674 000a 08BD     		pop	{r3, pc}
 675              	.LVL40:
 676              	.L26:
1479:Src/main.c    ****     HAL_IncTick();
 677              		.loc 1 1479 0
 678 000c FFF7FEFF 		bl	HAL_IncTick
 679              	.LVL41:
 680              		.loc 1 1484 0
 681 0010 FBE7     		b	.L23
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 39


 682              	.L28:
 683 0012 00BF     		.align	2
 684              	.L27:
 685 0014 00100040 		.word	1073745920
 686              		.cfi_endproc
 687              	.LFE172:
 689              		.section	.text._Error_Handler,"ax",%progbits
 690              		.align	1
 691              		.global	_Error_Handler
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv5-sp-d16
 697              	_Error_Handler:
 698              	.LFB173:
1485:Src/main.c    **** 
1486:Src/main.c    **** /**
1487:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
1488:Src/main.c    ****   * @param  file: The file name as string.
1489:Src/main.c    ****   * @param  line: The line in file as a number.
1490:Src/main.c    ****   * @retval None
1491:Src/main.c    ****   */
1492:Src/main.c    **** void _Error_Handler(char *file, int line)
1493:Src/main.c    **** {
 699              		.loc 1 1493 0
 700              		.cfi_startproc
 701              		@ Volatile: function does not return.
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		@ link register save eliminated.
 705              	.LVL42:
 706              	.L30:
 707 0000 FEE7     		b	.L30
 708              		.cfi_endproc
 709              	.LFE173:
 711              		.section	.text.MX_ADC3_Init,"ax",%progbits
 712              		.align	1
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 716              		.fpu fpv5-sp-d16
 718              	MX_ADC3_Init:
 719              	.LFB147:
 407:Src/main.c    **** 
 720              		.loc 1 407 0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 16
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 407:Src/main.c    **** 
 724              		.loc 1 407 0
 725 0000 00B5     		push	{lr}
 726              	.LCFI5:
 727              		.cfi_def_cfa_offset 4
 728              		.cfi_offset 14, -4
 729 0002 85B0     		sub	sp, sp, #20
 730              	.LCFI6:
 731              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 40


 413:Src/main.c    ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 732              		.loc 1 413 0
 733 0004 1648     		ldr	r0, .L37
 734 0006 174B     		ldr	r3, .L37+4
 735 0008 0360     		str	r3, [r0]
 414:Src/main.c    ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 736              		.loc 1 414 0
 737 000a 4FF48033 		mov	r3, #65536
 738 000e 4360     		str	r3, [r0, #4]
 415:Src/main.c    ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 739              		.loc 1 415 0
 740 0010 0023     		movs	r3, #0
 741 0012 8360     		str	r3, [r0, #8]
 416:Src/main.c    ****   hadc3.Init.ContinuousConvMode = DISABLE;
 742              		.loc 1 416 0
 743 0014 0361     		str	r3, [r0, #16]
 417:Src/main.c    ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 744              		.loc 1 417 0
 745 0016 8361     		str	r3, [r0, #24]
 418:Src/main.c    ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 746              		.loc 1 418 0
 747 0018 0362     		str	r3, [r0, #32]
 419:Src/main.c    ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 748              		.loc 1 419 0
 749 001a C362     		str	r3, [r0, #44]
 420:Src/main.c    ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 750              		.loc 1 420 0
 751 001c 124A     		ldr	r2, .L37+8
 752 001e 8262     		str	r2, [r0, #40]
 421:Src/main.c    ****   hadc3.Init.NbrOfConversion = 1;
 753              		.loc 1 421 0
 754 0020 C360     		str	r3, [r0, #12]
 422:Src/main.c    ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 755              		.loc 1 422 0
 756 0022 0122     		movs	r2, #1
 757 0024 C261     		str	r2, [r0, #28]
 423:Src/main.c    ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 758              		.loc 1 423 0
 759 0026 0363     		str	r3, [r0, #48]
 424:Src/main.c    ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 760              		.loc 1 424 0
 761 0028 4261     		str	r2, [r0, #20]
 425:Src/main.c    ****   {
 762              		.loc 1 425 0
 763 002a FFF7FEFF 		bl	HAL_ADC_Init
 764              	.LVL43:
 765 002e 68B9     		cbnz	r0, .L35
 432:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 766              		.loc 1 432 0
 767 0030 0423     		movs	r3, #4
 768 0032 0093     		str	r3, [sp]
 433:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 769              		.loc 1 433 0
 770 0034 0123     		movs	r3, #1
 771 0036 0193     		str	r3, [sp, #4]
 434:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 772              		.loc 1 434 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 41


 773 0038 0023     		movs	r3, #0
 774 003a 0293     		str	r3, [sp, #8]
 435:Src/main.c    ****   {
 775              		.loc 1 435 0
 776 003c 6946     		mov	r1, sp
 777 003e 0848     		ldr	r0, .L37
 778 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 779              	.LVL44:
 780 0044 38B9     		cbnz	r0, .L36
 440:Src/main.c    **** 
 781              		.loc 1 440 0
 782 0046 05B0     		add	sp, sp, #20
 783              	.LCFI7:
 784              		.cfi_remember_state
 785              		.cfi_def_cfa_offset 4
 786              		@ sp needed
 787 0048 5DF804FB 		ldr	pc, [sp], #4
 788              	.L35:
 789              	.LCFI8:
 790              		.cfi_restore_state
 427:Src/main.c    ****   }
 791              		.loc 1 427 0
 792 004c 40F2AB11 		movw	r1, #427
 793 0050 0648     		ldr	r0, .L37+12
 794 0052 FFF7FEFF 		bl	_Error_Handler
 795              	.LVL45:
 796              	.L36:
 437:Src/main.c    ****   }
 797              		.loc 1 437 0
 798 0056 40F2B511 		movw	r1, #437
 799 005a 0448     		ldr	r0, .L37+12
 800 005c FFF7FEFF 		bl	_Error_Handler
 801              	.LVL46:
 802              	.L38:
 803              		.align	2
 804              	.L37:
 805 0060 00000000 		.word	hadc3
 806 0064 00220140 		.word	1073816064
 807 0068 0100000F 		.word	251658241
 808 006c 00000000 		.word	.LC7
 809              		.cfi_endproc
 810              	.LFE147:
 812              		.section	.text.MX_CRC_Init,"ax",%progbits
 813              		.align	1
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 817              		.fpu fpv5-sp-d16
 819              	MX_CRC_Init:
 820              	.LFB148:
 444:Src/main.c    **** 
 821              		.loc 1 444 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825 0000 08B5     		push	{r3, lr}
 826              	.LCFI9:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 42


 827              		.cfi_def_cfa_offset 8
 828              		.cfi_offset 3, -8
 829              		.cfi_offset 14, -4
 446:Src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 830              		.loc 1 446 0
 831 0002 0948     		ldr	r0, .L43
 832 0004 094B     		ldr	r3, .L43+4
 833 0006 0360     		str	r3, [r0]
 447:Src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 834              		.loc 1 447 0
 835 0008 0023     		movs	r3, #0
 836 000a 0371     		strb	r3, [r0, #4]
 448:Src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 837              		.loc 1 448 0
 838 000c 4371     		strb	r3, [r0, #5]
 449:Src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 839              		.loc 1 449 0
 840 000e 4361     		str	r3, [r0, #20]
 450:Src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 841              		.loc 1 450 0
 842 0010 8361     		str	r3, [r0, #24]
 451:Src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 843              		.loc 1 451 0
 844 0012 0123     		movs	r3, #1
 845 0014 0362     		str	r3, [r0, #32]
 452:Src/main.c    ****   {
 846              		.loc 1 452 0
 847 0016 FFF7FEFF 		bl	HAL_CRC_Init
 848              	.LVL47:
 849 001a 00B9     		cbnz	r0, .L42
 457:Src/main.c    **** 
 850              		.loc 1 457 0
 851 001c 08BD     		pop	{r3, pc}
 852              	.L42:
 454:Src/main.c    ****   }
 853              		.loc 1 454 0
 854 001e 4FF4E371 		mov	r1, #454
 855 0022 0348     		ldr	r0, .L43+8
 856 0024 FFF7FEFF 		bl	_Error_Handler
 857              	.LVL48:
 858              	.L44:
 859              		.align	2
 860              	.L43:
 861 0028 00000000 		.word	hcrc
 862 002c 00300240 		.word	1073885184
 863 0030 00000000 		.word	.LC7
 864              		.cfi_endproc
 865              	.LFE148:
 867              		.section	.text.MX_DCMI_Init,"ax",%progbits
 868              		.align	1
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 872              		.fpu fpv5-sp-d16
 874              	MX_DCMI_Init:
 875              	.LFB149:
 461:Src/main.c    **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 43


 876              		.loc 1 461 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 0
 879              		@ frame_needed = 0, uses_anonymous_args = 0
 880 0000 08B5     		push	{r3, lr}
 881              	.LCFI10:
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 3, -8
 884              		.cfi_offset 14, -4
 463:Src/main.c    ****   hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 885              		.loc 1 463 0
 886 0002 0C48     		ldr	r0, .L49
 887 0004 0C4B     		ldr	r3, .L49+4
 888 0006 0360     		str	r3, [r0]
 464:Src/main.c    ****   hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 889              		.loc 1 464 0
 890 0008 0023     		movs	r3, #0
 891 000a 4360     		str	r3, [r0, #4]
 465:Src/main.c    ****   hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 892              		.loc 1 465 0
 893 000c 8360     		str	r3, [r0, #8]
 466:Src/main.c    ****   hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 894              		.loc 1 466 0
 895 000e C360     		str	r3, [r0, #12]
 467:Src/main.c    ****   hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 896              		.loc 1 467 0
 897 0010 0361     		str	r3, [r0, #16]
 468:Src/main.c    ****   hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
 898              		.loc 1 468 0
 899 0012 4361     		str	r3, [r0, #20]
 469:Src/main.c    ****   hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 900              		.loc 1 469 0
 901 0014 8361     		str	r3, [r0, #24]
 470:Src/main.c    ****   hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 902              		.loc 1 470 0
 903 0016 0362     		str	r3, [r0, #32]
 471:Src/main.c    ****   hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 904              		.loc 1 471 0
 905 0018 4362     		str	r3, [r0, #36]
 472:Src/main.c    ****   hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 906              		.loc 1 472 0
 907 001a 8362     		str	r3, [r0, #40]
 473:Src/main.c    ****   hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 908              		.loc 1 473 0
 909 001c C362     		str	r3, [r0, #44]
 474:Src/main.c    ****   if (HAL_DCMI_Init(&hdcmi) != HAL_OK)
 910              		.loc 1 474 0
 911 001e 0363     		str	r3, [r0, #48]
 475:Src/main.c    ****   {
 912              		.loc 1 475 0
 913 0020 FFF7FEFF 		bl	HAL_DCMI_Init
 914              	.LVL49:
 915 0024 00B9     		cbnz	r0, .L48
 480:Src/main.c    **** 
 916              		.loc 1 480 0
 917 0026 08BD     		pop	{r3, pc}
 918              	.L48:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 44


 477:Src/main.c    ****   }
 919              		.loc 1 477 0
 920 0028 40F2DD11 		movw	r1, #477
 921 002c 0348     		ldr	r0, .L49+8
 922 002e FFF7FEFF 		bl	_Error_Handler
 923              	.LVL50:
 924              	.L50:
 925 0032 00BF     		.align	2
 926              	.L49:
 927 0034 00000000 		.word	hdcmi
 928 0038 00000550 		.word	1342504960
 929 003c 00000000 		.word	.LC7
 930              		.cfi_endproc
 931              	.LFE149:
 933              		.section	.text.MX_DMA2D_Init,"ax",%progbits
 934              		.align	1
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 938              		.fpu fpv5-sp-d16
 940              	MX_DMA2D_Init:
 941              	.LFB150:
 484:Src/main.c    **** 
 942              		.loc 1 484 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946 0000 08B5     		push	{r3, lr}
 947              	.LCFI11:
 948              		.cfi_def_cfa_offset 8
 949              		.cfi_offset 3, -8
 950              		.cfi_offset 14, -4
 486:Src/main.c    ****   hdma2d.Init.Mode = DMA2D_M2M;
 951              		.loc 1 486 0
 952 0002 0F48     		ldr	r0, .L57
 953 0004 0F4B     		ldr	r3, .L57+4
 954 0006 0360     		str	r3, [r0]
 487:Src/main.c    ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 955              		.loc 1 487 0
 956 0008 0023     		movs	r3, #0
 957 000a 4360     		str	r3, [r0, #4]
 488:Src/main.c    ****   hdma2d.Init.OutputOffset = 0;
 958              		.loc 1 488 0
 959 000c 8360     		str	r3, [r0, #8]
 489:Src/main.c    ****   hdma2d.LayerCfg[1].InputOffset = 0;
 960              		.loc 1 489 0
 961 000e C360     		str	r3, [r0, #12]
 490:Src/main.c    ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 962              		.loc 1 490 0
 963 0010 8362     		str	r3, [r0, #40]
 491:Src/main.c    ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 964              		.loc 1 491 0
 965 0012 C362     		str	r3, [r0, #44]
 492:Src/main.c    ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 966              		.loc 1 492 0
 967 0014 0363     		str	r3, [r0, #48]
 493:Src/main.c    ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 45


 968              		.loc 1 493 0
 969 0016 4363     		str	r3, [r0, #52]
 494:Src/main.c    ****   {
 970              		.loc 1 494 0
 971 0018 FFF7FEFF 		bl	HAL_DMA2D_Init
 972              	.LVL51:
 973 001c 28B9     		cbnz	r0, .L55
 499:Src/main.c    ****   {
 974              		.loc 1 499 0
 975 001e 0121     		movs	r1, #1
 976 0020 0748     		ldr	r0, .L57
 977 0022 FFF7FEFF 		bl	HAL_DMA2D_ConfigLayer
 978              	.LVL52:
 979 0026 28B9     		cbnz	r0, .L56
 504:Src/main.c    **** 
 980              		.loc 1 504 0
 981 0028 08BD     		pop	{r3, pc}
 982              	.L55:
 496:Src/main.c    ****   }
 983              		.loc 1 496 0
 984 002a 4FF4F871 		mov	r1, #496
 985 002e 0648     		ldr	r0, .L57+8
 986 0030 FFF7FEFF 		bl	_Error_Handler
 987              	.LVL53:
 988              	.L56:
 501:Src/main.c    ****   }
 989              		.loc 1 501 0
 990 0034 40F2F511 		movw	r1, #501
 991 0038 0348     		ldr	r0, .L57+8
 992 003a FFF7FEFF 		bl	_Error_Handler
 993              	.LVL54:
 994              	.L58:
 995 003e 00BF     		.align	2
 996              	.L57:
 997 0040 00000000 		.word	hdma2d
 998 0044 00B00240 		.word	1073917952
 999 0048 00000000 		.word	.LC7
 1000              		.cfi_endproc
 1001              	.LFE150:
 1003              		.section	.text.MX_FMC_Init,"ax",%progbits
 1004              		.align	1
 1005              		.syntax unified
 1006              		.thumb
 1007              		.thumb_func
 1008              		.fpu fpv5-sp-d16
 1010              	MX_FMC_Init:
 1011              	.LFB169:
1212:Src/main.c    ****   FMC_SDRAM_TimingTypeDef SdramTiming;
 1012              		.loc 1 1212 0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 32
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 1016 0000 00B5     		push	{lr}
 1017              	.LCFI12:
 1018              		.cfi_def_cfa_offset 4
 1019              		.cfi_offset 14, -4
 1020 0002 89B0     		sub	sp, sp, #36
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 46


 1021              	.LCFI13:
 1022              		.cfi_def_cfa_offset 40
1217:Src/main.c    ****   /* hsdram1.Init */
 1023              		.loc 1 1217 0
 1024 0004 1648     		ldr	r0, .L63
 1025 0006 174B     		ldr	r3, .L63+4
 1026 0008 0360     		str	r3, [r0]
1219:Src/main.c    ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 1027              		.loc 1 1219 0
 1028 000a 0023     		movs	r3, #0
 1029 000c 4360     		str	r3, [r0, #4]
1220:Src/main.c    ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 1030              		.loc 1 1220 0
 1031 000e 8360     		str	r3, [r0, #8]
1221:Src/main.c    ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 1032              		.loc 1 1221 0
 1033 0010 0421     		movs	r1, #4
 1034 0012 C160     		str	r1, [r0, #12]
1222:Src/main.c    ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 1035              		.loc 1 1222 0
 1036 0014 1022     		movs	r2, #16
 1037 0016 0261     		str	r2, [r0, #16]
1223:Src/main.c    ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 1038              		.loc 1 1223 0
 1039 0018 4022     		movs	r2, #64
 1040 001a 4261     		str	r2, [r0, #20]
1224:Src/main.c    ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 1041              		.loc 1 1224 0
 1042 001c 4FF4C072 		mov	r2, #384
 1043 0020 8261     		str	r2, [r0, #24]
1225:Src/main.c    ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 1044              		.loc 1 1225 0
 1045 0022 C361     		str	r3, [r0, #28]
1226:Src/main.c    ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 1046              		.loc 1 1226 0
 1047 0024 4FF40062 		mov	r2, #2048
 1048 0028 0262     		str	r2, [r0, #32]
1227:Src/main.c    ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 1049              		.loc 1 1227 0
 1050 002a 4FF48052 		mov	r2, #4096
 1051 002e 4262     		str	r2, [r0, #36]
1228:Src/main.c    ****   /* SdramTiming */
 1052              		.loc 1 1228 0
 1053 0030 8362     		str	r3, [r0, #40]
1230:Src/main.c    ****   SdramTiming.ExitSelfRefreshDelay = 7;
 1054              		.loc 1 1230 0
 1055 0032 0223     		movs	r3, #2
 1056 0034 0193     		str	r3, [sp, #4]
1231:Src/main.c    ****   SdramTiming.SelfRefreshTime = 4;
 1057              		.loc 1 1231 0
 1058 0036 0722     		movs	r2, #7
 1059 0038 0292     		str	r2, [sp, #8]
1232:Src/main.c    ****   SdramTiming.RowCycleDelay = 7;
 1060              		.loc 1 1232 0
 1061 003a 0391     		str	r1, [sp, #12]
1233:Src/main.c    ****   SdramTiming.WriteRecoveryTime = 3;
 1062              		.loc 1 1233 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 47


 1063 003c 0492     		str	r2, [sp, #16]
1234:Src/main.c    ****   SdramTiming.RPDelay = 2;
 1064              		.loc 1 1234 0
 1065 003e 0322     		movs	r2, #3
 1066 0040 0592     		str	r2, [sp, #20]
1235:Src/main.c    ****   SdramTiming.RCDDelay = 2;
 1067              		.loc 1 1235 0
 1068 0042 0693     		str	r3, [sp, #24]
1236:Src/main.c    **** 
 1069              		.loc 1 1236 0
 1070 0044 0793     		str	r3, [sp, #28]
1238:Src/main.c    ****   {
 1071              		.loc 1 1238 0
 1072 0046 6944     		add	r1, sp, r1
 1073 0048 FFF7FEFF 		bl	HAL_SDRAM_Init
 1074              	.LVL55:
 1075 004c 10B9     		cbnz	r0, .L62
1243:Src/main.c    **** 
 1076              		.loc 1 1243 0
 1077 004e 09B0     		add	sp, sp, #36
 1078              	.LCFI14:
 1079              		.cfi_remember_state
 1080              		.cfi_def_cfa_offset 4
 1081              		@ sp needed
 1082 0050 5DF804FB 		ldr	pc, [sp], #4
 1083              	.L62:
 1084              	.LCFI15:
 1085              		.cfi_restore_state
1240:Src/main.c    ****   }
 1086              		.loc 1 1240 0
 1087 0054 4FF49B61 		mov	r1, #1240
 1088 0058 0348     		ldr	r0, .L63+8
 1089 005a FFF7FEFF 		bl	_Error_Handler
 1090              	.LVL56:
 1091              	.L64:
 1092 005e 00BF     		.align	2
 1093              	.L63:
 1094 0060 00000000 		.word	hsdram1
 1095 0064 400100A0 		.word	-1610612416
 1096 0068 00000000 		.word	.LC7
 1097              		.cfi_endproc
 1098              	.LFE169:
 1100              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1101              		.align	1
 1102              		.syntax unified
 1103              		.thumb
 1104              		.thumb_func
 1105              		.fpu fpv5-sp-d16
 1107              	MX_I2C1_Init:
 1108              	.LFB151:
 508:Src/main.c    **** 
 1109              		.loc 1 508 0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 0
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
 1113 0000 08B5     		push	{r3, lr}
 1114              	.LCFI16:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 48


 1115              		.cfi_def_cfa_offset 8
 1116              		.cfi_offset 3, -8
 1117              		.cfi_offset 14, -4
 510:Src/main.c    ****   hi2c1.Init.Timing = 0x00C0EAFF;
 1118              		.loc 1 510 0
 1119 0002 1548     		ldr	r0, .L73
 1120 0004 154B     		ldr	r3, .L73+4
 1121 0006 0360     		str	r3, [r0]
 511:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 1122              		.loc 1 511 0
 1123 0008 154B     		ldr	r3, .L73+8
 1124 000a 4360     		str	r3, [r0, #4]
 512:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1125              		.loc 1 512 0
 1126 000c 0023     		movs	r3, #0
 1127 000e 8360     		str	r3, [r0, #8]
 513:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1128              		.loc 1 513 0
 1129 0010 0122     		movs	r2, #1
 1130 0012 C260     		str	r2, [r0, #12]
 514:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 1131              		.loc 1 514 0
 1132 0014 0361     		str	r3, [r0, #16]
 515:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1133              		.loc 1 515 0
 1134 0016 4361     		str	r3, [r0, #20]
 516:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1135              		.loc 1 516 0
 1136 0018 8361     		str	r3, [r0, #24]
 517:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1137              		.loc 1 517 0
 1138 001a C361     		str	r3, [r0, #28]
 518:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1139              		.loc 1 518 0
 1140 001c 0362     		str	r3, [r0, #32]
 519:Src/main.c    ****   {
 1141              		.loc 1 519 0
 1142 001e FFF7FEFF 		bl	HAL_I2C_Init
 1143              	.LVL57:
 1144 0022 50B9     		cbnz	r0, .L70
 526:Src/main.c    ****   {
 1145              		.loc 1 526 0
 1146 0024 0021     		movs	r1, #0
 1147 0026 0C48     		ldr	r0, .L73
 1148 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1149              	.LVL58:
 1150 002c 50B9     		cbnz	r0, .L71
 533:Src/main.c    ****   {
 1151              		.loc 1 533 0
 1152 002e 0021     		movs	r1, #0
 1153 0030 0948     		ldr	r0, .L73
 1154 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1155              	.LVL59:
 1156 0036 50B9     		cbnz	r0, .L72
 538:Src/main.c    **** 
 1157              		.loc 1 538 0
 1158 0038 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 49


 1159              	.L70:
 521:Src/main.c    ****   }
 1160              		.loc 1 521 0
 1161 003a 40F20921 		movw	r1, #521
 1162 003e 0948     		ldr	r0, .L73+12
 1163 0040 FFF7FEFF 		bl	_Error_Handler
 1164              	.LVL60:
 1165              	.L71:
 528:Src/main.c    ****   }
 1166              		.loc 1 528 0
 1167 0044 4FF40471 		mov	r1, #528
 1168 0048 0648     		ldr	r0, .L73+12
 1169 004a FFF7FEFF 		bl	_Error_Handler
 1170              	.LVL61:
 1171              	.L72:
 535:Src/main.c    ****   }
 1172              		.loc 1 535 0
 1173 004e 40F21721 		movw	r1, #535
 1174 0052 0448     		ldr	r0, .L73+12
 1175 0054 FFF7FEFF 		bl	_Error_Handler
 1176              	.LVL62:
 1177              	.L74:
 1178              		.align	2
 1179              	.L73:
 1180 0058 00000000 		.word	hi2c1
 1181 005c 00540040 		.word	1073763328
 1182 0060 FFEAC000 		.word	12643071
 1183 0064 00000000 		.word	.LC7
 1184              		.cfi_endproc
 1185              	.LFE151:
 1187              		.section	.text.MX_I2C3_Init,"ax",%progbits
 1188              		.align	1
 1189              		.syntax unified
 1190              		.thumb
 1191              		.thumb_func
 1192              		.fpu fpv5-sp-d16
 1194              	MX_I2C3_Init:
 1195              	.LFB152:
 542:Src/main.c    **** 
 1196              		.loc 1 542 0
 1197              		.cfi_startproc
 1198              		@ args = 0, pretend = 0, frame = 0
 1199              		@ frame_needed = 0, uses_anonymous_args = 0
 1200 0000 08B5     		push	{r3, lr}
 1201              	.LCFI17:
 1202              		.cfi_def_cfa_offset 8
 1203              		.cfi_offset 3, -8
 1204              		.cfi_offset 14, -4
 544:Src/main.c    ****   hi2c3.Init.Timing = 0x00C0EAFF;
 1205              		.loc 1 544 0
 1206 0002 1548     		ldr	r0, .L83
 1207 0004 154B     		ldr	r3, .L83+4
 1208 0006 0360     		str	r3, [r0]
 545:Src/main.c    ****   hi2c3.Init.OwnAddress1 = 0;
 1209              		.loc 1 545 0
 1210 0008 154B     		ldr	r3, .L83+8
 1211 000a 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 50


 546:Src/main.c    ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1212              		.loc 1 546 0
 1213 000c 0023     		movs	r3, #0
 1214 000e 8360     		str	r3, [r0, #8]
 547:Src/main.c    ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1215              		.loc 1 547 0
 1216 0010 0122     		movs	r2, #1
 1217 0012 C260     		str	r2, [r0, #12]
 548:Src/main.c    ****   hi2c3.Init.OwnAddress2 = 0;
 1218              		.loc 1 548 0
 1219 0014 0361     		str	r3, [r0, #16]
 549:Src/main.c    ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1220              		.loc 1 549 0
 1221 0016 4361     		str	r3, [r0, #20]
 550:Src/main.c    ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1222              		.loc 1 550 0
 1223 0018 8361     		str	r3, [r0, #24]
 551:Src/main.c    ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1224              		.loc 1 551 0
 1225 001a C361     		str	r3, [r0, #28]
 552:Src/main.c    ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 1226              		.loc 1 552 0
 1227 001c 0362     		str	r3, [r0, #32]
 553:Src/main.c    ****   {
 1228              		.loc 1 553 0
 1229 001e FFF7FEFF 		bl	HAL_I2C_Init
 1230              	.LVL63:
 1231 0022 50B9     		cbnz	r0, .L80
 560:Src/main.c    ****   {
 1232              		.loc 1 560 0
 1233 0024 0021     		movs	r1, #0
 1234 0026 0C48     		ldr	r0, .L83
 1235 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1236              	.LVL64:
 1237 002c 50B9     		cbnz	r0, .L81
 567:Src/main.c    ****   {
 1238              		.loc 1 567 0
 1239 002e 0021     		movs	r1, #0
 1240 0030 0948     		ldr	r0, .L83
 1241 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1242              	.LVL65:
 1243 0036 50B9     		cbnz	r0, .L82
 572:Src/main.c    **** 
 1244              		.loc 1 572 0
 1245 0038 08BD     		pop	{r3, pc}
 1246              	.L80:
 555:Src/main.c    ****   }
 1247              		.loc 1 555 0
 1248 003a 40F22B21 		movw	r1, #555
 1249 003e 0948     		ldr	r0, .L83+12
 1250 0040 FFF7FEFF 		bl	_Error_Handler
 1251              	.LVL66:
 1252              	.L81:
 562:Src/main.c    ****   }
 1253              		.loc 1 562 0
 1254 0044 40F23221 		movw	r1, #562
 1255 0048 0648     		ldr	r0, .L83+12
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 51


 1256 004a FFF7FEFF 		bl	_Error_Handler
 1257              	.LVL67:
 1258              	.L82:
 569:Src/main.c    ****   }
 1259              		.loc 1 569 0
 1260 004e 40F23921 		movw	r1, #569
 1261 0052 0448     		ldr	r0, .L83+12
 1262 0054 FFF7FEFF 		bl	_Error_Handler
 1263              	.LVL68:
 1264              	.L84:
 1265              		.align	2
 1266              	.L83:
 1267 0058 00000000 		.word	hi2c3
 1268 005c 005C0040 		.word	1073765376
 1269 0060 FFEAC000 		.word	12643071
 1270 0064 00000000 		.word	.LC7
 1271              		.cfi_endproc
 1272              	.LFE152:
 1274              		.section	.text.MX_LTDC_Init,"ax",%progbits
 1275              		.align	1
 1276              		.syntax unified
 1277              		.thumb
 1278              		.thumb_func
 1279              		.fpu fpv5-sp-d16
 1281              	MX_LTDC_Init:
 1282              	.LFB153:
 576:Src/main.c    **** 
 1283              		.loc 1 576 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 56
 1286              		@ frame_needed = 0, uses_anonymous_args = 0
 1287 0000 00B5     		push	{lr}
 1288              	.LCFI18:
 1289              		.cfi_def_cfa_offset 4
 1290              		.cfi_offset 14, -4
 1291 0002 8FB0     		sub	sp, sp, #60
 1292              	.LCFI19:
 1293              		.cfi_def_cfa_offset 64
 580:Src/main.c    ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 1294              		.loc 1 580 0
 1295 0004 2948     		ldr	r0, .L91
 1296 0006 2A4B     		ldr	r3, .L91+4
 1297 0008 0360     		str	r3, [r0]
 581:Src/main.c    ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 1298              		.loc 1 581 0
 1299 000a 0023     		movs	r3, #0
 1300 000c 4360     		str	r3, [r0, #4]
 582:Src/main.c    ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 1301              		.loc 1 582 0
 1302 000e 8360     		str	r3, [r0, #8]
 583:Src/main.c    ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 1303              		.loc 1 583 0
 1304 0010 C360     		str	r3, [r0, #12]
 584:Src/main.c    ****   hltdc.Init.HorizontalSync = 40;
 1305              		.loc 1 584 0
 1306 0012 0361     		str	r3, [r0, #16]
 585:Src/main.c    ****   hltdc.Init.VerticalSync = 9;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 52


 1307              		.loc 1 585 0
 1308 0014 2822     		movs	r2, #40
 1309 0016 4261     		str	r2, [r0, #20]
 586:Src/main.c    ****   hltdc.Init.AccumulatedHBP = 53;
 1310              		.loc 1 586 0
 1311 0018 0922     		movs	r2, #9
 1312 001a 8261     		str	r2, [r0, #24]
 587:Src/main.c    ****   hltdc.Init.AccumulatedVBP = 11;
 1313              		.loc 1 587 0
 1314 001c 3522     		movs	r2, #53
 1315 001e C261     		str	r2, [r0, #28]
 588:Src/main.c    ****   hltdc.Init.AccumulatedActiveW = 533;
 1316              		.loc 1 588 0
 1317 0020 0B22     		movs	r2, #11
 1318 0022 0262     		str	r2, [r0, #32]
 589:Src/main.c    ****   hltdc.Init.AccumulatedActiveH = 283;
 1319              		.loc 1 589 0
 1320 0024 40F21522 		movw	r2, #533
 1321 0028 4262     		str	r2, [r0, #36]
 590:Src/main.c    ****   hltdc.Init.TotalWidth = 565;
 1322              		.loc 1 590 0
 1323 002a 40F21B12 		movw	r2, #283
 1324 002e 8262     		str	r2, [r0, #40]
 591:Src/main.c    ****   hltdc.Init.TotalHeigh = 285;
 1325              		.loc 1 591 0
 1326 0030 40F23522 		movw	r2, #565
 1327 0034 C262     		str	r2, [r0, #44]
 592:Src/main.c    ****   hltdc.Init.Backcolor.Blue = 0;
 1328              		.loc 1 592 0
 1329 0036 40F21D12 		movw	r2, #285
 1330 003a 0263     		str	r2, [r0, #48]
 593:Src/main.c    ****   hltdc.Init.Backcolor.Green = 0;
 1331              		.loc 1 593 0
 1332 003c 80F83430 		strb	r3, [r0, #52]
 594:Src/main.c    ****   hltdc.Init.Backcolor.Red = 0;
 1333              		.loc 1 594 0
 1334 0040 80F83530 		strb	r3, [r0, #53]
 595:Src/main.c    ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 1335              		.loc 1 595 0
 1336 0044 80F83630 		strb	r3, [r0, #54]
 596:Src/main.c    ****   {
 1337              		.loc 1 596 0
 1338 0048 FFF7FEFF 		bl	HAL_LTDC_Init
 1339              	.LVL69:
 1340 004c 20BB     		cbnz	r0, .L89
 601:Src/main.c    ****   pLayerCfg.WindowX1 = 480;
 1341              		.loc 1 601 0
 1342 004e 0022     		movs	r2, #0
 1343 0050 0192     		str	r2, [sp, #4]
 602:Src/main.c    ****   pLayerCfg.WindowY0 = 0;
 1344              		.loc 1 602 0
 1345 0052 4FF4F071 		mov	r1, #480
 1346 0056 0291     		str	r1, [sp, #8]
 603:Src/main.c    ****   pLayerCfg.WindowY1 = 272;
 1347              		.loc 1 603 0
 1348 0058 0392     		str	r2, [sp, #12]
 604:Src/main.c    ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 53


 1349              		.loc 1 604 0
 1350 005a 4FF48873 		mov	r3, #272
 1351 005e 0493     		str	r3, [sp, #16]
 605:Src/main.c    ****   pLayerCfg.Alpha = 255;
 1352              		.loc 1 605 0
 1353 0060 0592     		str	r2, [sp, #20]
 606:Src/main.c    ****   pLayerCfg.Alpha0 = 0;
 1354              		.loc 1 606 0
 1355 0062 FF20     		movs	r0, #255
 1356 0064 0690     		str	r0, [sp, #24]
 607:Src/main.c    ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 1357              		.loc 1 607 0
 1358 0066 0792     		str	r2, [sp, #28]
 608:Src/main.c    ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 1359              		.loc 1 608 0
 1360 0068 4FF4C060 		mov	r0, #1536
 1361 006c 0890     		str	r0, [sp, #32]
 609:Src/main.c    ****   pLayerCfg.FBStartAdress = 0xC0000000;
 1362              		.loc 1 609 0
 1363 006e 0720     		movs	r0, #7
 1364 0070 0990     		str	r0, [sp, #36]
 610:Src/main.c    ****   pLayerCfg.ImageWidth = 480;
 1365              		.loc 1 610 0
 1366 0072 4FF04040 		mov	r0, #-1073741824
 1367 0076 0A90     		str	r0, [sp, #40]
 611:Src/main.c    ****   pLayerCfg.ImageHeight = 272;
 1368              		.loc 1 611 0
 1369 0078 0B91     		str	r1, [sp, #44]
 612:Src/main.c    ****   pLayerCfg.Backcolor.Blue = 0;
 1370              		.loc 1 612 0
 1371 007a 0C93     		str	r3, [sp, #48]
 613:Src/main.c    ****   pLayerCfg.Backcolor.Green = 0;
 1372              		.loc 1 613 0
 1373 007c 8DF83420 		strb	r2, [sp, #52]
 614:Src/main.c    ****   pLayerCfg.Backcolor.Red = 0;
 1374              		.loc 1 614 0
 1375 0080 8DF83520 		strb	r2, [sp, #53]
 615:Src/main.c    ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 1376              		.loc 1 615 0
 1377 0084 8DF83620 		strb	r2, [sp, #54]
 616:Src/main.c    ****   {
 1378              		.loc 1 616 0
 1379 0088 01A9     		add	r1, sp, #4
 1380 008a 0848     		ldr	r0, .L91
 1381 008c FFF7FEFF 		bl	HAL_LTDC_ConfigLayer
 1382              	.LVL70:
 1383 0090 38B9     		cbnz	r0, .L90
 621:Src/main.c    **** 
 1384              		.loc 1 621 0
 1385 0092 0FB0     		add	sp, sp, #60
 1386              	.LCFI20:
 1387              		.cfi_remember_state
 1388              		.cfi_def_cfa_offset 4
 1389              		@ sp needed
 1390 0094 5DF804FB 		ldr	pc, [sp], #4
 1391              	.L89:
 1392              	.LCFI21:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 54


 1393              		.cfi_restore_state
 598:Src/main.c    ****   }
 1394              		.loc 1 598 0
 1395 0098 40F25621 		movw	r1, #598
 1396 009c 0548     		ldr	r0, .L91+8
 1397 009e FFF7FEFF 		bl	_Error_Handler
 1398              	.LVL71:
 1399              	.L90:
 618:Src/main.c    ****   }
 1400              		.loc 1 618 0
 1401 00a2 40F26A21 		movw	r1, #618
 1402 00a6 0348     		ldr	r0, .L91+8
 1403 00a8 FFF7FEFF 		bl	_Error_Handler
 1404              	.LVL72:
 1405              	.L92:
 1406              		.align	2
 1407              	.L91:
 1408 00ac 00000000 		.word	hltdc
 1409 00b0 00680140 		.word	1073833984
 1410 00b4 00000000 		.word	.LC7
 1411              		.cfi_endproc
 1412              	.LFE153:
 1414              		.section	.text.MX_QUADSPI_Init,"ax",%progbits
 1415              		.align	1
 1416              		.syntax unified
 1417              		.thumb
 1418              		.thumb_func
 1419              		.fpu fpv5-sp-d16
 1421              	MX_QUADSPI_Init:
 1422              	.LFB154:
 625:Src/main.c    **** 
 1423              		.loc 1 625 0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 0, uses_anonymous_args = 0
 1427 0000 08B5     		push	{r3, lr}
 1428              	.LCFI22:
 1429              		.cfi_def_cfa_offset 8
 1430              		.cfi_offset 3, -8
 1431              		.cfi_offset 14, -4
 628:Src/main.c    ****   hqspi.Init.ClockPrescaler = 255;
 1432              		.loc 1 628 0
 1433 0002 0B48     		ldr	r0, .L97
 1434 0004 0B4B     		ldr	r3, .L97+4
 1435 0006 0360     		str	r3, [r0]
 629:Src/main.c    ****   hqspi.Init.FifoThreshold = 1;
 1436              		.loc 1 629 0
 1437 0008 FF23     		movs	r3, #255
 1438 000a 4360     		str	r3, [r0, #4]
 630:Src/main.c    ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 1439              		.loc 1 630 0
 1440 000c 0122     		movs	r2, #1
 1441 000e 8260     		str	r2, [r0, #8]
 631:Src/main.c    ****   hqspi.Init.FlashSize = 1;
 1442              		.loc 1 631 0
 1443 0010 0023     		movs	r3, #0
 1444 0012 C360     		str	r3, [r0, #12]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 55


 632:Src/main.c    ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 1445              		.loc 1 632 0
 1446 0014 0261     		str	r2, [r0, #16]
 633:Src/main.c    ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 1447              		.loc 1 633 0
 1448 0016 4361     		str	r3, [r0, #20]
 634:Src/main.c    ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 1449              		.loc 1 634 0
 1450 0018 8361     		str	r3, [r0, #24]
 635:Src/main.c    ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 1451              		.loc 1 635 0
 1452 001a C361     		str	r3, [r0, #28]
 636:Src/main.c    ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 1453              		.loc 1 636 0
 1454 001c 0362     		str	r3, [r0, #32]
 637:Src/main.c    ****   {
 1455              		.loc 1 637 0
 1456 001e FFF7FEFF 		bl	HAL_QSPI_Init
 1457              	.LVL73:
 1458 0022 00B9     		cbnz	r0, .L96
 642:Src/main.c    **** 
 1459              		.loc 1 642 0
 1460 0024 08BD     		pop	{r3, pc}
 1461              	.L96:
 639:Src/main.c    ****   }
 1462              		.loc 1 639 0
 1463 0026 40F27F21 		movw	r1, #639
 1464 002a 0348     		ldr	r0, .L97+8
 1465 002c FFF7FEFF 		bl	_Error_Handler
 1466              	.LVL74:
 1467              	.L98:
 1468              		.align	2
 1469              	.L97:
 1470 0030 00000000 		.word	hqspi
 1471 0034 001000A0 		.word	-1610608640
 1472 0038 00000000 		.word	.LC7
 1473              		.cfi_endproc
 1474              	.LFE154:
 1476              		.section	.text.MX_RTC_Init,"ax",%progbits
 1477              		.align	1
 1478              		.syntax unified
 1479              		.thumb
 1480              		.thumb_func
 1481              		.fpu fpv5-sp-d16
 1483              	MX_RTC_Init:
 1484              	.LFB155:
 646:Src/main.c    **** 
 1485              		.loc 1 646 0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 72
 1488              		@ frame_needed = 0, uses_anonymous_args = 0
 1489 0000 00B5     		push	{lr}
 1490              	.LCFI23:
 1491              		.cfi_def_cfa_offset 4
 1492              		.cfi_offset 14, -4
 1493 0002 93B0     		sub	sp, sp, #76
 1494              	.LCFI24:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 56


 1495              		.cfi_def_cfa_offset 80
 662:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1496              		.loc 1 662 0
 1497 0004 3C48     		ldr	r0, .L113
 1498 0006 3D4B     		ldr	r3, .L113+4
 1499 0008 0360     		str	r3, [r0]
 663:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 1500              		.loc 1 663 0
 1501 000a 0023     		movs	r3, #0
 1502 000c 4360     		str	r3, [r0, #4]
 664:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 1503              		.loc 1 664 0
 1504 000e 7F22     		movs	r2, #127
 1505 0010 8260     		str	r2, [r0, #8]
 665:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1506              		.loc 1 665 0
 1507 0012 FF22     		movs	r2, #255
 1508 0014 C260     		str	r2, [r0, #12]
 666:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1509              		.loc 1 666 0
 1510 0016 0361     		str	r3, [r0, #16]
 667:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1511              		.loc 1 667 0
 1512 0018 4361     		str	r3, [r0, #20]
 668:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1513              		.loc 1 668 0
 1514 001a 8361     		str	r3, [r0, #24]
 669:Src/main.c    ****   {
 1515              		.loc 1 669 0
 1516 001c FFF7FEFF 		bl	HAL_RTC_Init
 1517              	.LVL75:
 1518 0020 0028     		cmp	r0, #0
 1519 0022 4BD1     		bne	.L107
 676:Src/main.c    ****   sTime.Minutes = 0x0;
 1520              		.loc 1 676 0
 1521 0024 0023     		movs	r3, #0
 1522 0026 8DF83030 		strb	r3, [sp, #48]
 677:Src/main.c    ****   sTime.Seconds = 0x0;
 1523              		.loc 1 677 0
 1524 002a 8DF83130 		strb	r3, [sp, #49]
 678:Src/main.c    ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1525              		.loc 1 678 0
 1526 002e 8DF83230 		strb	r3, [sp, #50]
 679:Src/main.c    ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1527              		.loc 1 679 0
 1528 0032 1093     		str	r3, [sp, #64]
 680:Src/main.c    ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1529              		.loc 1 680 0
 1530 0034 1193     		str	r3, [sp, #68]
 681:Src/main.c    ****   {
 1531              		.loc 1 681 0
 1532 0036 0122     		movs	r2, #1
 1533 0038 0CA9     		add	r1, sp, #48
 1534 003a 2F48     		ldr	r0, .L113
 1535 003c FFF7FEFF 		bl	HAL_RTC_SetTime
 1536              	.LVL76:
 1537 0040 0028     		cmp	r0, #0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 57


 1538 0042 40D1     		bne	.L108
 686:Src/main.c    ****   sDate.Month = RTC_MONTH_JANUARY;
 1539              		.loc 1 686 0
 1540 0044 0122     		movs	r2, #1
 1541 0046 8DF82C20 		strb	r2, [sp, #44]
 687:Src/main.c    ****   sDate.Date = 0x1;
 1542              		.loc 1 687 0
 1543 004a 8DF82D20 		strb	r2, [sp, #45]
 688:Src/main.c    ****   sDate.Year = 0x0;
 1544              		.loc 1 688 0
 1545 004e 8DF82E20 		strb	r2, [sp, #46]
 689:Src/main.c    **** 
 1546              		.loc 1 689 0
 1547 0052 0023     		movs	r3, #0
 1548 0054 8DF82F30 		strb	r3, [sp, #47]
 691:Src/main.c    ****   {
 1549              		.loc 1 691 0
 1550 0058 0BA9     		add	r1, sp, #44
 1551 005a 2748     		ldr	r0, .L113
 1552 005c FFF7FEFF 		bl	HAL_RTC_SetDate
 1553              	.LVL77:
 1554 0060 0028     		cmp	r0, #0
 1555 0062 35D1     		bne	.L109
 698:Src/main.c    ****   sAlarm.AlarmTime.Minutes = 0x0;
 1556              		.loc 1 698 0
 1557 0064 0023     		movs	r3, #0
 1558 0066 8DF80030 		strb	r3, [sp]
 699:Src/main.c    ****   sAlarm.AlarmTime.Seconds = 0x0;
 1559              		.loc 1 699 0
 1560 006a 8DF80130 		strb	r3, [sp, #1]
 700:Src/main.c    ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 1561              		.loc 1 700 0
 1562 006e 8DF80230 		strb	r3, [sp, #2]
 701:Src/main.c    ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1563              		.loc 1 701 0
 1564 0072 0193     		str	r3, [sp, #4]
 702:Src/main.c    ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1565              		.loc 1 702 0
 1566 0074 0493     		str	r3, [sp, #16]
 703:Src/main.c    ****   sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 1567              		.loc 1 703 0
 1568 0076 0593     		str	r3, [sp, #20]
 704:Src/main.c    ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 1569              		.loc 1 704 0
 1570 0078 0693     		str	r3, [sp, #24]
 705:Src/main.c    ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 1571              		.loc 1 705 0
 1572 007a 0793     		str	r3, [sp, #28]
 706:Src/main.c    ****   sAlarm.AlarmDateWeekDay = 0x1;
 1573              		.loc 1 706 0
 1574 007c 0893     		str	r3, [sp, #32]
 707:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_A;
 1575              		.loc 1 707 0
 1576 007e 0122     		movs	r2, #1
 1577 0080 8DF82420 		strb	r2, [sp, #36]
 708:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 1578              		.loc 1 708 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 58


 1579 0084 4FF48073 		mov	r3, #256
 1580 0088 0A93     		str	r3, [sp, #40]
 709:Src/main.c    ****   {
 1581              		.loc 1 709 0
 1582 008a 6946     		mov	r1, sp
 1583 008c 1A48     		ldr	r0, .L113
 1584 008e FFF7FEFF 		bl	HAL_RTC_SetAlarm
 1585              	.LVL78:
 1586 0092 10BB     		cbnz	r0, .L110
 716:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_B;
 1587              		.loc 1 716 0
 1588 0094 0122     		movs	r2, #1
 1589 0096 8DF82420 		strb	r2, [sp, #36]
 717:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 1590              		.loc 1 717 0
 1591 009a 4FF40073 		mov	r3, #512
 1592 009e 0A93     		str	r3, [sp, #40]
 718:Src/main.c    ****   {
 1593              		.loc 1 718 0
 1594 00a0 6946     		mov	r1, sp
 1595 00a2 1548     		ldr	r0, .L113
 1596 00a4 FFF7FEFF 		bl	HAL_RTC_SetAlarm
 1597              	.LVL79:
 1598 00a8 E0B9     		cbnz	r0, .L111
 725:Src/main.c    ****   {
 1599              		.loc 1 725 0
 1600 00aa 0222     		movs	r2, #2
 1601 00ac 0021     		movs	r1, #0
 1602 00ae 1248     		ldr	r0, .L113
 1603 00b0 FFF7FEFF 		bl	HAL_RTCEx_SetTimeStamp
 1604              	.LVL80:
 1605 00b4 D8B9     		cbnz	r0, .L112
 730:Src/main.c    **** 
 1606              		.loc 1 730 0
 1607 00b6 13B0     		add	sp, sp, #76
 1608              	.LCFI25:
 1609              		.cfi_remember_state
 1610              		.cfi_def_cfa_offset 4
 1611              		@ sp needed
 1612 00b8 5DF804FB 		ldr	pc, [sp], #4
 1613              	.L107:
 1614              	.LCFI26:
 1615              		.cfi_restore_state
 671:Src/main.c    ****   }
 1616              		.loc 1 671 0
 1617 00bc 40F29F21 		movw	r1, #671
 1618 00c0 0F48     		ldr	r0, .L113+8
 1619 00c2 FFF7FEFF 		bl	_Error_Handler
 1620              	.LVL81:
 1621              	.L108:
 683:Src/main.c    ****   }
 1622              		.loc 1 683 0
 1623 00c6 40F2AB21 		movw	r1, #683
 1624 00ca 0D48     		ldr	r0, .L113+8
 1625 00cc FFF7FEFF 		bl	_Error_Handler
 1626              	.LVL82:
 1627              	.L109:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 59


 693:Src/main.c    ****   }
 1628              		.loc 1 693 0
 1629 00d0 40F2B521 		movw	r1, #693
 1630 00d4 0A48     		ldr	r0, .L113+8
 1631 00d6 FFF7FEFF 		bl	_Error_Handler
 1632              	.LVL83:
 1633              	.L110:
 711:Src/main.c    ****   }
 1634              		.loc 1 711 0
 1635 00da 40F2C721 		movw	r1, #711
 1636 00de 0848     		ldr	r0, .L113+8
 1637 00e0 FFF7FEFF 		bl	_Error_Handler
 1638              	.LVL84:
 1639              	.L111:
 720:Src/main.c    ****   }
 1640              		.loc 1 720 0
 1641 00e4 4FF43471 		mov	r1, #720
 1642 00e8 0548     		ldr	r0, .L113+8
 1643 00ea FFF7FEFF 		bl	_Error_Handler
 1644              	.LVL85:
 1645              	.L112:
 727:Src/main.c    ****   }
 1646              		.loc 1 727 0
 1647 00ee 40F2D721 		movw	r1, #727
 1648 00f2 0348     		ldr	r0, .L113+8
 1649 00f4 FFF7FEFF 		bl	_Error_Handler
 1650              	.LVL86:
 1651              	.L114:
 1652              		.align	2
 1653              	.L113:
 1654 00f8 00000000 		.word	hrtc
 1655 00fc 00280040 		.word	1073752064
 1656 0100 00000000 		.word	.LC7
 1657              		.cfi_endproc
 1658              	.LFE155:
 1660              		.section	.text.MX_SAI2_Init,"ax",%progbits
 1661              		.align	1
 1662              		.syntax unified
 1663              		.thumb
 1664              		.thumb_func
 1665              		.fpu fpv5-sp-d16
 1667              	MX_SAI2_Init:
 1668              	.LFB156:
 734:Src/main.c    **** 
 1669              		.loc 1 734 0
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 0
 1672              		@ frame_needed = 0, uses_anonymous_args = 0
 1673 0000 08B5     		push	{r3, lr}
 1674              	.LCFI27:
 1675              		.cfi_def_cfa_offset 8
 1676              		.cfi_offset 3, -8
 1677              		.cfi_offset 14, -4
 736:Src/main.c    ****   hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 1678              		.loc 1 736 0
 1679 0002 2648     		ldr	r0, .L121
 1680 0004 264B     		ldr	r3, .L121+4
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 60


 1681 0006 0360     		str	r3, [r0]
 737:Src/main.c    ****   hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 1682              		.loc 1 737 0
 1683 0008 0023     		movs	r3, #0
 1684 000a 0363     		str	r3, [r0, #48]
 738:Src/main.c    ****   hsai_BlockA2.Init.DataSize = SAI_DATASIZE_24;
 1685              		.loc 1 738 0
 1686 000c 4360     		str	r3, [r0, #4]
 739:Src/main.c    ****   hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 1687              		.loc 1 739 0
 1688 000e C022     		movs	r2, #192
 1689 0010 4263     		str	r2, [r0, #52]
 740:Src/main.c    ****   hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 1690              		.loc 1 740 0
 1691 0012 8363     		str	r3, [r0, #56]
 741:Src/main.c    ****   hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 1692              		.loc 1 741 0
 1693 0014 C363     		str	r3, [r0, #60]
 742:Src/main.c    ****   hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 1694              		.loc 1 742 0
 1695 0016 8360     		str	r3, [r0, #8]
 743:Src/main.c    ****   hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 1696              		.loc 1 743 0
 1697 0018 0361     		str	r3, [r0, #16]
 744:Src/main.c    ****   hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 1698              		.loc 1 744 0
 1699 001a 4361     		str	r3, [r0, #20]
 745:Src/main.c    ****   hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 1700              		.loc 1 745 0
 1701 001c 8361     		str	r3, [r0, #24]
 746:Src/main.c    ****   hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 1702              		.loc 1 746 0
 1703 001e 214A     		ldr	r2, .L121+8
 1704 0020 C261     		str	r2, [r0, #28]
 747:Src/main.c    ****   hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 1705              		.loc 1 747 0
 1706 0022 C360     		str	r3, [r0, #12]
 748:Src/main.c    ****   hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 1707              		.loc 1 748 0
 1708 0024 4362     		str	r3, [r0, #36]
 749:Src/main.c    ****   hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 1709              		.loc 1 749 0
 1710 0026 8362     		str	r3, [r0, #40]
 750:Src/main.c    ****   hsai_BlockA2.FrameInit.FrameLength = 8;
 1711              		.loc 1 750 0
 1712 0028 C362     		str	r3, [r0, #44]
 751:Src/main.c    ****   hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 1713              		.loc 1 751 0
 1714 002a 0822     		movs	r2, #8
 1715 002c 0264     		str	r2, [r0, #64]
 752:Src/main.c    ****   hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 1716              		.loc 1 752 0
 1717 002e 0122     		movs	r2, #1
 1718 0030 4264     		str	r2, [r0, #68]
 753:Src/main.c    ****   hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 1719              		.loc 1 753 0
 1720 0032 8364     		str	r3, [r0, #72]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 61


 754:Src/main.c    ****   hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 1721              		.loc 1 754 0
 1722 0034 C364     		str	r3, [r0, #76]
 755:Src/main.c    ****   hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 1723              		.loc 1 755 0
 1724 0036 0365     		str	r3, [r0, #80]
 756:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 1725              		.loc 1 756 0
 1726 0038 4365     		str	r3, [r0, #84]
 757:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotNumber = 1;
 1727              		.loc 1 757 0
 1728 003a 8365     		str	r3, [r0, #88]
 758:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 1729              		.loc 1 758 0
 1730 003c C265     		str	r2, [r0, #92]
 759:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK)
 1731              		.loc 1 759 0
 1732 003e 0366     		str	r3, [r0, #96]
 760:Src/main.c    ****   {
 1733              		.loc 1 760 0
 1734 0040 FFF7FEFF 		bl	HAL_SAI_Init
 1735              	.LVL87:
 1736 0044 00BB     		cbnz	r0, .L119
 765:Src/main.c    ****   hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 1737              		.loc 1 765 0
 1738 0046 1848     		ldr	r0, .L121+12
 1739 0048 184B     		ldr	r3, .L121+16
 1740 004a 0360     		str	r3, [r0]
 766:Src/main.c    ****   hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 1741              		.loc 1 766 0
 1742 004c 0023     		movs	r3, #0
 1743 004e 0363     		str	r3, [r0, #48]
 767:Src/main.c    ****   hsai_BlockB2.Init.DataSize = SAI_DATASIZE_24;
 1744              		.loc 1 767 0
 1745 0050 0322     		movs	r2, #3
 1746 0052 4260     		str	r2, [r0, #4]
 768:Src/main.c    ****   hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 1747              		.loc 1 768 0
 1748 0054 C022     		movs	r2, #192
 1749 0056 4263     		str	r2, [r0, #52]
 769:Src/main.c    ****   hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 1750              		.loc 1 769 0
 1751 0058 8363     		str	r3, [r0, #56]
 770:Src/main.c    ****   hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 1752              		.loc 1 770 0
 1753 005a C363     		str	r3, [r0, #60]
 771:Src/main.c    ****   hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 1754              		.loc 1 771 0
 1755 005c 0122     		movs	r2, #1
 1756 005e 8260     		str	r2, [r0, #8]
 772:Src/main.c    ****   hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 1757              		.loc 1 772 0
 1758 0060 0361     		str	r3, [r0, #16]
 773:Src/main.c    ****   hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 1759              		.loc 1 773 0
 1760 0062 8361     		str	r3, [r0, #24]
 774:Src/main.c    ****   hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 62


 1761              		.loc 1 774 0
 1762 0064 C360     		str	r3, [r0, #12]
 775:Src/main.c    ****   hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 1763              		.loc 1 775 0
 1764 0066 4362     		str	r3, [r0, #36]
 776:Src/main.c    ****   hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 1765              		.loc 1 776 0
 1766 0068 8362     		str	r3, [r0, #40]
 777:Src/main.c    ****   hsai_BlockB2.FrameInit.FrameLength = 8;
 1767              		.loc 1 777 0
 1768 006a C362     		str	r3, [r0, #44]
 778:Src/main.c    ****   hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 1769              		.loc 1 778 0
 1770 006c 0821     		movs	r1, #8
 1771 006e 0164     		str	r1, [r0, #64]
 779:Src/main.c    ****   hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 1772              		.loc 1 779 0
 1773 0070 4264     		str	r2, [r0, #68]
 780:Src/main.c    ****   hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 1774              		.loc 1 780 0
 1775 0072 8364     		str	r3, [r0, #72]
 781:Src/main.c    ****   hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 1776              		.loc 1 781 0
 1777 0074 C364     		str	r3, [r0, #76]
 782:Src/main.c    ****   hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 1778              		.loc 1 782 0
 1779 0076 0365     		str	r3, [r0, #80]
 783:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 1780              		.loc 1 783 0
 1781 0078 4365     		str	r3, [r0, #84]
 784:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotNumber = 1;
 1782              		.loc 1 784 0
 1783 007a 8365     		str	r3, [r0, #88]
 785:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 1784              		.loc 1 785 0
 1785 007c C265     		str	r2, [r0, #92]
 786:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK)
 1786              		.loc 1 786 0
 1787 007e 0366     		str	r3, [r0, #96]
 787:Src/main.c    ****   {
 1788              		.loc 1 787 0
 1789 0080 FFF7FEFF 		bl	HAL_SAI_Init
 1790              	.LVL88:
 1791 0084 28B9     		cbnz	r0, .L120
 792:Src/main.c    **** 
 1792              		.loc 1 792 0
 1793 0086 08BD     		pop	{r3, pc}
 1794              	.L119:
 762:Src/main.c    ****   }
 1795              		.loc 1 762 0
 1796 0088 40F2FA21 		movw	r1, #762
 1797 008c 0848     		ldr	r0, .L121+20
 1798 008e FFF7FEFF 		bl	_Error_Handler
 1799              	.LVL89:
 1800              	.L120:
 789:Src/main.c    ****   }
 1801              		.loc 1 789 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 63


 1802 0092 40F21531 		movw	r1, #789
 1803 0096 0648     		ldr	r0, .L121+20
 1804 0098 FFF7FEFF 		bl	_Error_Handler
 1805              	.LVL90:
 1806              	.L122:
 1807              		.align	2
 1808              	.L121:
 1809 009c 00000000 		.word	hsai_BlockA2
 1810 00a0 045C0140 		.word	1073830916
 1811 00a4 00EE0200 		.word	192000
 1812 00a8 00000000 		.word	hsai_BlockB2
 1813 00ac 245C0140 		.word	1073830948
 1814 00b0 00000000 		.word	.LC7
 1815              		.cfi_endproc
 1816              	.LFE156:
 1818              		.section	.text.MX_SPDIFRX_Init,"ax",%progbits
 1819              		.align	1
 1820              		.syntax unified
 1821              		.thumb
 1822              		.thumb_func
 1823              		.fpu fpv5-sp-d16
 1825              	MX_SPDIFRX_Init:
 1826              	.LFB158:
 810:Src/main.c    **** 
 1827              		.loc 1 810 0
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 0
 1830              		@ frame_needed = 0, uses_anonymous_args = 0
 1831 0000 08B5     		push	{r3, lr}
 1832              	.LCFI28:
 1833              		.cfi_def_cfa_offset 8
 1834              		.cfi_offset 3, -8
 1835              		.cfi_offset 14, -4
 812:Src/main.c    ****   hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 1836              		.loc 1 812 0
 1837 0002 0C48     		ldr	r0, .L127
 1838 0004 4FF04023 		mov	r3, #1073758208
 1839 0008 0360     		str	r3, [r0]
 813:Src/main.c    ****   hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 1840              		.loc 1 813 0
 1841 000a 0023     		movs	r3, #0
 1842 000c 4360     		str	r3, [r0, #4]
 814:Src/main.c    ****   hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 1843              		.loc 1 814 0
 1844 000e 8360     		str	r3, [r0, #8]
 815:Src/main.c    ****   hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 1845              		.loc 1 815 0
 1846 0010 C360     		str	r3, [r0, #12]
 816:Src/main.c    ****   hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 1847              		.loc 1 816 0
 1848 0012 0361     		str	r3, [r0, #16]
 817:Src/main.c    ****   hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 1849              		.loc 1 817 0
 1850 0014 4361     		str	r3, [r0, #20]
 818:Src/main.c    ****   hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 1851              		.loc 1 818 0
 1852 0016 8361     		str	r3, [r0, #24]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 64


 819:Src/main.c    ****   hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 1853              		.loc 1 819 0
 1854 0018 C361     		str	r3, [r0, #28]
 820:Src/main.c    ****   hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 1855              		.loc 1 820 0
 1856 001a 0362     		str	r3, [r0, #32]
 821:Src/main.c    ****   hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 1857              		.loc 1 821 0
 1858 001c 4362     		str	r3, [r0, #36]
 822:Src/main.c    ****   if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK)
 1859              		.loc 1 822 0
 1860 001e 8362     		str	r3, [r0, #40]
 823:Src/main.c    ****   {
 1861              		.loc 1 823 0
 1862 0020 FFF7FEFF 		bl	HAL_SPDIFRX_Init
 1863              	.LVL91:
 1864 0024 00B9     		cbnz	r0, .L126
 828:Src/main.c    **** 
 1865              		.loc 1 828 0
 1866 0026 08BD     		pop	{r3, pc}
 1867              	.L126:
 825:Src/main.c    ****   }
 1868              		.loc 1 825 0
 1869 0028 40F23931 		movw	r1, #825
 1870 002c 0248     		ldr	r0, .L127+4
 1871 002e FFF7FEFF 		bl	_Error_Handler
 1872              	.LVL92:
 1873              	.L128:
 1874 0032 00BF     		.align	2
 1875              	.L127:
 1876 0034 00000000 		.word	hspdif
 1877 0038 00000000 		.word	.LC7
 1878              		.cfi_endproc
 1879              	.LFE158:
 1881              		.section	.text.MX_SPI2_Init,"ax",%progbits
 1882              		.align	1
 1883              		.syntax unified
 1884              		.thumb
 1885              		.thumb_func
 1886              		.fpu fpv5-sp-d16
 1888              	MX_SPI2_Init:
 1889              	.LFB159:
 832:Src/main.c    **** 
 1890              		.loc 1 832 0
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 0, uses_anonymous_args = 0
 1894 0000 08B5     		push	{r3, lr}
 1895              	.LCFI29:
 1896              		.cfi_def_cfa_offset 8
 1897              		.cfi_offset 3, -8
 1898              		.cfi_offset 14, -4
 835:Src/main.c    ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 1899              		.loc 1 835 0
 1900 0002 1148     		ldr	r0, .L133
 1901 0004 114B     		ldr	r3, .L133+4
 1902 0006 0360     		str	r3, [r0]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 65


 836:Src/main.c    ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 1903              		.loc 1 836 0
 1904 0008 4FF48273 		mov	r3, #260
 1905 000c 4360     		str	r3, [r0, #4]
 837:Src/main.c    ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 1906              		.loc 1 837 0
 1907 000e 0023     		movs	r3, #0
 1908 0010 8360     		str	r3, [r0, #8]
 838:Src/main.c    ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 1909              		.loc 1 838 0
 1910 0012 4FF44072 		mov	r2, #768
 1911 0016 C260     		str	r2, [r0, #12]
 839:Src/main.c    ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 1912              		.loc 1 839 0
 1913 0018 0361     		str	r3, [r0, #16]
 840:Src/main.c    ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 1914              		.loc 1 840 0
 1915 001a 4361     		str	r3, [r0, #20]
 841:Src/main.c    ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1916              		.loc 1 841 0
 1917 001c 4FF40072 		mov	r2, #512
 1918 0020 8261     		str	r2, [r0, #24]
 842:Src/main.c    ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1919              		.loc 1 842 0
 1920 0022 C361     		str	r3, [r0, #28]
 843:Src/main.c    ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 1921              		.loc 1 843 0
 1922 0024 0362     		str	r3, [r0, #32]
 844:Src/main.c    ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1923              		.loc 1 844 0
 1924 0026 4362     		str	r3, [r0, #36]
 845:Src/main.c    ****   hspi2.Init.CRCPolynomial = 7;
 1925              		.loc 1 845 0
 1926 0028 8362     		str	r3, [r0, #40]
 846:Src/main.c    ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 1927              		.loc 1 846 0
 1928 002a 0722     		movs	r2, #7
 1929 002c C262     		str	r2, [r0, #44]
 847:Src/main.c    ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1930              		.loc 1 847 0
 1931 002e 0363     		str	r3, [r0, #48]
 848:Src/main.c    ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 1932              		.loc 1 848 0
 1933 0030 0823     		movs	r3, #8
 1934 0032 4363     		str	r3, [r0, #52]
 849:Src/main.c    ****   {
 1935              		.loc 1 849 0
 1936 0034 FFF7FEFF 		bl	HAL_SPI_Init
 1937              	.LVL93:
 1938 0038 00B9     		cbnz	r0, .L132
 854:Src/main.c    **** 
 1939              		.loc 1 854 0
 1940 003a 08BD     		pop	{r3, pc}
 1941              	.L132:
 851:Src/main.c    ****   }
 1942              		.loc 1 851 0
 1943 003c 40F25331 		movw	r1, #851
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 66


 1944 0040 0348     		ldr	r0, .L133+8
 1945 0042 FFF7FEFF 		bl	_Error_Handler
 1946              	.LVL94:
 1947              	.L134:
 1948 0046 00BF     		.align	2
 1949              	.L133:
 1950 0048 00000000 		.word	hspi2
 1951 004c 00380040 		.word	1073756160
 1952 0050 00000000 		.word	.LC7
 1953              		.cfi_endproc
 1954              	.LFE159:
 1956              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1957              		.align	1
 1958              		.syntax unified
 1959              		.thumb
 1960              		.thumb_func
 1961              		.fpu fpv5-sp-d16
 1963              	MX_TIM1_Init:
 1964              	.LFB160:
 858:Src/main.c    **** 
 1965              		.loc 1 858 0
 1966              		.cfi_startproc
 1967              		@ args = 0, pretend = 0, frame = 104
 1968              		@ frame_needed = 0, uses_anonymous_args = 0
 1969 0000 00B5     		push	{lr}
 1970              	.LCFI30:
 1971              		.cfi_def_cfa_offset 4
 1972              		.cfi_offset 14, -4
 1973 0002 9BB0     		sub	sp, sp, #108
 1974              	.LCFI31:
 1975              		.cfi_def_cfa_offset 112
 865:Src/main.c    ****   htim1.Init.Prescaler = 0;
 1976              		.loc 1 865 0
 1977 0004 3748     		ldr	r0, .L149
 1978 0006 384B     		ldr	r3, .L149+4
 1979 0008 0360     		str	r3, [r0]
 866:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1980              		.loc 1 866 0
 1981 000a 0023     		movs	r3, #0
 1982 000c 4360     		str	r3, [r0, #4]
 867:Src/main.c    ****   htim1.Init.Period = 0;
 1983              		.loc 1 867 0
 1984 000e 8360     		str	r3, [r0, #8]
 868:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1985              		.loc 1 868 0
 1986 0010 C360     		str	r3, [r0, #12]
 869:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 1987              		.loc 1 869 0
 1988 0012 0361     		str	r3, [r0, #16]
 870:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1989              		.loc 1 870 0
 1990 0014 4361     		str	r3, [r0, #20]
 871:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1991              		.loc 1 871 0
 1992 0016 8361     		str	r3, [r0, #24]
 872:Src/main.c    ****   {
 1993              		.loc 1 872 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 67


 1994 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1995              	.LVL95:
 1996 001c 0028     		cmp	r0, #0
 1997 001e 42D1     		bne	.L143
 877:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1998              		.loc 1 877 0
 1999 0020 1AA9     		add	r1, sp, #104
 2000 0022 4FF48053 		mov	r3, #4096
 2001 0026 41F8103D 		str	r3, [r1, #-16]!
 878:Src/main.c    ****   {
 2002              		.loc 1 878 0
 2003 002a 2E48     		ldr	r0, .L149
 2004 002c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2005              	.LVL96:
 2006 0030 0028     		cmp	r0, #0
 2007 0032 3DD1     		bne	.L144
 883:Src/main.c    ****   {
 2008              		.loc 1 883 0
 2009 0034 2B48     		ldr	r0, .L149
 2010 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2011              	.LVL97:
 2012 003a 0028     		cmp	r0, #0
 2013 003c 3DD1     		bne	.L145
 888:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2014              		.loc 1 888 0
 2015 003e 0023     		movs	r3, #0
 2016 0040 1393     		str	r3, [sp, #76]
 889:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2017              		.loc 1 889 0
 2018 0042 1493     		str	r3, [sp, #80]
 890:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 2019              		.loc 1 890 0
 2020 0044 1593     		str	r3, [sp, #84]
 891:Src/main.c    ****   {
 2021              		.loc 1 891 0
 2022 0046 13A9     		add	r1, sp, #76
 2023 0048 2648     		ldr	r0, .L149
 2024 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2025              	.LVL98:
 2026 004e 0028     		cmp	r0, #0
 2027 0050 38D1     		bne	.L146
 896:Src/main.c    ****   sConfigOC.Pulse = 0;
 2028              		.loc 1 896 0
 2029 0052 6023     		movs	r3, #96
 2030 0054 0C93     		str	r3, [sp, #48]
 897:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2031              		.loc 1 897 0
 2032 0056 0022     		movs	r2, #0
 2033 0058 0D92     		str	r2, [sp, #52]
 898:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 2034              		.loc 1 898 0
 2035 005a 0E92     		str	r2, [sp, #56]
 899:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2036              		.loc 1 899 0
 2037 005c 0F92     		str	r2, [sp, #60]
 900:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 2038              		.loc 1 900 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 68


 2039 005e 1092     		str	r2, [sp, #64]
 901:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 2040              		.loc 1 901 0
 2041 0060 1192     		str	r2, [sp, #68]
 902:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2042              		.loc 1 902 0
 2043 0062 1292     		str	r2, [sp, #72]
 903:Src/main.c    ****   {
 2044              		.loc 1 903 0
 2045 0064 0CA9     		add	r1, sp, #48
 2046 0066 1F48     		ldr	r0, .L149
 2047 0068 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2048              	.LVL99:
 2049 006c 0028     		cmp	r0, #0
 2050 006e 2ED1     		bne	.L147
 908:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 2051              		.loc 1 908 0
 2052 0070 0023     		movs	r3, #0
 2053 0072 0193     		str	r3, [sp, #4]
 909:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 2054              		.loc 1 909 0
 2055 0074 0293     		str	r3, [sp, #8]
 910:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 2056              		.loc 1 910 0
 2057 0076 0393     		str	r3, [sp, #12]
 911:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 2058              		.loc 1 911 0
 2059 0078 0493     		str	r3, [sp, #16]
 912:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 2060              		.loc 1 912 0
 2061 007a 0593     		str	r3, [sp, #20]
 913:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 2062              		.loc 1 913 0
 2063 007c 4FF40052 		mov	r2, #8192
 2064 0080 0692     		str	r2, [sp, #24]
 914:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 2065              		.loc 1 914 0
 2066 0082 0793     		str	r3, [sp, #28]
 915:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 2067              		.loc 1 915 0
 2068 0084 0893     		str	r3, [sp, #32]
 916:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 2069              		.loc 1 916 0
 2070 0086 4FF00072 		mov	r2, #33554432
 2071 008a 0992     		str	r2, [sp, #36]
 917:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 2072              		.loc 1 917 0
 2073 008c 0A93     		str	r3, [sp, #40]
 918:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 2074              		.loc 1 918 0
 2075 008e 0B93     		str	r3, [sp, #44]
 919:Src/main.c    ****   {
 2076              		.loc 1 919 0
 2077 0090 01A9     		add	r1, sp, #4
 2078 0092 1448     		ldr	r0, .L149
 2079 0094 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 2080              	.LVL100:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 69


 2081 0098 F0B9     		cbnz	r0, .L148
 924:Src/main.c    **** 
 2082              		.loc 1 924 0
 2083 009a 1248     		ldr	r0, .L149
 2084 009c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2085              	.LVL101:
 926:Src/main.c    **** 
 2086              		.loc 1 926 0
 2087 00a0 1BB0     		add	sp, sp, #108
 2088              	.LCFI32:
 2089              		.cfi_remember_state
 2090              		.cfi_def_cfa_offset 4
 2091              		@ sp needed
 2092 00a2 5DF804FB 		ldr	pc, [sp], #4
 2093              	.L143:
 2094              	.LCFI33:
 2095              		.cfi_restore_state
 874:Src/main.c    ****   }
 2096              		.loc 1 874 0
 2097 00a6 40F26A31 		movw	r1, #874
 2098 00aa 1048     		ldr	r0, .L149+8
 2099 00ac FFF7FEFF 		bl	_Error_Handler
 2100              	.LVL102:
 2101              	.L144:
 880:Src/main.c    ****   }
 2102              		.loc 1 880 0
 2103 00b0 4FF45C71 		mov	r1, #880
 2104 00b4 0D48     		ldr	r0, .L149+8
 2105 00b6 FFF7FEFF 		bl	_Error_Handler
 2106              	.LVL103:
 2107              	.L145:
 885:Src/main.c    ****   }
 2108              		.loc 1 885 0
 2109 00ba 40F27531 		movw	r1, #885
 2110 00be 0B48     		ldr	r0, .L149+8
 2111 00c0 FFF7FEFF 		bl	_Error_Handler
 2112              	.LVL104:
 2113              	.L146:
 893:Src/main.c    ****   }
 2114              		.loc 1 893 0
 2115 00c4 40F27D31 		movw	r1, #893
 2116 00c8 0848     		ldr	r0, .L149+8
 2117 00ca FFF7FEFF 		bl	_Error_Handler
 2118              	.LVL105:
 2119              	.L147:
 905:Src/main.c    ****   }
 2120              		.loc 1 905 0
 2121 00ce 40F28931 		movw	r1, #905
 2122 00d2 0648     		ldr	r0, .L149+8
 2123 00d4 FFF7FEFF 		bl	_Error_Handler
 2124              	.LVL106:
 2125              	.L148:
 921:Src/main.c    ****   }
 2126              		.loc 1 921 0
 2127 00d8 40F29931 		movw	r1, #921
 2128 00dc 0348     		ldr	r0, .L149+8
 2129 00de FFF7FEFF 		bl	_Error_Handler
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 70


 2130              	.LVL107:
 2131              	.L150:
 2132 00e2 00BF     		.align	2
 2133              	.L149:
 2134 00e4 00000000 		.word	htim1
 2135 00e8 00000140 		.word	1073807360
 2136 00ec 00000000 		.word	.LC7
 2137              		.cfi_endproc
 2138              	.LFE160:
 2140              		.section	.text.MX_TIM2_Init,"ax",%progbits
 2141              		.align	1
 2142              		.syntax unified
 2143              		.thumb
 2144              		.thumb_func
 2145              		.fpu fpv5-sp-d16
 2147              	MX_TIM2_Init:
 2148              	.LFB161:
 930:Src/main.c    **** 
 2149              		.loc 1 930 0
 2150              		.cfi_startproc
 2151              		@ args = 0, pretend = 0, frame = 56
 2152              		@ frame_needed = 0, uses_anonymous_args = 0
 2153 0000 00B5     		push	{lr}
 2154              	.LCFI34:
 2155              		.cfi_def_cfa_offset 4
 2156              		.cfi_offset 14, -4
 2157 0002 8FB0     		sub	sp, sp, #60
 2158              	.LCFI35:
 2159              		.cfi_def_cfa_offset 64
 936:Src/main.c    ****   htim2.Init.Prescaler = 0;
 2160              		.loc 1 936 0
 2161 0004 2548     		ldr	r0, .L163
 2162 0006 4FF08043 		mov	r3, #1073741824
 2163 000a 0360     		str	r3, [r0]
 937:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2164              		.loc 1 937 0
 2165 000c 0023     		movs	r3, #0
 2166 000e 4360     		str	r3, [r0, #4]
 938:Src/main.c    ****   htim2.Init.Period = 0;
 2167              		.loc 1 938 0
 2168 0010 8360     		str	r3, [r0, #8]
 939:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2169              		.loc 1 939 0
 2170 0012 C360     		str	r3, [r0, #12]
 940:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2171              		.loc 1 940 0
 2172 0014 0361     		str	r3, [r0, #16]
 941:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 2173              		.loc 1 941 0
 2174 0016 8361     		str	r3, [r0, #24]
 942:Src/main.c    ****   {
 2175              		.loc 1 942 0
 2176 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2177              	.LVL108:
 2178 001c 28BB     		cbnz	r0, .L158
 947:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 2179              		.loc 1 947 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 71


 2180 001e 0EA9     		add	r1, sp, #56
 2181 0020 4FF48053 		mov	r3, #4096
 2182 0024 41F8103D 		str	r3, [r1, #-16]!
 948:Src/main.c    ****   {
 2183              		.loc 1 948 0
 2184 0028 1C48     		ldr	r0, .L163
 2185 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2186              	.LVL109:
 2187 002e 08BB     		cbnz	r0, .L159
 953:Src/main.c    ****   {
 2188              		.loc 1 953 0
 2189 0030 1A48     		ldr	r0, .L163
 2190 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2191              	.LVL110:
 2192 0036 10BB     		cbnz	r0, .L160
 958:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2193              		.loc 1 958 0
 2194 0038 0023     		movs	r3, #0
 2195 003a 0793     		str	r3, [sp, #28]
 959:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2196              		.loc 1 959 0
 2197 003c 0993     		str	r3, [sp, #36]
 960:Src/main.c    ****   {
 2198              		.loc 1 960 0
 2199 003e 07A9     		add	r1, sp, #28
 2200 0040 1648     		ldr	r0, .L163
 2201 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2202              	.LVL111:
 2203 0046 F8B9     		cbnz	r0, .L161
 965:Src/main.c    ****   sConfigOC.Pulse = 0;
 2204              		.loc 1 965 0
 2205 0048 6023     		movs	r3, #96
 2206 004a 0093     		str	r3, [sp]
 966:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2207              		.loc 1 966 0
 2208 004c 0022     		movs	r2, #0
 2209 004e 0192     		str	r2, [sp, #4]
 967:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2210              		.loc 1 967 0
 2211 0050 0292     		str	r2, [sp, #8]
 968:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2212              		.loc 1 968 0
 2213 0052 0492     		str	r2, [sp, #16]
 969:Src/main.c    ****   {
 2214              		.loc 1 969 0
 2215 0054 6946     		mov	r1, sp
 2216 0056 1148     		ldr	r0, .L163
 2217 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2218              	.LVL112:
 2219 005c C8B9     		cbnz	r0, .L162
 974:Src/main.c    **** 
 2220              		.loc 1 974 0
 2221 005e 0F48     		ldr	r0, .L163
 2222 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2223              	.LVL113:
 976:Src/main.c    **** 
 2224              		.loc 1 976 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 72


 2225 0064 0FB0     		add	sp, sp, #60
 2226              	.LCFI36:
 2227              		.cfi_remember_state
 2228              		.cfi_def_cfa_offset 4
 2229              		@ sp needed
 2230 0066 5DF804FB 		ldr	pc, [sp], #4
 2231              	.L158:
 2232              	.LCFI37:
 2233              		.cfi_restore_state
 944:Src/main.c    ****   }
 2234              		.loc 1 944 0
 2235 006a 4FF46C71 		mov	r1, #944
 2236 006e 0C48     		ldr	r0, .L163+4
 2237 0070 FFF7FEFF 		bl	_Error_Handler
 2238              	.LVL114:
 2239              	.L159:
 950:Src/main.c    ****   }
 2240              		.loc 1 950 0
 2241 0074 40F2B631 		movw	r1, #950
 2242 0078 0948     		ldr	r0, .L163+4
 2243 007a FFF7FEFF 		bl	_Error_Handler
 2244              	.LVL115:
 2245              	.L160:
 955:Src/main.c    ****   }
 2246              		.loc 1 955 0
 2247 007e 40F2BB31 		movw	r1, #955
 2248 0082 0748     		ldr	r0, .L163+4
 2249 0084 FFF7FEFF 		bl	_Error_Handler
 2250              	.LVL116:
 2251              	.L161:
 962:Src/main.c    ****   }
 2252              		.loc 1 962 0
 2253 0088 40F2C231 		movw	r1, #962
 2254 008c 0448     		ldr	r0, .L163+4
 2255 008e FFF7FEFF 		bl	_Error_Handler
 2256              	.LVL117:
 2257              	.L162:
 971:Src/main.c    ****   }
 2258              		.loc 1 971 0
 2259 0092 40F2CB31 		movw	r1, #971
 2260 0096 0248     		ldr	r0, .L163+4
 2261 0098 FFF7FEFF 		bl	_Error_Handler
 2262              	.LVL118:
 2263              	.L164:
 2264              		.align	2
 2265              	.L163:
 2266 009c 00000000 		.word	htim2
 2267 00a0 00000000 		.word	.LC7
 2268              		.cfi_endproc
 2269              	.LFE161:
 2271              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2272              		.align	1
 2273              		.syntax unified
 2274              		.thumb
 2275              		.thumb_func
 2276              		.fpu fpv5-sp-d16
 2278              	MX_TIM3_Init:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 73


 2279              	.LFB162:
 980:Src/main.c    **** 
 2280              		.loc 1 980 0
 2281              		.cfi_startproc
 2282              		@ args = 0, pretend = 0, frame = 56
 2283              		@ frame_needed = 0, uses_anonymous_args = 0
 2284 0000 00B5     		push	{lr}
 2285              	.LCFI38:
 2286              		.cfi_def_cfa_offset 4
 2287              		.cfi_offset 14, -4
 2288 0002 8FB0     		sub	sp, sp, #60
 2289              	.LCFI39:
 2290              		.cfi_def_cfa_offset 64
 986:Src/main.c    ****   htim3.Init.Prescaler = 0;
 2291              		.loc 1 986 0
 2292 0004 2548     		ldr	r0, .L177
 2293 0006 264B     		ldr	r3, .L177+4
 2294 0008 0360     		str	r3, [r0]
 987:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2295              		.loc 1 987 0
 2296 000a 0023     		movs	r3, #0
 2297 000c 4360     		str	r3, [r0, #4]
 988:Src/main.c    ****   htim3.Init.Period = 0;
 2298              		.loc 1 988 0
 2299 000e 8360     		str	r3, [r0, #8]
 989:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2300              		.loc 1 989 0
 2301 0010 C360     		str	r3, [r0, #12]
 990:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2302              		.loc 1 990 0
 2303 0012 0361     		str	r3, [r0, #16]
 991:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2304              		.loc 1 991 0
 2305 0014 8361     		str	r3, [r0, #24]
 992:Src/main.c    ****   {
 2306              		.loc 1 992 0
 2307 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2308              	.LVL119:
 2309 001a 28BB     		cbnz	r0, .L172
 997:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2310              		.loc 1 997 0
 2311 001c 0EA9     		add	r1, sp, #56
 2312 001e 4FF48053 		mov	r3, #4096
 2313 0022 41F8103D 		str	r3, [r1, #-16]!
 998:Src/main.c    ****   {
 2314              		.loc 1 998 0
 2315 0026 1D48     		ldr	r0, .L177
 2316 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2317              	.LVL120:
 2318 002c 08BB     		cbnz	r0, .L173
1003:Src/main.c    ****   {
 2319              		.loc 1 1003 0
 2320 002e 1B48     		ldr	r0, .L177
 2321 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2322              	.LVL121:
 2323 0034 10BB     		cbnz	r0, .L174
1008:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 74


 2324              		.loc 1 1008 0
 2325 0036 0023     		movs	r3, #0
 2326 0038 0793     		str	r3, [sp, #28]
1009:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2327              		.loc 1 1009 0
 2328 003a 0993     		str	r3, [sp, #36]
1010:Src/main.c    ****   {
 2329              		.loc 1 1010 0
 2330 003c 07A9     		add	r1, sp, #28
 2331 003e 1748     		ldr	r0, .L177
 2332 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2333              	.LVL122:
 2334 0044 F8B9     		cbnz	r0, .L175
1015:Src/main.c    ****   sConfigOC.Pulse = 0;
 2335              		.loc 1 1015 0
 2336 0046 6023     		movs	r3, #96
 2337 0048 0093     		str	r3, [sp]
1016:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2338              		.loc 1 1016 0
 2339 004a 0022     		movs	r2, #0
 2340 004c 0192     		str	r2, [sp, #4]
1017:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2341              		.loc 1 1017 0
 2342 004e 0292     		str	r2, [sp, #8]
1018:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2343              		.loc 1 1018 0
 2344 0050 0492     		str	r2, [sp, #16]
1019:Src/main.c    ****   {
 2345              		.loc 1 1019 0
 2346 0052 6946     		mov	r1, sp
 2347 0054 1148     		ldr	r0, .L177
 2348 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2349              	.LVL123:
 2350 005a C8B9     		cbnz	r0, .L176
1024:Src/main.c    **** 
 2351              		.loc 1 1024 0
 2352 005c 0F48     		ldr	r0, .L177
 2353 005e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2354              	.LVL124:
1026:Src/main.c    **** 
 2355              		.loc 1 1026 0
 2356 0062 0FB0     		add	sp, sp, #60
 2357              	.LCFI40:
 2358              		.cfi_remember_state
 2359              		.cfi_def_cfa_offset 4
 2360              		@ sp needed
 2361 0064 5DF804FB 		ldr	pc, [sp], #4
 2362              	.L172:
 2363              	.LCFI41:
 2364              		.cfi_restore_state
 994:Src/main.c    ****   }
 2365              		.loc 1 994 0
 2366 0068 40F2E231 		movw	r1, #994
 2367 006c 0D48     		ldr	r0, .L177+8
 2368 006e FFF7FEFF 		bl	_Error_Handler
 2369              	.LVL125:
 2370              	.L173:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 75


1000:Src/main.c    ****   }
 2371              		.loc 1 1000 0
 2372 0072 4FF47A71 		mov	r1, #1000
 2373 0076 0B48     		ldr	r0, .L177+8
 2374 0078 FFF7FEFF 		bl	_Error_Handler
 2375              	.LVL126:
 2376              	.L174:
1005:Src/main.c    ****   }
 2377              		.loc 1 1005 0
 2378 007c 40F2ED31 		movw	r1, #1005
 2379 0080 0848     		ldr	r0, .L177+8
 2380 0082 FFF7FEFF 		bl	_Error_Handler
 2381              	.LVL127:
 2382              	.L175:
1012:Src/main.c    ****   }
 2383              		.loc 1 1012 0
 2384 0086 4FF47D71 		mov	r1, #1012
 2385 008a 0648     		ldr	r0, .L177+8
 2386 008c FFF7FEFF 		bl	_Error_Handler
 2387              	.LVL128:
 2388              	.L176:
1021:Src/main.c    ****   }
 2389              		.loc 1 1021 0
 2390 0090 40F2FD31 		movw	r1, #1021
 2391 0094 0348     		ldr	r0, .L177+8
 2392 0096 FFF7FEFF 		bl	_Error_Handler
 2393              	.LVL129:
 2394              	.L178:
 2395 009a 00BF     		.align	2
 2396              	.L177:
 2397 009c 00000000 		.word	htim3
 2398 00a0 00040040 		.word	1073742848
 2399 00a4 00000000 		.word	.LC7
 2400              		.cfi_endproc
 2401              	.LFE162:
 2403              		.section	.text.MX_TIM5_Init,"ax",%progbits
 2404              		.align	1
 2405              		.syntax unified
 2406              		.thumb
 2407              		.thumb_func
 2408              		.fpu fpv5-sp-d16
 2410              	MX_TIM5_Init:
 2411              	.LFB163:
1030:Src/main.c    **** 
 2412              		.loc 1 1030 0
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 56
 2415              		@ frame_needed = 0, uses_anonymous_args = 0
 2416 0000 00B5     		push	{lr}
 2417              	.LCFI42:
 2418              		.cfi_def_cfa_offset 4
 2419              		.cfi_offset 14, -4
 2420 0002 8FB0     		sub	sp, sp, #60
 2421              	.LCFI43:
 2422              		.cfi_def_cfa_offset 64
1036:Src/main.c    ****   htim5.Init.Prescaler = 0;
 2423              		.loc 1 1036 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 76


 2424 0004 2548     		ldr	r0, .L191
 2425 0006 264B     		ldr	r3, .L191+4
 2426 0008 0360     		str	r3, [r0]
1037:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2427              		.loc 1 1037 0
 2428 000a 0023     		movs	r3, #0
 2429 000c 4360     		str	r3, [r0, #4]
1038:Src/main.c    ****   htim5.Init.Period = 0;
 2430              		.loc 1 1038 0
 2431 000e 8360     		str	r3, [r0, #8]
1039:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2432              		.loc 1 1039 0
 2433 0010 C360     		str	r3, [r0, #12]
1040:Src/main.c    ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2434              		.loc 1 1040 0
 2435 0012 0361     		str	r3, [r0, #16]
1041:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 2436              		.loc 1 1041 0
 2437 0014 8361     		str	r3, [r0, #24]
1042:Src/main.c    ****   {
 2438              		.loc 1 1042 0
 2439 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2440              	.LVL130:
 2441 001a 30BB     		cbnz	r0, .L186
1047:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 2442              		.loc 1 1047 0
 2443 001c 0EA9     		add	r1, sp, #56
 2444 001e 4FF48053 		mov	r3, #4096
 2445 0022 41F8103D 		str	r3, [r1, #-16]!
1048:Src/main.c    ****   {
 2446              		.loc 1 1048 0
 2447 0026 1D48     		ldr	r0, .L191
 2448 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2449              	.LVL131:
 2450 002c 10BB     		cbnz	r0, .L187
1053:Src/main.c    ****   {
 2451              		.loc 1 1053 0
 2452 002e 1B48     		ldr	r0, .L191
 2453 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2454              	.LVL132:
 2455 0034 18BB     		cbnz	r0, .L188
1058:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2456              		.loc 1 1058 0
 2457 0036 0023     		movs	r3, #0
 2458 0038 0793     		str	r3, [sp, #28]
1059:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 2459              		.loc 1 1059 0
 2460 003a 0993     		str	r3, [sp, #36]
1060:Src/main.c    ****   {
 2461              		.loc 1 1060 0
 2462 003c 07A9     		add	r1, sp, #28
 2463 003e 1748     		ldr	r0, .L191
 2464 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2465              	.LVL133:
 2466 0044 00BB     		cbnz	r0, .L189
1065:Src/main.c    ****   sConfigOC.Pulse = 0;
 2467              		.loc 1 1065 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 77


 2468 0046 6023     		movs	r3, #96
 2469 0048 0093     		str	r3, [sp]
1066:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2470              		.loc 1 1066 0
 2471 004a 0023     		movs	r3, #0
 2472 004c 0193     		str	r3, [sp, #4]
1067:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2473              		.loc 1 1067 0
 2474 004e 0293     		str	r3, [sp, #8]
1068:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2475              		.loc 1 1068 0
 2476 0050 0493     		str	r3, [sp, #16]
1069:Src/main.c    ****   {
 2477              		.loc 1 1069 0
 2478 0052 0C22     		movs	r2, #12
 2479 0054 6946     		mov	r1, sp
 2480 0056 1148     		ldr	r0, .L191
 2481 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2482              	.LVL134:
 2483 005c C8B9     		cbnz	r0, .L190
1074:Src/main.c    **** 
 2484              		.loc 1 1074 0
 2485 005e 0F48     		ldr	r0, .L191
 2486 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2487              	.LVL135:
1076:Src/main.c    **** 
 2488              		.loc 1 1076 0
 2489 0064 0FB0     		add	sp, sp, #60
 2490              	.LCFI44:
 2491              		.cfi_remember_state
 2492              		.cfi_def_cfa_offset 4
 2493              		@ sp needed
 2494 0066 5DF804FB 		ldr	pc, [sp], #4
 2495              	.L186:
 2496              	.LCFI45:
 2497              		.cfi_restore_state
1044:Src/main.c    ****   }
 2498              		.loc 1 1044 0
 2499 006a 40F21441 		movw	r1, #1044
 2500 006e 0D48     		ldr	r0, .L191+8
 2501 0070 FFF7FEFF 		bl	_Error_Handler
 2502              	.LVL136:
 2503              	.L187:
1050:Src/main.c    ****   }
 2504              		.loc 1 1050 0
 2505 0074 40F21A41 		movw	r1, #1050
 2506 0078 0A48     		ldr	r0, .L191+8
 2507 007a FFF7FEFF 		bl	_Error_Handler
 2508              	.LVL137:
 2509              	.L188:
1055:Src/main.c    ****   }
 2510              		.loc 1 1055 0
 2511 007e 40F21F41 		movw	r1, #1055
 2512 0082 0848     		ldr	r0, .L191+8
 2513 0084 FFF7FEFF 		bl	_Error_Handler
 2514              	.LVL138:
 2515              	.L189:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 78


1062:Src/main.c    ****   }
 2516              		.loc 1 1062 0
 2517 0088 40F22641 		movw	r1, #1062
 2518 008c 0548     		ldr	r0, .L191+8
 2519 008e FFF7FEFF 		bl	_Error_Handler
 2520              	.LVL139:
 2521              	.L190:
1071:Src/main.c    ****   }
 2522              		.loc 1 1071 0
 2523 0092 40F22F41 		movw	r1, #1071
 2524 0096 0348     		ldr	r0, .L191+8
 2525 0098 FFF7FEFF 		bl	_Error_Handler
 2526              	.LVL140:
 2527              	.L192:
 2528              		.align	2
 2529              	.L191:
 2530 009c 00000000 		.word	htim5
 2531 00a0 000C0040 		.word	1073744896
 2532 00a4 00000000 		.word	.LC7
 2533              		.cfi_endproc
 2534              	.LFE163:
 2536              		.section	.text.MX_TIM8_Init,"ax",%progbits
 2537              		.align	1
 2538              		.syntax unified
 2539              		.thumb
 2540              		.thumb_func
 2541              		.fpu fpv5-sp-d16
 2543              	MX_TIM8_Init:
 2544              	.LFB165:
1105:Src/main.c    **** 
 2545              		.loc 1 1105 0
 2546              		.cfi_startproc
 2547              		@ args = 0, pretend = 0, frame = 32
 2548              		@ frame_needed = 0, uses_anonymous_args = 0
 2549 0000 00B5     		push	{lr}
 2550              	.LCFI46:
 2551              		.cfi_def_cfa_offset 4
 2552              		.cfi_offset 14, -4
 2553 0002 89B0     		sub	sp, sp, #36
 2554              	.LCFI47:
 2555              		.cfi_def_cfa_offset 40
1110:Src/main.c    ****   htim8.Init.Prescaler = 0;
 2556              		.loc 1 1110 0
 2557 0004 1848     		ldr	r0, .L201
 2558 0006 194B     		ldr	r3, .L201+4
 2559 0008 0360     		str	r3, [r0]
1111:Src/main.c    ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 2560              		.loc 1 1111 0
 2561 000a 0023     		movs	r3, #0
 2562 000c 4360     		str	r3, [r0, #4]
1112:Src/main.c    ****   htim8.Init.Period = 0;
 2563              		.loc 1 1112 0
 2564 000e 8360     		str	r3, [r0, #8]
1113:Src/main.c    ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2565              		.loc 1 1113 0
 2566 0010 C360     		str	r3, [r0, #12]
1114:Src/main.c    ****   htim8.Init.RepetitionCounter = 0;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 79


 2567              		.loc 1 1114 0
 2568 0012 0361     		str	r3, [r0, #16]
1115:Src/main.c    ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2569              		.loc 1 1115 0
 2570 0014 4361     		str	r3, [r0, #20]
1116:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 2571              		.loc 1 1116 0
 2572 0016 8361     		str	r3, [r0, #24]
1117:Src/main.c    ****   {
 2573              		.loc 1 1117 0
 2574 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2575              	.LVL141:
 2576 001c A0B9     		cbnz	r0, .L198
1122:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 2577              		.loc 1 1122 0
 2578 001e 08A9     		add	r1, sp, #32
 2579 0020 4FF48053 		mov	r3, #4096
 2580 0024 41F8103D 		str	r3, [r1, #-16]!
1123:Src/main.c    ****   {
 2581              		.loc 1 1123 0
 2582 0028 0F48     		ldr	r0, .L201
 2583 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2584              	.LVL142:
 2585 002e 80B9     		cbnz	r0, .L199
1128:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2586              		.loc 1 1128 0
 2587 0030 0023     		movs	r3, #0
 2588 0032 0193     		str	r3, [sp, #4]
1129:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2589              		.loc 1 1129 0
 2590 0034 0293     		str	r3, [sp, #8]
1130:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 2591              		.loc 1 1130 0
 2592 0036 0393     		str	r3, [sp, #12]
1131:Src/main.c    ****   {
 2593              		.loc 1 1131 0
 2594 0038 01A9     		add	r1, sp, #4
 2595 003a 0B48     		ldr	r0, .L201
 2596 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2597              	.LVL143:
 2598 0040 60B9     		cbnz	r0, .L200
1136:Src/main.c    **** 
 2599              		.loc 1 1136 0
 2600 0042 09B0     		add	sp, sp, #36
 2601              	.LCFI48:
 2602              		.cfi_remember_state
 2603              		.cfi_def_cfa_offset 4
 2604              		@ sp needed
 2605 0044 5DF804FB 		ldr	pc, [sp], #4
 2606              	.L198:
 2607              	.LCFI49:
 2608              		.cfi_restore_state
1119:Src/main.c    ****   }
 2609              		.loc 1 1119 0
 2610 0048 40F25F41 		movw	r1, #1119
 2611 004c 0848     		ldr	r0, .L201+8
 2612 004e FFF7FEFF 		bl	_Error_Handler
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 80


 2613              	.LVL144:
 2614              	.L199:
1125:Src/main.c    ****   }
 2615              		.loc 1 1125 0
 2616 0052 40F26541 		movw	r1, #1125
 2617 0056 0648     		ldr	r0, .L201+8
 2618 0058 FFF7FEFF 		bl	_Error_Handler
 2619              	.LVL145:
 2620              	.L200:
1133:Src/main.c    ****   }
 2621              		.loc 1 1133 0
 2622 005c 40F26D41 		movw	r1, #1133
 2623 0060 0348     		ldr	r0, .L201+8
 2624 0062 FFF7FEFF 		bl	_Error_Handler
 2625              	.LVL146:
 2626              	.L202:
 2627 0066 00BF     		.align	2
 2628              	.L201:
 2629 0068 00000000 		.word	htim8
 2630 006c 00040140 		.word	1073808384
 2631 0070 00000000 		.word	.LC7
 2632              		.cfi_endproc
 2633              	.LFE165:
 2635              		.section	.text.MX_TIM12_Init,"ax",%progbits
 2636              		.align	1
 2637              		.syntax unified
 2638              		.thumb
 2639              		.thumb_func
 2640              		.fpu fpv5-sp-d16
 2642              	MX_TIM12_Init:
 2643              	.LFB166:
1140:Src/main.c    **** 
 2644              		.loc 1 1140 0
 2645              		.cfi_startproc
 2646              		@ args = 0, pretend = 0, frame = 32
 2647              		@ frame_needed = 0, uses_anonymous_args = 0
 2648 0000 00B5     		push	{lr}
 2649              	.LCFI50:
 2650              		.cfi_def_cfa_offset 4
 2651              		.cfi_offset 14, -4
 2652 0002 89B0     		sub	sp, sp, #36
 2653              	.LCFI51:
 2654              		.cfi_def_cfa_offset 40
1144:Src/main.c    ****   htim12.Init.Prescaler = 0;
 2655              		.loc 1 1144 0
 2656 0004 1348     		ldr	r0, .L209
 2657 0006 144B     		ldr	r3, .L209+4
 2658 0008 0360     		str	r3, [r0]
1145:Src/main.c    ****   htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 2659              		.loc 1 1145 0
 2660 000a 0023     		movs	r3, #0
 2661 000c 4360     		str	r3, [r0, #4]
1146:Src/main.c    ****   htim12.Init.Period = 0;
 2662              		.loc 1 1146 0
 2663 000e 8360     		str	r3, [r0, #8]
1147:Src/main.c    ****   htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2664              		.loc 1 1147 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 81


 2665 0010 C360     		str	r3, [r0, #12]
1148:Src/main.c    ****   htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2666              		.loc 1 1148 0
 2667 0012 0361     		str	r3, [r0, #16]
1149:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 2668              		.loc 1 1149 0
 2669 0014 8361     		str	r3, [r0, #24]
1150:Src/main.c    ****   {
 2670              		.loc 1 1150 0
 2671 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2672              	.LVL147:
 2673 001a 80B9     		cbnz	r0, .L207
1155:Src/main.c    ****   sConfigOC.Pulse = 0;
 2674              		.loc 1 1155 0
 2675 001c 6023     		movs	r3, #96
 2676 001e 0193     		str	r3, [sp, #4]
1156:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2677              		.loc 1 1156 0
 2678 0020 0022     		movs	r2, #0
 2679 0022 0292     		str	r2, [sp, #8]
1157:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2680              		.loc 1 1157 0
 2681 0024 0392     		str	r2, [sp, #12]
1158:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2682              		.loc 1 1158 0
 2683 0026 0592     		str	r2, [sp, #20]
1159:Src/main.c    ****   {
 2684              		.loc 1 1159 0
 2685 0028 01A9     		add	r1, sp, #4
 2686 002a 0A48     		ldr	r0, .L209
 2687 002c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2688              	.LVL148:
 2689 0030 50B9     		cbnz	r0, .L208
1164:Src/main.c    **** 
 2690              		.loc 1 1164 0
 2691 0032 0848     		ldr	r0, .L209
 2692 0034 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2693              	.LVL149:
1166:Src/main.c    **** 
 2694              		.loc 1 1166 0
 2695 0038 09B0     		add	sp, sp, #36
 2696              	.LCFI52:
 2697              		.cfi_remember_state
 2698              		.cfi_def_cfa_offset 4
 2699              		@ sp needed
 2700 003a 5DF804FB 		ldr	pc, [sp], #4
 2701              	.L207:
 2702              	.LCFI53:
 2703              		.cfi_restore_state
1152:Src/main.c    ****   }
 2704              		.loc 1 1152 0
 2705 003e 4FF49061 		mov	r1, #1152
 2706 0042 0648     		ldr	r0, .L209+8
 2707 0044 FFF7FEFF 		bl	_Error_Handler
 2708              	.LVL150:
 2709              	.L208:
1161:Src/main.c    ****   }
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 82


 2710              		.loc 1 1161 0
 2711 0048 40F28941 		movw	r1, #1161
 2712 004c 0348     		ldr	r0, .L209+8
 2713 004e FFF7FEFF 		bl	_Error_Handler
 2714              	.LVL151:
 2715              	.L210:
 2716 0052 00BF     		.align	2
 2717              	.L209:
 2718 0054 00000000 		.word	htim12
 2719 0058 00180040 		.word	1073747968
 2720 005c 00000000 		.word	.LC7
 2721              		.cfi_endproc
 2722              	.LFE166:
 2724              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 2725              		.align	1
 2726              		.syntax unified
 2727              		.thumb
 2728              		.thumb_func
 2729              		.fpu fpv5-sp-d16
 2731              	MX_USART1_UART_Init:
 2732              	.LFB167:
1170:Src/main.c    **** 
 2733              		.loc 1 1170 0
 2734              		.cfi_startproc
 2735              		@ args = 0, pretend = 0, frame = 0
 2736              		@ frame_needed = 0, uses_anonymous_args = 0
 2737 0000 08B5     		push	{r3, lr}
 2738              	.LCFI54:
 2739              		.cfi_def_cfa_offset 8
 2740              		.cfi_offset 3, -8
 2741              		.cfi_offset 14, -4
1172:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 2742              		.loc 1 1172 0
 2743 0002 0C48     		ldr	r0, .L215
 2744 0004 0C4B     		ldr	r3, .L215+4
 2745 0006 0360     		str	r3, [r0]
1173:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 2746              		.loc 1 1173 0
 2747 0008 4FF4E133 		mov	r3, #115200
 2748 000c 4360     		str	r3, [r0, #4]
1174:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 2749              		.loc 1 1174 0
 2750 000e 0023     		movs	r3, #0
 2751 0010 8360     		str	r3, [r0, #8]
1175:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 2752              		.loc 1 1175 0
 2753 0012 C360     		str	r3, [r0, #12]
1176:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 2754              		.loc 1 1176 0
 2755 0014 0361     		str	r3, [r0, #16]
1177:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2756              		.loc 1 1177 0
 2757 0016 0C22     		movs	r2, #12
 2758 0018 4261     		str	r2, [r0, #20]
1178:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 2759              		.loc 1 1178 0
 2760 001a 8361     		str	r3, [r0, #24]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 83


1179:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2761              		.loc 1 1179 0
 2762 001c C361     		str	r3, [r0, #28]
1180:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2763              		.loc 1 1180 0
 2764 001e 0362     		str	r3, [r0, #32]
1181:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 2765              		.loc 1 1181 0
 2766 0020 4362     		str	r3, [r0, #36]
1182:Src/main.c    ****   {
 2767              		.loc 1 1182 0
 2768 0022 FFF7FEFF 		bl	HAL_UART_Init
 2769              	.LVL152:
 2770 0026 00B9     		cbnz	r0, .L214
1187:Src/main.c    **** 
 2771              		.loc 1 1187 0
 2772 0028 08BD     		pop	{r3, pc}
 2773              	.L214:
1184:Src/main.c    ****   }
 2774              		.loc 1 1184 0
 2775 002a 4FF49461 		mov	r1, #1184
 2776 002e 0348     		ldr	r0, .L215+8
 2777 0030 FFF7FEFF 		bl	_Error_Handler
 2778              	.LVL153:
 2779              	.L216:
 2780              		.align	2
 2781              	.L215:
 2782 0034 00000000 		.word	huart1
 2783 0038 00100140 		.word	1073811456
 2784 003c 00000000 		.word	.LC7
 2785              		.cfi_endproc
 2786              	.LFE167:
 2788              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 2789              		.align	1
 2790              		.syntax unified
 2791              		.thumb
 2792              		.thumb_func
 2793              		.fpu fpv5-sp-d16
 2795              	MX_USART6_UART_Init:
 2796              	.LFB168:
1191:Src/main.c    **** 
 2797              		.loc 1 1191 0
 2798              		.cfi_startproc
 2799              		@ args = 0, pretend = 0, frame = 0
 2800              		@ frame_needed = 0, uses_anonymous_args = 0
 2801 0000 08B5     		push	{r3, lr}
 2802              	.LCFI55:
 2803              		.cfi_def_cfa_offset 8
 2804              		.cfi_offset 3, -8
 2805              		.cfi_offset 14, -4
1193:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 2806              		.loc 1 1193 0
 2807 0002 0C48     		ldr	r0, .L221
 2808 0004 0C4B     		ldr	r3, .L221+4
 2809 0006 0360     		str	r3, [r0]
1194:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 2810              		.loc 1 1194 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 84


 2811 0008 4FF4E133 		mov	r3, #115200
 2812 000c 4360     		str	r3, [r0, #4]
1195:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 2813              		.loc 1 1195 0
 2814 000e 0023     		movs	r3, #0
 2815 0010 8360     		str	r3, [r0, #8]
1196:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 2816              		.loc 1 1196 0
 2817 0012 C360     		str	r3, [r0, #12]
1197:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 2818              		.loc 1 1197 0
 2819 0014 0361     		str	r3, [r0, #16]
1198:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2820              		.loc 1 1198 0
 2821 0016 0C22     		movs	r2, #12
 2822 0018 4261     		str	r2, [r0, #20]
1199:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 2823              		.loc 1 1199 0
 2824 001a 8361     		str	r3, [r0, #24]
1200:Src/main.c    ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2825              		.loc 1 1200 0
 2826 001c C361     		str	r3, [r0, #28]
1201:Src/main.c    ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2827              		.loc 1 1201 0
 2828 001e 0362     		str	r3, [r0, #32]
1202:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 2829              		.loc 1 1202 0
 2830 0020 4362     		str	r3, [r0, #36]
1203:Src/main.c    ****   {
 2831              		.loc 1 1203 0
 2832 0022 FFF7FEFF 		bl	HAL_UART_Init
 2833              	.LVL154:
 2834 0026 00B9     		cbnz	r0, .L220
1208:Src/main.c    **** 
 2835              		.loc 1 1208 0
 2836 0028 08BD     		pop	{r3, pc}
 2837              	.L220:
1205:Src/main.c    ****   }
 2838              		.loc 1 1205 0
 2839 002a 40F2B541 		movw	r1, #1205
 2840 002e 0348     		ldr	r0, .L221+8
 2841 0030 FFF7FEFF 		bl	_Error_Handler
 2842              	.LVL155:
 2843              	.L222:
 2844              		.align	2
 2845              	.L221:
 2846 0034 00000000 		.word	huart6
 2847 0038 00140140 		.word	1073812480
 2848 003c 00000000 		.word	.LC7
 2849              		.cfi_endproc
 2850              	.LFE168:
 2852              		.section	.text.MX_TIM7_Init,"ax",%progbits
 2853              		.align	1
 2854              		.syntax unified
 2855              		.thumb
 2856              		.thumb_func
 2857              		.fpu fpv5-sp-d16
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 85


 2859              	MX_TIM7_Init:
 2860              	.LFB164:
1080:Src/main.c    **** 
 2861              		.loc 1 1080 0
 2862              		.cfi_startproc
 2863              		@ args = 0, pretend = 0, frame = 16
 2864              		@ frame_needed = 0, uses_anonymous_args = 0
 2865 0000 00B5     		push	{lr}
 2866              	.LCFI56:
 2867              		.cfi_def_cfa_offset 4
 2868              		.cfi_offset 14, -4
 2869 0002 85B0     		sub	sp, sp, #20
 2870              	.LCFI57:
 2871              		.cfi_def_cfa_offset 24
1084:Src/main.c    ****   htim7.Init.Prescaler = 0;
 2872              		.loc 1 1084 0
 2873 0004 0F48     		ldr	r0, .L229
 2874 0006 104B     		ldr	r3, .L229+4
 2875 0008 0360     		str	r3, [r0]
1085:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 2876              		.loc 1 1085 0
 2877 000a 0023     		movs	r3, #0
 2878 000c 4360     		str	r3, [r0, #4]
1086:Src/main.c    ****   htim7.Init.Period = 0;
 2879              		.loc 1 1086 0
 2880 000e 8360     		str	r3, [r0, #8]
1087:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2881              		.loc 1 1087 0
 2882 0010 C360     		str	r3, [r0, #12]
1088:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 2883              		.loc 1 1088 0
 2884 0012 8361     		str	r3, [r0, #24]
1089:Src/main.c    ****   {
 2885              		.loc 1 1089 0
 2886 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2887              	.LVL156:
 2888 0018 50B9     		cbnz	r0, .L227
1094:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2889              		.loc 1 1094 0
 2890 001a 0023     		movs	r3, #0
 2891 001c 0193     		str	r3, [sp, #4]
1095:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 2892              		.loc 1 1095 0
 2893 001e 0393     		str	r3, [sp, #12]
1096:Src/main.c    ****   {
 2894              		.loc 1 1096 0
 2895 0020 01A9     		add	r1, sp, #4
 2896 0022 0848     		ldr	r0, .L229
 2897 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2898              	.LVL157:
 2899 0028 38B9     		cbnz	r0, .L228
1101:Src/main.c    **** 
 2900              		.loc 1 1101 0
 2901 002a 05B0     		add	sp, sp, #20
 2902              	.LCFI58:
 2903              		.cfi_remember_state
 2904              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 86


 2905              		@ sp needed
 2906 002c 5DF804FB 		ldr	pc, [sp], #4
 2907              	.L227:
 2908              	.LCFI59:
 2909              		.cfi_restore_state
1091:Src/main.c    ****   }
 2910              		.loc 1 1091 0
 2911 0030 40F24341 		movw	r1, #1091
 2912 0034 0548     		ldr	r0, .L229+8
 2913 0036 FFF7FEFF 		bl	_Error_Handler
 2914              	.LVL158:
 2915              	.L228:
1098:Src/main.c    ****   }
 2916              		.loc 1 1098 0
 2917 003a 40F24A41 		movw	r1, #1098
 2918 003e 0348     		ldr	r0, .L229+8
 2919 0040 FFF7FEFF 		bl	_Error_Handler
 2920              	.LVL159:
 2921              	.L230:
 2922              		.align	2
 2923              	.L229:
 2924 0044 00000000 		.word	htim7
 2925 0048 00140040 		.word	1073746944
 2926 004c 00000000 		.word	.LC7
 2927              		.cfi_endproc
 2928              	.LFE164:
 2930              		.section	.text.SystemClock_Config,"ax",%progbits
 2931              		.align	1
 2932              		.global	SystemClock_Config
 2933              		.syntax unified
 2934              		.thumb
 2935              		.thumb_func
 2936              		.fpu fpv5-sp-d16
 2938              	SystemClock_Config:
 2939              	.LFB146:
 315:Src/main.c    **** 
 2940              		.loc 1 315 0
 2941              		.cfi_startproc
 2942              		@ args = 0, pretend = 0, frame = 208
 2943              		@ frame_needed = 0, uses_anonymous_args = 0
 2944 0000 00B5     		push	{lr}
 2945              	.LCFI60:
 2946              		.cfi_def_cfa_offset 4
 2947              		.cfi_offset 14, -4
 2948 0002 B5B0     		sub	sp, sp, #212
 2949              	.LCFI61:
 2950              		.cfi_def_cfa_offset 216
 2951              	.LBB13:
 323:Src/main.c    **** 
 2952              		.loc 1 323 0
 2953 0004 474B     		ldr	r3, .L241
 2954 0006 1A6C     		ldr	r2, [r3, #64]
 2955 0008 42F08052 		orr	r2, r2, #268435456
 2956 000c 1A64     		str	r2, [r3, #64]
 2957 000e 1B6C     		ldr	r3, [r3, #64]
 2958 0010 03F08053 		and	r3, r3, #268435456
 2959 0014 0093     		str	r3, [sp]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 87


 2960 0016 009B     		ldr	r3, [sp]
 2961              	.LBE13:
 2962              	.LBB14:
 325:Src/main.c    **** 
 2963              		.loc 1 325 0
 2964 0018 434B     		ldr	r3, .L241+4
 2965 001a 1A68     		ldr	r2, [r3]
 2966 001c 42F44042 		orr	r2, r2, #49152
 2967 0020 1A60     		str	r2, [r3]
 2968 0022 1B68     		ldr	r3, [r3]
 2969 0024 03F44043 		and	r3, r3, #49152
 2970 0028 0193     		str	r3, [sp, #4]
 2971 002a 019B     		ldr	r3, [sp, #4]
 2972              	.LBE14:
 329:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2973              		.loc 1 329 0
 2974 002c 0923     		movs	r3, #9
 2975 002e 2893     		str	r3, [sp, #160]
 330:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 2976              		.loc 1 330 0
 2977 0030 4FF48033 		mov	r3, #65536
 2978 0034 2993     		str	r3, [sp, #164]
 331:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2979              		.loc 1 331 0
 2980 0036 0123     		movs	r3, #1
 2981 0038 2D93     		str	r3, [sp, #180]
 332:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2982              		.loc 1 332 0
 2983 003a 0223     		movs	r3, #2
 2984 003c 2E93     		str	r3, [sp, #184]
 333:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 2985              		.loc 1 333 0
 2986 003e 4FF48002 		mov	r2, #4194304
 2987 0042 2F92     		str	r2, [sp, #188]
 334:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 2988              		.loc 1 334 0
 2989 0044 1922     		movs	r2, #25
 2990 0046 3092     		str	r2, [sp, #192]
 335:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2991              		.loc 1 335 0
 2992 0048 4FF4C872 		mov	r2, #400
 2993 004c 3192     		str	r2, [sp, #196]
 336:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 2994              		.loc 1 336 0
 2995 004e 3293     		str	r3, [sp, #200]
 337:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2996              		.loc 1 337 0
 2997 0050 0823     		movs	r3, #8
 2998 0052 3393     		str	r3, [sp, #204]
 338:Src/main.c    ****   {
 2999              		.loc 1 338 0
 3000 0054 28A8     		add	r0, sp, #160
 3001 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 3002              	.LVL160:
 3003 005a 0028     		cmp	r0, #0
 3004 005c 4ED1     		bne	.L237
 345:Src/main.c    ****   {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 88


 3005              		.loc 1 345 0
 3006 005e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 3007              	.LVL161:
 3008 0062 0028     		cmp	r0, #0
 3009 0064 4FD1     		bne	.L238
 352:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3010              		.loc 1 352 0
 3011 0066 0F23     		movs	r3, #15
 3012 0068 2393     		str	r3, [sp, #140]
 354:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3013              		.loc 1 354 0
 3014 006a 0223     		movs	r3, #2
 3015 006c 2493     		str	r3, [sp, #144]
 355:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 3016              		.loc 1 355 0
 3017 006e 0023     		movs	r3, #0
 3018 0070 2593     		str	r3, [sp, #148]
 356:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 3019              		.loc 1 356 0
 3020 0072 4FF4A053 		mov	r3, #5120
 3021 0076 2693     		str	r3, [sp, #152]
 357:Src/main.c    **** 
 3022              		.loc 1 357 0
 3023 0078 4FF48053 		mov	r3, #4096
 3024 007c 2793     		str	r3, [sp, #156]
 359:Src/main.c    ****   {
 3025              		.loc 1 359 0
 3026 007e 0621     		movs	r1, #6
 3027 0080 23A8     		add	r0, sp, #140
 3028 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3029              	.LVL162:
 3030 0086 0028     		cmp	r0, #0
 3031 0088 42D1     		bne	.L239
 364:Src/main.c    ****                               |RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART1
 3032              		.loc 1 364 0
 3033 008a 284B     		ldr	r3, .L241+8
 3034 008c 0293     		str	r3, [sp, #8]
 369:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 3035              		.loc 1 369 0
 3036 008e 6423     		movs	r3, #100
 3037 0090 0393     		str	r3, [sp, #12]
 370:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 3038              		.loc 1 370 0
 3039 0092 0223     		movs	r3, #2
 3040 0094 0693     		str	r3, [sp, #24]
 371:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 3041              		.loc 1 371 0
 3042 0096 0493     		str	r3, [sp, #16]
 372:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 3043              		.loc 1 372 0
 3044 0098 0593     		str	r3, [sp, #20]
 373:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 3045              		.loc 1 373 0
 3046 009a C023     		movs	r3, #192
 3047 009c 0793     		str	r3, [sp, #28]
 374:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 3048              		.loc 1 374 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 89


 3049 009e 0423     		movs	r3, #4
 3050 00a0 0993     		str	r3, [sp, #36]
 375:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
 3051              		.loc 1 375 0
 3052 00a2 0893     		str	r3, [sp, #32]
 376:Src/main.c    ****   PeriphClkInitStruct.PLLI2SDivQ = 1;
 3053              		.loc 1 376 0
 3054 00a4 0123     		movs	r3, #1
 3055 00a6 0A93     		str	r3, [sp, #40]
 377:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 3056              		.loc 1 377 0
 3057 00a8 0B93     		str	r3, [sp, #44]
 378:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 3058              		.loc 1 378 0
 3059 00aa 0C93     		str	r3, [sp, #48]
 379:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 3060              		.loc 1 379 0
 3061 00ac 4FF40033 		mov	r3, #131072
 3062 00b0 0D93     		str	r3, [sp, #52]
 380:Src/main.c    ****   PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 3063              		.loc 1 380 0
 3064 00b2 4FF40073 		mov	r3, #512
 3065 00b6 0E93     		str	r3, [sp, #56]
 381:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 3066              		.loc 1 381 0
 3067 00b8 0023     		movs	r3, #0
 3068 00ba 1293     		str	r3, [sp, #72]
 382:Src/main.c    ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 3069              		.loc 1 382 0
 3070 00bc 1393     		str	r3, [sp, #76]
 383:Src/main.c    ****   PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 3071              		.loc 1 383 0
 3072 00be 1893     		str	r3, [sp, #96]
 384:Src/main.c    ****   PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 3073              		.loc 1 384 0
 3074 00c0 1B93     		str	r3, [sp, #108]
 385:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 3075              		.loc 1 385 0
 3076 00c2 1D93     		str	r3, [sp, #116]
 386:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 3077              		.loc 1 386 0
 3078 00c4 4FF00062 		mov	r2, #134217728
 3079 00c8 2192     		str	r2, [sp, #132]
 387:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 3080              		.loc 1 387 0
 3081 00ca 2293     		str	r3, [sp, #136]
 388:Src/main.c    ****   {
 3082              		.loc 1 388 0
 3083 00cc 02A8     		add	r0, sp, #8
 3084 00ce FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 3085              	.LVL163:
 3086 00d2 10BB     		cbnz	r0, .L240
 395:Src/main.c    **** 
 3087              		.loc 1 395 0
 3088 00d4 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3089              	.LVL164:
 3090 00d8 154B     		ldr	r3, .L241+12
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 90


 3091 00da A3FB0030 		umull	r3, r0, r3, r0
 3092 00de 8009     		lsrs	r0, r0, #6
 3093 00e0 FFF7FEFF 		bl	HAL_SYSTICK_Config
 3094              	.LVL165:
 399:Src/main.c    **** 
 3095              		.loc 1 399 0
 3096 00e4 0420     		movs	r0, #4
 3097 00e6 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 3098              	.LVL166:
 402:Src/main.c    **** }
 3099              		.loc 1 402 0
 3100 00ea 0022     		movs	r2, #0
 3101 00ec 0F21     		movs	r1, #15
 3102 00ee 4FF0FF30 		mov	r0, #-1
 3103 00f2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 3104              	.LVL167:
 403:Src/main.c    **** 
 3105              		.loc 1 403 0
 3106 00f6 35B0     		add	sp, sp, #212
 3107              	.LCFI62:
 3108              		.cfi_remember_state
 3109              		.cfi_def_cfa_offset 4
 3110              		@ sp needed
 3111 00f8 5DF804FB 		ldr	pc, [sp], #4
 3112              	.L237:
 3113              	.LCFI63:
 3114              		.cfi_restore_state
 340:Src/main.c    ****   }
 3115              		.loc 1 340 0
 3116 00fc 4FF4AA71 		mov	r1, #340
 3117 0100 0C48     		ldr	r0, .L241+16
 3118 0102 FFF7FEFF 		bl	_Error_Handler
 3119              	.LVL168:
 3120              	.L238:
 347:Src/main.c    ****   }
 3121              		.loc 1 347 0
 3122 0106 40F25B11 		movw	r1, #347
 3123 010a 0A48     		ldr	r0, .L241+16
 3124 010c FFF7FEFF 		bl	_Error_Handler
 3125              	.LVL169:
 3126              	.L239:
 361:Src/main.c    ****   }
 3127              		.loc 1 361 0
 3128 0110 40F26911 		movw	r1, #361
 3129 0114 0748     		ldr	r0, .L241+16
 3130 0116 FFF7FEFF 		bl	_Error_Handler
 3131              	.LVL170:
 3132              	.L240:
 390:Src/main.c    ****   }
 3133              		.loc 1 390 0
 3134 011a 4FF4C371 		mov	r1, #390
 3135 011e 0548     		ldr	r0, .L241+16
 3136 0120 FFF7FEFF 		bl	_Error_Handler
 3137              	.LVL171:
 3138              	.L242:
 3139              		.align	2
 3140              	.L241:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 91


 3141 0124 00380240 		.word	1073887232
 3142 0128 00700040 		.word	1073770496
 3143 012c 6848B101 		.word	28395624
 3144 0130 D34D6210 		.word	274877907
 3145 0134 00000000 		.word	.LC7
 3146              		.cfi_endproc
 3147              	.LFE146:
 3149              		.section	.text.main,"ax",%progbits
 3150              		.align	1
 3151              		.global	main
 3152              		.syntax unified
 3153              		.thumb
 3154              		.thumb_func
 3155              		.fpu fpv5-sp-d16
 3157              	main:
 3158              	.LFB145:
 203:Src/main.c    ****   /* USER CODE BEGIN 1 */
 3159              		.loc 1 203 0
 3160              		.cfi_startproc
 3161              		@ Volatile: function does not return.
 3162              		@ args = 0, pretend = 0, frame = 24
 3163              		@ frame_needed = 0, uses_anonymous_args = 0
 3164 0000 00B5     		push	{lr}
 3165              	.LCFI64:
 3166              		.cfi_def_cfa_offset 4
 3167              		.cfi_offset 14, -4
 3168 0002 87B0     		sub	sp, sp, #28
 3169              	.LCFI65:
 3170              		.cfi_def_cfa_offset 32
 211:Src/main.c    **** 
 3171              		.loc 1 211 0
 3172 0004 FFF7FEFF 		bl	HAL_Init
 3173              	.LVL172:
 218:Src/main.c    **** 
 3174              		.loc 1 218 0
 3175 0008 FFF7FEFF 		bl	SystemClock_Config
 3176              	.LVL173:
 225:Src/main.c    ****   MX_ADC3_Init();
 3177              		.loc 1 225 0
 3178 000c FFF7FEFF 		bl	MX_GPIO_Init
 3179              	.LVL174:
 226:Src/main.c    ****   MX_CRC_Init();
 3180              		.loc 1 226 0
 3181 0010 FFF7FEFF 		bl	MX_ADC3_Init
 3182              	.LVL175:
 227:Src/main.c    ****   MX_DCMI_Init();
 3183              		.loc 1 227 0
 3184 0014 FFF7FEFF 		bl	MX_CRC_Init
 3185              	.LVL176:
 228:Src/main.c    ****   MX_DMA2D_Init();
 3186              		.loc 1 228 0
 3187 0018 FFF7FEFF 		bl	MX_DCMI_Init
 3188              	.LVL177:
 229:Src/main.c    ****   MX_FMC_Init();
 3189              		.loc 1 229 0
 3190 001c FFF7FEFF 		bl	MX_DMA2D_Init
 3191              	.LVL178:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 92


 230:Src/main.c    ****   MX_I2C1_Init();
 3192              		.loc 1 230 0
 3193 0020 FFF7FEFF 		bl	MX_FMC_Init
 3194              	.LVL179:
 231:Src/main.c    ****   MX_I2C3_Init();
 3195              		.loc 1 231 0
 3196 0024 FFF7FEFF 		bl	MX_I2C1_Init
 3197              	.LVL180:
 232:Src/main.c    ****   MX_LTDC_Init();
 3198              		.loc 1 232 0
 3199 0028 FFF7FEFF 		bl	MX_I2C3_Init
 3200              	.LVL181:
 233:Src/main.c    ****   MX_QUADSPI_Init();
 3201              		.loc 1 233 0
 3202 002c FFF7FEFF 		bl	MX_LTDC_Init
 3203              	.LVL182:
 234:Src/main.c    ****   MX_RTC_Init();
 3204              		.loc 1 234 0
 3205 0030 FFF7FEFF 		bl	MX_QUADSPI_Init
 3206              	.LVL183:
 235:Src/main.c    ****   MX_SAI2_Init();
 3207              		.loc 1 235 0
 3208 0034 FFF7FEFF 		bl	MX_RTC_Init
 3209              	.LVL184:
 236:Src/main.c    ****   MX_SDMMC1_SD_Init();
 3210              		.loc 1 236 0
 3211 0038 FFF7FEFF 		bl	MX_SAI2_Init
 3212              	.LVL185:
 237:Src/main.c    ****   MX_SPDIFRX_Init();
 3213              		.loc 1 237 0
 3214 003c FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 3215              	.LVL186:
 238:Src/main.c    ****   MX_SPI2_Init();
 3216              		.loc 1 238 0
 3217 0040 FFF7FEFF 		bl	MX_SPDIFRX_Init
 3218              	.LVL187:
 239:Src/main.c    ****   MX_TIM1_Init();
 3219              		.loc 1 239 0
 3220 0044 FFF7FEFF 		bl	MX_SPI2_Init
 3221              	.LVL188:
 240:Src/main.c    ****   MX_TIM2_Init();
 3222              		.loc 1 240 0
 3223 0048 FFF7FEFF 		bl	MX_TIM1_Init
 3224              	.LVL189:
 241:Src/main.c    ****   MX_TIM3_Init();
 3225              		.loc 1 241 0
 3226 004c FFF7FEFF 		bl	MX_TIM2_Init
 3227              	.LVL190:
 242:Src/main.c    ****   MX_TIM5_Init();
 3228              		.loc 1 242 0
 3229 0050 FFF7FEFF 		bl	MX_TIM3_Init
 3230              	.LVL191:
 243:Src/main.c    ****   MX_TIM8_Init();
 3231              		.loc 1 243 0
 3232 0054 FFF7FEFF 		bl	MX_TIM5_Init
 3233              	.LVL192:
 244:Src/main.c    ****   MX_TIM12_Init();
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 93


 3234              		.loc 1 244 0
 3235 0058 FFF7FEFF 		bl	MX_TIM8_Init
 3236              	.LVL193:
 245:Src/main.c    ****   MX_USART1_UART_Init();
 3237              		.loc 1 245 0
 3238 005c FFF7FEFF 		bl	MX_TIM12_Init
 3239              	.LVL194:
 246:Src/main.c    ****   MX_USART6_UART_Init();
 3240              		.loc 1 246 0
 3241 0060 FFF7FEFF 		bl	MX_USART1_UART_Init
 3242              	.LVL195:
 247:Src/main.c    ****   MX_TIM7_Init();
 3243              		.loc 1 247 0
 3244 0064 FFF7FEFF 		bl	MX_USART6_UART_Init
 3245              	.LVL196:
 248:Src/main.c    ****   /* USER CODE BEGIN 2 */
 3246              		.loc 1 248 0
 3247 0068 FFF7FEFF 		bl	MX_TIM7_Init
 3248              	.LVL197:
 250:Src/main.c    **** 
 3249              		.loc 1 250 0
 3250 006c 1248     		ldr	r0, .L248
 3251 006e FFF7FEFF 		bl	debug_init
 3252              	.LVL198:
 252:Src/main.c    **** 
 3253              		.loc 1 252 0
 3254 0072 1248     		ldr	r0, .L248+4
 3255 0074 FFF7FEFF 		bl	xprintf
 3256              	.LVL199:
 254:Src/main.c    **** 
 3257              		.loc 1 254 0
 3258 0078 1148     		ldr	r0, .L248+8
 3259 007a FFF7FEFF 		bl	puts
 3260              	.LVL200:
 257:Src/main.c    ****   draw_background();
 3261              		.loc 1 257 0
 3262 007e FFF7FEFF 		bl	lcd_start
 3263              	.LVL201:
 258:Src/main.c    ****   if(initialize_touchscreen() == -1) {
 3264              		.loc 1 258 0
 3265 0082 FFF7FEFF 		bl	draw_background
 3266              	.LVL202:
 259:Src/main.c    ****     xprintf("Error while initializing touchscreen!\n");
 3267              		.loc 1 259 0
 3268 0086 FFF7FEFF 		bl	initialize_touchscreen
 3269              	.LVL203:
 3270 008a B0F1FF3F 		cmp	r0, #-1
 3271 008e 0ED0     		beq	.L247
 3272              	.L244:
 279:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 3273              		.loc 1 279 0
 3274 0090 01AC     		add	r4, sp, #4
 3275 0092 0C4D     		ldr	r5, .L248+12
 3276 0094 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3277 0096 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3278 0098 2B68     		ldr	r3, [r5]
 3279 009a 2360     		str	r3, [r4]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 94


 280:Src/main.c    **** 
 3280              		.loc 1 280 0
 3281 009c 0021     		movs	r1, #0
 3282 009e 01A8     		add	r0, sp, #4
 3283 00a0 FFF7FEFF 		bl	osThreadCreate
 3284              	.LVL204:
 3285 00a4 084B     		ldr	r3, .L248+16
 3286 00a6 1860     		str	r0, [r3]
 292:Src/main.c    **** 
 3287              		.loc 1 292 0
 3288 00a8 FFF7FEFF 		bl	osKernelStart
 3289              	.LVL205:
 3290              	.L245:
 3291 00ac FEE7     		b	.L245
 3292              	.L247:
 260:Src/main.c    ****   }
 3293              		.loc 1 260 0
 3294 00ae 0748     		ldr	r0, .L248+20
 3295 00b0 FFF7FEFF 		bl	xprintf
 3296              	.LVL206:
 3297 00b4 ECE7     		b	.L244
 3298              	.L249:
 3299 00b6 00BF     		.align	2
 3300              	.L248:
 3301 00b8 00000000 		.word	huart1
 3302 00bc 00000000 		.word	.LC8
 3303 00c0 2C000000 		.word	.LC9
 3304 00c4 00000000 		.word	.LANCHOR0
 3305 00c8 00000000 		.word	defaultTaskHandle
 3306 00cc 3C000000 		.word	.LC10
 3307              		.cfi_endproc
 3308              	.LFE145:
 3310              		.comm	defaultTaskHandle,4,4
 3311              		.comm	hsdram1,52,4
 3312              		.comm	huart6,112,4
 3313              		.comm	huart1,112,4
 3314              		.comm	htim12,64,4
 3315              		.comm	htim8,64,4
 3316              		.comm	htim7,64,4
 3317              		.comm	htim5,64,4
 3318              		.comm	htim3,64,4
 3319              		.comm	htim2,64,4
 3320              		.comm	htim1,64,4
 3321              		.comm	hspi2,100,4
 3322              		.comm	hspdif,76,4
 3323              		.comm	hsd1,132,4
 3324              		.comm	hsai_BlockB2,132,4
 3325              		.comm	hsai_BlockA2,132,4
 3326              		.comm	hrtc,32,4
 3327              		.comm	hqspi,76,4
 3328              		.comm	hltdc,168,4
 3329              		.comm	hi2c3,76,4
 3330              		.comm	hi2c1,76,4
 3331              		.comm	hdma2d,64,4
 3332              		.comm	hdcmi,80,4
 3333              		.comm	hcrc,36,4
 3334              		.comm	hadc3,72,4
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 95


 3335              		.section	.rodata
 3336              		.align	2
 3337              		.set	.LANCHOR0,. + 0
 3338              	.LC11:
 3339 0000 00000000 		.word	.LC0
 3340 0004 00000000 		.word	StartDefaultTask
 3341 0008 0000     		.short	0
 3342 000a 0000     		.space	2
 3343 000c 00000000 		.word	0
 3344 0010 00100000 		.word	4096
 3345              		.section	.rodata.MX_ADC3_Init.str1.4,"aMS",%progbits,1
 3346              		.align	2
 3347              	.LC7:
 3348 0000 5372632F 		.ascii	"Src/main.c\000"
 3348      6D61696E 
 3348      2E6300
 3349              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 3350              		.align	2
 3351              	.LC2:
 3352 0000 77616974 		.ascii	"waiting for USB mass storage\012\000"
 3352      696E6720 
 3352      666F7220 
 3352      55534220 
 3352      6D617373 
 3353 001e 0000     		.space	2
 3354              	.LC3:
 3355 0020 2E00     		.ascii	".\000"
 3356 0022 0000     		.space	2
 3357              	.LC4:
 3358 0024 53746172 		.ascii	"Starting player...\012\000"
 3358      74696E67 
 3358      20706C61 
 3358      7965722E 
 3358      2E2E0A00 
 3359              	.LC5:
 3360 0038 313A2F00 		.ascii	"1:/\000"
 3361              	.LC6:
 3362 003c 506C6179 		.ascii	"Player finished\012\000"
 3362      65722066 
 3362      696E6973 
 3362      6865640A 
 3362      00
 3363              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 3364              		.align	2
 3365              	.LC8:
 3366 0000 1B5B303B 		.ascii	"\033[0;32mSTM32F746 Discovery Project\033[0;39m\012"
 3366      33326D53 
 3366      544D3332 
 3366      46373436 
 3366      20446973 
 3367 002a 00       		.ascii	"\000"
 3368 002b 00       		.space	1
 3369              	.LC9:
 3370 002c 52656775 		.ascii	"Regular printf\000"
 3370      6C617220 
 3370      7072696E 
 3370      746600
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 96


 3371 003b 00       		.space	1
 3372              	.LC10:
 3373 003c 4572726F 		.ascii	"Error while initializing touchscreen!\012\000"
 3373      72207768 
 3373      696C6520 
 3373      696E6974 
 3373      69616C69 
 3374              		.section	.rodata.str1.4,"aMS",%progbits,1
 3375              		.align	2
 3376              	.LC0:
 3377 0000 64656661 		.ascii	"defaultTask\000"
 3377      756C7454 
 3377      61736B00 
 3378              		.text
 3379              	.Letext0:
 3380              		.file 2 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\machine\\_default
 3381              		.file 3 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 3382              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 3383              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 3384              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 3385              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 3386              		.file 8 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 3387              		.file 9 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 3388              		.file 10 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\
 3389              		.file 11 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 3390              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3391              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 3392              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 3393              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 3394              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 3395              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 3396              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_crc.h"
 3397              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma2d.h"
 3398              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dcmi.h"
 3399              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_fmc.h"
 3400              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sdram.h"
 3401              		.file 23 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 3402              		.file 24 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_ltdc.h"
 3403              		.file 25 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_qspi.h"
 3404              		.file 26 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 3405              		.file 27 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sai.h"
 3406              		.file 28 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 3407              		.file 29 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 3408              		.file 30 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spdifrx.h"
 3409              		.file 31 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 3410              		.file 32 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 3411              		.file 33 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 3412              		.file 34 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 3413              		.file 35 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3414              		.file 36 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 3415              		.file 37 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 3416              		.file 38 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 3417              		.file 39 "Middlewares/Third_Party/FatFs/src/integer.h"
 3418              		.file 40 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\stdlib.h"
 3419              		.file 41 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 3420              		.file 42 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 3421              		.file 43 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 97


 3422              		.file 44 "Middlewares/Third_Party/FatFs/src/ff.h"
 3423              		.file 45 "Middlewares/Third_Party/FatFs/src/diskio.h"
 3424              		.file 46 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 3425              		.file 47 "Inc/sd_diskio.h"
 3426              		.file 48 "Inc/usbh_diskio.h"
 3427              		.file 49 "Inc/fatfs.h"
 3428              		.file 50 "Inc/usb_host.h"
 3429              		.file 51 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\errno.h"
 3430              		.file 52 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\unistd.h"
 3431              		.file 53 "c:\\users\\patryk\\desktop\\aaaaa13\\utilities\\fonts\\fonts.h"
 3432              		.file 54 "c:\\users\\patryk\\desktop\\aaaaa13\\drivers\\bsp\\components\\common\\ts.h"
 3433              		.file 55 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/ft5336.h"
 3434              		.file 56 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_ts.h"
 3435              		.file 57 "c:\\users\\patryk\\desktop\\aaaaa13\\drivers\\bsp\\components\\common\\audio.h"
 3436              		.file 58 "Drivers/BSP/STM32746G-Discovery/../Components/wm8994/wm8994.h"
 3437              		.file 59 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_audio.h"
 3438              		.file 60 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 3439              		.file 61 "Inc/term_io.h"
 3440              		.file 62 "Inc/mp3_player.h"
 3441              		.file 63 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
 3442              		.file 64 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c_ex.h"
 3443              		.file 65 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 3444              		.file 66 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 3445              		.file 67 "Inc/dbgu.h"
 3446              		.file 68 "Inc/gui.h"
 3447              		.file 69 "<built-in>"
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 98


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:18     .text.MX_SDMMC1_SD_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:24     .text.MX_SDMMC1_SD_Init:00000000 MX_SDMMC1_SD_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:54     .text.MX_SDMMC1_SD_Init:00000018 $d
                            *COM*:00000084 hsd1
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:60     .text.MX_GPIO_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:66     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:475    .text.MX_GPIO_Init:00000270 $d
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:491    .text.StartDefaultTask:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:498    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:556    .text.StartDefaultTask:00000040 $d
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:566    .text.__io_putchar:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:573    .text.__io_putchar:00000000 __io_putchar
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:598    .text.__io_putchar:00000014 $d
                            *COM*:00000070 huart1
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:603    .text.inkey:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:610    .text.inkey:00000000 inkey
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:642    .text.inkey:0000001c $d
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:647    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:654    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:685    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:690    .text._Error_Handler:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:697    .text._Error_Handler:00000000 _Error_Handler
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:712    .text.MX_ADC3_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:718    .text.MX_ADC3_Init:00000000 MX_ADC3_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:805    .text.MX_ADC3_Init:00000060 $d
                            *COM*:00000048 hadc3
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:813    .text.MX_CRC_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:819    .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:861    .text.MX_CRC_Init:00000028 $d
                            *COM*:00000024 hcrc
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:868    .text.MX_DCMI_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:874    .text.MX_DCMI_Init:00000000 MX_DCMI_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:927    .text.MX_DCMI_Init:00000034 $d
                            *COM*:00000050 hdcmi
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:934    .text.MX_DMA2D_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:940    .text.MX_DMA2D_Init:00000000 MX_DMA2D_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:997    .text.MX_DMA2D_Init:00000040 $d
                            *COM*:00000040 hdma2d
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1004   .text.MX_FMC_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1010   .text.MX_FMC_Init:00000000 MX_FMC_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1094   .text.MX_FMC_Init:00000060 $d
                            *COM*:00000034 hsdram1
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1101   .text.MX_I2C1_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1107   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1180   .text.MX_I2C1_Init:00000058 $d
                            *COM*:0000004c hi2c1
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1188   .text.MX_I2C3_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1194   .text.MX_I2C3_Init:00000000 MX_I2C3_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1267   .text.MX_I2C3_Init:00000058 $d
                            *COM*:0000004c hi2c3
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1275   .text.MX_LTDC_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1281   .text.MX_LTDC_Init:00000000 MX_LTDC_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1408   .text.MX_LTDC_Init:000000ac $d
                            *COM*:000000a8 hltdc
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1415   .text.MX_QUADSPI_Init:00000000 $t
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 99


C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1421   .text.MX_QUADSPI_Init:00000000 MX_QUADSPI_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1470   .text.MX_QUADSPI_Init:00000030 $d
                            *COM*:0000004c hqspi
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1477   .text.MX_RTC_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1483   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1654   .text.MX_RTC_Init:000000f8 $d
                            *COM*:00000020 hrtc
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1661   .text.MX_SAI2_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1667   .text.MX_SAI2_Init:00000000 MX_SAI2_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1809   .text.MX_SAI2_Init:0000009c $d
                            *COM*:00000084 hsai_BlockA2
                            *COM*:00000084 hsai_BlockB2
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1819   .text.MX_SPDIFRX_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1825   .text.MX_SPDIFRX_Init:00000000 MX_SPDIFRX_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1876   .text.MX_SPDIFRX_Init:00000034 $d
                            *COM*:0000004c hspdif
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1882   .text.MX_SPI2_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1888   .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1950   .text.MX_SPI2_Init:00000048 $d
                            *COM*:00000064 hspi2
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1957   .text.MX_TIM1_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:1963   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2134   .text.MX_TIM1_Init:000000e4 $d
                            *COM*:00000040 htim1
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2141   .text.MX_TIM2_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2147   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2266   .text.MX_TIM2_Init:0000009c $d
                            *COM*:00000040 htim2
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2272   .text.MX_TIM3_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2278   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2397   .text.MX_TIM3_Init:0000009c $d
                            *COM*:00000040 htim3
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2404   .text.MX_TIM5_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2410   .text.MX_TIM5_Init:00000000 MX_TIM5_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2530   .text.MX_TIM5_Init:0000009c $d
                            *COM*:00000040 htim5
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2537   .text.MX_TIM8_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2543   .text.MX_TIM8_Init:00000000 MX_TIM8_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2629   .text.MX_TIM8_Init:00000068 $d
                            *COM*:00000040 htim8
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2636   .text.MX_TIM12_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2642   .text.MX_TIM12_Init:00000000 MX_TIM12_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2718   .text.MX_TIM12_Init:00000054 $d
                            *COM*:00000040 htim12
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2725   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2731   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2782   .text.MX_USART1_UART_Init:00000034 $d
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2789   .text.MX_USART6_UART_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2795   .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2846   .text.MX_USART6_UART_Init:00000034 $d
                            *COM*:00000070 huart6
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2853   .text.MX_TIM7_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2859   .text.MX_TIM7_Init:00000000 MX_TIM7_Init
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2924   .text.MX_TIM7_Init:00000044 $d
                            *COM*:00000040 htim7
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2931   .text.SystemClock_Config:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:2938   .text.SystemClock_Config:00000000 SystemClock_Config
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 100


C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:3141   .text.SystemClock_Config:00000124 $d
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:3150   .text.main:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:3157   .text.main:00000000 main
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:3301   .text.main:000000b8 $d
                            *COM*:00000004 defaultTaskHandle
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:3336   .rodata:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:3346   .rodata.MX_ADC3_Init.str1.4:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:3350   .rodata.StartDefaultTask.str1.4:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:3364   .rodata.main.str1.4:00000000 $d
C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s:3375   .rodata.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
MX_FATFS_Init
MX_USB_HOST_Init
vTaskDelay
xprintf
mp3_player_fsm
Appli_state
HAL_IncTick
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CRC_Init
HAL_DCMI_Init
HAL_DMA2D_Init
HAL_DMA2D_ConfigLayer
HAL_SDRAM_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_LTDC_Init
HAL_LTDC_ConfigLayer
HAL_QSPI_Init
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RTC_SetAlarm
HAL_RTCEx_SetTimeStamp
HAL_SAI_Init
HAL_SPDIFRX_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccwLD3Ng.s 			page 101


HAL_NVIC_SetPriority
HAL_Init
debug_init
puts
lcd_start
draw_background
initialize_touchscreen
osThreadCreate
osKernelStart
