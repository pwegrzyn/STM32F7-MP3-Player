ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	MX_SDMMC1_SD_Init:
  25              	.LFB174:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  32:Src/main.c    ****   *    this license. 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 2


  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  50:Src/main.c    **** #include "main.h"
  51:Src/main.c    **** #include "stm32f7xx_hal.h"
  52:Src/main.c    **** #include "cmsis_os.h"
  53:Src/main.c    **** #include "fatfs.h"
  54:Src/main.c    **** #include "lwip.h"
  55:Src/main.c    **** #include "usb_host.h"
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE BEGIN Includes */
  58:Src/main.c    **** #include "mp3_player.h"
  59:Src/main.c    **** 
  60:Src/main.c    **** #include  <errno.h>
  61:Src/main.c    **** #include  <sys/unistd.h>
  62:Src/main.c    **** 
  63:Src/main.c    **** #include "stm32746g_discovery_lcd.h"
  64:Src/main.c    **** #include "Utilities/Fonts/fonts.h"
  65:Src/main.c    **** #include "stm32746g_discovery_ts.h"
  66:Src/main.c    **** #include "stm32746g_discovery_audio.h"
  67:Src/main.c    **** #include "term_io.h"
  68:Src/main.c    **** #include "dbgu.h"
  69:Src/main.c    **** #include "ansi.h"
  70:Src/main.c    **** 
  71:Src/main.c    **** #include "FreeRTOS.h"
  72:Src/main.c    **** #include "task.h"
  73:Src/main.c    **** #include "queue.h"
  74:Src/main.c    **** 
  75:Src/main.c    **** #include "lwip/opt.h"
  76:Src/main.c    **** #include "lwip/api.h"
  77:Src/main.c    **** #include "lwip/apps/fs.h"
  78:Src/main.c    **** #include "lwip/dhcp.h"
  79:Src/main.c    **** #include "lwip/tcpip.h"
  80:Src/main.c    **** #include "lwip/netdb.h"
  81:Src/main.c    **** #include "lwip/sockets.h"
  82:Src/main.c    **** 
  83:Src/main.c    **** #include "lwip.h"
  84:Src/main.c    **** 
  85:Src/main.c    **** #include "wm8994/wm8994.h"
  86:Src/main.c    **** 
  87:Src/main.c    **** 
  88:Src/main.c    **** 
  89:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 3


  90:Src/main.c    **** /* USER CODE END Includes */
  91:Src/main.c    **** 
  92:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  93:Src/main.c    **** ADC_HandleTypeDef hadc3;
  94:Src/main.c    **** 
  95:Src/main.c    **** CRC_HandleTypeDef hcrc;
  96:Src/main.c    **** 
  97:Src/main.c    **** DCMI_HandleTypeDef hdcmi;
  98:Src/main.c    **** 
  99:Src/main.c    **** DMA2D_HandleTypeDef hdma2d;
 100:Src/main.c    **** 
 101:Src/main.c    **** I2C_HandleTypeDef hi2c1;
 102:Src/main.c    **** I2C_HandleTypeDef hi2c3;
 103:Src/main.c    **** 
 104:Src/main.c    **** LTDC_HandleTypeDef hltdc;
 105:Src/main.c    **** 
 106:Src/main.c    **** QSPI_HandleTypeDef hqspi;
 107:Src/main.c    **** 
 108:Src/main.c    **** RTC_HandleTypeDef hrtc;
 109:Src/main.c    **** 
 110:Src/main.c    **** SAI_HandleTypeDef hsai_BlockA2;
 111:Src/main.c    **** SAI_HandleTypeDef hsai_BlockB2;
 112:Src/main.c    **** 
 113:Src/main.c    **** SD_HandleTypeDef hsd1;
 114:Src/main.c    **** 
 115:Src/main.c    **** SPDIFRX_HandleTypeDef hspdif;
 116:Src/main.c    **** 
 117:Src/main.c    **** SPI_HandleTypeDef hspi2;
 118:Src/main.c    **** 
 119:Src/main.c    **** TIM_HandleTypeDef htim1;
 120:Src/main.c    **** TIM_HandleTypeDef htim2;
 121:Src/main.c    **** TIM_HandleTypeDef htim3;
 122:Src/main.c    **** TIM_HandleTypeDef htim5;
 123:Src/main.c    **** TIM_HandleTypeDef htim7;
 124:Src/main.c    **** TIM_HandleTypeDef htim8;
 125:Src/main.c    **** TIM_HandleTypeDef htim12;
 126:Src/main.c    **** 
 127:Src/main.c    **** UART_HandleTypeDef huart1;
 128:Src/main.c    **** UART_HandleTypeDef huart6;
 129:Src/main.c    **** 
 130:Src/main.c    **** SDRAM_HandleTypeDef hsdram1;
 131:Src/main.c    **** 
 132:Src/main.c    **** osThreadId defaultTaskHandle;
 133:Src/main.c    **** 
 134:Src/main.c    **** /* USER CODE BEGIN PV */
 135:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
 136:Src/main.c    **** 
 137:Src/main.c    **** /* USER CODE END PV */
 138:Src/main.c    **** 
 139:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 140:Src/main.c    **** void SystemClock_Config(void);
 141:Src/main.c    **** static void MX_GPIO_Init(void);
 142:Src/main.c    **** static void MX_ADC3_Init(void);
 143:Src/main.c    **** static void MX_CRC_Init(void);
 144:Src/main.c    **** static void MX_DCMI_Init(void);
 145:Src/main.c    **** static void MX_DMA2D_Init(void);
 146:Src/main.c    **** static void MX_FMC_Init(void);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 4


 147:Src/main.c    **** static void MX_I2C1_Init(void);
 148:Src/main.c    **** static void MX_I2C3_Init(void);
 149:Src/main.c    **** static void MX_LTDC_Init(void);
 150:Src/main.c    **** static void MX_QUADSPI_Init(void);
 151:Src/main.c    **** static void MX_RTC_Init(void);
 152:Src/main.c    **** static void MX_SAI2_Init(void);
 153:Src/main.c    **** static void MX_SDMMC1_SD_Init(void);
 154:Src/main.c    **** static void MX_SPDIFRX_Init(void);
 155:Src/main.c    **** static void MX_SPI2_Init(void);
 156:Src/main.c    **** static void MX_TIM1_Init(void);
 157:Src/main.c    **** static void MX_TIM2_Init(void);
 158:Src/main.c    **** static void MX_TIM3_Init(void);
 159:Src/main.c    **** static void MX_TIM5_Init(void);
 160:Src/main.c    **** static void MX_TIM8_Init(void);
 161:Src/main.c    **** static void MX_TIM12_Init(void);
 162:Src/main.c    **** static void MX_USART1_UART_Init(void);
 163:Src/main.c    **** static void MX_USART6_UART_Init(void);
 164:Src/main.c    **** static void MX_TIM7_Init(void);
 165:Src/main.c    **** void StartDefaultTask(void const * argument);
 166:Src/main.c    **** 
 167:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
 168:Src/main.c    ****                                 
 169:Src/main.c    ****                                 
 170:Src/main.c    ****                                 
 171:Src/main.c    ****                                 
 172:Src/main.c    **** 
 173:Src/main.c    **** /* USER CODE BEGIN PFP */
 174:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 175:Src/main.c    **** 
 176:Src/main.c    **** /* USER CODE END PFP */
 177:Src/main.c    **** 
 178:Src/main.c    **** /* USER CODE BEGIN 0 */
 179:Src/main.c    **** void mainTask(void* p);
 180:Src/main.c    **** 
 181:Src/main.c    **** osThreadId netconn_thread_handle;
 182:Src/main.c    **** 
 183:Src/main.c    **** #define LCD_X_SIZE			RK043FN48H_WIDTH
 184:Src/main.c    **** #define LCD_Y_SIZE			RK043FN48H_HEIGHT
 185:Src/main.c    **** 
 186:Src/main.c    **** #define PRINTF_USES_HAL_TX		0
 187:Src/main.c    **** 
 188:Src/main.c    **** int __io_putchar(int ch)
 189:Src/main.c    **** {
 190:Src/main.c    **** 	uint8_t data = ch;
 191:Src/main.c    **** 	#if PRINTF_USES_HAL_TX
 192:Src/main.c    **** 		HAL_StatusTypeDef status = HAL_UART_Transmit(&huart1, (uint8_t*)&data, len, 100);	
 193:Src/main.c    **** 	#else
 194:Src/main.c    **** 		while(__HAL_UART_GET_FLAG(&huart1, UART_FLAG_TXE) == RESET) { ; }
 195:Src/main.c    **** 		huart1.Instance->TDR = (uint16_t)data;
 196:Src/main.c    **** 	#endif
 197:Src/main.c    **** 	return 0;
 198:Src/main.c    **** }
 199:Src/main.c    **** 
 200:Src/main.c    **** char inkey(void)
 201:Src/main.c    **** {
 202:Src/main.c    **** 	uint32_t flags = huart1.Instance->ISR;
 203:Src/main.c    **** 	
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 5


 204:Src/main.c    **** 	if((flags & UART_FLAG_RXNE) || (flags & UART_FLAG_ORE))
 205:Src/main.c    **** 	{
 206:Src/main.c    **** 		__HAL_UART_CLEAR_OREFLAG(&huart1);
 207:Src/main.c    **** 		return (huart1.Instance->RDR);
 208:Src/main.c    **** 	}
 209:Src/main.c    **** 	else
 210:Src/main.c    **** 		return 0;
 211:Src/main.c    **** }
 212:Src/main.c    **** 
 213:Src/main.c    **** //partially based on available code examples
 214:Src/main.c    **** static void lcd_start(void)
 215:Src/main.c    **** {
 216:Src/main.c    ****   /* LCD Initialization */ 
 217:Src/main.c    ****   BSP_LCD_Init();
 218:Src/main.c    **** 
 219:Src/main.c    ****   /* LCD Initialization */ 
 220:Src/main.c    ****   BSP_LCD_LayerDefaultInit(0, (unsigned int)0xC0000000);
 221:Src/main.c    ****   //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
 222:Src/main.c    ****   BSP_LCD_LayerDefaultInit(1, (unsigned int)0xC0000000+(LCD_X_SIZE*LCD_Y_SIZE*4));
 223:Src/main.c    **** 
 224:Src/main.c    ****   /* Enable the LCD */ 
 225:Src/main.c    ****   BSP_LCD_DisplayOn(); 
 226:Src/main.c    ****   
 227:Src/main.c    ****   /* Select the LCD Background Layer  */
 228:Src/main.c    ****   BSP_LCD_SelectLayer(0);
 229:Src/main.c    **** 
 230:Src/main.c    ****   /* Clear the Background Layer */ 
 231:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
 232:Src/main.c    ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 233:Src/main.c    ****   
 234:Src/main.c    ****   BSP_LCD_SetColorKeying(1,LCD_COLOR_WHITE);
 235:Src/main.c    ****   
 236:Src/main.c    ****   /* Select the LCD Foreground Layer  */
 237:Src/main.c    ****   BSP_LCD_SelectLayer(1);
 238:Src/main.c    **** 
 239:Src/main.c    ****   /* Clear the Foreground Layer */ 
 240:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
 241:Src/main.c    ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 242:Src/main.c    ****   
 243:Src/main.c    ****   /* Configure the transparency for foreground and background :
 244:Src/main.c    ****      Increase the transparency */
 245:Src/main.c    ****   BSP_LCD_SetTransparency(0, 255);
 246:Src/main.c    ****   BSP_LCD_SetTransparency(1, 255);
 247:Src/main.c    **** }
 248:Src/main.c    **** 
 249:Src/main.c    **** //[rmv]
 250:Src/main.c    **** void draw_background(void)
 251:Src/main.c    **** {
 252:Src/main.c    **** 	/* Select the LCD Background Layer  */
 253:Src/main.c    **** 	BSP_LCD_SelectLayer(0);
 254:Src/main.c    **** 	BSP_LCD_SetTextColor(LCD_COLOR_GREEN);
 255:Src/main.c    **** 	BSP_LCD_FillRect(0.4*LCD_X_SIZE,0.2*LCD_Y_SIZE,150,130);
 256:Src/main.c    **** 	
 257:Src/main.c    **** 	//select Foreground Layer
 258:Src/main.c    **** 	BSP_LCD_SelectLayer(1);
 259:Src/main.c    **** }
 260:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 6


 261:Src/main.c    **** static TS_StateTypeDef  TS_State;
 262:Src/main.c    **** 
 263:Src/main.c    **** 
 264:Src/main.c    **** int initialize_touchscreen(void)
 265:Src/main.c    **** {
 266:Src/main.c    **** 	uint8_t  status = 0;
 267:Src/main.c    **** 	status = BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
 268:Src/main.c    **** 	if(status != TS_OK) return -1;
 269:Src/main.c    **** 	return 0;
 270:Src/main.c    **** }
 271:Src/main.c    **** 
 272:Src/main.c    **** 
 273:Src/main.c    **** 
 274:Src/main.c    **** /* USER CODE END 0 */
 275:Src/main.c    **** 
 276:Src/main.c    **** /**
 277:Src/main.c    ****   * @brief  The application entry point.
 278:Src/main.c    ****   *
 279:Src/main.c    ****   * @retval None
 280:Src/main.c    ****   */
 281:Src/main.c    **** int main(void)
 282:Src/main.c    **** {
 283:Src/main.c    ****   /* USER CODE BEGIN 1 */
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE END 1 */
 286:Src/main.c    **** 
 287:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 288:Src/main.c    **** 
 289:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 290:Src/main.c    ****   HAL_Init();
 291:Src/main.c    **** 
 292:Src/main.c    ****   /* USER CODE BEGIN Init */
 293:Src/main.c    **** 
 294:Src/main.c    ****   /* USER CODE END Init */
 295:Src/main.c    **** 
 296:Src/main.c    ****   /* Configure the system clock */
 297:Src/main.c    ****   SystemClock_Config();
 298:Src/main.c    **** 
 299:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 300:Src/main.c    **** 
 301:Src/main.c    ****   /* USER CODE END SysInit */
 302:Src/main.c    **** 
 303:Src/main.c    ****   /* Initialize all configured peripherals */
 304:Src/main.c    ****   MX_GPIO_Init();
 305:Src/main.c    ****   MX_ADC3_Init();
 306:Src/main.c    ****   MX_CRC_Init();
 307:Src/main.c    ****   MX_DCMI_Init();
 308:Src/main.c    ****   MX_DMA2D_Init();
 309:Src/main.c    ****   MX_FMC_Init();
 310:Src/main.c    ****   MX_I2C1_Init();
 311:Src/main.c    ****   MX_I2C3_Init();
 312:Src/main.c    ****   MX_LTDC_Init();
 313:Src/main.c    ****   MX_QUADSPI_Init();
 314:Src/main.c    ****   MX_RTC_Init();
 315:Src/main.c    ****   MX_SAI2_Init();
 316:Src/main.c    ****   MX_SDMMC1_SD_Init();
 317:Src/main.c    ****   MX_SPDIFRX_Init();
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 7


 318:Src/main.c    ****   MX_SPI2_Init();
 319:Src/main.c    ****   MX_TIM1_Init();
 320:Src/main.c    ****   MX_TIM2_Init();
 321:Src/main.c    ****   MX_TIM3_Init();
 322:Src/main.c    ****   MX_TIM5_Init();
 323:Src/main.c    ****   MX_TIM8_Init();
 324:Src/main.c    ****   MX_TIM12_Init();
 325:Src/main.c    ****   MX_USART1_UART_Init();
 326:Src/main.c    ****   MX_USART6_UART_Init();
 327:Src/main.c    ****   MX_TIM7_Init();
 328:Src/main.c    ****   /* USER CODE BEGIN 2 */
 329:Src/main.c    ****   debug_init(&huart1);
 330:Src/main.c    **** 
 331:Src/main.c    ****   xprintf(ANSI_FG_GREEN "STM32F746 Discovery Project" ANSI_FG_DEFAULT "\n");
 332:Src/main.c    **** 
 333:Src/main.c    ****   printf("Regular printf\n");
 334:Src/main.c    **** 
 335:Src/main.c    **** lcd_start();
 336:Src/main.c    **** draw_background();
 337:Src/main.c    **** initialize_touchscreen();
 338:Src/main.c    **** 
 339:Src/main.c    ****   /* USER CODE END 2 */
 340:Src/main.c    **** 
 341:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 342:Src/main.c    ****   /* add mutexes, ... */
 343:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 344:Src/main.c    **** 
 345:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 346:Src/main.c    ****   /* add semaphores, ... */
 347:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 350:Src/main.c    ****   /* start timers, add new ones, ... */
 351:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 352:Src/main.c    **** 
 353:Src/main.c    ****   /* Create the thread(s) */
 354:Src/main.c    ****   /* definition and creation of defaultTask */
 355:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 4096);
 356:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 357:Src/main.c    **** 
 358:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 359:Src/main.c    ****   /* add threads, ... */
 360:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 361:Src/main.c    **** 
 362:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 363:Src/main.c    ****   /* add queues, ... */
 364:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 365:Src/main.c    ****  
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* Start scheduler */
 368:Src/main.c    ****   osKernelStart();
 369:Src/main.c    ****   
 370:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 371:Src/main.c    **** 
 372:Src/main.c    ****   /* Infinite loop */
 373:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 374:Src/main.c    ****   while (1)
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 8


 375:Src/main.c    ****   {
 376:Src/main.c    **** 
 377:Src/main.c    ****   /* USER CODE END WHILE */
 378:Src/main.c    **** 
 379:Src/main.c    ****   /* USER CODE BEGIN 3 */
 380:Src/main.c    **** 
 381:Src/main.c    ****   }
 382:Src/main.c    ****   /* USER CODE END 3 */
 383:Src/main.c    **** 
 384:Src/main.c    **** }
 385:Src/main.c    **** 
 386:Src/main.c    **** /**
 387:Src/main.c    ****   * @brief System Clock Configuration
 388:Src/main.c    ****   * @retval None
 389:Src/main.c    ****   */
 390:Src/main.c    **** void SystemClock_Config(void)
 391:Src/main.c    **** {
 392:Src/main.c    **** 
 393:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 394:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 395:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 396:Src/main.c    **** 
 397:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 398:Src/main.c    ****     */
 399:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 400:Src/main.c    **** 
 401:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 402:Src/main.c    **** 
 403:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 404:Src/main.c    ****     */
 405:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 406:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 407:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 408:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 409:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 410:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 411:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 412:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 413:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 414:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 415:Src/main.c    ****   {
 416:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 417:Src/main.c    ****   }
 418:Src/main.c    **** 
 419:Src/main.c    ****     /**Activate the Over-Drive mode 
 420:Src/main.c    ****     */
 421:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 422:Src/main.c    ****   {
 423:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 424:Src/main.c    ****   }
 425:Src/main.c    **** 
 426:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 427:Src/main.c    ****     */
 428:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 429:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 430:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 431:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 9


 432:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 433:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 434:Src/main.c    **** 
 435:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 436:Src/main.c    ****   {
 437:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 438:Src/main.c    ****   }
 439:Src/main.c    **** 
 440:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPDIFRX|RCC_PERIPHCLK_LTDC
 441:Src/main.c    ****                               |RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART1
 442:Src/main.c    ****                               |RCC_PERIPHCLK_USART6|RCC_PERIPHCLK_SAI2
 443:Src/main.c    ****                               |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_I2C3
 444:Src/main.c    ****                               |RCC_PERIPHCLK_SDMMC1|RCC_PERIPHCLK_CLK48;
 445:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 100;
 446:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 447:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 448:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 449:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 450:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 451:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 452:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
 453:Src/main.c    ****   PeriphClkInitStruct.PLLI2SDivQ = 1;
 454:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 455:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 456:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 457:Src/main.c    ****   PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 458:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 459:Src/main.c    ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 460:Src/main.c    ****   PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 461:Src/main.c    ****   PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 462:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 463:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 464:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 465:Src/main.c    ****   {
 466:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 467:Src/main.c    ****   }
 468:Src/main.c    **** 
 469:Src/main.c    ****     /**Configure the Systick interrupt time 
 470:Src/main.c    ****     */
 471:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 472:Src/main.c    **** 
 473:Src/main.c    ****     /**Configure the Systick 
 474:Src/main.c    ****     */
 475:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 476:Src/main.c    **** 
 477:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 478:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 479:Src/main.c    **** }
 480:Src/main.c    **** 
 481:Src/main.c    **** /* ADC3 init function */
 482:Src/main.c    **** static void MX_ADC3_Init(void)
 483:Src/main.c    **** {
 484:Src/main.c    **** 
 485:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 486:Src/main.c    **** 
 487:Src/main.c    ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 488:Src/main.c    ****     */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 10


 489:Src/main.c    ****   hadc3.Instance = ADC3;
 490:Src/main.c    ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 491:Src/main.c    ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 492:Src/main.c    ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 493:Src/main.c    ****   hadc3.Init.ContinuousConvMode = DISABLE;
 494:Src/main.c    ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 495:Src/main.c    ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 496:Src/main.c    ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 497:Src/main.c    ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 498:Src/main.c    ****   hadc3.Init.NbrOfConversion = 1;
 499:Src/main.c    ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 500:Src/main.c    ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 501:Src/main.c    ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 502:Src/main.c    ****   {
 503:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 504:Src/main.c    ****   }
 505:Src/main.c    **** 
 506:Src/main.c    ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 507:Src/main.c    ****     */
 508:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_4;
 509:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 510:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 511:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 512:Src/main.c    ****   {
 513:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 514:Src/main.c    ****   }
 515:Src/main.c    **** 
 516:Src/main.c    **** }
 517:Src/main.c    **** 
 518:Src/main.c    **** /* CRC init function */
 519:Src/main.c    **** static void MX_CRC_Init(void)
 520:Src/main.c    **** {
 521:Src/main.c    **** 
 522:Src/main.c    ****   hcrc.Instance = CRC;
 523:Src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 524:Src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 525:Src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 526:Src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 527:Src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 528:Src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 529:Src/main.c    ****   {
 530:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 531:Src/main.c    ****   }
 532:Src/main.c    **** 
 533:Src/main.c    **** }
 534:Src/main.c    **** 
 535:Src/main.c    **** /* DCMI init function */
 536:Src/main.c    **** static void MX_DCMI_Init(void)
 537:Src/main.c    **** {
 538:Src/main.c    **** 
 539:Src/main.c    ****   hdcmi.Instance = DCMI;
 540:Src/main.c    ****   hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 541:Src/main.c    ****   hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 542:Src/main.c    ****   hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 543:Src/main.c    ****   hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 544:Src/main.c    ****   hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 545:Src/main.c    ****   hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 11


 546:Src/main.c    ****   hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 547:Src/main.c    ****   hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 548:Src/main.c    ****   hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 549:Src/main.c    ****   hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 550:Src/main.c    ****   hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 551:Src/main.c    ****   if (HAL_DCMI_Init(&hdcmi) != HAL_OK)
 552:Src/main.c    ****   {
 553:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 554:Src/main.c    ****   }
 555:Src/main.c    **** 
 556:Src/main.c    **** }
 557:Src/main.c    **** 
 558:Src/main.c    **** /* DMA2D init function */
 559:Src/main.c    **** static void MX_DMA2D_Init(void)
 560:Src/main.c    **** {
 561:Src/main.c    **** 
 562:Src/main.c    ****   hdma2d.Instance = DMA2D;
 563:Src/main.c    ****   hdma2d.Init.Mode = DMA2D_M2M;
 564:Src/main.c    ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 565:Src/main.c    ****   hdma2d.Init.OutputOffset = 0;
 566:Src/main.c    ****   hdma2d.LayerCfg[1].InputOffset = 0;
 567:Src/main.c    ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 568:Src/main.c    ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 569:Src/main.c    ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 570:Src/main.c    ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 571:Src/main.c    ****   {
 572:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 573:Src/main.c    ****   }
 574:Src/main.c    **** 
 575:Src/main.c    ****   if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 576:Src/main.c    ****   {
 577:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 578:Src/main.c    ****   }
 579:Src/main.c    **** 
 580:Src/main.c    **** }
 581:Src/main.c    **** 
 582:Src/main.c    **** /* I2C1 init function */
 583:Src/main.c    **** static void MX_I2C1_Init(void)
 584:Src/main.c    **** {
 585:Src/main.c    **** 
 586:Src/main.c    ****   hi2c1.Instance = I2C1;
 587:Src/main.c    ****   hi2c1.Init.Timing = 0x00C0EAFF;
 588:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 589:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 590:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 591:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 592:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 593:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 594:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 595:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 596:Src/main.c    ****   {
 597:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 598:Src/main.c    ****   }
 599:Src/main.c    **** 
 600:Src/main.c    ****     /**Configure Analogue filter 
 601:Src/main.c    ****     */
 602:Src/main.c    ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 12


 603:Src/main.c    ****   {
 604:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 605:Src/main.c    ****   }
 606:Src/main.c    **** 
 607:Src/main.c    ****     /**Configure Digital filter 
 608:Src/main.c    ****     */
 609:Src/main.c    ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 610:Src/main.c    ****   {
 611:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 612:Src/main.c    ****   }
 613:Src/main.c    **** 
 614:Src/main.c    **** }
 615:Src/main.c    **** 
 616:Src/main.c    **** /* I2C3 init function */
 617:Src/main.c    **** static void MX_I2C3_Init(void)
 618:Src/main.c    **** {
 619:Src/main.c    **** 
 620:Src/main.c    ****   hi2c3.Instance = I2C3;
 621:Src/main.c    ****   hi2c3.Init.Timing = 0x00C0EAFF;
 622:Src/main.c    ****   hi2c3.Init.OwnAddress1 = 0;
 623:Src/main.c    ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 624:Src/main.c    ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 625:Src/main.c    ****   hi2c3.Init.OwnAddress2 = 0;
 626:Src/main.c    ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 627:Src/main.c    ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 628:Src/main.c    ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 629:Src/main.c    ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 630:Src/main.c    ****   {
 631:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 632:Src/main.c    ****   }
 633:Src/main.c    **** 
 634:Src/main.c    ****     /**Configure Analogue filter 
 635:Src/main.c    ****     */
 636:Src/main.c    ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 637:Src/main.c    ****   {
 638:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 639:Src/main.c    ****   }
 640:Src/main.c    **** 
 641:Src/main.c    ****     /**Configure Digital filter 
 642:Src/main.c    ****     */
 643:Src/main.c    ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 644:Src/main.c    ****   {
 645:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 646:Src/main.c    ****   }
 647:Src/main.c    **** 
 648:Src/main.c    **** }
 649:Src/main.c    **** 
 650:Src/main.c    **** /* LTDC init function */
 651:Src/main.c    **** static void MX_LTDC_Init(void)
 652:Src/main.c    **** {
 653:Src/main.c    **** 
 654:Src/main.c    ****   LTDC_LayerCfgTypeDef pLayerCfg;
 655:Src/main.c    **** 
 656:Src/main.c    ****   hltdc.Instance = LTDC;
 657:Src/main.c    ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 658:Src/main.c    ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 659:Src/main.c    ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 13


 660:Src/main.c    ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 661:Src/main.c    ****   hltdc.Init.HorizontalSync = 40;
 662:Src/main.c    ****   hltdc.Init.VerticalSync = 9;
 663:Src/main.c    ****   hltdc.Init.AccumulatedHBP = 53;
 664:Src/main.c    ****   hltdc.Init.AccumulatedVBP = 11;
 665:Src/main.c    ****   hltdc.Init.AccumulatedActiveW = 533;
 666:Src/main.c    ****   hltdc.Init.AccumulatedActiveH = 283;
 667:Src/main.c    ****   hltdc.Init.TotalWidth = 565;
 668:Src/main.c    ****   hltdc.Init.TotalHeigh = 285;
 669:Src/main.c    ****   hltdc.Init.Backcolor.Blue = 0;
 670:Src/main.c    ****   hltdc.Init.Backcolor.Green = 0;
 671:Src/main.c    ****   hltdc.Init.Backcolor.Red = 0;
 672:Src/main.c    ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 673:Src/main.c    ****   {
 674:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 675:Src/main.c    ****   }
 676:Src/main.c    **** 
 677:Src/main.c    ****   pLayerCfg.WindowX0 = 0;
 678:Src/main.c    ****   pLayerCfg.WindowX1 = 480;
 679:Src/main.c    ****   pLayerCfg.WindowY0 = 0;
 680:Src/main.c    ****   pLayerCfg.WindowY1 = 272;
 681:Src/main.c    ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
 682:Src/main.c    ****   pLayerCfg.Alpha = 255;
 683:Src/main.c    ****   pLayerCfg.Alpha0 = 0;
 684:Src/main.c    ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 685:Src/main.c    ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 686:Src/main.c    ****   pLayerCfg.FBStartAdress = 0xC0000000;
 687:Src/main.c    ****   pLayerCfg.ImageWidth = 480;
 688:Src/main.c    ****   pLayerCfg.ImageHeight = 272;
 689:Src/main.c    ****   pLayerCfg.Backcolor.Blue = 0;
 690:Src/main.c    ****   pLayerCfg.Backcolor.Green = 0;
 691:Src/main.c    ****   pLayerCfg.Backcolor.Red = 0;
 692:Src/main.c    ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 693:Src/main.c    ****   {
 694:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 695:Src/main.c    ****   }
 696:Src/main.c    **** 
 697:Src/main.c    **** }
 698:Src/main.c    **** 
 699:Src/main.c    **** /* QUADSPI init function */
 700:Src/main.c    **** static void MX_QUADSPI_Init(void)
 701:Src/main.c    **** {
 702:Src/main.c    **** 
 703:Src/main.c    ****   /* QUADSPI parameter configuration*/
 704:Src/main.c    ****   hqspi.Instance = QUADSPI;
 705:Src/main.c    ****   hqspi.Init.ClockPrescaler = 255;
 706:Src/main.c    ****   hqspi.Init.FifoThreshold = 1;
 707:Src/main.c    ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 708:Src/main.c    ****   hqspi.Init.FlashSize = 1;
 709:Src/main.c    ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 710:Src/main.c    ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 711:Src/main.c    ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 712:Src/main.c    ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 713:Src/main.c    ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 714:Src/main.c    ****   {
 715:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 716:Src/main.c    ****   }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 14


 717:Src/main.c    **** 
 718:Src/main.c    **** }
 719:Src/main.c    **** 
 720:Src/main.c    **** /* RTC init function */
 721:Src/main.c    **** static void MX_RTC_Init(void)
 722:Src/main.c    **** {
 723:Src/main.c    **** 
 724:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 0 */
 725:Src/main.c    **** 
 726:Src/main.c    ****   /* USER CODE END RTC_Init 0 */
 727:Src/main.c    **** 
 728:Src/main.c    ****   RTC_TimeTypeDef sTime;
 729:Src/main.c    ****   RTC_DateTypeDef sDate;
 730:Src/main.c    ****   RTC_AlarmTypeDef sAlarm;
 731:Src/main.c    **** 
 732:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 1 */
 733:Src/main.c    **** 
 734:Src/main.c    ****   /* USER CODE END RTC_Init 1 */
 735:Src/main.c    **** 
 736:Src/main.c    ****     /**Initialize RTC Only 
 737:Src/main.c    ****     */
 738:Src/main.c    ****   hrtc.Instance = RTC;
 739:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 740:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 741:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 742:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 743:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 744:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 745:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 746:Src/main.c    ****   {
 747:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 748:Src/main.c    ****   }
 749:Src/main.c    **** 
 750:Src/main.c    ****     /**Initialize RTC and set the Time and Date 
 751:Src/main.c    ****     */
 752:Src/main.c    ****   sTime.Hours = 0x0;
 753:Src/main.c    ****   sTime.Minutes = 0x0;
 754:Src/main.c    ****   sTime.Seconds = 0x0;
 755:Src/main.c    ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 756:Src/main.c    ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 757:Src/main.c    ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 758:Src/main.c    ****   {
 759:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 760:Src/main.c    ****   }
 761:Src/main.c    **** 
 762:Src/main.c    ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 763:Src/main.c    ****   sDate.Month = RTC_MONTH_JANUARY;
 764:Src/main.c    ****   sDate.Date = 0x1;
 765:Src/main.c    ****   sDate.Year = 0x0;
 766:Src/main.c    **** 
 767:Src/main.c    ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 768:Src/main.c    ****   {
 769:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 770:Src/main.c    ****   }
 771:Src/main.c    **** 
 772:Src/main.c    ****     /**Enable the Alarm A 
 773:Src/main.c    ****     */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 15


 774:Src/main.c    ****   sAlarm.AlarmTime.Hours = 0x0;
 775:Src/main.c    ****   sAlarm.AlarmTime.Minutes = 0x0;
 776:Src/main.c    ****   sAlarm.AlarmTime.Seconds = 0x0;
 777:Src/main.c    ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 778:Src/main.c    ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 779:Src/main.c    ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 780:Src/main.c    ****   sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 781:Src/main.c    ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 782:Src/main.c    ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 783:Src/main.c    ****   sAlarm.AlarmDateWeekDay = 0x1;
 784:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_A;
 785:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 786:Src/main.c    ****   {
 787:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 788:Src/main.c    ****   }
 789:Src/main.c    **** 
 790:Src/main.c    ****     /**Enable the Alarm B 
 791:Src/main.c    ****     */
 792:Src/main.c    ****   sAlarm.AlarmDateWeekDay = 0x1;
 793:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_B;
 794:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 795:Src/main.c    ****   {
 796:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 797:Src/main.c    ****   }
 798:Src/main.c    **** 
 799:Src/main.c    ****     /**Enable the TimeStamp 
 800:Src/main.c    ****     */
 801:Src/main.c    ****   if (HAL_RTCEx_SetTimeStamp(&hrtc, RTC_TIMESTAMPEDGE_RISING, RTC_TIMESTAMPPIN_POS1) != HAL_OK)
 802:Src/main.c    ****   {
 803:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 804:Src/main.c    ****   }
 805:Src/main.c    **** 
 806:Src/main.c    **** }
 807:Src/main.c    **** 
 808:Src/main.c    **** /* SAI2 init function */
 809:Src/main.c    **** static void MX_SAI2_Init(void)
 810:Src/main.c    **** {
 811:Src/main.c    **** 
 812:Src/main.c    ****   hsai_BlockA2.Instance = SAI2_Block_A;
 813:Src/main.c    ****   hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 814:Src/main.c    ****   hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 815:Src/main.c    ****   hsai_BlockA2.Init.DataSize = SAI_DATASIZE_24;
 816:Src/main.c    ****   hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 817:Src/main.c    ****   hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 818:Src/main.c    ****   hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 819:Src/main.c    ****   hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 820:Src/main.c    ****   hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 821:Src/main.c    ****   hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 822:Src/main.c    ****   hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 823:Src/main.c    ****   hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 824:Src/main.c    ****   hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 825:Src/main.c    ****   hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 826:Src/main.c    ****   hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 827:Src/main.c    ****   hsai_BlockA2.FrameInit.FrameLength = 8;
 828:Src/main.c    ****   hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 829:Src/main.c    ****   hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 830:Src/main.c    ****   hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 16


 831:Src/main.c    ****   hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 832:Src/main.c    ****   hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 833:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 834:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotNumber = 1;
 835:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 836:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK)
 837:Src/main.c    ****   {
 838:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 839:Src/main.c    ****   }
 840:Src/main.c    **** 
 841:Src/main.c    ****   hsai_BlockB2.Instance = SAI2_Block_B;
 842:Src/main.c    ****   hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 843:Src/main.c    ****   hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 844:Src/main.c    ****   hsai_BlockB2.Init.DataSize = SAI_DATASIZE_24;
 845:Src/main.c    ****   hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 846:Src/main.c    ****   hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 847:Src/main.c    ****   hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 848:Src/main.c    ****   hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 849:Src/main.c    ****   hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 850:Src/main.c    ****   hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 851:Src/main.c    ****   hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 852:Src/main.c    ****   hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 853:Src/main.c    ****   hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 854:Src/main.c    ****   hsai_BlockB2.FrameInit.FrameLength = 8;
 855:Src/main.c    ****   hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 856:Src/main.c    ****   hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 857:Src/main.c    ****   hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 858:Src/main.c    ****   hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 859:Src/main.c    ****   hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 860:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 861:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotNumber = 1;
 862:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 863:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK)
 864:Src/main.c    ****   {
 865:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 866:Src/main.c    ****   }
 867:Src/main.c    **** 
 868:Src/main.c    **** }
 869:Src/main.c    **** 
 870:Src/main.c    **** /* SDMMC1 init function */
 871:Src/main.c    **** static void MX_SDMMC1_SD_Init(void)
 872:Src/main.c    **** {
  27              		.loc 1 872 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 873:Src/main.c    **** 
 874:Src/main.c    ****   hsd1.Instance = SDMMC1;
  32              		.loc 1 874 0
  33 0000 054B     		ldr	r3, .L2
  34 0002 064A     		ldr	r2, .L2+4
  35 0004 1A60     		str	r2, [r3]
 875:Src/main.c    ****   hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  36              		.loc 1 875 0
  37 0006 0022     		movs	r2, #0
  38 0008 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 17


 876:Src/main.c    ****   hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  39              		.loc 1 876 0
  40 000a 9A60     		str	r2, [r3, #8]
 877:Src/main.c    ****   hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  41              		.loc 1 877 0
  42 000c DA60     		str	r2, [r3, #12]
 878:Src/main.c    ****   hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
  43              		.loc 1 878 0
  44 000e 1A61     		str	r2, [r3, #16]
 879:Src/main.c    ****   hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  45              		.loc 1 879 0
  46 0010 5A61     		str	r2, [r3, #20]
 880:Src/main.c    ****   hsd1.Init.ClockDiv = 0;
  47              		.loc 1 880 0
  48 0012 9A61     		str	r2, [r3, #24]
  49 0014 7047     		bx	lr
  50              	.L3:
  51 0016 00BF     		.align	2
  52              	.L2:
  53 0018 00000000 		.word	hsd1
  54 001c 002C0140 		.word	1073818624
  55              		.cfi_endproc
  56              	.LFE174:
  58              		.section	.text.MX_GPIO_Init,"ax",%progbits
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv5-sp-d16
  65              	MX_GPIO_Init:
  66              	.LFB187:
 881:Src/main.c    **** 
 882:Src/main.c    **** }
 883:Src/main.c    **** 
 884:Src/main.c    **** /* SPDIFRX init function */
 885:Src/main.c    **** static void MX_SPDIFRX_Init(void)
 886:Src/main.c    **** {
 887:Src/main.c    **** 
 888:Src/main.c    ****   hspdif.Instance = SPDIFRX;
 889:Src/main.c    ****   hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 890:Src/main.c    ****   hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 891:Src/main.c    ****   hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 892:Src/main.c    ****   hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 893:Src/main.c    ****   hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 894:Src/main.c    ****   hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 895:Src/main.c    ****   hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 896:Src/main.c    ****   hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 897:Src/main.c    ****   hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 898:Src/main.c    ****   hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 899:Src/main.c    ****   if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK)
 900:Src/main.c    ****   {
 901:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 902:Src/main.c    ****   }
 903:Src/main.c    **** 
 904:Src/main.c    **** }
 905:Src/main.c    **** 
 906:Src/main.c    **** /* SPI2 init function */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 18


 907:Src/main.c    **** static void MX_SPI2_Init(void)
 908:Src/main.c    **** {
 909:Src/main.c    **** 
 910:Src/main.c    ****   /* SPI2 parameter configuration*/
 911:Src/main.c    ****   hspi2.Instance = SPI2;
 912:Src/main.c    ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 913:Src/main.c    ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 914:Src/main.c    ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 915:Src/main.c    ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 916:Src/main.c    ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 917:Src/main.c    ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 918:Src/main.c    ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 919:Src/main.c    ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 920:Src/main.c    ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 921:Src/main.c    ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 922:Src/main.c    ****   hspi2.Init.CRCPolynomial = 7;
 923:Src/main.c    ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 924:Src/main.c    ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 925:Src/main.c    ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 926:Src/main.c    ****   {
 927:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 928:Src/main.c    ****   }
 929:Src/main.c    **** 
 930:Src/main.c    **** }
 931:Src/main.c    **** 
 932:Src/main.c    **** /* TIM1 init function */
 933:Src/main.c    **** static void MX_TIM1_Init(void)
 934:Src/main.c    **** {
 935:Src/main.c    **** 
 936:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 937:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 938:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 939:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 940:Src/main.c    **** 
 941:Src/main.c    ****   htim1.Instance = TIM1;
 942:Src/main.c    ****   htim1.Init.Prescaler = 0;
 943:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 944:Src/main.c    ****   htim1.Init.Period = 0;
 945:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 946:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 947:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 948:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 949:Src/main.c    ****   {
 950:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 951:Src/main.c    ****   }
 952:Src/main.c    **** 
 953:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 954:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 955:Src/main.c    ****   {
 956:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 957:Src/main.c    ****   }
 958:Src/main.c    **** 
 959:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 960:Src/main.c    ****   {
 961:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 962:Src/main.c    ****   }
 963:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 19


 964:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 965:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 966:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 967:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 968:Src/main.c    ****   {
 969:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 970:Src/main.c    ****   }
 971:Src/main.c    **** 
 972:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 973:Src/main.c    ****   sConfigOC.Pulse = 0;
 974:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 975:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 976:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 977:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 978:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 979:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 980:Src/main.c    ****   {
 981:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 982:Src/main.c    ****   }
 983:Src/main.c    **** 
 984:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 985:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 986:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 987:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 988:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 989:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 990:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 991:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 992:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 993:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 994:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 995:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 996:Src/main.c    ****   {
 997:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 998:Src/main.c    ****   }
 999:Src/main.c    **** 
1000:Src/main.c    ****   HAL_TIM_MspPostInit(&htim1);
1001:Src/main.c    **** 
1002:Src/main.c    **** }
1003:Src/main.c    **** 
1004:Src/main.c    **** /* TIM2 init function */
1005:Src/main.c    **** static void MX_TIM2_Init(void)
1006:Src/main.c    **** {
1007:Src/main.c    **** 
1008:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
1009:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1010:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
1011:Src/main.c    **** 
1012:Src/main.c    ****   htim2.Instance = TIM2;
1013:Src/main.c    ****   htim2.Init.Prescaler = 0;
1014:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
1015:Src/main.c    ****   htim2.Init.Period = 0;
1016:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1017:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1018:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
1019:Src/main.c    ****   {
1020:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 20


1021:Src/main.c    ****   }
1022:Src/main.c    **** 
1023:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1024:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
1025:Src/main.c    ****   {
1026:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1027:Src/main.c    ****   }
1028:Src/main.c    **** 
1029:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
1030:Src/main.c    ****   {
1031:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1032:Src/main.c    ****   }
1033:Src/main.c    **** 
1034:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1035:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1036:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
1037:Src/main.c    ****   {
1038:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1039:Src/main.c    ****   }
1040:Src/main.c    **** 
1041:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1042:Src/main.c    ****   sConfigOC.Pulse = 0;
1043:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1044:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1045:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1046:Src/main.c    ****   {
1047:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1048:Src/main.c    ****   }
1049:Src/main.c    **** 
1050:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
1051:Src/main.c    **** 
1052:Src/main.c    **** }
1053:Src/main.c    **** 
1054:Src/main.c    **** /* TIM3 init function */
1055:Src/main.c    **** static void MX_TIM3_Init(void)
1056:Src/main.c    **** {
1057:Src/main.c    **** 
1058:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
1059:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1060:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
1061:Src/main.c    **** 
1062:Src/main.c    ****   htim3.Instance = TIM3;
1063:Src/main.c    ****   htim3.Init.Prescaler = 0;
1064:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
1065:Src/main.c    ****   htim3.Init.Period = 0;
1066:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1067:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1068:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
1069:Src/main.c    ****   {
1070:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1071:Src/main.c    ****   }
1072:Src/main.c    **** 
1073:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1074:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
1075:Src/main.c    ****   {
1076:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1077:Src/main.c    ****   }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 21


1078:Src/main.c    **** 
1079:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
1080:Src/main.c    ****   {
1081:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1082:Src/main.c    ****   }
1083:Src/main.c    **** 
1084:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1085:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1086:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
1087:Src/main.c    ****   {
1088:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1089:Src/main.c    ****   }
1090:Src/main.c    **** 
1091:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1092:Src/main.c    ****   sConfigOC.Pulse = 0;
1093:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1094:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1095:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1096:Src/main.c    ****   {
1097:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1098:Src/main.c    ****   }
1099:Src/main.c    **** 
1100:Src/main.c    ****   HAL_TIM_MspPostInit(&htim3);
1101:Src/main.c    **** 
1102:Src/main.c    **** }
1103:Src/main.c    **** 
1104:Src/main.c    **** /* TIM5 init function */
1105:Src/main.c    **** static void MX_TIM5_Init(void)
1106:Src/main.c    **** {
1107:Src/main.c    **** 
1108:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
1109:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1110:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
1111:Src/main.c    **** 
1112:Src/main.c    ****   htim5.Instance = TIM5;
1113:Src/main.c    ****   htim5.Init.Prescaler = 0;
1114:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
1115:Src/main.c    ****   htim5.Init.Period = 0;
1116:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1117:Src/main.c    ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1118:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
1119:Src/main.c    ****   {
1120:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1121:Src/main.c    ****   }
1122:Src/main.c    **** 
1123:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1124:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
1125:Src/main.c    ****   {
1126:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1127:Src/main.c    ****   }
1128:Src/main.c    **** 
1129:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
1130:Src/main.c    ****   {
1131:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1132:Src/main.c    ****   }
1133:Src/main.c    **** 
1134:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 22


1135:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1136:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
1137:Src/main.c    ****   {
1138:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1139:Src/main.c    ****   }
1140:Src/main.c    **** 
1141:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1142:Src/main.c    ****   sConfigOC.Pulse = 0;
1143:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1144:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1145:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
1146:Src/main.c    ****   {
1147:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1148:Src/main.c    ****   }
1149:Src/main.c    **** 
1150:Src/main.c    ****   HAL_TIM_MspPostInit(&htim5);
1151:Src/main.c    **** 
1152:Src/main.c    **** }
1153:Src/main.c    **** 
1154:Src/main.c    **** /* TIM7 init function */
1155:Src/main.c    **** static void MX_TIM7_Init(void)
1156:Src/main.c    **** {
1157:Src/main.c    **** 
1158:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1159:Src/main.c    **** 
1160:Src/main.c    ****   htim7.Instance = TIM7;
1161:Src/main.c    ****   htim7.Init.Prescaler = 0;
1162:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
1163:Src/main.c    ****   htim7.Init.Period = 0;
1164:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1165:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
1166:Src/main.c    ****   {
1167:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1168:Src/main.c    ****   }
1169:Src/main.c    **** 
1170:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1171:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1172:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
1173:Src/main.c    ****   {
1174:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1175:Src/main.c    ****   }
1176:Src/main.c    **** 
1177:Src/main.c    **** }
1178:Src/main.c    **** 
1179:Src/main.c    **** /* TIM8 init function */
1180:Src/main.c    **** static void MX_TIM8_Init(void)
1181:Src/main.c    **** {
1182:Src/main.c    **** 
1183:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
1184:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1185:Src/main.c    **** 
1186:Src/main.c    ****   htim8.Instance = TIM8;
1187:Src/main.c    ****   htim8.Init.Prescaler = 0;
1188:Src/main.c    ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
1189:Src/main.c    ****   htim8.Init.Period = 0;
1190:Src/main.c    ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1191:Src/main.c    ****   htim8.Init.RepetitionCounter = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 23


1192:Src/main.c    ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1193:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
1194:Src/main.c    ****   {
1195:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1196:Src/main.c    ****   }
1197:Src/main.c    **** 
1198:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1199:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
1200:Src/main.c    ****   {
1201:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1202:Src/main.c    ****   }
1203:Src/main.c    **** 
1204:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1205:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
1206:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1207:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
1208:Src/main.c    ****   {
1209:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1210:Src/main.c    ****   }
1211:Src/main.c    **** 
1212:Src/main.c    **** }
1213:Src/main.c    **** 
1214:Src/main.c    **** /* TIM12 init function */
1215:Src/main.c    **** static void MX_TIM12_Init(void)
1216:Src/main.c    **** {
1217:Src/main.c    **** 
1218:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
1219:Src/main.c    **** 
1220:Src/main.c    ****   htim12.Instance = TIM12;
1221:Src/main.c    ****   htim12.Init.Prescaler = 0;
1222:Src/main.c    ****   htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
1223:Src/main.c    ****   htim12.Init.Period = 0;
1224:Src/main.c    ****   htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1225:Src/main.c    ****   htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1226:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
1227:Src/main.c    ****   {
1228:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1229:Src/main.c    ****   }
1230:Src/main.c    **** 
1231:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1232:Src/main.c    ****   sConfigOC.Pulse = 0;
1233:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1234:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1235:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1236:Src/main.c    ****   {
1237:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1238:Src/main.c    ****   }
1239:Src/main.c    **** 
1240:Src/main.c    ****   HAL_TIM_MspPostInit(&htim12);
1241:Src/main.c    **** 
1242:Src/main.c    **** }
1243:Src/main.c    **** 
1244:Src/main.c    **** /* USART1 init function */
1245:Src/main.c    **** static void MX_USART1_UART_Init(void)
1246:Src/main.c    **** {
1247:Src/main.c    **** 
1248:Src/main.c    ****   huart1.Instance = USART1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 24


1249:Src/main.c    ****   huart1.Init.BaudRate = 115200;
1250:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
1251:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
1252:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
1253:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
1254:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1255:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
1256:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1257:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1258:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
1259:Src/main.c    ****   {
1260:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1261:Src/main.c    ****   }
1262:Src/main.c    **** 
1263:Src/main.c    **** }
1264:Src/main.c    **** 
1265:Src/main.c    **** /* USART6 init function */
1266:Src/main.c    **** static void MX_USART6_UART_Init(void)
1267:Src/main.c    **** {
1268:Src/main.c    **** 
1269:Src/main.c    ****   huart6.Instance = USART6;
1270:Src/main.c    ****   huart6.Init.BaudRate = 115200;
1271:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
1272:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
1273:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
1274:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
1275:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1276:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
1277:Src/main.c    ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1278:Src/main.c    ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1279:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
1280:Src/main.c    ****   {
1281:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1282:Src/main.c    ****   }
1283:Src/main.c    **** 
1284:Src/main.c    **** }
1285:Src/main.c    **** 
1286:Src/main.c    **** /* FMC initialization function */
1287:Src/main.c    **** static void MX_FMC_Init(void)
1288:Src/main.c    **** {
1289:Src/main.c    ****   FMC_SDRAM_TimingTypeDef SdramTiming;
1290:Src/main.c    **** 
1291:Src/main.c    ****   /** Perform the SDRAM1 memory initialization sequence
1292:Src/main.c    ****   */
1293:Src/main.c    ****   hsdram1.Instance = FMC_SDRAM_DEVICE;
1294:Src/main.c    ****   /* hsdram1.Init */
1295:Src/main.c    ****   hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
1296:Src/main.c    ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
1297:Src/main.c    ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
1298:Src/main.c    ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
1299:Src/main.c    ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
1300:Src/main.c    ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
1301:Src/main.c    ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
1302:Src/main.c    ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
1303:Src/main.c    ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
1304:Src/main.c    ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
1305:Src/main.c    ****   /* SdramTiming */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 25


1306:Src/main.c    ****   SdramTiming.LoadToActiveDelay = 2;
1307:Src/main.c    ****   SdramTiming.ExitSelfRefreshDelay = 7;
1308:Src/main.c    ****   SdramTiming.SelfRefreshTime = 4;
1309:Src/main.c    ****   SdramTiming.RowCycleDelay = 7;
1310:Src/main.c    ****   SdramTiming.WriteRecoveryTime = 3;
1311:Src/main.c    ****   SdramTiming.RPDelay = 2;
1312:Src/main.c    ****   SdramTiming.RCDDelay = 2;
1313:Src/main.c    **** 
1314:Src/main.c    ****   if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
1315:Src/main.c    ****   {
1316:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1317:Src/main.c    ****   }
1318:Src/main.c    **** 
1319:Src/main.c    **** }
1320:Src/main.c    **** 
1321:Src/main.c    **** /** Configure pins as 
1322:Src/main.c    ****         * Analog 
1323:Src/main.c    ****         * Input 
1324:Src/main.c    ****         * Output
1325:Src/main.c    ****         * EVENT_OUT
1326:Src/main.c    ****         * EXTI
1327:Src/main.c    ****      PB5   ------> USB_OTG_HS_ULPI_D7
1328:Src/main.c    ****      PH4   ------> USB_OTG_HS_ULPI_NXT
1329:Src/main.c    ****      PB13   ------> USB_OTG_HS_ULPI_D6
1330:Src/main.c    ****      PB12   ------> USB_OTG_HS_ULPI_D5
1331:Src/main.c    ****      PC0   ------> USB_OTG_HS_ULPI_STP
1332:Src/main.c    ****      PC2   ------> USB_OTG_HS_ULPI_DIR
1333:Src/main.c    ****      PA5   ------> USB_OTG_HS_ULPI_CK
1334:Src/main.c    ****      PB10   ------> USB_OTG_HS_ULPI_D3
1335:Src/main.c    ****      PA3   ------> USB_OTG_HS_ULPI_D0
1336:Src/main.c    ****      PB1   ------> USB_OTG_HS_ULPI_D2
1337:Src/main.c    ****      PB0   ------> USB_OTG_HS_ULPI_D1
1338:Src/main.c    ****      PB11   ------> USB_OTG_HS_ULPI_D4
1339:Src/main.c    **** */
1340:Src/main.c    **** static void MX_GPIO_Init(void)
1341:Src/main.c    **** {
  67              		.loc 1 1341 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 64
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 36
  74              		.cfi_offset 4, -36
  75              		.cfi_offset 5, -32
  76              		.cfi_offset 6, -28
  77              		.cfi_offset 7, -24
  78              		.cfi_offset 8, -20
  79              		.cfi_offset 9, -16
  80              		.cfi_offset 10, -12
  81              		.cfi_offset 11, -8
  82              		.cfi_offset 14, -4
  83 0004 91B0     		sub	sp, sp, #68
  84              	.LCFI1:
  85              		.cfi_def_cfa_offset 104
  86              	.LBB2:
1342:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 26


1343:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
1344:Src/main.c    **** 
1345:Src/main.c    ****   /* GPIO Ports Clock Enable */
1346:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  87              		.loc 1 1346 0
  88 0006 9A4B     		ldr	r3, .L6
  89 0008 1A6B     		ldr	r2, [r3, #48]
  90 000a 42F01002 		orr	r2, r2, #16
  91 000e 1A63     		str	r2, [r3, #48]
  92 0010 1A6B     		ldr	r2, [r3, #48]
  93 0012 02F01002 		and	r2, r2, #16
  94 0016 0092     		str	r2, [sp]
  95 0018 009A     		ldr	r2, [sp]
  96              	.LBE2:
  97              	.LBB3:
1347:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
  98              		.loc 1 1347 0
  99 001a 1A6B     		ldr	r2, [r3, #48]
 100 001c 42F04002 		orr	r2, r2, #64
 101 0020 1A63     		str	r2, [r3, #48]
 102 0022 1A6B     		ldr	r2, [r3, #48]
 103 0024 02F04002 		and	r2, r2, #64
 104 0028 0192     		str	r2, [sp, #4]
 105 002a 019A     		ldr	r2, [sp, #4]
 106              	.LBE3:
 107              	.LBB4:
1348:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 108              		.loc 1 1348 0
 109 002c 1A6B     		ldr	r2, [r3, #48]
 110 002e 42F00202 		orr	r2, r2, #2
 111 0032 1A63     		str	r2, [r3, #48]
 112 0034 1A6B     		ldr	r2, [r3, #48]
 113 0036 02F00202 		and	r2, r2, #2
 114 003a 0292     		str	r2, [sp, #8]
 115 003c 029A     		ldr	r2, [sp, #8]
 116              	.LBE4:
 117              	.LBB5:
1349:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 118              		.loc 1 1349 0
 119 003e 1A6B     		ldr	r2, [r3, #48]
 120 0040 42F00802 		orr	r2, r2, #8
 121 0044 1A63     		str	r2, [r3, #48]
 122 0046 1A6B     		ldr	r2, [r3, #48]
 123 0048 02F00802 		and	r2, r2, #8
 124 004c 0392     		str	r2, [sp, #12]
 125 004e 039A     		ldr	r2, [sp, #12]
 126              	.LBE5:
 127              	.LBB6:
1350:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 128              		.loc 1 1350 0
 129 0050 1A6B     		ldr	r2, [r3, #48]
 130 0052 42F00402 		orr	r2, r2, #4
 131 0056 1A63     		str	r2, [r3, #48]
 132 0058 1A6B     		ldr	r2, [r3, #48]
 133 005a 02F00402 		and	r2, r2, #4
 134 005e 0492     		str	r2, [sp, #16]
 135 0060 049A     		ldr	r2, [sp, #16]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 27


 136              	.LBE6:
 137              	.LBB7:
1351:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 138              		.loc 1 1351 0
 139 0062 1A6B     		ldr	r2, [r3, #48]
 140 0064 42F00102 		orr	r2, r2, #1
 141 0068 1A63     		str	r2, [r3, #48]
 142 006a 1A6B     		ldr	r2, [r3, #48]
 143 006c 02F00102 		and	r2, r2, #1
 144 0070 0592     		str	r2, [sp, #20]
 145 0072 059A     		ldr	r2, [sp, #20]
 146              	.LBE7:
 147              	.LBB8:
1352:Src/main.c    ****   __HAL_RCC_GPIOJ_CLK_ENABLE();
 148              		.loc 1 1352 0
 149 0074 1A6B     		ldr	r2, [r3, #48]
 150 0076 42F40072 		orr	r2, r2, #512
 151 007a 1A63     		str	r2, [r3, #48]
 152 007c 1A6B     		ldr	r2, [r3, #48]
 153 007e 02F40072 		and	r2, r2, #512
 154 0082 0692     		str	r2, [sp, #24]
 155 0084 069A     		ldr	r2, [sp, #24]
 156              	.LBE8:
 157              	.LBB9:
1353:Src/main.c    ****   __HAL_RCC_GPIOI_CLK_ENABLE();
 158              		.loc 1 1353 0
 159 0086 1A6B     		ldr	r2, [r3, #48]
 160 0088 42F48072 		orr	r2, r2, #256
 161 008c 1A63     		str	r2, [r3, #48]
 162 008e 1A6B     		ldr	r2, [r3, #48]
 163 0090 02F48072 		and	r2, r2, #256
 164 0094 0792     		str	r2, [sp, #28]
 165 0096 079A     		ldr	r2, [sp, #28]
 166              	.LBE9:
 167              	.LBB10:
1354:Src/main.c    ****   __HAL_RCC_GPIOK_CLK_ENABLE();
 168              		.loc 1 1354 0
 169 0098 1A6B     		ldr	r2, [r3, #48]
 170 009a 42F48062 		orr	r2, r2, #1024
 171 009e 1A63     		str	r2, [r3, #48]
 172 00a0 1A6B     		ldr	r2, [r3, #48]
 173 00a2 02F48062 		and	r2, r2, #1024
 174 00a6 0892     		str	r2, [sp, #32]
 175 00a8 089A     		ldr	r2, [sp, #32]
 176              	.LBE10:
 177              	.LBB11:
1355:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 178              		.loc 1 1355 0
 179 00aa 1A6B     		ldr	r2, [r3, #48]
 180 00ac 42F02002 		orr	r2, r2, #32
 181 00b0 1A63     		str	r2, [r3, #48]
 182 00b2 1A6B     		ldr	r2, [r3, #48]
 183 00b4 02F02002 		and	r2, r2, #32
 184 00b8 0992     		str	r2, [sp, #36]
 185 00ba 099A     		ldr	r2, [sp, #36]
 186              	.LBE11:
 187              	.LBB12:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 28


1356:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 188              		.loc 1 1356 0
 189 00bc 1A6B     		ldr	r2, [r3, #48]
 190 00be 42F08002 		orr	r2, r2, #128
 191 00c2 1A63     		str	r2, [r3, #48]
 192 00c4 1B6B     		ldr	r3, [r3, #48]
 193 00c6 03F08003 		and	r3, r3, #128
 194 00ca 0A93     		str	r3, [sp, #40]
 195 00cc 0A9B     		ldr	r3, [sp, #40]
 196              	.LBE12:
1357:Src/main.c    **** 
1358:Src/main.c    ****   /*Configure GPIO pin Output Level */
1359:Src/main.c    ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 197              		.loc 1 1359 0
 198 00ce 0122     		movs	r2, #1
 199 00d0 2021     		movs	r1, #32
 200 00d2 6848     		ldr	r0, .L6+4
 201 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 202              	.LVL0:
1360:Src/main.c    **** 
1361:Src/main.c    ****   /*Configure GPIO pin Output Level */
1362:Src/main.c    ****   HAL_GPIO_WritePin(GPIOI, ARDUINO_D7_Pin|ARDUINO_D8_Pin, GPIO_PIN_RESET);
 203              		.loc 1 1362 0
 204 00d8 0022     		movs	r2, #0
 205 00da 0C21     		movs	r1, #12
 206 00dc 6648     		ldr	r0, .L6+8
 207 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 208              	.LVL1:
1363:Src/main.c    **** 
1364:Src/main.c    ****   /*Configure GPIO pin Output Level */
1365:Src/main.c    ****   HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 209              		.loc 1 1365 0
 210 00e2 0122     		movs	r2, #1
 211 00e4 0821     		movs	r1, #8
 212 00e6 6548     		ldr	r0, .L6+12
 213 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 214              	.LVL2:
1366:Src/main.c    **** 
1367:Src/main.c    ****   /*Configure GPIO pin Output Level */
1368:Src/main.c    ****   HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 215              		.loc 1 1368 0
 216 00ec 0122     		movs	r2, #1
 217 00ee 4FF48051 		mov	r1, #4096
 218 00f2 6148     		ldr	r0, .L6+8
 219 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL3:
1369:Src/main.c    **** 
1370:Src/main.c    ****   /*Configure GPIO pin Output Level */
1371:Src/main.c    ****   HAL_GPIO_WritePin(DCMI_PWR_EN_GPIO_Port, DCMI_PWR_EN_Pin, GPIO_PIN_RESET);
 221              		.loc 1 1371 0
 222 00f8 0022     		movs	r2, #0
 223 00fa 4FF40051 		mov	r1, #8192
 224 00fe 6048     		ldr	r0, .L6+16
 225 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 226              	.LVL4:
1372:Src/main.c    **** 
1373:Src/main.c    ****   /*Configure GPIO pin Output Level */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 29


1374:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin, GPIO_PIN_RESET);
 227              		.loc 1 1374 0
 228 0104 0022     		movs	r2, #0
 229 0106 C821     		movs	r1, #200
 230 0108 5E48     		ldr	r0, .L6+20
 231 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 232              	.LVL5:
1375:Src/main.c    **** 
1376:Src/main.c    ****   /*Configure GPIO pin : OTG_HS_OverCurrent_Pin */
1377:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
 233              		.loc 1 1377 0
 234 010e 4FF0080A 		mov	r10, #8
 235 0112 CDF82CA0 		str	r10, [sp, #44]
1378:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 236              		.loc 1 1378 0
 237 0116 0024     		movs	r4, #0
 238 0118 0C94     		str	r4, [sp, #48]
1379:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 239              		.loc 1 1379 0
 240 011a 0D94     		str	r4, [sp, #52]
1380:Src/main.c    ****   HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 241              		.loc 1 1380 0
 242 011c 0BA9     		add	r1, sp, #44
 243 011e 5A48     		ldr	r0, .L6+24
 244 0120 FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL6:
1381:Src/main.c    **** 
1382:Src/main.c    ****   /*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D3_Pin 
1383:Src/main.c    ****                            ULPI_D2_Pin ULPI_D1_Pin ULPI_D4_Pin */
1384:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_D7_Pin|ULPI_D6_Pin|ULPI_D5_Pin|ULPI_D3_Pin 
 246              		.loc 1 1384 0
 247 0124 43F62343 		movw	r3, #15395
 248 0128 0B93     		str	r3, [sp, #44]
1385:Src/main.c    ****                           |ULPI_D2_Pin|ULPI_D1_Pin|ULPI_D4_Pin;
1386:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 249              		.loc 1 1386 0
 250 012a 4FF00208 		mov	r8, #2
 251 012e CDF83080 		str	r8, [sp, #48]
1387:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 252              		.loc 1 1387 0
 253 0132 0D94     		str	r4, [sp, #52]
1388:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 254              		.loc 1 1388 0
 255 0134 0327     		movs	r7, #3
 256 0136 0E97     		str	r7, [sp, #56]
1389:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 257              		.loc 1 1389 0
 258 0138 0A26     		movs	r6, #10
 259 013a 0F96     		str	r6, [sp, #60]
1390:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 260              		.loc 1 1390 0
 261 013c 0BA9     		add	r1, sp, #44
 262 013e 5348     		ldr	r0, .L6+28
 263 0140 FFF7FEFF 		bl	HAL_GPIO_Init
 264              	.LVL7:
1391:Src/main.c    **** 
1392:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_VBUS_Pin */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 30


1393:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 265              		.loc 1 1393 0
 266 0144 4FF48053 		mov	r3, #4096
 267 0148 0B93     		str	r3, [sp, #44]
1394:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 268              		.loc 1 1394 0
 269 014a 0C94     		str	r4, [sp, #48]
1395:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 270              		.loc 1 1395 0
 271 014c 0D94     		str	r4, [sp, #52]
1396:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 272              		.loc 1 1396 0
 273 014e 0BA9     		add	r1, sp, #44
 274 0150 4F48     		ldr	r0, .L6+32
 275 0152 FFF7FEFF 		bl	HAL_GPIO_Init
 276              	.LVL8:
1397:Src/main.c    **** 
1398:Src/main.c    ****   /*Configure GPIO pin : Audio_INT_Pin */
1399:Src/main.c    ****   GPIO_InitStruct.Pin = Audio_INT_Pin;
 277              		.loc 1 1399 0
 278 0156 4023     		movs	r3, #64
 279 0158 0B93     		str	r3, [sp, #44]
1400:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 280              		.loc 1 1400 0
 281 015a DFF840B1 		ldr	fp, .L6+44
 282 015e CDF830B0 		str	fp, [sp, #48]
1401:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 283              		.loc 1 1401 0
 284 0162 0D94     		str	r4, [sp, #52]
1402:Src/main.c    ****   HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 285              		.loc 1 1402 0
 286 0164 0BA9     		add	r1, sp, #44
 287 0166 4348     		ldr	r0, .L6+4
 288 0168 FFF7FEFF 		bl	HAL_GPIO_Init
 289              	.LVL9:
1403:Src/main.c    **** 
1404:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
1405:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 290              		.loc 1 1405 0
 291 016c 2023     		movs	r3, #32
 292 016e 0B93     		str	r3, [sp, #44]
1406:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 293              		.loc 1 1406 0
 294 0170 0125     		movs	r5, #1
 295 0172 0C95     		str	r5, [sp, #48]
1407:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 296              		.loc 1 1407 0
 297 0174 0D94     		str	r4, [sp, #52]
1408:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 298              		.loc 1 1408 0
 299 0176 0E94     		str	r4, [sp, #56]
1409:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 300              		.loc 1 1409 0
 301 0178 0BA9     		add	r1, sp, #44
 302 017a 3E48     		ldr	r0, .L6+4
 303 017c FFF7FEFF 		bl	HAL_GPIO_Init
 304              	.LVL10:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 31


1410:Src/main.c    **** 
1411:Src/main.c    ****   /*Configure GPIO pins : ARDUINO_D7_Pin ARDUINO_D8_Pin LCD_DISP_Pin */
1412:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_D7_Pin|ARDUINO_D8_Pin|LCD_DISP_Pin;
 305              		.loc 1 1412 0
 306 0180 41F20C03 		movw	r3, #4108
 307 0184 0B93     		str	r3, [sp, #44]
1413:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 308              		.loc 1 1413 0
 309 0186 0C95     		str	r5, [sp, #48]
1414:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 310              		.loc 1 1414 0
 311 0188 0D94     		str	r4, [sp, #52]
1415:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 312              		.loc 1 1415 0
 313 018a 0E94     		str	r4, [sp, #56]
1416:Src/main.c    ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 314              		.loc 1 1416 0
 315 018c 0BA9     		add	r1, sp, #44
 316 018e 3A48     		ldr	r0, .L6+8
 317 0190 FFF7FEFF 		bl	HAL_GPIO_Init
 318              	.LVL11:
1417:Src/main.c    **** 
1418:Src/main.c    ****   /*Configure GPIO pin : uSD_Detect_Pin */
1419:Src/main.c    ****   GPIO_InitStruct.Pin = uSD_Detect_Pin;
 319              		.loc 1 1419 0
 320 0194 4FF40059 		mov	r9, #8192
 321 0198 CDF82C90 		str	r9, [sp, #44]
1420:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 322              		.loc 1 1420 0
 323 019c 0C94     		str	r4, [sp, #48]
1421:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 324              		.loc 1 1421 0
 325 019e 0D94     		str	r4, [sp, #52]
1422:Src/main.c    ****   HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 326              		.loc 1 1422 0
 327 01a0 0BA9     		add	r1, sp, #44
 328 01a2 3C48     		ldr	r0, .L6+36
 329 01a4 FFF7FEFF 		bl	HAL_GPIO_Init
 330              	.LVL12:
1423:Src/main.c    **** 
1424:Src/main.c    ****   /*Configure GPIO pin : LCD_BL_CTRL_Pin */
1425:Src/main.c    ****   GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 331              		.loc 1 1425 0
 332 01a8 CDF82CA0 		str	r10, [sp, #44]
1426:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 333              		.loc 1 1426 0
 334 01ac 0C95     		str	r5, [sp, #48]
1427:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 335              		.loc 1 1427 0
 336 01ae 0D94     		str	r4, [sp, #52]
1428:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 337              		.loc 1 1428 0
 338 01b0 0E94     		str	r4, [sp, #56]
1429:Src/main.c    ****   HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 339              		.loc 1 1429 0
 340 01b2 0BA9     		add	r1, sp, #44
 341 01b4 3148     		ldr	r0, .L6+12
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 32


 342 01b6 FFF7FEFF 		bl	HAL_GPIO_Init
 343              	.LVL13:
1430:Src/main.c    **** 
1431:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
1432:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 344              		.loc 1 1432 0
 345 01ba 4FF0100A 		mov	r10, #16
 346 01be CDF82CA0 		str	r10, [sp, #44]
1433:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 347              		.loc 1 1433 0
 348 01c2 0C94     		str	r4, [sp, #48]
1434:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 349              		.loc 1 1434 0
 350 01c4 0D94     		str	r4, [sp, #52]
1435:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 351              		.loc 1 1435 0
 352 01c6 0BA9     		add	r1, sp, #44
 353 01c8 2A48     		ldr	r0, .L6+4
 354 01ca FFF7FEFF 		bl	HAL_GPIO_Init
 355              	.LVL14:
1436:Src/main.c    **** 
1437:Src/main.c    ****   /*Configure GPIO pins : TP3_Pin NC2_Pin */
1438:Src/main.c    ****   GPIO_InitStruct.Pin = TP3_Pin|NC2_Pin;
 356              		.loc 1 1438 0
 357 01ce 48F20403 		movw	r3, #32772
 358 01d2 0B93     		str	r3, [sp, #44]
1439:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 359              		.loc 1 1439 0
 360 01d4 0C94     		str	r4, [sp, #48]
1440:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 361              		.loc 1 1440 0
 362 01d6 0D94     		str	r4, [sp, #52]
1441:Src/main.c    ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 363              		.loc 1 1441 0
 364 01d8 0BA9     		add	r1, sp, #44
 365 01da 2948     		ldr	r0, .L6+16
 366 01dc FFF7FEFF 		bl	HAL_GPIO_Init
 367              	.LVL15:
1442:Src/main.c    **** 
1443:Src/main.c    ****   /*Configure GPIO pin : DCMI_PWR_EN_Pin */
1444:Src/main.c    ****   GPIO_InitStruct.Pin = DCMI_PWR_EN_Pin;
 368              		.loc 1 1444 0
 369 01e0 CDF82C90 		str	r9, [sp, #44]
1445:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 370              		.loc 1 1445 0
 371 01e4 0C95     		str	r5, [sp, #48]
1446:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 372              		.loc 1 1446 0
 373 01e6 0D94     		str	r4, [sp, #52]
1447:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 374              		.loc 1 1447 0
 375 01e8 0E94     		str	r4, [sp, #56]
1448:Src/main.c    ****   HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 376              		.loc 1 1448 0
 377 01ea 0BA9     		add	r1, sp, #44
 378 01ec 2448     		ldr	r0, .L6+16
 379 01ee FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 33


 380              	.LVL16:
1449:Src/main.c    **** 
1450:Src/main.c    ****   /*Configure GPIO pin : LCD_INT_Pin */
1451:Src/main.c    ****   GPIO_InitStruct.Pin = LCD_INT_Pin;
 381              		.loc 1 1451 0
 382 01f2 CDF82C90 		str	r9, [sp, #44]
1452:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 383              		.loc 1 1452 0
 384 01f6 CDF830B0 		str	fp, [sp, #48]
1453:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 385              		.loc 1 1453 0
 386 01fa 0D94     		str	r4, [sp, #52]
1454:Src/main.c    ****   HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 387              		.loc 1 1454 0
 388 01fc 0BA9     		add	r1, sp, #44
 389 01fe 1E48     		ldr	r0, .L6+8
 390 0200 FFF7FEFF 		bl	HAL_GPIO_Init
 391              	.LVL17:
1455:Src/main.c    **** 
1456:Src/main.c    ****   /*Configure GPIO pin : ULPI_NXT_Pin */
1457:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 392              		.loc 1 1457 0
 393 0204 CDF82CA0 		str	r10, [sp, #44]
1458:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 394              		.loc 1 1458 0
 395 0208 CDF83080 		str	r8, [sp, #48]
1459:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 396              		.loc 1 1459 0
 397 020c 0D94     		str	r4, [sp, #52]
1460:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 398              		.loc 1 1460 0
 399 020e 0E97     		str	r7, [sp, #56]
1461:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 400              		.loc 1 1461 0
 401 0210 0F96     		str	r6, [sp, #60]
1462:Src/main.c    ****   HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 402              		.loc 1 1462 0
 403 0212 0BA9     		add	r1, sp, #44
 404 0214 1A48     		ldr	r0, .L6+16
 405 0216 FFF7FEFF 		bl	HAL_GPIO_Init
 406              	.LVL18:
1463:Src/main.c    **** 
1464:Src/main.c    ****   /*Configure GPIO pins : ARDUINO_D4_Pin ARDUINO_D2_Pin EXT_RST_Pin */
1465:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin;
 407              		.loc 1 1465 0
 408 021a C823     		movs	r3, #200
 409 021c 0B93     		str	r3, [sp, #44]
1466:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 410              		.loc 1 1466 0
 411 021e 0C95     		str	r5, [sp, #48]
1467:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 412              		.loc 1 1467 0
 413 0220 0D94     		str	r4, [sp, #52]
1468:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 414              		.loc 1 1468 0
 415 0222 0E94     		str	r4, [sp, #56]
1469:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 34


 416              		.loc 1 1469 0
 417 0224 0BA9     		add	r1, sp, #44
 418 0226 1748     		ldr	r0, .L6+20
 419 0228 FFF7FEFF 		bl	HAL_GPIO_Init
 420              	.LVL19:
1470:Src/main.c    **** 
1471:Src/main.c    ****   /*Configure GPIO pins : ULPI_STP_Pin ULPI_DIR_Pin */
1472:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_STP_Pin|ULPI_DIR_Pin;
 421              		.loc 1 1472 0
 422 022c 0523     		movs	r3, #5
 423 022e 0B93     		str	r3, [sp, #44]
1473:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 424              		.loc 1 1473 0
 425 0230 CDF83080 		str	r8, [sp, #48]
1474:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 426              		.loc 1 1474 0
 427 0234 0D94     		str	r4, [sp, #52]
1475:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 428              		.loc 1 1475 0
 429 0236 0E97     		str	r7, [sp, #56]
1476:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 430              		.loc 1 1476 0
 431 0238 0F96     		str	r6, [sp, #60]
1477:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 432              		.loc 1 1477 0
 433 023a 0BA9     		add	r1, sp, #44
 434 023c 1548     		ldr	r0, .L6+36
 435 023e FFF7FEFF 		bl	HAL_GPIO_Init
 436              	.LVL20:
1478:Src/main.c    **** 
1479:Src/main.c    ****   /*Configure GPIO pin : RMII_RXER_Pin */
1480:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_RXER_Pin;
 437              		.loc 1 1480 0
 438 0242 0423     		movs	r3, #4
 439 0244 0B93     		str	r3, [sp, #44]
1481:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 440              		.loc 1 1481 0
 441 0246 0C94     		str	r4, [sp, #48]
1482:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 442              		.loc 1 1482 0
 443 0248 0D94     		str	r4, [sp, #52]
1483:Src/main.c    ****   HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 444              		.loc 1 1483 0
 445 024a 0BA9     		add	r1, sp, #44
 446 024c 0D48     		ldr	r0, .L6+20
 447 024e FFF7FEFF 		bl	HAL_GPIO_Init
 448              	.LVL21:
1484:Src/main.c    **** 
1485:Src/main.c    ****   /*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
1486:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_CLK_Pin|ULPI_D0_Pin;
 449              		.loc 1 1486 0
 450 0252 2823     		movs	r3, #40
 451 0254 0B93     		str	r3, [sp, #44]
1487:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 452              		.loc 1 1487 0
 453 0256 CDF83080 		str	r8, [sp, #48]
1488:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 35


 454              		.loc 1 1488 0
 455 025a 0D94     		str	r4, [sp, #52]
1489:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 456              		.loc 1 1489 0
 457 025c 0E97     		str	r7, [sp, #56]
1490:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 458              		.loc 1 1490 0
 459 025e 0F96     		str	r6, [sp, #60]
1491:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 460              		.loc 1 1491 0
 461 0260 0BA9     		add	r1, sp, #44
 462 0262 0D48     		ldr	r0, .L6+40
 463 0264 FFF7FEFF 		bl	HAL_GPIO_Init
 464              	.LVL22:
1492:Src/main.c    **** 
1493:Src/main.c    **** }
 465              		.loc 1 1493 0
 466 0268 11B0     		add	sp, sp, #68
 467              	.LCFI2:
 468              		.cfi_def_cfa_offset 36
 469              		@ sp needed
 470 026a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 471              	.L7:
 472 026e 00BF     		.align	2
 473              	.L6:
 474 0270 00380240 		.word	1073887232
 475 0274 000C0240 		.word	1073875968
 476 0278 00200240 		.word	1073881088
 477 027c 00280240 		.word	1073883136
 478 0280 001C0240 		.word	1073880064
 479 0284 00180240 		.word	1073879040
 480 0288 00100240 		.word	1073876992
 481 028c 00040240 		.word	1073873920
 482 0290 00240240 		.word	1073882112
 483 0294 00080240 		.word	1073874944
 484 0298 00000240 		.word	1073872896
 485 029c 00001210 		.word	269615104
 486              		.cfi_endproc
 487              	.LFE187:
 489              		.section	.text.lcd_start,"ax",%progbits
 490              		.align	1
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv5-sp-d16
 496              	lcd_start:
 497              	.LFB159:
 215:Src/main.c    ****   /* LCD Initialization */ 
 498              		.loc 1 215 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502 0000 08B5     		push	{r3, lr}
 503              	.LCFI3:
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 3, -8
 506              		.cfi_offset 14, -4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 36


 217:Src/main.c    **** 
 507              		.loc 1 217 0
 508 0002 FFF7FEFF 		bl	BSP_LCD_Init
 509              	.LVL23:
 220:Src/main.c    ****   //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
 510              		.loc 1 220 0
 511 0006 4FF04041 		mov	r1, #-1073741824
 512 000a 0020     		movs	r0, #0
 513 000c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 514              	.LVL24:
 222:Src/main.c    **** 
 515              		.loc 1 222 0
 516 0010 1449     		ldr	r1, .L10
 517 0012 0120     		movs	r0, #1
 518 0014 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 519              	.LVL25:
 225:Src/main.c    ****   
 520              		.loc 1 225 0
 521 0018 FFF7FEFF 		bl	BSP_LCD_DisplayOn
 522              	.LVL26:
 228:Src/main.c    **** 
 523              		.loc 1 228 0
 524 001c 0020     		movs	r0, #0
 525 001e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 526              	.LVL27:
 231:Src/main.c    ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 527              		.loc 1 231 0
 528 0022 4FF0FF30 		mov	r0, #-1
 529 0026 FFF7FEFF 		bl	BSP_LCD_Clear
 530              	.LVL28:
 232:Src/main.c    ****   
 531              		.loc 1 232 0
 532 002a 4FF0FF30 		mov	r0, #-1
 533 002e FFF7FEFF 		bl	BSP_LCD_SetBackColor
 534              	.LVL29:
 234:Src/main.c    ****   
 535              		.loc 1 234 0
 536 0032 4FF0FF31 		mov	r1, #-1
 537 0036 0120     		movs	r0, #1
 538 0038 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
 539              	.LVL30:
 237:Src/main.c    **** 
 540              		.loc 1 237 0
 541 003c 0120     		movs	r0, #1
 542 003e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 543              	.LVL31:
 240:Src/main.c    ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 544              		.loc 1 240 0
 545 0042 4FF0FF30 		mov	r0, #-1
 546 0046 FFF7FEFF 		bl	BSP_LCD_Clear
 547              	.LVL32:
 241:Src/main.c    ****   
 548              		.loc 1 241 0
 549 004a 4FF0FF30 		mov	r0, #-1
 550 004e FFF7FEFF 		bl	BSP_LCD_SetBackColor
 551              	.LVL33:
 245:Src/main.c    ****   BSP_LCD_SetTransparency(1, 255);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 37


 552              		.loc 1 245 0
 553 0052 FF21     		movs	r1, #255
 554 0054 0020     		movs	r0, #0
 555 0056 FFF7FEFF 		bl	BSP_LCD_SetTransparency
 556              	.LVL34:
 246:Src/main.c    **** }
 557              		.loc 1 246 0
 558 005a FF21     		movs	r1, #255
 559 005c 0120     		movs	r0, #1
 560 005e FFF7FEFF 		bl	BSP_LCD_SetTransparency
 561              	.LVL35:
 562 0062 08BD     		pop	{r3, pc}
 563              	.L11:
 564              		.align	2
 565              	.L10:
 566 0064 00F807C0 		.word	-1073219584
 567              		.cfi_endproc
 568              	.LFE159:
 570              		.section	.text.StartDefaultTask,"ax",%progbits
 571              		.align	1
 572              		.global	StartDefaultTask
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu fpv5-sp-d16
 578              	StartDefaultTask:
 579              	.LFB188:
1494:Src/main.c    **** 
1495:Src/main.c    **** /* USER CODE BEGIN 4 */
1496:Src/main.c    **** 
1497:Src/main.c    **** 
1498:Src/main.c    **** static FIL file;
1499:Src/main.c    **** extern ApplicationTypeDef Appli_state;
1500:Src/main.c    **** 
1501:Src/main.c    **** 
1502:Src/main.c    **** 
1503:Src/main.c    **** 
1504:Src/main.c    **** /* USER CODE END 4 */
1505:Src/main.c    **** 
1506:Src/main.c    **** /* USER CODE BEGIN Header_StartDefaultTask */
1507:Src/main.c    **** /**
1508:Src/main.c    ****   * @brief  Function implementing the defaultTask thread.
1509:Src/main.c    ****   * @param  argument: Not used 
1510:Src/main.c    ****   * @retval None
1511:Src/main.c    ****   */
1512:Src/main.c    **** /* USER CODE END Header_StartDefaultTask */
1513:Src/main.c    **** void StartDefaultTask(void const * argument)
1514:Src/main.c    **** {
 580              		.loc 1 1514 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              	.LVL36:
 585 0000 08B5     		push	{r3, lr}
 586              	.LCFI4:
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 3, -8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 38


 589              		.cfi_offset 14, -4
1515:Src/main.c    ****   /* init code for FATFS */
1516:Src/main.c    ****   MX_FATFS_Init();
 590              		.loc 1 1516 0
 591 0002 FFF7FEFF 		bl	MX_FATFS_Init
 592              	.LVL37:
1517:Src/main.c    **** 
1518:Src/main.c    ****   /* init code for USB_HOST */
1519:Src/main.c    ****   MX_USB_HOST_Init();
 593              		.loc 1 1519 0
 594 0006 FFF7FEFF 		bl	MX_USB_HOST_Init
 595              	.LVL38:
1520:Src/main.c    **** 
1521:Src/main.c    ****   /* init code for LWIP */
1522:Src/main.c    ****   //MX_LWIP_Init();
1523:Src/main.c    **** 
1524:Src/main.c    ****   /* USER CODE BEGIN 5 */
1525:Src/main.c    ****   //osThreadDef(netconn_thread, http_server_netconn_thread, osPriorityNormal, 0, 1024);
1526:Src/main.c    ****   //netconn_thread_handle = osThreadCreate(osThread(netconn_thread), NULL);
1527:Src/main.c    ****   
1528:Src/main.c    ****   vTaskDelay(1000);
 596              		.loc 1 1528 0
 597 000a 4FF47A70 		mov	r0, #1000
 598 000e FFF7FEFF 		bl	vTaskDelay
 599              	.LVL39:
1529:Src/main.c    ****   
1530:Src/main.c    ****   xprintf("waiting for USB mass storage\n");
 600              		.loc 1 1530 0
 601 0012 0E48     		ldr	r0, .L18
 602 0014 FFF7FEFF 		bl	xprintf
 603              	.LVL40:
 604              	.L13:
1531:Src/main.c    ****   
1532:Src/main.c    ****   do
1533:Src/main.c    ****   {
1534:Src/main.c    **** 	  xprintf(".");
 605              		.loc 1 1534 0 discriminator 1
 606 0018 0D48     		ldr	r0, .L18+4
 607 001a FFF7FEFF 		bl	xprintf
 608              	.LVL41:
1535:Src/main.c    **** 	  vTaskDelay(250);
 609              		.loc 1 1535 0 discriminator 1
 610 001e FA20     		movs	r0, #250
 611 0020 FFF7FEFF 		bl	vTaskDelay
 612              	.LVL42:
1536:Src/main.c    ****   }while(Appli_state != APPLICATION_READY);
 613              		.loc 1 1536 0 discriminator 1
 614 0024 0B4B     		ldr	r3, .L18+8
 615 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 616 0028 022B     		cmp	r3, #2
 617 002a F5D1     		bne	.L13
1537:Src/main.c    ****   
1538:Src/main.c    ****   FRESULT res;
1539:Src/main.c    ****   
1540:Src/main.c    ****   ////////////////////////////
1541:Src/main.c    ****   ////////////////////////////
1542:Src/main.c    ****   ////////////////////////////
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 39


1543:Src/main.c    ****   ////////////////////////////
1544:Src/main.c    ****   ////////////////////////////
1545:Src/main.c    ****   
1546:Src/main.c    ****   res = f_open(&file,"test.mp3",FA_READ);
 618              		.loc 1 1546 0
 619 002c 0122     		movs	r2, #1
 620 002e 0A49     		ldr	r1, .L18+12
 621 0030 0A48     		ldr	r0, .L18+16
 622 0032 FFF7FEFF 		bl	f_open
 623              	.LVL43:
1547:Src/main.c    ****   
1548:Src/main.c    ****   if(res==FR_OK)
 624              		.loc 1 1548 0
 625 0036 0146     		mov	r1, r0
 626 0038 18B9     		cbnz	r0, .L14
1549:Src/main.c    ****   {
1550:Src/main.c    **** 	  xprintf("wave file open OK\n");
 627              		.loc 1 1550 0
 628 003a 0948     		ldr	r0, .L18+20
 629              	.LVL44:
 630 003c FFF7FEFF 		bl	xprintf
 631              	.LVL45:
 632              	.L15:
 633 0040 FEE7     		b	.L15
 634              	.LVL46:
 635              	.L14:
1551:Src/main.c    ****   }
1552:Src/main.c    ****   else
1553:Src/main.c    ****   {
1554:Src/main.c    **** 	  xprintf("wave file open ERROR, res = %d\n",res);
 636              		.loc 1 1554 0
 637 0042 0848     		ldr	r0, .L18+24
 638              	.LVL47:
 639 0044 FFF7FEFF 		bl	xprintf
 640              	.LVL48:
 641              	.L16:
 642 0048 FEE7     		b	.L16
 643              	.L19:
 644 004a 00BF     		.align	2
 645              	.L18:
 646 004c 00000000 		.word	.LC2
 647 0050 20000000 		.word	.LC3
 648 0054 00000000 		.word	Appli_state
 649 0058 24000000 		.word	.LC4
 650 005c 00000000 		.word	.LANCHOR0
 651 0060 30000000 		.word	.LC5
 652 0064 44000000 		.word	.LC6
 653              		.cfi_endproc
 654              	.LFE188:
 656              		.section	.text.__io_putchar,"ax",%progbits
 657              		.align	1
 658              		.global	__io_putchar
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv5-sp-d16
 664              	__io_putchar:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 40


 665              	.LFB157:
 189:Src/main.c    **** 	uint8_t data = ch;
 666              		.loc 1 189 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 671              	.LVL49:
 672              	.L21:
 194:Src/main.c    **** 		huart1.Instance->TDR = (uint16_t)data;
 673              		.loc 1 194 0 discriminator 1
 674 0000 044B     		ldr	r3, .L22
 675 0002 1B68     		ldr	r3, [r3]
 676 0004 DA69     		ldr	r2, [r3, #28]
 677 0006 12F0800F 		tst	r2, #128
 678 000a F9D0     		beq	.L21
 195:Src/main.c    **** 	#endif
 679              		.loc 1 195 0
 680 000c C0B2     		uxtb	r0, r0
 681              	.LVL50:
 682 000e 9862     		str	r0, [r3, #40]
 198:Src/main.c    **** 
 683              		.loc 1 198 0
 684 0010 0020     		movs	r0, #0
 685 0012 7047     		bx	lr
 686              	.L23:
 687              		.align	2
 688              	.L22:
 689 0014 00000000 		.word	huart1
 690              		.cfi_endproc
 691              	.LFE157:
 693              		.section	.text.inkey,"ax",%progbits
 694              		.align	1
 695              		.global	inkey
 696              		.syntax unified
 697              		.thumb
 698              		.thumb_func
 699              		.fpu fpv5-sp-d16
 701              	inkey:
 702              	.LFB158:
 201:Src/main.c    **** 	uint32_t flags = huart1.Instance->ISR;
 703              		.loc 1 201 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              		@ link register save eliminated.
 202:Src/main.c    **** 	
 708              		.loc 1 202 0
 709 0000 064B     		ldr	r3, .L27
 710 0002 1B68     		ldr	r3, [r3]
 711 0004 DA69     		ldr	r2, [r3, #28]
 712              	.LVL51:
 204:Src/main.c    **** 	{
 713              		.loc 1 204 0
 714 0006 12F0280F 		tst	r2, #40
 715 000a 04D0     		beq	.L26
 206:Src/main.c    **** 		return (huart1.Instance->RDR);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 41


 716              		.loc 1 206 0
 717 000c 0822     		movs	r2, #8
 718              	.LVL52:
 719 000e 1A62     		str	r2, [r3, #32]
 207:Src/main.c    **** 	}
 720              		.loc 1 207 0
 721 0010 586A     		ldr	r0, [r3, #36]
 722 0012 C0B2     		uxtb	r0, r0
 723 0014 7047     		bx	lr
 724              	.LVL53:
 725              	.L26:
 210:Src/main.c    **** }
 726              		.loc 1 210 0
 727 0016 0020     		movs	r0, #0
 211:Src/main.c    **** 
 728              		.loc 1 211 0
 729 0018 7047     		bx	lr
 730              	.L28:
 731 001a 00BF     		.align	2
 732              	.L27:
 733 001c 00000000 		.word	huart1
 734              		.cfi_endproc
 735              	.LFE158:
 737              		.section	.text.draw_background,"ax",%progbits
 738              		.align	1
 739              		.global	draw_background
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu fpv5-sp-d16
 745              	draw_background:
 746              	.LFB160:
 251:Src/main.c    **** 	/* Select the LCD Background Layer  */
 747              		.loc 1 251 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751 0000 08B5     		push	{r3, lr}
 752              	.LCFI5:
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 3, -8
 755              		.cfi_offset 14, -4
 253:Src/main.c    **** 	BSP_LCD_SetTextColor(LCD_COLOR_GREEN);
 756              		.loc 1 253 0
 757 0002 0020     		movs	r0, #0
 758 0004 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 759              	.LVL54:
 254:Src/main.c    **** 	BSP_LCD_FillRect(0.4*LCD_X_SIZE,0.2*LCD_Y_SIZE,150,130);
 760              		.loc 1 254 0
 761 0008 4FF0FF20 		mov	r0, #-16711936
 762 000c FFF7FEFF 		bl	BSP_LCD_SetTextColor
 763              	.LVL55:
 255:Src/main.c    **** 	
 764              		.loc 1 255 0
 765 0010 8223     		movs	r3, #130
 766 0012 9622     		movs	r2, #150
 767 0014 3621     		movs	r1, #54
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 42


 768 0016 C020     		movs	r0, #192
 769 0018 FFF7FEFF 		bl	BSP_LCD_FillRect
 770              	.LVL56:
 258:Src/main.c    **** }
 771              		.loc 1 258 0
 772 001c 0120     		movs	r0, #1
 773 001e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 774              	.LVL57:
 775 0022 08BD     		pop	{r3, pc}
 776              		.cfi_endproc
 777              	.LFE160:
 779              		.section	.text.initialize_touchscreen,"ax",%progbits
 780              		.align	1
 781              		.global	initialize_touchscreen
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 785              		.fpu fpv5-sp-d16
 787              	initialize_touchscreen:
 788              	.LFB161:
 265:Src/main.c    **** 	uint8_t  status = 0;
 789              		.loc 1 265 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793 0000 10B5     		push	{r4, lr}
 794              	.LCFI6:
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 4, -8
 797              		.cfi_offset 14, -4
 798              	.LVL58:
 267:Src/main.c    **** 	if(status != TS_OK) return -1;
 799              		.loc 1 267 0
 800 0002 FFF7FEFF 		bl	BSP_LCD_GetXSize
 801              	.LVL59:
 802 0006 84B2     		uxth	r4, r0
 803 0008 FFF7FEFF 		bl	BSP_LCD_GetYSize
 804              	.LVL60:
 805 000c 81B2     		uxth	r1, r0
 806 000e 2046     		mov	r0, r4
 807 0010 FFF7FEFF 		bl	BSP_TS_Init
 808              	.LVL61:
 268:Src/main.c    **** 	return 0;
 809              		.loc 1 268 0
 810 0014 08B9     		cbnz	r0, .L35
 269:Src/main.c    **** }
 811              		.loc 1 269 0
 812 0016 0020     		movs	r0, #0
 813              	.LVL62:
 270:Src/main.c    **** 
 814              		.loc 1 270 0
 815 0018 10BD     		pop	{r4, pc}
 816              	.LVL63:
 817              	.L35:
 268:Src/main.c    **** 	return 0;
 818              		.loc 1 268 0
 819 001a 4FF0FF30 		mov	r0, #-1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 43


 820              	.LVL64:
 821 001e 10BD     		pop	{r4, pc}
 822              		.cfi_endproc
 823              	.LFE161:
 825              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 826              		.align	1
 827              		.global	HAL_TIM_PeriodElapsedCallback
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 831              		.fpu fpv5-sp-d16
 833              	HAL_TIM_PeriodElapsedCallback:
 834              	.LFB189:
1555:Src/main.c    **** 	  while(1);
1556:Src/main.c    ****   }
1557:Src/main.c    ****   
1558:Src/main.c    ****   
1559:Src/main.c    ****   /* Infinite loop */
1560:Src/main.c    ****   while(1);
1561:Src/main.c    ****   /* USER CODE END 5 */ 
1562:Src/main.c    **** }
1563:Src/main.c    **** 
1564:Src/main.c    **** /**
1565:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
1566:Src/main.c    ****   * @note   This function is called  when TIM6 interrupt took place, inside
1567:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
1568:Src/main.c    ****   * a global variable "uwTick" used as application time base.
1569:Src/main.c    ****   * @param  htim : TIM handle
1570:Src/main.c    ****   * @retval None
1571:Src/main.c    ****   */
1572:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1573:Src/main.c    **** {
 835              		.loc 1 1573 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              	.LVL65:
 840 0000 08B5     		push	{r3, lr}
 841              	.LCFI7:
 842              		.cfi_def_cfa_offset 8
 843              		.cfi_offset 3, -8
 844              		.cfi_offset 14, -4
1574:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
1575:Src/main.c    **** 
1576:Src/main.c    ****   /* USER CODE END Callback 0 */
1577:Src/main.c    ****   if (htim->Instance == TIM6) {
 845              		.loc 1 1577 0
 846 0002 0268     		ldr	r2, [r0]
 847 0004 034B     		ldr	r3, .L40
 848 0006 9A42     		cmp	r2, r3
 849 0008 00D0     		beq	.L39
 850              	.LVL66:
 851              	.L36:
 852 000a 08BD     		pop	{r3, pc}
 853              	.LVL67:
 854              	.L39:
1578:Src/main.c    ****     HAL_IncTick();
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 44


 855              		.loc 1 1578 0
 856 000c FFF7FEFF 		bl	HAL_IncTick
 857              	.LVL68:
1579:Src/main.c    ****   }
1580:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
1581:Src/main.c    **** 
1582:Src/main.c    ****   /* USER CODE END Callback 1 */
1583:Src/main.c    **** }
 858              		.loc 1 1583 0
 859 0010 FBE7     		b	.L36
 860              	.L41:
 861 0012 00BF     		.align	2
 862              	.L40:
 863 0014 00100040 		.word	1073745920
 864              		.cfi_endproc
 865              	.LFE189:
 867              		.section	.text._Error_Handler,"ax",%progbits
 868              		.align	1
 869              		.global	_Error_Handler
 870              		.syntax unified
 871              		.thumb
 872              		.thumb_func
 873              		.fpu fpv5-sp-d16
 875              	_Error_Handler:
 876              	.LFB190:
1584:Src/main.c    **** 
1585:Src/main.c    **** /**
1586:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
1587:Src/main.c    ****   * @param  file: The file name as string.
1588:Src/main.c    ****   * @param  line: The line in file as a number.
1589:Src/main.c    ****   * @retval None
1590:Src/main.c    ****   */
1591:Src/main.c    **** void _Error_Handler(char *file, int line)
1592:Src/main.c    **** {
 877              		.loc 1 1592 0
 878              		.cfi_startproc
 879              		@ Volatile: function does not return.
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882              		@ link register save eliminated.
 883              	.LVL69:
 884              	.L43:
 885 0000 FEE7     		b	.L43
 886              		.cfi_endproc
 887              	.LFE190:
 889              		.section	.text.MX_ADC3_Init,"ax",%progbits
 890              		.align	1
 891              		.syntax unified
 892              		.thumb
 893              		.thumb_func
 894              		.fpu fpv5-sp-d16
 896              	MX_ADC3_Init:
 897              	.LFB164:
 483:Src/main.c    **** 
 898              		.loc 1 483 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 45


 901              		@ frame_needed = 0, uses_anonymous_args = 0
 483:Src/main.c    **** 
 902              		.loc 1 483 0
 903 0000 00B5     		push	{lr}
 904              	.LCFI8:
 905              		.cfi_def_cfa_offset 4
 906              		.cfi_offset 14, -4
 907 0002 85B0     		sub	sp, sp, #20
 908              	.LCFI9:
 909              		.cfi_def_cfa_offset 24
 489:Src/main.c    ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 910              		.loc 1 489 0
 911 0004 1648     		ldr	r0, .L50
 912 0006 174B     		ldr	r3, .L50+4
 913 0008 0360     		str	r3, [r0]
 490:Src/main.c    ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 914              		.loc 1 490 0
 915 000a 4FF48033 		mov	r3, #65536
 916 000e 4360     		str	r3, [r0, #4]
 491:Src/main.c    ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 917              		.loc 1 491 0
 918 0010 0023     		movs	r3, #0
 919 0012 8360     		str	r3, [r0, #8]
 492:Src/main.c    ****   hadc3.Init.ContinuousConvMode = DISABLE;
 920              		.loc 1 492 0
 921 0014 0361     		str	r3, [r0, #16]
 493:Src/main.c    ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 922              		.loc 1 493 0
 923 0016 8361     		str	r3, [r0, #24]
 494:Src/main.c    ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 924              		.loc 1 494 0
 925 0018 0362     		str	r3, [r0, #32]
 495:Src/main.c    ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 926              		.loc 1 495 0
 927 001a C362     		str	r3, [r0, #44]
 496:Src/main.c    ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 928              		.loc 1 496 0
 929 001c 124A     		ldr	r2, .L50+8
 930 001e 8262     		str	r2, [r0, #40]
 497:Src/main.c    ****   hadc3.Init.NbrOfConversion = 1;
 931              		.loc 1 497 0
 932 0020 C360     		str	r3, [r0, #12]
 498:Src/main.c    ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 933              		.loc 1 498 0
 934 0022 0122     		movs	r2, #1
 935 0024 C261     		str	r2, [r0, #28]
 499:Src/main.c    ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 936              		.loc 1 499 0
 937 0026 0363     		str	r3, [r0, #48]
 500:Src/main.c    ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 938              		.loc 1 500 0
 939 0028 4261     		str	r2, [r0, #20]
 501:Src/main.c    ****   {
 940              		.loc 1 501 0
 941 002a FFF7FEFF 		bl	HAL_ADC_Init
 942              	.LVL70:
 943 002e 68B9     		cbnz	r0, .L48
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 46


 508:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 944              		.loc 1 508 0
 945 0030 0423     		movs	r3, #4
 946 0032 0093     		str	r3, [sp]
 509:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 947              		.loc 1 509 0
 948 0034 0123     		movs	r3, #1
 949 0036 0193     		str	r3, [sp, #4]
 510:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 950              		.loc 1 510 0
 951 0038 0023     		movs	r3, #0
 952 003a 0293     		str	r3, [sp, #8]
 511:Src/main.c    ****   {
 953              		.loc 1 511 0
 954 003c 6946     		mov	r1, sp
 955 003e 0848     		ldr	r0, .L50
 956 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 957              	.LVL71:
 958 0044 38B9     		cbnz	r0, .L49
 516:Src/main.c    **** 
 959              		.loc 1 516 0
 960 0046 05B0     		add	sp, sp, #20
 961              	.LCFI10:
 962              		.cfi_remember_state
 963              		.cfi_def_cfa_offset 4
 964              		@ sp needed
 965 0048 5DF804FB 		ldr	pc, [sp], #4
 966              	.L48:
 967              	.LCFI11:
 968              		.cfi_restore_state
 503:Src/main.c    ****   }
 969              		.loc 1 503 0
 970 004c 40F2F711 		movw	r1, #503
 971 0050 0648     		ldr	r0, .L50+12
 972 0052 FFF7FEFF 		bl	_Error_Handler
 973              	.LVL72:
 974              	.L49:
 513:Src/main.c    ****   }
 975              		.loc 1 513 0
 976 0056 40F20121 		movw	r1, #513
 977 005a 0448     		ldr	r0, .L50+12
 978 005c FFF7FEFF 		bl	_Error_Handler
 979              	.LVL73:
 980              	.L51:
 981              		.align	2
 982              	.L50:
 983 0060 00000000 		.word	hadc3
 984 0064 00220140 		.word	1073816064
 985 0068 0100000F 		.word	251658241
 986 006c 00000000 		.word	.LC7
 987              		.cfi_endproc
 988              	.LFE164:
 990              		.section	.text.MX_CRC_Init,"ax",%progbits
 991              		.align	1
 992              		.syntax unified
 993              		.thumb
 994              		.thumb_func
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 47


 995              		.fpu fpv5-sp-d16
 997              	MX_CRC_Init:
 998              	.LFB165:
 520:Src/main.c    **** 
 999              		.loc 1 520 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 0
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 1003 0000 08B5     		push	{r3, lr}
 1004              	.LCFI12:
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 3, -8
 1007              		.cfi_offset 14, -4
 522:Src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 1008              		.loc 1 522 0
 1009 0002 0948     		ldr	r0, .L56
 1010 0004 094B     		ldr	r3, .L56+4
 1011 0006 0360     		str	r3, [r0]
 523:Src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 1012              		.loc 1 523 0
 1013 0008 0023     		movs	r3, #0
 1014 000a 0371     		strb	r3, [r0, #4]
 524:Src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 1015              		.loc 1 524 0
 1016 000c 4371     		strb	r3, [r0, #5]
 525:Src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 1017              		.loc 1 525 0
 1018 000e 4361     		str	r3, [r0, #20]
 526:Src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 1019              		.loc 1 526 0
 1020 0010 8361     		str	r3, [r0, #24]
 527:Src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 1021              		.loc 1 527 0
 1022 0012 0123     		movs	r3, #1
 1023 0014 0362     		str	r3, [r0, #32]
 528:Src/main.c    ****   {
 1024              		.loc 1 528 0
 1025 0016 FFF7FEFF 		bl	HAL_CRC_Init
 1026              	.LVL74:
 1027 001a 00B9     		cbnz	r0, .L55
 1028 001c 08BD     		pop	{r3, pc}
 1029              	.L55:
 530:Src/main.c    ****   }
 1030              		.loc 1 530 0
 1031 001e 40F21221 		movw	r1, #530
 1032 0022 0348     		ldr	r0, .L56+8
 1033 0024 FFF7FEFF 		bl	_Error_Handler
 1034              	.LVL75:
 1035              	.L57:
 1036              		.align	2
 1037              	.L56:
 1038 0028 00000000 		.word	hcrc
 1039 002c 00300240 		.word	1073885184
 1040 0030 00000000 		.word	.LC7
 1041              		.cfi_endproc
 1042              	.LFE165:
 1044              		.section	.text.MX_DCMI_Init,"ax",%progbits
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 48


 1045              		.align	1
 1046              		.syntax unified
 1047              		.thumb
 1048              		.thumb_func
 1049              		.fpu fpv5-sp-d16
 1051              	MX_DCMI_Init:
 1052              	.LFB166:
 537:Src/main.c    **** 
 1053              		.loc 1 537 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057 0000 08B5     		push	{r3, lr}
 1058              	.LCFI13:
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 3, -8
 1061              		.cfi_offset 14, -4
 539:Src/main.c    ****   hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 1062              		.loc 1 539 0
 1063 0002 0C48     		ldr	r0, .L62
 1064 0004 0C4B     		ldr	r3, .L62+4
 1065 0006 0360     		str	r3, [r0]
 540:Src/main.c    ****   hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 1066              		.loc 1 540 0
 1067 0008 0023     		movs	r3, #0
 1068 000a 4360     		str	r3, [r0, #4]
 541:Src/main.c    ****   hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 1069              		.loc 1 541 0
 1070 000c 8360     		str	r3, [r0, #8]
 542:Src/main.c    ****   hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 1071              		.loc 1 542 0
 1072 000e C360     		str	r3, [r0, #12]
 543:Src/main.c    ****   hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 1073              		.loc 1 543 0
 1074 0010 0361     		str	r3, [r0, #16]
 544:Src/main.c    ****   hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
 1075              		.loc 1 544 0
 1076 0012 4361     		str	r3, [r0, #20]
 545:Src/main.c    ****   hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 1077              		.loc 1 545 0
 1078 0014 8361     		str	r3, [r0, #24]
 546:Src/main.c    ****   hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 1079              		.loc 1 546 0
 1080 0016 0362     		str	r3, [r0, #32]
 547:Src/main.c    ****   hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 1081              		.loc 1 547 0
 1082 0018 4362     		str	r3, [r0, #36]
 548:Src/main.c    ****   hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 1083              		.loc 1 548 0
 1084 001a 8362     		str	r3, [r0, #40]
 549:Src/main.c    ****   hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 1085              		.loc 1 549 0
 1086 001c C362     		str	r3, [r0, #44]
 550:Src/main.c    ****   if (HAL_DCMI_Init(&hdcmi) != HAL_OK)
 1087              		.loc 1 550 0
 1088 001e 0363     		str	r3, [r0, #48]
 551:Src/main.c    ****   {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 49


 1089              		.loc 1 551 0
 1090 0020 FFF7FEFF 		bl	HAL_DCMI_Init
 1091              	.LVL76:
 1092 0024 00B9     		cbnz	r0, .L61
 1093 0026 08BD     		pop	{r3, pc}
 1094              	.L61:
 553:Src/main.c    ****   }
 1095              		.loc 1 553 0
 1096 0028 40F22921 		movw	r1, #553
 1097 002c 0348     		ldr	r0, .L62+8
 1098 002e FFF7FEFF 		bl	_Error_Handler
 1099              	.LVL77:
 1100              	.L63:
 1101 0032 00BF     		.align	2
 1102              	.L62:
 1103 0034 00000000 		.word	hdcmi
 1104 0038 00000550 		.word	1342504960
 1105 003c 00000000 		.word	.LC7
 1106              		.cfi_endproc
 1107              	.LFE166:
 1109              		.section	.text.MX_DMA2D_Init,"ax",%progbits
 1110              		.align	1
 1111              		.syntax unified
 1112              		.thumb
 1113              		.thumb_func
 1114              		.fpu fpv5-sp-d16
 1116              	MX_DMA2D_Init:
 1117              	.LFB167:
 560:Src/main.c    **** 
 1118              		.loc 1 560 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122 0000 08B5     		push	{r3, lr}
 1123              	.LCFI14:
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 3, -8
 1126              		.cfi_offset 14, -4
 562:Src/main.c    ****   hdma2d.Init.Mode = DMA2D_M2M;
 1127              		.loc 1 562 0
 1128 0002 0F48     		ldr	r0, .L70
 1129 0004 0F4B     		ldr	r3, .L70+4
 1130 0006 0360     		str	r3, [r0]
 563:Src/main.c    ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 1131              		.loc 1 563 0
 1132 0008 0023     		movs	r3, #0
 1133 000a 4360     		str	r3, [r0, #4]
 564:Src/main.c    ****   hdma2d.Init.OutputOffset = 0;
 1134              		.loc 1 564 0
 1135 000c 8360     		str	r3, [r0, #8]
 565:Src/main.c    ****   hdma2d.LayerCfg[1].InputOffset = 0;
 1136              		.loc 1 565 0
 1137 000e C360     		str	r3, [r0, #12]
 566:Src/main.c    ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 1138              		.loc 1 566 0
 1139 0010 8362     		str	r3, [r0, #40]
 567:Src/main.c    ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 50


 1140              		.loc 1 567 0
 1141 0012 C362     		str	r3, [r0, #44]
 568:Src/main.c    ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 1142              		.loc 1 568 0
 1143 0014 0363     		str	r3, [r0, #48]
 569:Src/main.c    ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 1144              		.loc 1 569 0
 1145 0016 4363     		str	r3, [r0, #52]
 570:Src/main.c    ****   {
 1146              		.loc 1 570 0
 1147 0018 FFF7FEFF 		bl	HAL_DMA2D_Init
 1148              	.LVL78:
 1149 001c 28B9     		cbnz	r0, .L68
 575:Src/main.c    ****   {
 1150              		.loc 1 575 0
 1151 001e 0121     		movs	r1, #1
 1152 0020 0748     		ldr	r0, .L70
 1153 0022 FFF7FEFF 		bl	HAL_DMA2D_ConfigLayer
 1154              	.LVL79:
 1155 0026 28B9     		cbnz	r0, .L69
 1156 0028 08BD     		pop	{r3, pc}
 1157              	.L68:
 572:Src/main.c    ****   }
 1158              		.loc 1 572 0
 1159 002a 4FF40F71 		mov	r1, #572
 1160 002e 0648     		ldr	r0, .L70+8
 1161 0030 FFF7FEFF 		bl	_Error_Handler
 1162              	.LVL80:
 1163              	.L69:
 577:Src/main.c    ****   }
 1164              		.loc 1 577 0
 1165 0034 40F24121 		movw	r1, #577
 1166 0038 0348     		ldr	r0, .L70+8
 1167 003a FFF7FEFF 		bl	_Error_Handler
 1168              	.LVL81:
 1169              	.L71:
 1170 003e 00BF     		.align	2
 1171              	.L70:
 1172 0040 00000000 		.word	hdma2d
 1173 0044 00B00240 		.word	1073917952
 1174 0048 00000000 		.word	.LC7
 1175              		.cfi_endproc
 1176              	.LFE167:
 1178              		.section	.text.MX_FMC_Init,"ax",%progbits
 1179              		.align	1
 1180              		.syntax unified
 1181              		.thumb
 1182              		.thumb_func
 1183              		.fpu fpv5-sp-d16
 1185              	MX_FMC_Init:
 1186              	.LFB186:
1288:Src/main.c    ****   FMC_SDRAM_TimingTypeDef SdramTiming;
 1187              		.loc 1 1288 0
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 32
 1190              		@ frame_needed = 0, uses_anonymous_args = 0
 1191 0000 00B5     		push	{lr}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 51


 1192              	.LCFI15:
 1193              		.cfi_def_cfa_offset 4
 1194              		.cfi_offset 14, -4
 1195 0002 89B0     		sub	sp, sp, #36
 1196              	.LCFI16:
 1197              		.cfi_def_cfa_offset 40
1293:Src/main.c    ****   /* hsdram1.Init */
 1198              		.loc 1 1293 0
 1199 0004 1648     		ldr	r0, .L76
 1200 0006 174B     		ldr	r3, .L76+4
 1201 0008 0360     		str	r3, [r0]
1295:Src/main.c    ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 1202              		.loc 1 1295 0
 1203 000a 0023     		movs	r3, #0
 1204 000c 4360     		str	r3, [r0, #4]
1296:Src/main.c    ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 1205              		.loc 1 1296 0
 1206 000e 8360     		str	r3, [r0, #8]
1297:Src/main.c    ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 1207              		.loc 1 1297 0
 1208 0010 0421     		movs	r1, #4
 1209 0012 C160     		str	r1, [r0, #12]
1298:Src/main.c    ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 1210              		.loc 1 1298 0
 1211 0014 1022     		movs	r2, #16
 1212 0016 0261     		str	r2, [r0, #16]
1299:Src/main.c    ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 1213              		.loc 1 1299 0
 1214 0018 4022     		movs	r2, #64
 1215 001a 4261     		str	r2, [r0, #20]
1300:Src/main.c    ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 1216              		.loc 1 1300 0
 1217 001c 4FF4C072 		mov	r2, #384
 1218 0020 8261     		str	r2, [r0, #24]
1301:Src/main.c    ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 1219              		.loc 1 1301 0
 1220 0022 C361     		str	r3, [r0, #28]
1302:Src/main.c    ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 1221              		.loc 1 1302 0
 1222 0024 4FF40062 		mov	r2, #2048
 1223 0028 0262     		str	r2, [r0, #32]
1303:Src/main.c    ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 1224              		.loc 1 1303 0
 1225 002a 4FF48052 		mov	r2, #4096
 1226 002e 4262     		str	r2, [r0, #36]
1304:Src/main.c    ****   /* SdramTiming */
 1227              		.loc 1 1304 0
 1228 0030 8362     		str	r3, [r0, #40]
1306:Src/main.c    ****   SdramTiming.ExitSelfRefreshDelay = 7;
 1229              		.loc 1 1306 0
 1230 0032 0223     		movs	r3, #2
 1231 0034 0193     		str	r3, [sp, #4]
1307:Src/main.c    ****   SdramTiming.SelfRefreshTime = 4;
 1232              		.loc 1 1307 0
 1233 0036 0722     		movs	r2, #7
 1234 0038 0292     		str	r2, [sp, #8]
1308:Src/main.c    ****   SdramTiming.RowCycleDelay = 7;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 52


 1235              		.loc 1 1308 0
 1236 003a 0391     		str	r1, [sp, #12]
1309:Src/main.c    ****   SdramTiming.WriteRecoveryTime = 3;
 1237              		.loc 1 1309 0
 1238 003c 0492     		str	r2, [sp, #16]
1310:Src/main.c    ****   SdramTiming.RPDelay = 2;
 1239              		.loc 1 1310 0
 1240 003e 0322     		movs	r2, #3
 1241 0040 0592     		str	r2, [sp, #20]
1311:Src/main.c    ****   SdramTiming.RCDDelay = 2;
 1242              		.loc 1 1311 0
 1243 0042 0693     		str	r3, [sp, #24]
1312:Src/main.c    **** 
 1244              		.loc 1 1312 0
 1245 0044 0793     		str	r3, [sp, #28]
1314:Src/main.c    ****   {
 1246              		.loc 1 1314 0
 1247 0046 6944     		add	r1, sp, r1
 1248 0048 FFF7FEFF 		bl	HAL_SDRAM_Init
 1249              	.LVL82:
 1250 004c 10B9     		cbnz	r0, .L75
1319:Src/main.c    **** 
 1251              		.loc 1 1319 0
 1252 004e 09B0     		add	sp, sp, #36
 1253              	.LCFI17:
 1254              		.cfi_remember_state
 1255              		.cfi_def_cfa_offset 4
 1256              		@ sp needed
 1257 0050 5DF804FB 		ldr	pc, [sp], #4
 1258              	.L75:
 1259              	.LCFI18:
 1260              		.cfi_restore_state
1316:Src/main.c    ****   }
 1261              		.loc 1 1316 0
 1262 0054 40F22451 		movw	r1, #1316
 1263 0058 0348     		ldr	r0, .L76+8
 1264 005a FFF7FEFF 		bl	_Error_Handler
 1265              	.LVL83:
 1266              	.L77:
 1267 005e 00BF     		.align	2
 1268              	.L76:
 1269 0060 00000000 		.word	hsdram1
 1270 0064 400100A0 		.word	-1610612416
 1271 0068 00000000 		.word	.LC7
 1272              		.cfi_endproc
 1273              	.LFE186:
 1275              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1276              		.align	1
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1280              		.fpu fpv5-sp-d16
 1282              	MX_I2C1_Init:
 1283              	.LFB168:
 584:Src/main.c    **** 
 1284              		.loc 1 584 0
 1285              		.cfi_startproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 53


 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288 0000 08B5     		push	{r3, lr}
 1289              	.LCFI19:
 1290              		.cfi_def_cfa_offset 8
 1291              		.cfi_offset 3, -8
 1292              		.cfi_offset 14, -4
 586:Src/main.c    ****   hi2c1.Init.Timing = 0x00C0EAFF;
 1293              		.loc 1 586 0
 1294 0002 1548     		ldr	r0, .L86
 1295 0004 154B     		ldr	r3, .L86+4
 1296 0006 0360     		str	r3, [r0]
 587:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 1297              		.loc 1 587 0
 1298 0008 154B     		ldr	r3, .L86+8
 1299 000a 4360     		str	r3, [r0, #4]
 588:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1300              		.loc 1 588 0
 1301 000c 0023     		movs	r3, #0
 1302 000e 8360     		str	r3, [r0, #8]
 589:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1303              		.loc 1 589 0
 1304 0010 0122     		movs	r2, #1
 1305 0012 C260     		str	r2, [r0, #12]
 590:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 1306              		.loc 1 590 0
 1307 0014 0361     		str	r3, [r0, #16]
 591:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1308              		.loc 1 591 0
 1309 0016 4361     		str	r3, [r0, #20]
 592:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1310              		.loc 1 592 0
 1311 0018 8361     		str	r3, [r0, #24]
 593:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1312              		.loc 1 593 0
 1313 001a C361     		str	r3, [r0, #28]
 594:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1314              		.loc 1 594 0
 1315 001c 0362     		str	r3, [r0, #32]
 595:Src/main.c    ****   {
 1316              		.loc 1 595 0
 1317 001e FFF7FEFF 		bl	HAL_I2C_Init
 1318              	.LVL84:
 1319 0022 50B9     		cbnz	r0, .L83
 602:Src/main.c    ****   {
 1320              		.loc 1 602 0
 1321 0024 0021     		movs	r1, #0
 1322 0026 0C48     		ldr	r0, .L86
 1323 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1324              	.LVL85:
 1325 002c 50B9     		cbnz	r0, .L84
 609:Src/main.c    ****   {
 1326              		.loc 1 609 0
 1327 002e 0021     		movs	r1, #0
 1328 0030 0948     		ldr	r0, .L86
 1329 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1330              	.LVL86:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 54


 1331 0036 50B9     		cbnz	r0, .L85
 1332 0038 08BD     		pop	{r3, pc}
 1333              	.L83:
 597:Src/main.c    ****   }
 1334              		.loc 1 597 0
 1335 003a 40F25521 		movw	r1, #597
 1336 003e 0948     		ldr	r0, .L86+12
 1337 0040 FFF7FEFF 		bl	_Error_Handler
 1338              	.LVL87:
 1339              	.L84:
 604:Src/main.c    ****   }
 1340              		.loc 1 604 0
 1341 0044 4FF41771 		mov	r1, #604
 1342 0048 0648     		ldr	r0, .L86+12
 1343 004a FFF7FEFF 		bl	_Error_Handler
 1344              	.LVL88:
 1345              	.L85:
 611:Src/main.c    ****   }
 1346              		.loc 1 611 0
 1347 004e 40F26321 		movw	r1, #611
 1348 0052 0448     		ldr	r0, .L86+12
 1349 0054 FFF7FEFF 		bl	_Error_Handler
 1350              	.LVL89:
 1351              	.L87:
 1352              		.align	2
 1353              	.L86:
 1354 0058 00000000 		.word	hi2c1
 1355 005c 00540040 		.word	1073763328
 1356 0060 FFEAC000 		.word	12643071
 1357 0064 00000000 		.word	.LC7
 1358              		.cfi_endproc
 1359              	.LFE168:
 1361              		.section	.text.MX_I2C3_Init,"ax",%progbits
 1362              		.align	1
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
 1366              		.fpu fpv5-sp-d16
 1368              	MX_I2C3_Init:
 1369              	.LFB169:
 618:Src/main.c    **** 
 1370              		.loc 1 618 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374 0000 08B5     		push	{r3, lr}
 1375              	.LCFI20:
 1376              		.cfi_def_cfa_offset 8
 1377              		.cfi_offset 3, -8
 1378              		.cfi_offset 14, -4
 620:Src/main.c    ****   hi2c3.Init.Timing = 0x00C0EAFF;
 1379              		.loc 1 620 0
 1380 0002 1548     		ldr	r0, .L96
 1381 0004 154B     		ldr	r3, .L96+4
 1382 0006 0360     		str	r3, [r0]
 621:Src/main.c    ****   hi2c3.Init.OwnAddress1 = 0;
 1383              		.loc 1 621 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 55


 1384 0008 154B     		ldr	r3, .L96+8
 1385 000a 4360     		str	r3, [r0, #4]
 622:Src/main.c    ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1386              		.loc 1 622 0
 1387 000c 0023     		movs	r3, #0
 1388 000e 8360     		str	r3, [r0, #8]
 623:Src/main.c    ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1389              		.loc 1 623 0
 1390 0010 0122     		movs	r2, #1
 1391 0012 C260     		str	r2, [r0, #12]
 624:Src/main.c    ****   hi2c3.Init.OwnAddress2 = 0;
 1392              		.loc 1 624 0
 1393 0014 0361     		str	r3, [r0, #16]
 625:Src/main.c    ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1394              		.loc 1 625 0
 1395 0016 4361     		str	r3, [r0, #20]
 626:Src/main.c    ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1396              		.loc 1 626 0
 1397 0018 8361     		str	r3, [r0, #24]
 627:Src/main.c    ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1398              		.loc 1 627 0
 1399 001a C361     		str	r3, [r0, #28]
 628:Src/main.c    ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 1400              		.loc 1 628 0
 1401 001c 0362     		str	r3, [r0, #32]
 629:Src/main.c    ****   {
 1402              		.loc 1 629 0
 1403 001e FFF7FEFF 		bl	HAL_I2C_Init
 1404              	.LVL90:
 1405 0022 50B9     		cbnz	r0, .L93
 636:Src/main.c    ****   {
 1406              		.loc 1 636 0
 1407 0024 0021     		movs	r1, #0
 1408 0026 0C48     		ldr	r0, .L96
 1409 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1410              	.LVL91:
 1411 002c 50B9     		cbnz	r0, .L94
 643:Src/main.c    ****   {
 1412              		.loc 1 643 0
 1413 002e 0021     		movs	r1, #0
 1414 0030 0948     		ldr	r0, .L96
 1415 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1416              	.LVL92:
 1417 0036 50B9     		cbnz	r0, .L95
 1418 0038 08BD     		pop	{r3, pc}
 1419              	.L93:
 631:Src/main.c    ****   }
 1420              		.loc 1 631 0
 1421 003a 40F27721 		movw	r1, #631
 1422 003e 0948     		ldr	r0, .L96+12
 1423 0040 FFF7FEFF 		bl	_Error_Handler
 1424              	.LVL93:
 1425              	.L94:
 638:Src/main.c    ****   }
 1426              		.loc 1 638 0
 1427 0044 40F27E21 		movw	r1, #638
 1428 0048 0648     		ldr	r0, .L96+12
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 56


 1429 004a FFF7FEFF 		bl	_Error_Handler
 1430              	.LVL94:
 1431              	.L95:
 645:Src/main.c    ****   }
 1432              		.loc 1 645 0
 1433 004e 40F28521 		movw	r1, #645
 1434 0052 0448     		ldr	r0, .L96+12
 1435 0054 FFF7FEFF 		bl	_Error_Handler
 1436              	.LVL95:
 1437              	.L97:
 1438              		.align	2
 1439              	.L96:
 1440 0058 00000000 		.word	hi2c3
 1441 005c 005C0040 		.word	1073765376
 1442 0060 FFEAC000 		.word	12643071
 1443 0064 00000000 		.word	.LC7
 1444              		.cfi_endproc
 1445              	.LFE169:
 1447              		.section	.text.MX_LTDC_Init,"ax",%progbits
 1448              		.align	1
 1449              		.syntax unified
 1450              		.thumb
 1451              		.thumb_func
 1452              		.fpu fpv5-sp-d16
 1454              	MX_LTDC_Init:
 1455              	.LFB170:
 652:Src/main.c    **** 
 1456              		.loc 1 652 0
 1457              		.cfi_startproc
 1458              		@ args = 0, pretend = 0, frame = 56
 1459              		@ frame_needed = 0, uses_anonymous_args = 0
 1460 0000 00B5     		push	{lr}
 1461              	.LCFI21:
 1462              		.cfi_def_cfa_offset 4
 1463              		.cfi_offset 14, -4
 1464 0002 8FB0     		sub	sp, sp, #60
 1465              	.LCFI22:
 1466              		.cfi_def_cfa_offset 64
 656:Src/main.c    ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 1467              		.loc 1 656 0
 1468 0004 2948     		ldr	r0, .L104
 1469 0006 2A4B     		ldr	r3, .L104+4
 1470 0008 0360     		str	r3, [r0]
 657:Src/main.c    ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 1471              		.loc 1 657 0
 1472 000a 0023     		movs	r3, #0
 1473 000c 4360     		str	r3, [r0, #4]
 658:Src/main.c    ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 1474              		.loc 1 658 0
 1475 000e 8360     		str	r3, [r0, #8]
 659:Src/main.c    ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 1476              		.loc 1 659 0
 1477 0010 C360     		str	r3, [r0, #12]
 660:Src/main.c    ****   hltdc.Init.HorizontalSync = 40;
 1478              		.loc 1 660 0
 1479 0012 0361     		str	r3, [r0, #16]
 661:Src/main.c    ****   hltdc.Init.VerticalSync = 9;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 57


 1480              		.loc 1 661 0
 1481 0014 2822     		movs	r2, #40
 1482 0016 4261     		str	r2, [r0, #20]
 662:Src/main.c    ****   hltdc.Init.AccumulatedHBP = 53;
 1483              		.loc 1 662 0
 1484 0018 0922     		movs	r2, #9
 1485 001a 8261     		str	r2, [r0, #24]
 663:Src/main.c    ****   hltdc.Init.AccumulatedVBP = 11;
 1486              		.loc 1 663 0
 1487 001c 3522     		movs	r2, #53
 1488 001e C261     		str	r2, [r0, #28]
 664:Src/main.c    ****   hltdc.Init.AccumulatedActiveW = 533;
 1489              		.loc 1 664 0
 1490 0020 0B22     		movs	r2, #11
 1491 0022 0262     		str	r2, [r0, #32]
 665:Src/main.c    ****   hltdc.Init.AccumulatedActiveH = 283;
 1492              		.loc 1 665 0
 1493 0024 40F21522 		movw	r2, #533
 1494 0028 4262     		str	r2, [r0, #36]
 666:Src/main.c    ****   hltdc.Init.TotalWidth = 565;
 1495              		.loc 1 666 0
 1496 002a 40F21B12 		movw	r2, #283
 1497 002e 8262     		str	r2, [r0, #40]
 667:Src/main.c    ****   hltdc.Init.TotalHeigh = 285;
 1498              		.loc 1 667 0
 1499 0030 40F23522 		movw	r2, #565
 1500 0034 C262     		str	r2, [r0, #44]
 668:Src/main.c    ****   hltdc.Init.Backcolor.Blue = 0;
 1501              		.loc 1 668 0
 1502 0036 40F21D12 		movw	r2, #285
 1503 003a 0263     		str	r2, [r0, #48]
 669:Src/main.c    ****   hltdc.Init.Backcolor.Green = 0;
 1504              		.loc 1 669 0
 1505 003c 80F83430 		strb	r3, [r0, #52]
 670:Src/main.c    ****   hltdc.Init.Backcolor.Red = 0;
 1506              		.loc 1 670 0
 1507 0040 80F83530 		strb	r3, [r0, #53]
 671:Src/main.c    ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 1508              		.loc 1 671 0
 1509 0044 80F83630 		strb	r3, [r0, #54]
 672:Src/main.c    ****   {
 1510              		.loc 1 672 0
 1511 0048 FFF7FEFF 		bl	HAL_LTDC_Init
 1512              	.LVL96:
 1513 004c 20BB     		cbnz	r0, .L102
 677:Src/main.c    ****   pLayerCfg.WindowX1 = 480;
 1514              		.loc 1 677 0
 1515 004e 0022     		movs	r2, #0
 1516 0050 0192     		str	r2, [sp, #4]
 678:Src/main.c    ****   pLayerCfg.WindowY0 = 0;
 1517              		.loc 1 678 0
 1518 0052 4FF4F071 		mov	r1, #480
 1519 0056 0291     		str	r1, [sp, #8]
 679:Src/main.c    ****   pLayerCfg.WindowY1 = 272;
 1520              		.loc 1 679 0
 1521 0058 0392     		str	r2, [sp, #12]
 680:Src/main.c    ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 58


 1522              		.loc 1 680 0
 1523 005a 4FF48873 		mov	r3, #272
 1524 005e 0493     		str	r3, [sp, #16]
 681:Src/main.c    ****   pLayerCfg.Alpha = 255;
 1525              		.loc 1 681 0
 1526 0060 0592     		str	r2, [sp, #20]
 682:Src/main.c    ****   pLayerCfg.Alpha0 = 0;
 1527              		.loc 1 682 0
 1528 0062 FF20     		movs	r0, #255
 1529 0064 0690     		str	r0, [sp, #24]
 683:Src/main.c    ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 1530              		.loc 1 683 0
 1531 0066 0792     		str	r2, [sp, #28]
 684:Src/main.c    ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 1532              		.loc 1 684 0
 1533 0068 4FF4C060 		mov	r0, #1536
 1534 006c 0890     		str	r0, [sp, #32]
 685:Src/main.c    ****   pLayerCfg.FBStartAdress = 0xC0000000;
 1535              		.loc 1 685 0
 1536 006e 0720     		movs	r0, #7
 1537 0070 0990     		str	r0, [sp, #36]
 686:Src/main.c    ****   pLayerCfg.ImageWidth = 480;
 1538              		.loc 1 686 0
 1539 0072 4FF04040 		mov	r0, #-1073741824
 1540 0076 0A90     		str	r0, [sp, #40]
 687:Src/main.c    ****   pLayerCfg.ImageHeight = 272;
 1541              		.loc 1 687 0
 1542 0078 0B91     		str	r1, [sp, #44]
 688:Src/main.c    ****   pLayerCfg.Backcolor.Blue = 0;
 1543              		.loc 1 688 0
 1544 007a 0C93     		str	r3, [sp, #48]
 689:Src/main.c    ****   pLayerCfg.Backcolor.Green = 0;
 1545              		.loc 1 689 0
 1546 007c 8DF83420 		strb	r2, [sp, #52]
 690:Src/main.c    ****   pLayerCfg.Backcolor.Red = 0;
 1547              		.loc 1 690 0
 1548 0080 8DF83520 		strb	r2, [sp, #53]
 691:Src/main.c    ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 1549              		.loc 1 691 0
 1550 0084 8DF83620 		strb	r2, [sp, #54]
 692:Src/main.c    ****   {
 1551              		.loc 1 692 0
 1552 0088 01A9     		add	r1, sp, #4
 1553 008a 0848     		ldr	r0, .L104
 1554 008c FFF7FEFF 		bl	HAL_LTDC_ConfigLayer
 1555              	.LVL97:
 1556 0090 38B9     		cbnz	r0, .L103
 697:Src/main.c    **** 
 1557              		.loc 1 697 0
 1558 0092 0FB0     		add	sp, sp, #60
 1559              	.LCFI23:
 1560              		.cfi_remember_state
 1561              		.cfi_def_cfa_offset 4
 1562              		@ sp needed
 1563 0094 5DF804FB 		ldr	pc, [sp], #4
 1564              	.L102:
 1565              	.LCFI24:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 59


 1566              		.cfi_restore_state
 674:Src/main.c    ****   }
 1567              		.loc 1 674 0
 1568 0098 40F2A221 		movw	r1, #674
 1569 009c 0548     		ldr	r0, .L104+8
 1570 009e FFF7FEFF 		bl	_Error_Handler
 1571              	.LVL98:
 1572              	.L103:
 694:Src/main.c    ****   }
 1573              		.loc 1 694 0
 1574 00a2 40F2B621 		movw	r1, #694
 1575 00a6 0348     		ldr	r0, .L104+8
 1576 00a8 FFF7FEFF 		bl	_Error_Handler
 1577              	.LVL99:
 1578              	.L105:
 1579              		.align	2
 1580              	.L104:
 1581 00ac 00000000 		.word	hltdc
 1582 00b0 00680140 		.word	1073833984
 1583 00b4 00000000 		.word	.LC7
 1584              		.cfi_endproc
 1585              	.LFE170:
 1587              		.section	.text.MX_QUADSPI_Init,"ax",%progbits
 1588              		.align	1
 1589              		.syntax unified
 1590              		.thumb
 1591              		.thumb_func
 1592              		.fpu fpv5-sp-d16
 1594              	MX_QUADSPI_Init:
 1595              	.LFB171:
 701:Src/main.c    **** 
 1596              		.loc 1 701 0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 0
 1599              		@ frame_needed = 0, uses_anonymous_args = 0
 1600 0000 08B5     		push	{r3, lr}
 1601              	.LCFI25:
 1602              		.cfi_def_cfa_offset 8
 1603              		.cfi_offset 3, -8
 1604              		.cfi_offset 14, -4
 704:Src/main.c    ****   hqspi.Init.ClockPrescaler = 255;
 1605              		.loc 1 704 0
 1606 0002 0B48     		ldr	r0, .L110
 1607 0004 0B4B     		ldr	r3, .L110+4
 1608 0006 0360     		str	r3, [r0]
 705:Src/main.c    ****   hqspi.Init.FifoThreshold = 1;
 1609              		.loc 1 705 0
 1610 0008 FF23     		movs	r3, #255
 1611 000a 4360     		str	r3, [r0, #4]
 706:Src/main.c    ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 1612              		.loc 1 706 0
 1613 000c 0122     		movs	r2, #1
 1614 000e 8260     		str	r2, [r0, #8]
 707:Src/main.c    ****   hqspi.Init.FlashSize = 1;
 1615              		.loc 1 707 0
 1616 0010 0023     		movs	r3, #0
 1617 0012 C360     		str	r3, [r0, #12]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 60


 708:Src/main.c    ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 1618              		.loc 1 708 0
 1619 0014 0261     		str	r2, [r0, #16]
 709:Src/main.c    ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 1620              		.loc 1 709 0
 1621 0016 4361     		str	r3, [r0, #20]
 710:Src/main.c    ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 1622              		.loc 1 710 0
 1623 0018 8361     		str	r3, [r0, #24]
 711:Src/main.c    ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 1624              		.loc 1 711 0
 1625 001a C361     		str	r3, [r0, #28]
 712:Src/main.c    ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 1626              		.loc 1 712 0
 1627 001c 0362     		str	r3, [r0, #32]
 713:Src/main.c    ****   {
 1628              		.loc 1 713 0
 1629 001e FFF7FEFF 		bl	HAL_QSPI_Init
 1630              	.LVL100:
 1631 0022 00B9     		cbnz	r0, .L109
 1632 0024 08BD     		pop	{r3, pc}
 1633              	.L109:
 715:Src/main.c    ****   }
 1634              		.loc 1 715 0
 1635 0026 40F2CB21 		movw	r1, #715
 1636 002a 0348     		ldr	r0, .L110+8
 1637 002c FFF7FEFF 		bl	_Error_Handler
 1638              	.LVL101:
 1639              	.L111:
 1640              		.align	2
 1641              	.L110:
 1642 0030 00000000 		.word	hqspi
 1643 0034 001000A0 		.word	-1610608640
 1644 0038 00000000 		.word	.LC7
 1645              		.cfi_endproc
 1646              	.LFE171:
 1648              		.section	.text.MX_RTC_Init,"ax",%progbits
 1649              		.align	1
 1650              		.syntax unified
 1651              		.thumb
 1652              		.thumb_func
 1653              		.fpu fpv5-sp-d16
 1655              	MX_RTC_Init:
 1656              	.LFB172:
 722:Src/main.c    **** 
 1657              		.loc 1 722 0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 72
 1660              		@ frame_needed = 0, uses_anonymous_args = 0
 1661 0000 00B5     		push	{lr}
 1662              	.LCFI26:
 1663              		.cfi_def_cfa_offset 4
 1664              		.cfi_offset 14, -4
 1665 0002 93B0     		sub	sp, sp, #76
 1666              	.LCFI27:
 1667              		.cfi_def_cfa_offset 80
 738:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 61


 1668              		.loc 1 738 0
 1669 0004 3C48     		ldr	r0, .L126
 1670 0006 3D4B     		ldr	r3, .L126+4
 1671 0008 0360     		str	r3, [r0]
 739:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 1672              		.loc 1 739 0
 1673 000a 0023     		movs	r3, #0
 1674 000c 4360     		str	r3, [r0, #4]
 740:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 1675              		.loc 1 740 0
 1676 000e 7F22     		movs	r2, #127
 1677 0010 8260     		str	r2, [r0, #8]
 741:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1678              		.loc 1 741 0
 1679 0012 FF22     		movs	r2, #255
 1680 0014 C260     		str	r2, [r0, #12]
 742:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1681              		.loc 1 742 0
 1682 0016 0361     		str	r3, [r0, #16]
 743:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1683              		.loc 1 743 0
 1684 0018 4361     		str	r3, [r0, #20]
 744:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1685              		.loc 1 744 0
 1686 001a 8361     		str	r3, [r0, #24]
 745:Src/main.c    ****   {
 1687              		.loc 1 745 0
 1688 001c FFF7FEFF 		bl	HAL_RTC_Init
 1689              	.LVL102:
 1690 0020 0028     		cmp	r0, #0
 1691 0022 4BD1     		bne	.L120
 752:Src/main.c    ****   sTime.Minutes = 0x0;
 1692              		.loc 1 752 0
 1693 0024 0023     		movs	r3, #0
 1694 0026 8DF83030 		strb	r3, [sp, #48]
 753:Src/main.c    ****   sTime.Seconds = 0x0;
 1695              		.loc 1 753 0
 1696 002a 8DF83130 		strb	r3, [sp, #49]
 754:Src/main.c    ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1697              		.loc 1 754 0
 1698 002e 8DF83230 		strb	r3, [sp, #50]
 755:Src/main.c    ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1699              		.loc 1 755 0
 1700 0032 1093     		str	r3, [sp, #64]
 756:Src/main.c    ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1701              		.loc 1 756 0
 1702 0034 1193     		str	r3, [sp, #68]
 757:Src/main.c    ****   {
 1703              		.loc 1 757 0
 1704 0036 0122     		movs	r2, #1
 1705 0038 0CA9     		add	r1, sp, #48
 1706 003a 2F48     		ldr	r0, .L126
 1707 003c FFF7FEFF 		bl	HAL_RTC_SetTime
 1708              	.LVL103:
 1709 0040 0028     		cmp	r0, #0
 1710 0042 40D1     		bne	.L121
 762:Src/main.c    ****   sDate.Month = RTC_MONTH_JANUARY;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 62


 1711              		.loc 1 762 0
 1712 0044 0122     		movs	r2, #1
 1713 0046 8DF82C20 		strb	r2, [sp, #44]
 763:Src/main.c    ****   sDate.Date = 0x1;
 1714              		.loc 1 763 0
 1715 004a 8DF82D20 		strb	r2, [sp, #45]
 764:Src/main.c    ****   sDate.Year = 0x0;
 1716              		.loc 1 764 0
 1717 004e 8DF82E20 		strb	r2, [sp, #46]
 765:Src/main.c    **** 
 1718              		.loc 1 765 0
 1719 0052 0023     		movs	r3, #0
 1720 0054 8DF82F30 		strb	r3, [sp, #47]
 767:Src/main.c    ****   {
 1721              		.loc 1 767 0
 1722 0058 0BA9     		add	r1, sp, #44
 1723 005a 2748     		ldr	r0, .L126
 1724 005c FFF7FEFF 		bl	HAL_RTC_SetDate
 1725              	.LVL104:
 1726 0060 0028     		cmp	r0, #0
 1727 0062 35D1     		bne	.L122
 774:Src/main.c    ****   sAlarm.AlarmTime.Minutes = 0x0;
 1728              		.loc 1 774 0
 1729 0064 0023     		movs	r3, #0
 1730 0066 8DF80030 		strb	r3, [sp]
 775:Src/main.c    ****   sAlarm.AlarmTime.Seconds = 0x0;
 1731              		.loc 1 775 0
 1732 006a 8DF80130 		strb	r3, [sp, #1]
 776:Src/main.c    ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 1733              		.loc 1 776 0
 1734 006e 8DF80230 		strb	r3, [sp, #2]
 777:Src/main.c    ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1735              		.loc 1 777 0
 1736 0072 0193     		str	r3, [sp, #4]
 778:Src/main.c    ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1737              		.loc 1 778 0
 1738 0074 0493     		str	r3, [sp, #16]
 779:Src/main.c    ****   sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 1739              		.loc 1 779 0
 1740 0076 0593     		str	r3, [sp, #20]
 780:Src/main.c    ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 1741              		.loc 1 780 0
 1742 0078 0693     		str	r3, [sp, #24]
 781:Src/main.c    ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 1743              		.loc 1 781 0
 1744 007a 0793     		str	r3, [sp, #28]
 782:Src/main.c    ****   sAlarm.AlarmDateWeekDay = 0x1;
 1745              		.loc 1 782 0
 1746 007c 0893     		str	r3, [sp, #32]
 783:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_A;
 1747              		.loc 1 783 0
 1748 007e 0122     		movs	r2, #1
 1749 0080 8DF82420 		strb	r2, [sp, #36]
 784:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 1750              		.loc 1 784 0
 1751 0084 4FF48073 		mov	r3, #256
 1752 0088 0A93     		str	r3, [sp, #40]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 63


 785:Src/main.c    ****   {
 1753              		.loc 1 785 0
 1754 008a 6946     		mov	r1, sp
 1755 008c 1A48     		ldr	r0, .L126
 1756 008e FFF7FEFF 		bl	HAL_RTC_SetAlarm
 1757              	.LVL105:
 1758 0092 10BB     		cbnz	r0, .L123
 792:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_B;
 1759              		.loc 1 792 0
 1760 0094 0122     		movs	r2, #1
 1761 0096 8DF82420 		strb	r2, [sp, #36]
 793:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 1762              		.loc 1 793 0
 1763 009a 4FF40073 		mov	r3, #512
 1764 009e 0A93     		str	r3, [sp, #40]
 794:Src/main.c    ****   {
 1765              		.loc 1 794 0
 1766 00a0 6946     		mov	r1, sp
 1767 00a2 1548     		ldr	r0, .L126
 1768 00a4 FFF7FEFF 		bl	HAL_RTC_SetAlarm
 1769              	.LVL106:
 1770 00a8 E0B9     		cbnz	r0, .L124
 801:Src/main.c    ****   {
 1771              		.loc 1 801 0
 1772 00aa 0222     		movs	r2, #2
 1773 00ac 0021     		movs	r1, #0
 1774 00ae 1248     		ldr	r0, .L126
 1775 00b0 FFF7FEFF 		bl	HAL_RTCEx_SetTimeStamp
 1776              	.LVL107:
 1777 00b4 D8B9     		cbnz	r0, .L125
 806:Src/main.c    **** 
 1778              		.loc 1 806 0
 1779 00b6 13B0     		add	sp, sp, #76
 1780              	.LCFI28:
 1781              		.cfi_remember_state
 1782              		.cfi_def_cfa_offset 4
 1783              		@ sp needed
 1784 00b8 5DF804FB 		ldr	pc, [sp], #4
 1785              	.L120:
 1786              	.LCFI29:
 1787              		.cfi_restore_state
 747:Src/main.c    ****   }
 1788              		.loc 1 747 0
 1789 00bc 40F2EB21 		movw	r1, #747
 1790 00c0 0F48     		ldr	r0, .L126+8
 1791 00c2 FFF7FEFF 		bl	_Error_Handler
 1792              	.LVL108:
 1793              	.L121:
 759:Src/main.c    ****   }
 1794              		.loc 1 759 0
 1795 00c6 40F2F721 		movw	r1, #759
 1796 00ca 0D48     		ldr	r0, .L126+8
 1797 00cc FFF7FEFF 		bl	_Error_Handler
 1798              	.LVL109:
 1799              	.L122:
 769:Src/main.c    ****   }
 1800              		.loc 1 769 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 64


 1801 00d0 40F20131 		movw	r1, #769
 1802 00d4 0A48     		ldr	r0, .L126+8
 1803 00d6 FFF7FEFF 		bl	_Error_Handler
 1804              	.LVL110:
 1805              	.L123:
 787:Src/main.c    ****   }
 1806              		.loc 1 787 0
 1807 00da 40F21331 		movw	r1, #787
 1808 00de 0848     		ldr	r0, .L126+8
 1809 00e0 FFF7FEFF 		bl	_Error_Handler
 1810              	.LVL111:
 1811              	.L124:
 796:Src/main.c    ****   }
 1812              		.loc 1 796 0
 1813 00e4 4FF44771 		mov	r1, #796
 1814 00e8 0548     		ldr	r0, .L126+8
 1815 00ea FFF7FEFF 		bl	_Error_Handler
 1816              	.LVL112:
 1817              	.L125:
 803:Src/main.c    ****   }
 1818              		.loc 1 803 0
 1819 00ee 40F22331 		movw	r1, #803
 1820 00f2 0348     		ldr	r0, .L126+8
 1821 00f4 FFF7FEFF 		bl	_Error_Handler
 1822              	.LVL113:
 1823              	.L127:
 1824              		.align	2
 1825              	.L126:
 1826 00f8 00000000 		.word	hrtc
 1827 00fc 00280040 		.word	1073752064
 1828 0100 00000000 		.word	.LC7
 1829              		.cfi_endproc
 1830              	.LFE172:
 1832              		.section	.text.MX_SAI2_Init,"ax",%progbits
 1833              		.align	1
 1834              		.syntax unified
 1835              		.thumb
 1836              		.thumb_func
 1837              		.fpu fpv5-sp-d16
 1839              	MX_SAI2_Init:
 1840              	.LFB173:
 810:Src/main.c    **** 
 1841              		.loc 1 810 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 0
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845 0000 08B5     		push	{r3, lr}
 1846              	.LCFI30:
 1847              		.cfi_def_cfa_offset 8
 1848              		.cfi_offset 3, -8
 1849              		.cfi_offset 14, -4
 812:Src/main.c    ****   hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 1850              		.loc 1 812 0
 1851 0002 2648     		ldr	r0, .L134
 1852 0004 264B     		ldr	r3, .L134+4
 1853 0006 0360     		str	r3, [r0]
 813:Src/main.c    ****   hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 65


 1854              		.loc 1 813 0
 1855 0008 0023     		movs	r3, #0
 1856 000a 0363     		str	r3, [r0, #48]
 814:Src/main.c    ****   hsai_BlockA2.Init.DataSize = SAI_DATASIZE_24;
 1857              		.loc 1 814 0
 1858 000c 4360     		str	r3, [r0, #4]
 815:Src/main.c    ****   hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 1859              		.loc 1 815 0
 1860 000e C022     		movs	r2, #192
 1861 0010 4263     		str	r2, [r0, #52]
 816:Src/main.c    ****   hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 1862              		.loc 1 816 0
 1863 0012 8363     		str	r3, [r0, #56]
 817:Src/main.c    ****   hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 1864              		.loc 1 817 0
 1865 0014 C363     		str	r3, [r0, #60]
 818:Src/main.c    ****   hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 1866              		.loc 1 818 0
 1867 0016 8360     		str	r3, [r0, #8]
 819:Src/main.c    ****   hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 1868              		.loc 1 819 0
 1869 0018 0361     		str	r3, [r0, #16]
 820:Src/main.c    ****   hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 1870              		.loc 1 820 0
 1871 001a 4361     		str	r3, [r0, #20]
 821:Src/main.c    ****   hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 1872              		.loc 1 821 0
 1873 001c 8361     		str	r3, [r0, #24]
 822:Src/main.c    ****   hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 1874              		.loc 1 822 0
 1875 001e 214A     		ldr	r2, .L134+8
 1876 0020 C261     		str	r2, [r0, #28]
 823:Src/main.c    ****   hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 1877              		.loc 1 823 0
 1878 0022 C360     		str	r3, [r0, #12]
 824:Src/main.c    ****   hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 1879              		.loc 1 824 0
 1880 0024 4362     		str	r3, [r0, #36]
 825:Src/main.c    ****   hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 1881              		.loc 1 825 0
 1882 0026 8362     		str	r3, [r0, #40]
 826:Src/main.c    ****   hsai_BlockA2.FrameInit.FrameLength = 8;
 1883              		.loc 1 826 0
 1884 0028 C362     		str	r3, [r0, #44]
 827:Src/main.c    ****   hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 1885              		.loc 1 827 0
 1886 002a 0822     		movs	r2, #8
 1887 002c 0264     		str	r2, [r0, #64]
 828:Src/main.c    ****   hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 1888              		.loc 1 828 0
 1889 002e 0122     		movs	r2, #1
 1890 0030 4264     		str	r2, [r0, #68]
 829:Src/main.c    ****   hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 1891              		.loc 1 829 0
 1892 0032 8364     		str	r3, [r0, #72]
 830:Src/main.c    ****   hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 1893              		.loc 1 830 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 66


 1894 0034 C364     		str	r3, [r0, #76]
 831:Src/main.c    ****   hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 1895              		.loc 1 831 0
 1896 0036 0365     		str	r3, [r0, #80]
 832:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 1897              		.loc 1 832 0
 1898 0038 4365     		str	r3, [r0, #84]
 833:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotNumber = 1;
 1899              		.loc 1 833 0
 1900 003a 8365     		str	r3, [r0, #88]
 834:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 1901              		.loc 1 834 0
 1902 003c C265     		str	r2, [r0, #92]
 835:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK)
 1903              		.loc 1 835 0
 1904 003e 0366     		str	r3, [r0, #96]
 836:Src/main.c    ****   {
 1905              		.loc 1 836 0
 1906 0040 FFF7FEFF 		bl	HAL_SAI_Init
 1907              	.LVL114:
 1908 0044 00BB     		cbnz	r0, .L132
 841:Src/main.c    ****   hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 1909              		.loc 1 841 0
 1910 0046 1848     		ldr	r0, .L134+12
 1911 0048 184B     		ldr	r3, .L134+16
 1912 004a 0360     		str	r3, [r0]
 842:Src/main.c    ****   hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 1913              		.loc 1 842 0
 1914 004c 0023     		movs	r3, #0
 1915 004e 0363     		str	r3, [r0, #48]
 843:Src/main.c    ****   hsai_BlockB2.Init.DataSize = SAI_DATASIZE_24;
 1916              		.loc 1 843 0
 1917 0050 0322     		movs	r2, #3
 1918 0052 4260     		str	r2, [r0, #4]
 844:Src/main.c    ****   hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 1919              		.loc 1 844 0
 1920 0054 C022     		movs	r2, #192
 1921 0056 4263     		str	r2, [r0, #52]
 845:Src/main.c    ****   hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 1922              		.loc 1 845 0
 1923 0058 8363     		str	r3, [r0, #56]
 846:Src/main.c    ****   hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 1924              		.loc 1 846 0
 1925 005a C363     		str	r3, [r0, #60]
 847:Src/main.c    ****   hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 1926              		.loc 1 847 0
 1927 005c 0122     		movs	r2, #1
 1928 005e 8260     		str	r2, [r0, #8]
 848:Src/main.c    ****   hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 1929              		.loc 1 848 0
 1930 0060 0361     		str	r3, [r0, #16]
 849:Src/main.c    ****   hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 1931              		.loc 1 849 0
 1932 0062 8361     		str	r3, [r0, #24]
 850:Src/main.c    ****   hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 1933              		.loc 1 850 0
 1934 0064 C360     		str	r3, [r0, #12]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 67


 851:Src/main.c    ****   hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 1935              		.loc 1 851 0
 1936 0066 4362     		str	r3, [r0, #36]
 852:Src/main.c    ****   hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 1937              		.loc 1 852 0
 1938 0068 8362     		str	r3, [r0, #40]
 853:Src/main.c    ****   hsai_BlockB2.FrameInit.FrameLength = 8;
 1939              		.loc 1 853 0
 1940 006a C362     		str	r3, [r0, #44]
 854:Src/main.c    ****   hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 1941              		.loc 1 854 0
 1942 006c 0821     		movs	r1, #8
 1943 006e 0164     		str	r1, [r0, #64]
 855:Src/main.c    ****   hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 1944              		.loc 1 855 0
 1945 0070 4264     		str	r2, [r0, #68]
 856:Src/main.c    ****   hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 1946              		.loc 1 856 0
 1947 0072 8364     		str	r3, [r0, #72]
 857:Src/main.c    ****   hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 1948              		.loc 1 857 0
 1949 0074 C364     		str	r3, [r0, #76]
 858:Src/main.c    ****   hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 1950              		.loc 1 858 0
 1951 0076 0365     		str	r3, [r0, #80]
 859:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 1952              		.loc 1 859 0
 1953 0078 4365     		str	r3, [r0, #84]
 860:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotNumber = 1;
 1954              		.loc 1 860 0
 1955 007a 8365     		str	r3, [r0, #88]
 861:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 1956              		.loc 1 861 0
 1957 007c C265     		str	r2, [r0, #92]
 862:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK)
 1958              		.loc 1 862 0
 1959 007e 0366     		str	r3, [r0, #96]
 863:Src/main.c    ****   {
 1960              		.loc 1 863 0
 1961 0080 FFF7FEFF 		bl	HAL_SAI_Init
 1962              	.LVL115:
 1963 0084 28B9     		cbnz	r0, .L133
 1964 0086 08BD     		pop	{r3, pc}
 1965              	.L132:
 838:Src/main.c    ****   }
 1966              		.loc 1 838 0
 1967 0088 40F24631 		movw	r1, #838
 1968 008c 0848     		ldr	r0, .L134+20
 1969 008e FFF7FEFF 		bl	_Error_Handler
 1970              	.LVL116:
 1971              	.L133:
 865:Src/main.c    ****   }
 1972              		.loc 1 865 0
 1973 0092 40F26131 		movw	r1, #865
 1974 0096 0648     		ldr	r0, .L134+20
 1975 0098 FFF7FEFF 		bl	_Error_Handler
 1976              	.LVL117:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 68


 1977              	.L135:
 1978              		.align	2
 1979              	.L134:
 1980 009c 00000000 		.word	hsai_BlockA2
 1981 00a0 045C0140 		.word	1073830916
 1982 00a4 00EE0200 		.word	192000
 1983 00a8 00000000 		.word	hsai_BlockB2
 1984 00ac 245C0140 		.word	1073830948
 1985 00b0 00000000 		.word	.LC7
 1986              		.cfi_endproc
 1987              	.LFE173:
 1989              		.section	.text.MX_SPDIFRX_Init,"ax",%progbits
 1990              		.align	1
 1991              		.syntax unified
 1992              		.thumb
 1993              		.thumb_func
 1994              		.fpu fpv5-sp-d16
 1996              	MX_SPDIFRX_Init:
 1997              	.LFB175:
 886:Src/main.c    **** 
 1998              		.loc 1 886 0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 0
 2001              		@ frame_needed = 0, uses_anonymous_args = 0
 2002 0000 08B5     		push	{r3, lr}
 2003              	.LCFI31:
 2004              		.cfi_def_cfa_offset 8
 2005              		.cfi_offset 3, -8
 2006              		.cfi_offset 14, -4
 888:Src/main.c    ****   hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 2007              		.loc 1 888 0
 2008 0002 0C48     		ldr	r0, .L140
 2009 0004 4FF04023 		mov	r3, #1073758208
 2010 0008 0360     		str	r3, [r0]
 889:Src/main.c    ****   hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 2011              		.loc 1 889 0
 2012 000a 0023     		movs	r3, #0
 2013 000c 4360     		str	r3, [r0, #4]
 890:Src/main.c    ****   hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 2014              		.loc 1 890 0
 2015 000e 8360     		str	r3, [r0, #8]
 891:Src/main.c    ****   hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 2016              		.loc 1 891 0
 2017 0010 C360     		str	r3, [r0, #12]
 892:Src/main.c    ****   hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 2018              		.loc 1 892 0
 2019 0012 0361     		str	r3, [r0, #16]
 893:Src/main.c    ****   hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 2020              		.loc 1 893 0
 2021 0014 4361     		str	r3, [r0, #20]
 894:Src/main.c    ****   hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 2022              		.loc 1 894 0
 2023 0016 8361     		str	r3, [r0, #24]
 895:Src/main.c    ****   hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 2024              		.loc 1 895 0
 2025 0018 C361     		str	r3, [r0, #28]
 896:Src/main.c    ****   hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 69


 2026              		.loc 1 896 0
 2027 001a 0362     		str	r3, [r0, #32]
 897:Src/main.c    ****   hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 2028              		.loc 1 897 0
 2029 001c 4362     		str	r3, [r0, #36]
 898:Src/main.c    ****   if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK)
 2030              		.loc 1 898 0
 2031 001e 8362     		str	r3, [r0, #40]
 899:Src/main.c    ****   {
 2032              		.loc 1 899 0
 2033 0020 FFF7FEFF 		bl	HAL_SPDIFRX_Init
 2034              	.LVL118:
 2035 0024 00B9     		cbnz	r0, .L139
 2036 0026 08BD     		pop	{r3, pc}
 2037              	.L139:
 901:Src/main.c    ****   }
 2038              		.loc 1 901 0
 2039 0028 40F28531 		movw	r1, #901
 2040 002c 0248     		ldr	r0, .L140+4
 2041 002e FFF7FEFF 		bl	_Error_Handler
 2042              	.LVL119:
 2043              	.L141:
 2044 0032 00BF     		.align	2
 2045              	.L140:
 2046 0034 00000000 		.word	hspdif
 2047 0038 00000000 		.word	.LC7
 2048              		.cfi_endproc
 2049              	.LFE175:
 2051              		.section	.text.MX_SPI2_Init,"ax",%progbits
 2052              		.align	1
 2053              		.syntax unified
 2054              		.thumb
 2055              		.thumb_func
 2056              		.fpu fpv5-sp-d16
 2058              	MX_SPI2_Init:
 2059              	.LFB176:
 908:Src/main.c    **** 
 2060              		.loc 1 908 0
 2061              		.cfi_startproc
 2062              		@ args = 0, pretend = 0, frame = 0
 2063              		@ frame_needed = 0, uses_anonymous_args = 0
 2064 0000 08B5     		push	{r3, lr}
 2065              	.LCFI32:
 2066              		.cfi_def_cfa_offset 8
 2067              		.cfi_offset 3, -8
 2068              		.cfi_offset 14, -4
 911:Src/main.c    ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 2069              		.loc 1 911 0
 2070 0002 1148     		ldr	r0, .L146
 2071 0004 114B     		ldr	r3, .L146+4
 2072 0006 0360     		str	r3, [r0]
 912:Src/main.c    ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 2073              		.loc 1 912 0
 2074 0008 4FF48273 		mov	r3, #260
 2075 000c 4360     		str	r3, [r0, #4]
 913:Src/main.c    ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 2076              		.loc 1 913 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 70


 2077 000e 0023     		movs	r3, #0
 2078 0010 8360     		str	r3, [r0, #8]
 914:Src/main.c    ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 2079              		.loc 1 914 0
 2080 0012 4FF44072 		mov	r2, #768
 2081 0016 C260     		str	r2, [r0, #12]
 915:Src/main.c    ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 2082              		.loc 1 915 0
 2083 0018 0361     		str	r3, [r0, #16]
 916:Src/main.c    ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 2084              		.loc 1 916 0
 2085 001a 4361     		str	r3, [r0, #20]
 917:Src/main.c    ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 2086              		.loc 1 917 0
 2087 001c 4FF40072 		mov	r2, #512
 2088 0020 8261     		str	r2, [r0, #24]
 918:Src/main.c    ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2089              		.loc 1 918 0
 2090 0022 C361     		str	r3, [r0, #28]
 919:Src/main.c    ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 2091              		.loc 1 919 0
 2092 0024 0362     		str	r3, [r0, #32]
 920:Src/main.c    ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2093              		.loc 1 920 0
 2094 0026 4362     		str	r3, [r0, #36]
 921:Src/main.c    ****   hspi2.Init.CRCPolynomial = 7;
 2095              		.loc 1 921 0
 2096 0028 8362     		str	r3, [r0, #40]
 922:Src/main.c    ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2097              		.loc 1 922 0
 2098 002a 0722     		movs	r2, #7
 2099 002c C262     		str	r2, [r0, #44]
 923:Src/main.c    ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2100              		.loc 1 923 0
 2101 002e 0363     		str	r3, [r0, #48]
 924:Src/main.c    ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 2102              		.loc 1 924 0
 2103 0030 0823     		movs	r3, #8
 2104 0032 4363     		str	r3, [r0, #52]
 925:Src/main.c    ****   {
 2105              		.loc 1 925 0
 2106 0034 FFF7FEFF 		bl	HAL_SPI_Init
 2107              	.LVL120:
 2108 0038 00B9     		cbnz	r0, .L145
 2109 003a 08BD     		pop	{r3, pc}
 2110              	.L145:
 927:Src/main.c    ****   }
 2111              		.loc 1 927 0
 2112 003c 40F29F31 		movw	r1, #927
 2113 0040 0348     		ldr	r0, .L146+8
 2114 0042 FFF7FEFF 		bl	_Error_Handler
 2115              	.LVL121:
 2116              	.L147:
 2117 0046 00BF     		.align	2
 2118              	.L146:
 2119 0048 00000000 		.word	hspi2
 2120 004c 00380040 		.word	1073756160
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 71


 2121 0050 00000000 		.word	.LC7
 2122              		.cfi_endproc
 2123              	.LFE176:
 2125              		.section	.text.MX_TIM1_Init,"ax",%progbits
 2126              		.align	1
 2127              		.syntax unified
 2128              		.thumb
 2129              		.thumb_func
 2130              		.fpu fpv5-sp-d16
 2132              	MX_TIM1_Init:
 2133              	.LFB177:
 934:Src/main.c    **** 
 2134              		.loc 1 934 0
 2135              		.cfi_startproc
 2136              		@ args = 0, pretend = 0, frame = 104
 2137              		@ frame_needed = 0, uses_anonymous_args = 0
 2138 0000 00B5     		push	{lr}
 2139              	.LCFI33:
 2140              		.cfi_def_cfa_offset 4
 2141              		.cfi_offset 14, -4
 2142 0002 9BB0     		sub	sp, sp, #108
 2143              	.LCFI34:
 2144              		.cfi_def_cfa_offset 112
 941:Src/main.c    ****   htim1.Init.Prescaler = 0;
 2145              		.loc 1 941 0
 2146 0004 3748     		ldr	r0, .L162
 2147 0006 384B     		ldr	r3, .L162+4
 2148 0008 0360     		str	r3, [r0]
 942:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 2149              		.loc 1 942 0
 2150 000a 0023     		movs	r3, #0
 2151 000c 4360     		str	r3, [r0, #4]
 943:Src/main.c    ****   htim1.Init.Period = 0;
 2152              		.loc 1 943 0
 2153 000e 8360     		str	r3, [r0, #8]
 944:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2154              		.loc 1 944 0
 2155 0010 C360     		str	r3, [r0, #12]
 945:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 2156              		.loc 1 945 0
 2157 0012 0361     		str	r3, [r0, #16]
 946:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2158              		.loc 1 946 0
 2159 0014 4361     		str	r3, [r0, #20]
 947:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 2160              		.loc 1 947 0
 2161 0016 8361     		str	r3, [r0, #24]
 948:Src/main.c    ****   {
 2162              		.loc 1 948 0
 2163 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2164              	.LVL122:
 2165 001c 0028     		cmp	r0, #0
 2166 001e 42D1     		bne	.L156
 953:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 2167              		.loc 1 953 0
 2168 0020 1AA9     		add	r1, sp, #104
 2169 0022 4FF48053 		mov	r3, #4096
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 72


 2170 0026 41F8103D 		str	r3, [r1, #-16]!
 954:Src/main.c    ****   {
 2171              		.loc 1 954 0
 2172 002a 2E48     		ldr	r0, .L162
 2173 002c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2174              	.LVL123:
 2175 0030 0028     		cmp	r0, #0
 2176 0032 3DD1     		bne	.L157
 959:Src/main.c    ****   {
 2177              		.loc 1 959 0
 2178 0034 2B48     		ldr	r0, .L162
 2179 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2180              	.LVL124:
 2181 003a 0028     		cmp	r0, #0
 2182 003c 3DD1     		bne	.L158
 964:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2183              		.loc 1 964 0
 2184 003e 0023     		movs	r3, #0
 2185 0040 1393     		str	r3, [sp, #76]
 965:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2186              		.loc 1 965 0
 2187 0042 1493     		str	r3, [sp, #80]
 966:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 2188              		.loc 1 966 0
 2189 0044 1593     		str	r3, [sp, #84]
 967:Src/main.c    ****   {
 2190              		.loc 1 967 0
 2191 0046 13A9     		add	r1, sp, #76
 2192 0048 2648     		ldr	r0, .L162
 2193 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2194              	.LVL125:
 2195 004e 0028     		cmp	r0, #0
 2196 0050 38D1     		bne	.L159
 972:Src/main.c    ****   sConfigOC.Pulse = 0;
 2197              		.loc 1 972 0
 2198 0052 6023     		movs	r3, #96
 2199 0054 0C93     		str	r3, [sp, #48]
 973:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2200              		.loc 1 973 0
 2201 0056 0022     		movs	r2, #0
 2202 0058 0D92     		str	r2, [sp, #52]
 974:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 2203              		.loc 1 974 0
 2204 005a 0E92     		str	r2, [sp, #56]
 975:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2205              		.loc 1 975 0
 2206 005c 0F92     		str	r2, [sp, #60]
 976:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 2207              		.loc 1 976 0
 2208 005e 1092     		str	r2, [sp, #64]
 977:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 2209              		.loc 1 977 0
 2210 0060 1192     		str	r2, [sp, #68]
 978:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2211              		.loc 1 978 0
 2212 0062 1292     		str	r2, [sp, #72]
 979:Src/main.c    ****   {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 73


 2213              		.loc 1 979 0
 2214 0064 0CA9     		add	r1, sp, #48
 2215 0066 1F48     		ldr	r0, .L162
 2216 0068 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2217              	.LVL126:
 2218 006c 0028     		cmp	r0, #0
 2219 006e 2ED1     		bne	.L160
 984:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 2220              		.loc 1 984 0
 2221 0070 0023     		movs	r3, #0
 2222 0072 0193     		str	r3, [sp, #4]
 985:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 2223              		.loc 1 985 0
 2224 0074 0293     		str	r3, [sp, #8]
 986:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 2225              		.loc 1 986 0
 2226 0076 0393     		str	r3, [sp, #12]
 987:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 2227              		.loc 1 987 0
 2228 0078 0493     		str	r3, [sp, #16]
 988:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 2229              		.loc 1 988 0
 2230 007a 0593     		str	r3, [sp, #20]
 989:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 2231              		.loc 1 989 0
 2232 007c 4FF40052 		mov	r2, #8192
 2233 0080 0692     		str	r2, [sp, #24]
 990:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 2234              		.loc 1 990 0
 2235 0082 0793     		str	r3, [sp, #28]
 991:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 2236              		.loc 1 991 0
 2237 0084 0893     		str	r3, [sp, #32]
 992:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 2238              		.loc 1 992 0
 2239 0086 4FF00072 		mov	r2, #33554432
 2240 008a 0992     		str	r2, [sp, #36]
 993:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 2241              		.loc 1 993 0
 2242 008c 0A93     		str	r3, [sp, #40]
 994:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 2243              		.loc 1 994 0
 2244 008e 0B93     		str	r3, [sp, #44]
 995:Src/main.c    ****   {
 2245              		.loc 1 995 0
 2246 0090 01A9     		add	r1, sp, #4
 2247 0092 1448     		ldr	r0, .L162
 2248 0094 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 2249              	.LVL127:
 2250 0098 F0B9     		cbnz	r0, .L161
1000:Src/main.c    **** 
 2251              		.loc 1 1000 0
 2252 009a 1248     		ldr	r0, .L162
 2253 009c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2254              	.LVL128:
1002:Src/main.c    **** 
 2255              		.loc 1 1002 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 74


 2256 00a0 1BB0     		add	sp, sp, #108
 2257              	.LCFI35:
 2258              		.cfi_remember_state
 2259              		.cfi_def_cfa_offset 4
 2260              		@ sp needed
 2261 00a2 5DF804FB 		ldr	pc, [sp], #4
 2262              	.L156:
 2263              	.LCFI36:
 2264              		.cfi_restore_state
 950:Src/main.c    ****   }
 2265              		.loc 1 950 0
 2266 00a6 40F2B631 		movw	r1, #950
 2267 00aa 1048     		ldr	r0, .L162+8
 2268 00ac FFF7FEFF 		bl	_Error_Handler
 2269              	.LVL129:
 2270              	.L157:
 956:Src/main.c    ****   }
 2271              		.loc 1 956 0
 2272 00b0 4FF46F71 		mov	r1, #956
 2273 00b4 0D48     		ldr	r0, .L162+8
 2274 00b6 FFF7FEFF 		bl	_Error_Handler
 2275              	.LVL130:
 2276              	.L158:
 961:Src/main.c    ****   }
 2277              		.loc 1 961 0
 2278 00ba 40F2C131 		movw	r1, #961
 2279 00be 0B48     		ldr	r0, .L162+8
 2280 00c0 FFF7FEFF 		bl	_Error_Handler
 2281              	.LVL131:
 2282              	.L159:
 969:Src/main.c    ****   }
 2283              		.loc 1 969 0
 2284 00c4 40F2C931 		movw	r1, #969
 2285 00c8 0848     		ldr	r0, .L162+8
 2286 00ca FFF7FEFF 		bl	_Error_Handler
 2287              	.LVL132:
 2288              	.L160:
 981:Src/main.c    ****   }
 2289              		.loc 1 981 0
 2290 00ce 40F2D531 		movw	r1, #981
 2291 00d2 0648     		ldr	r0, .L162+8
 2292 00d4 FFF7FEFF 		bl	_Error_Handler
 2293              	.LVL133:
 2294              	.L161:
 997:Src/main.c    ****   }
 2295              		.loc 1 997 0
 2296 00d8 40F2E531 		movw	r1, #997
 2297 00dc 0348     		ldr	r0, .L162+8
 2298 00de FFF7FEFF 		bl	_Error_Handler
 2299              	.LVL134:
 2300              	.L163:
 2301 00e2 00BF     		.align	2
 2302              	.L162:
 2303 00e4 00000000 		.word	htim1
 2304 00e8 00000140 		.word	1073807360
 2305 00ec 00000000 		.word	.LC7
 2306              		.cfi_endproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 75


 2307              	.LFE177:
 2309              		.section	.text.MX_TIM2_Init,"ax",%progbits
 2310              		.align	1
 2311              		.syntax unified
 2312              		.thumb
 2313              		.thumb_func
 2314              		.fpu fpv5-sp-d16
 2316              	MX_TIM2_Init:
 2317              	.LFB178:
1006:Src/main.c    **** 
 2318              		.loc 1 1006 0
 2319              		.cfi_startproc
 2320              		@ args = 0, pretend = 0, frame = 56
 2321              		@ frame_needed = 0, uses_anonymous_args = 0
 2322 0000 00B5     		push	{lr}
 2323              	.LCFI37:
 2324              		.cfi_def_cfa_offset 4
 2325              		.cfi_offset 14, -4
 2326 0002 8FB0     		sub	sp, sp, #60
 2327              	.LCFI38:
 2328              		.cfi_def_cfa_offset 64
1012:Src/main.c    ****   htim2.Init.Prescaler = 0;
 2329              		.loc 1 1012 0
 2330 0004 2548     		ldr	r0, .L176
 2331 0006 4FF08043 		mov	r3, #1073741824
 2332 000a 0360     		str	r3, [r0]
1013:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2333              		.loc 1 1013 0
 2334 000c 0023     		movs	r3, #0
 2335 000e 4360     		str	r3, [r0, #4]
1014:Src/main.c    ****   htim2.Init.Period = 0;
 2336              		.loc 1 1014 0
 2337 0010 8360     		str	r3, [r0, #8]
1015:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2338              		.loc 1 1015 0
 2339 0012 C360     		str	r3, [r0, #12]
1016:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2340              		.loc 1 1016 0
 2341 0014 0361     		str	r3, [r0, #16]
1017:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 2342              		.loc 1 1017 0
 2343 0016 8361     		str	r3, [r0, #24]
1018:Src/main.c    ****   {
 2344              		.loc 1 1018 0
 2345 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2346              	.LVL135:
 2347 001c 28BB     		cbnz	r0, .L171
1023:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 2348              		.loc 1 1023 0
 2349 001e 0EA9     		add	r1, sp, #56
 2350 0020 4FF48053 		mov	r3, #4096
 2351 0024 41F8103D 		str	r3, [r1, #-16]!
1024:Src/main.c    ****   {
 2352              		.loc 1 1024 0
 2353 0028 1C48     		ldr	r0, .L176
 2354 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2355              	.LVL136:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 76


 2356 002e 08BB     		cbnz	r0, .L172
1029:Src/main.c    ****   {
 2357              		.loc 1 1029 0
 2358 0030 1A48     		ldr	r0, .L176
 2359 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2360              	.LVL137:
 2361 0036 10BB     		cbnz	r0, .L173
1034:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2362              		.loc 1 1034 0
 2363 0038 0023     		movs	r3, #0
 2364 003a 0793     		str	r3, [sp, #28]
1035:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2365              		.loc 1 1035 0
 2366 003c 0993     		str	r3, [sp, #36]
1036:Src/main.c    ****   {
 2367              		.loc 1 1036 0
 2368 003e 07A9     		add	r1, sp, #28
 2369 0040 1648     		ldr	r0, .L176
 2370 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2371              	.LVL138:
 2372 0046 F8B9     		cbnz	r0, .L174
1041:Src/main.c    ****   sConfigOC.Pulse = 0;
 2373              		.loc 1 1041 0
 2374 0048 6023     		movs	r3, #96
 2375 004a 0093     		str	r3, [sp]
1042:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2376              		.loc 1 1042 0
 2377 004c 0022     		movs	r2, #0
 2378 004e 0192     		str	r2, [sp, #4]
1043:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2379              		.loc 1 1043 0
 2380 0050 0292     		str	r2, [sp, #8]
1044:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2381              		.loc 1 1044 0
 2382 0052 0492     		str	r2, [sp, #16]
1045:Src/main.c    ****   {
 2383              		.loc 1 1045 0
 2384 0054 6946     		mov	r1, sp
 2385 0056 1148     		ldr	r0, .L176
 2386 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2387              	.LVL139:
 2388 005c C8B9     		cbnz	r0, .L175
1050:Src/main.c    **** 
 2389              		.loc 1 1050 0
 2390 005e 0F48     		ldr	r0, .L176
 2391 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2392              	.LVL140:
1052:Src/main.c    **** 
 2393              		.loc 1 1052 0
 2394 0064 0FB0     		add	sp, sp, #60
 2395              	.LCFI39:
 2396              		.cfi_remember_state
 2397              		.cfi_def_cfa_offset 4
 2398              		@ sp needed
 2399 0066 5DF804FB 		ldr	pc, [sp], #4
 2400              	.L171:
 2401              	.LCFI40:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 77


 2402              		.cfi_restore_state
1020:Src/main.c    ****   }
 2403              		.loc 1 1020 0
 2404 006a 4FF47F71 		mov	r1, #1020
 2405 006e 0C48     		ldr	r0, .L176+4
 2406 0070 FFF7FEFF 		bl	_Error_Handler
 2407              	.LVL141:
 2408              	.L172:
1026:Src/main.c    ****   }
 2409              		.loc 1 1026 0
 2410 0074 40F20241 		movw	r1, #1026
 2411 0078 0948     		ldr	r0, .L176+4
 2412 007a FFF7FEFF 		bl	_Error_Handler
 2413              	.LVL142:
 2414              	.L173:
1031:Src/main.c    ****   }
 2415              		.loc 1 1031 0
 2416 007e 40F20741 		movw	r1, #1031
 2417 0082 0748     		ldr	r0, .L176+4
 2418 0084 FFF7FEFF 		bl	_Error_Handler
 2419              	.LVL143:
 2420              	.L174:
1038:Src/main.c    ****   }
 2421              		.loc 1 1038 0
 2422 0088 40F20E41 		movw	r1, #1038
 2423 008c 0448     		ldr	r0, .L176+4
 2424 008e FFF7FEFF 		bl	_Error_Handler
 2425              	.LVL144:
 2426              	.L175:
1047:Src/main.c    ****   }
 2427              		.loc 1 1047 0
 2428 0092 40F21741 		movw	r1, #1047
 2429 0096 0248     		ldr	r0, .L176+4
 2430 0098 FFF7FEFF 		bl	_Error_Handler
 2431              	.LVL145:
 2432              	.L177:
 2433              		.align	2
 2434              	.L176:
 2435 009c 00000000 		.word	htim2
 2436 00a0 00000000 		.word	.LC7
 2437              		.cfi_endproc
 2438              	.LFE178:
 2440              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2441              		.align	1
 2442              		.syntax unified
 2443              		.thumb
 2444              		.thumb_func
 2445              		.fpu fpv5-sp-d16
 2447              	MX_TIM3_Init:
 2448              	.LFB179:
1056:Src/main.c    **** 
 2449              		.loc 1 1056 0
 2450              		.cfi_startproc
 2451              		@ args = 0, pretend = 0, frame = 56
 2452              		@ frame_needed = 0, uses_anonymous_args = 0
 2453 0000 00B5     		push	{lr}
 2454              	.LCFI41:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 78


 2455              		.cfi_def_cfa_offset 4
 2456              		.cfi_offset 14, -4
 2457 0002 8FB0     		sub	sp, sp, #60
 2458              	.LCFI42:
 2459              		.cfi_def_cfa_offset 64
1062:Src/main.c    ****   htim3.Init.Prescaler = 0;
 2460              		.loc 1 1062 0
 2461 0004 2548     		ldr	r0, .L190
 2462 0006 264B     		ldr	r3, .L190+4
 2463 0008 0360     		str	r3, [r0]
1063:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2464              		.loc 1 1063 0
 2465 000a 0023     		movs	r3, #0
 2466 000c 4360     		str	r3, [r0, #4]
1064:Src/main.c    ****   htim3.Init.Period = 0;
 2467              		.loc 1 1064 0
 2468 000e 8360     		str	r3, [r0, #8]
1065:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2469              		.loc 1 1065 0
 2470 0010 C360     		str	r3, [r0, #12]
1066:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2471              		.loc 1 1066 0
 2472 0012 0361     		str	r3, [r0, #16]
1067:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2473              		.loc 1 1067 0
 2474 0014 8361     		str	r3, [r0, #24]
1068:Src/main.c    ****   {
 2475              		.loc 1 1068 0
 2476 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2477              	.LVL146:
 2478 001a 28BB     		cbnz	r0, .L185
1073:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2479              		.loc 1 1073 0
 2480 001c 0EA9     		add	r1, sp, #56
 2481 001e 4FF48053 		mov	r3, #4096
 2482 0022 41F8103D 		str	r3, [r1, #-16]!
1074:Src/main.c    ****   {
 2483              		.loc 1 1074 0
 2484 0026 1D48     		ldr	r0, .L190
 2485 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2486              	.LVL147:
 2487 002c 08BB     		cbnz	r0, .L186
1079:Src/main.c    ****   {
 2488              		.loc 1 1079 0
 2489 002e 1B48     		ldr	r0, .L190
 2490 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2491              	.LVL148:
 2492 0034 10BB     		cbnz	r0, .L187
1084:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2493              		.loc 1 1084 0
 2494 0036 0023     		movs	r3, #0
 2495 0038 0793     		str	r3, [sp, #28]
1085:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2496              		.loc 1 1085 0
 2497 003a 0993     		str	r3, [sp, #36]
1086:Src/main.c    ****   {
 2498              		.loc 1 1086 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 79


 2499 003c 07A9     		add	r1, sp, #28
 2500 003e 1748     		ldr	r0, .L190
 2501 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2502              	.LVL149:
 2503 0044 F8B9     		cbnz	r0, .L188
1091:Src/main.c    ****   sConfigOC.Pulse = 0;
 2504              		.loc 1 1091 0
 2505 0046 6023     		movs	r3, #96
 2506 0048 0093     		str	r3, [sp]
1092:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2507              		.loc 1 1092 0
 2508 004a 0022     		movs	r2, #0
 2509 004c 0192     		str	r2, [sp, #4]
1093:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2510              		.loc 1 1093 0
 2511 004e 0292     		str	r2, [sp, #8]
1094:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2512              		.loc 1 1094 0
 2513 0050 0492     		str	r2, [sp, #16]
1095:Src/main.c    ****   {
 2514              		.loc 1 1095 0
 2515 0052 6946     		mov	r1, sp
 2516 0054 1148     		ldr	r0, .L190
 2517 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2518              	.LVL150:
 2519 005a C8B9     		cbnz	r0, .L189
1100:Src/main.c    **** 
 2520              		.loc 1 1100 0
 2521 005c 0F48     		ldr	r0, .L190
 2522 005e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2523              	.LVL151:
1102:Src/main.c    **** 
 2524              		.loc 1 1102 0
 2525 0062 0FB0     		add	sp, sp, #60
 2526              	.LCFI43:
 2527              		.cfi_remember_state
 2528              		.cfi_def_cfa_offset 4
 2529              		@ sp needed
 2530 0064 5DF804FB 		ldr	pc, [sp], #4
 2531              	.L185:
 2532              	.LCFI44:
 2533              		.cfi_restore_state
1070:Src/main.c    ****   }
 2534              		.loc 1 1070 0
 2535 0068 40F22E41 		movw	r1, #1070
 2536 006c 0D48     		ldr	r0, .L190+8
 2537 006e FFF7FEFF 		bl	_Error_Handler
 2538              	.LVL152:
 2539              	.L186:
1076:Src/main.c    ****   }
 2540              		.loc 1 1076 0
 2541 0072 40F23441 		movw	r1, #1076
 2542 0076 0B48     		ldr	r0, .L190+8
 2543 0078 FFF7FEFF 		bl	_Error_Handler
 2544              	.LVL153:
 2545              	.L187:
1081:Src/main.c    ****   }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 80


 2546              		.loc 1 1081 0
 2547 007c 40F23941 		movw	r1, #1081
 2548 0080 0848     		ldr	r0, .L190+8
 2549 0082 FFF7FEFF 		bl	_Error_Handler
 2550              	.LVL154:
 2551              	.L188:
1088:Src/main.c    ****   }
 2552              		.loc 1 1088 0
 2553 0086 4FF48861 		mov	r1, #1088
 2554 008a 0648     		ldr	r0, .L190+8
 2555 008c FFF7FEFF 		bl	_Error_Handler
 2556              	.LVL155:
 2557              	.L189:
1097:Src/main.c    ****   }
 2558              		.loc 1 1097 0
 2559 0090 40F24941 		movw	r1, #1097
 2560 0094 0348     		ldr	r0, .L190+8
 2561 0096 FFF7FEFF 		bl	_Error_Handler
 2562              	.LVL156:
 2563              	.L191:
 2564 009a 00BF     		.align	2
 2565              	.L190:
 2566 009c 00000000 		.word	htim3
 2567 00a0 00040040 		.word	1073742848
 2568 00a4 00000000 		.word	.LC7
 2569              		.cfi_endproc
 2570              	.LFE179:
 2572              		.section	.text.MX_TIM5_Init,"ax",%progbits
 2573              		.align	1
 2574              		.syntax unified
 2575              		.thumb
 2576              		.thumb_func
 2577              		.fpu fpv5-sp-d16
 2579              	MX_TIM5_Init:
 2580              	.LFB180:
1106:Src/main.c    **** 
 2581              		.loc 1 1106 0
 2582              		.cfi_startproc
 2583              		@ args = 0, pretend = 0, frame = 56
 2584              		@ frame_needed = 0, uses_anonymous_args = 0
 2585 0000 00B5     		push	{lr}
 2586              	.LCFI45:
 2587              		.cfi_def_cfa_offset 4
 2588              		.cfi_offset 14, -4
 2589 0002 8FB0     		sub	sp, sp, #60
 2590              	.LCFI46:
 2591              		.cfi_def_cfa_offset 64
1112:Src/main.c    ****   htim5.Init.Prescaler = 0;
 2592              		.loc 1 1112 0
 2593 0004 2548     		ldr	r0, .L204
 2594 0006 264B     		ldr	r3, .L204+4
 2595 0008 0360     		str	r3, [r0]
1113:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2596              		.loc 1 1113 0
 2597 000a 0023     		movs	r3, #0
 2598 000c 4360     		str	r3, [r0, #4]
1114:Src/main.c    ****   htim5.Init.Period = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 81


 2599              		.loc 1 1114 0
 2600 000e 8360     		str	r3, [r0, #8]
1115:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2601              		.loc 1 1115 0
 2602 0010 C360     		str	r3, [r0, #12]
1116:Src/main.c    ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2603              		.loc 1 1116 0
 2604 0012 0361     		str	r3, [r0, #16]
1117:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 2605              		.loc 1 1117 0
 2606 0014 8361     		str	r3, [r0, #24]
1118:Src/main.c    ****   {
 2607              		.loc 1 1118 0
 2608 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2609              	.LVL157:
 2610 001a 30BB     		cbnz	r0, .L199
1123:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 2611              		.loc 1 1123 0
 2612 001c 0EA9     		add	r1, sp, #56
 2613 001e 4FF48053 		mov	r3, #4096
 2614 0022 41F8103D 		str	r3, [r1, #-16]!
1124:Src/main.c    ****   {
 2615              		.loc 1 1124 0
 2616 0026 1D48     		ldr	r0, .L204
 2617 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2618              	.LVL158:
 2619 002c 10BB     		cbnz	r0, .L200
1129:Src/main.c    ****   {
 2620              		.loc 1 1129 0
 2621 002e 1B48     		ldr	r0, .L204
 2622 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2623              	.LVL159:
 2624 0034 18BB     		cbnz	r0, .L201
1134:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2625              		.loc 1 1134 0
 2626 0036 0023     		movs	r3, #0
 2627 0038 0793     		str	r3, [sp, #28]
1135:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 2628              		.loc 1 1135 0
 2629 003a 0993     		str	r3, [sp, #36]
1136:Src/main.c    ****   {
 2630              		.loc 1 1136 0
 2631 003c 07A9     		add	r1, sp, #28
 2632 003e 1748     		ldr	r0, .L204
 2633 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2634              	.LVL160:
 2635 0044 00BB     		cbnz	r0, .L202
1141:Src/main.c    ****   sConfigOC.Pulse = 0;
 2636              		.loc 1 1141 0
 2637 0046 6023     		movs	r3, #96
 2638 0048 0093     		str	r3, [sp]
1142:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2639              		.loc 1 1142 0
 2640 004a 0023     		movs	r3, #0
 2641 004c 0193     		str	r3, [sp, #4]
1143:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2642              		.loc 1 1143 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 82


 2643 004e 0293     		str	r3, [sp, #8]
1144:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2644              		.loc 1 1144 0
 2645 0050 0493     		str	r3, [sp, #16]
1145:Src/main.c    ****   {
 2646              		.loc 1 1145 0
 2647 0052 0C22     		movs	r2, #12
 2648 0054 6946     		mov	r1, sp
 2649 0056 1148     		ldr	r0, .L204
 2650 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2651              	.LVL161:
 2652 005c C8B9     		cbnz	r0, .L203
1150:Src/main.c    **** 
 2653              		.loc 1 1150 0
 2654 005e 0F48     		ldr	r0, .L204
 2655 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2656              	.LVL162:
1152:Src/main.c    **** 
 2657              		.loc 1 1152 0
 2658 0064 0FB0     		add	sp, sp, #60
 2659              	.LCFI47:
 2660              		.cfi_remember_state
 2661              		.cfi_def_cfa_offset 4
 2662              		@ sp needed
 2663 0066 5DF804FB 		ldr	pc, [sp], #4
 2664              	.L199:
 2665              	.LCFI48:
 2666              		.cfi_restore_state
1120:Src/main.c    ****   }
 2667              		.loc 1 1120 0
 2668 006a 4FF48C61 		mov	r1, #1120
 2669 006e 0D48     		ldr	r0, .L204+8
 2670 0070 FFF7FEFF 		bl	_Error_Handler
 2671              	.LVL163:
 2672              	.L200:
1126:Src/main.c    ****   }
 2673              		.loc 1 1126 0
 2674 0074 40F26641 		movw	r1, #1126
 2675 0078 0A48     		ldr	r0, .L204+8
 2676 007a FFF7FEFF 		bl	_Error_Handler
 2677              	.LVL164:
 2678              	.L201:
1131:Src/main.c    ****   }
 2679              		.loc 1 1131 0
 2680 007e 40F26B41 		movw	r1, #1131
 2681 0082 0848     		ldr	r0, .L204+8
 2682 0084 FFF7FEFF 		bl	_Error_Handler
 2683              	.LVL165:
 2684              	.L202:
1138:Src/main.c    ****   }
 2685              		.loc 1 1138 0
 2686 0088 40F27241 		movw	r1, #1138
 2687 008c 0548     		ldr	r0, .L204+8
 2688 008e FFF7FEFF 		bl	_Error_Handler
 2689              	.LVL166:
 2690              	.L203:
1147:Src/main.c    ****   }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 83


 2691              		.loc 1 1147 0
 2692 0092 40F27B41 		movw	r1, #1147
 2693 0096 0348     		ldr	r0, .L204+8
 2694 0098 FFF7FEFF 		bl	_Error_Handler
 2695              	.LVL167:
 2696              	.L205:
 2697              		.align	2
 2698              	.L204:
 2699 009c 00000000 		.word	htim5
 2700 00a0 000C0040 		.word	1073744896
 2701 00a4 00000000 		.word	.LC7
 2702              		.cfi_endproc
 2703              	.LFE180:
 2705              		.section	.text.MX_TIM8_Init,"ax",%progbits
 2706              		.align	1
 2707              		.syntax unified
 2708              		.thumb
 2709              		.thumb_func
 2710              		.fpu fpv5-sp-d16
 2712              	MX_TIM8_Init:
 2713              	.LFB182:
1181:Src/main.c    **** 
 2714              		.loc 1 1181 0
 2715              		.cfi_startproc
 2716              		@ args = 0, pretend = 0, frame = 32
 2717              		@ frame_needed = 0, uses_anonymous_args = 0
 2718 0000 00B5     		push	{lr}
 2719              	.LCFI49:
 2720              		.cfi_def_cfa_offset 4
 2721              		.cfi_offset 14, -4
 2722 0002 89B0     		sub	sp, sp, #36
 2723              	.LCFI50:
 2724              		.cfi_def_cfa_offset 40
1186:Src/main.c    ****   htim8.Init.Prescaler = 0;
 2725              		.loc 1 1186 0
 2726 0004 1848     		ldr	r0, .L214
 2727 0006 194B     		ldr	r3, .L214+4
 2728 0008 0360     		str	r3, [r0]
1187:Src/main.c    ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 2729              		.loc 1 1187 0
 2730 000a 0023     		movs	r3, #0
 2731 000c 4360     		str	r3, [r0, #4]
1188:Src/main.c    ****   htim8.Init.Period = 0;
 2732              		.loc 1 1188 0
 2733 000e 8360     		str	r3, [r0, #8]
1189:Src/main.c    ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2734              		.loc 1 1189 0
 2735 0010 C360     		str	r3, [r0, #12]
1190:Src/main.c    ****   htim8.Init.RepetitionCounter = 0;
 2736              		.loc 1 1190 0
 2737 0012 0361     		str	r3, [r0, #16]
1191:Src/main.c    ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2738              		.loc 1 1191 0
 2739 0014 4361     		str	r3, [r0, #20]
1192:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 2740              		.loc 1 1192 0
 2741 0016 8361     		str	r3, [r0, #24]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 84


1193:Src/main.c    ****   {
 2742              		.loc 1 1193 0
 2743 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2744              	.LVL168:
 2745 001c A0B9     		cbnz	r0, .L211
1198:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 2746              		.loc 1 1198 0
 2747 001e 08A9     		add	r1, sp, #32
 2748 0020 4FF48053 		mov	r3, #4096
 2749 0024 41F8103D 		str	r3, [r1, #-16]!
1199:Src/main.c    ****   {
 2750              		.loc 1 1199 0
 2751 0028 0F48     		ldr	r0, .L214
 2752 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2753              	.LVL169:
 2754 002e 80B9     		cbnz	r0, .L212
1204:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2755              		.loc 1 1204 0
 2756 0030 0023     		movs	r3, #0
 2757 0032 0193     		str	r3, [sp, #4]
1205:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2758              		.loc 1 1205 0
 2759 0034 0293     		str	r3, [sp, #8]
1206:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 2760              		.loc 1 1206 0
 2761 0036 0393     		str	r3, [sp, #12]
1207:Src/main.c    ****   {
 2762              		.loc 1 1207 0
 2763 0038 01A9     		add	r1, sp, #4
 2764 003a 0B48     		ldr	r0, .L214
 2765 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2766              	.LVL170:
 2767 0040 60B9     		cbnz	r0, .L213
1212:Src/main.c    **** 
 2768              		.loc 1 1212 0
 2769 0042 09B0     		add	sp, sp, #36
 2770              	.LCFI51:
 2771              		.cfi_remember_state
 2772              		.cfi_def_cfa_offset 4
 2773              		@ sp needed
 2774 0044 5DF804FB 		ldr	pc, [sp], #4
 2775              	.L211:
 2776              	.LCFI52:
 2777              		.cfi_restore_state
1195:Src/main.c    ****   }
 2778              		.loc 1 1195 0
 2779 0048 40F2AB41 		movw	r1, #1195
 2780 004c 0848     		ldr	r0, .L214+8
 2781 004e FFF7FEFF 		bl	_Error_Handler
 2782              	.LVL171:
 2783              	.L212:
1201:Src/main.c    ****   }
 2784              		.loc 1 1201 0
 2785 0052 40F2B141 		movw	r1, #1201
 2786 0056 0648     		ldr	r0, .L214+8
 2787 0058 FFF7FEFF 		bl	_Error_Handler
 2788              	.LVL172:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 85


 2789              	.L213:
1209:Src/main.c    ****   }
 2790              		.loc 1 1209 0
 2791 005c 40F2B941 		movw	r1, #1209
 2792 0060 0348     		ldr	r0, .L214+8
 2793 0062 FFF7FEFF 		bl	_Error_Handler
 2794              	.LVL173:
 2795              	.L215:
 2796 0066 00BF     		.align	2
 2797              	.L214:
 2798 0068 00000000 		.word	htim8
 2799 006c 00040140 		.word	1073808384
 2800 0070 00000000 		.word	.LC7
 2801              		.cfi_endproc
 2802              	.LFE182:
 2804              		.section	.text.MX_TIM12_Init,"ax",%progbits
 2805              		.align	1
 2806              		.syntax unified
 2807              		.thumb
 2808              		.thumb_func
 2809              		.fpu fpv5-sp-d16
 2811              	MX_TIM12_Init:
 2812              	.LFB183:
1216:Src/main.c    **** 
 2813              		.loc 1 1216 0
 2814              		.cfi_startproc
 2815              		@ args = 0, pretend = 0, frame = 32
 2816              		@ frame_needed = 0, uses_anonymous_args = 0
 2817 0000 00B5     		push	{lr}
 2818              	.LCFI53:
 2819              		.cfi_def_cfa_offset 4
 2820              		.cfi_offset 14, -4
 2821 0002 89B0     		sub	sp, sp, #36
 2822              	.LCFI54:
 2823              		.cfi_def_cfa_offset 40
1220:Src/main.c    ****   htim12.Init.Prescaler = 0;
 2824              		.loc 1 1220 0
 2825 0004 1348     		ldr	r0, .L222
 2826 0006 144B     		ldr	r3, .L222+4
 2827 0008 0360     		str	r3, [r0]
1221:Src/main.c    ****   htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 2828              		.loc 1 1221 0
 2829 000a 0023     		movs	r3, #0
 2830 000c 4360     		str	r3, [r0, #4]
1222:Src/main.c    ****   htim12.Init.Period = 0;
 2831              		.loc 1 1222 0
 2832 000e 8360     		str	r3, [r0, #8]
1223:Src/main.c    ****   htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2833              		.loc 1 1223 0
 2834 0010 C360     		str	r3, [r0, #12]
1224:Src/main.c    ****   htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2835              		.loc 1 1224 0
 2836 0012 0361     		str	r3, [r0, #16]
1225:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 2837              		.loc 1 1225 0
 2838 0014 8361     		str	r3, [r0, #24]
1226:Src/main.c    ****   {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 86


 2839              		.loc 1 1226 0
 2840 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2841              	.LVL174:
 2842 001a 80B9     		cbnz	r0, .L220
1231:Src/main.c    ****   sConfigOC.Pulse = 0;
 2843              		.loc 1 1231 0
 2844 001c 6023     		movs	r3, #96
 2845 001e 0193     		str	r3, [sp, #4]
1232:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2846              		.loc 1 1232 0
 2847 0020 0022     		movs	r2, #0
 2848 0022 0292     		str	r2, [sp, #8]
1233:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2849              		.loc 1 1233 0
 2850 0024 0392     		str	r2, [sp, #12]
1234:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2851              		.loc 1 1234 0
 2852 0026 0592     		str	r2, [sp, #20]
1235:Src/main.c    ****   {
 2853              		.loc 1 1235 0
 2854 0028 01A9     		add	r1, sp, #4
 2855 002a 0A48     		ldr	r0, .L222
 2856 002c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2857              	.LVL175:
 2858 0030 50B9     		cbnz	r0, .L221
1240:Src/main.c    **** 
 2859              		.loc 1 1240 0
 2860 0032 0848     		ldr	r0, .L222
 2861 0034 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2862              	.LVL176:
1242:Src/main.c    **** 
 2863              		.loc 1 1242 0
 2864 0038 09B0     		add	sp, sp, #36
 2865              	.LCFI55:
 2866              		.cfi_remember_state
 2867              		.cfi_def_cfa_offset 4
 2868              		@ sp needed
 2869 003a 5DF804FB 		ldr	pc, [sp], #4
 2870              	.L220:
 2871              	.LCFI56:
 2872              		.cfi_restore_state
1228:Src/main.c    ****   }
 2873              		.loc 1 1228 0
 2874 003e 40F2CC41 		movw	r1, #1228
 2875 0042 0648     		ldr	r0, .L222+8
 2876 0044 FFF7FEFF 		bl	_Error_Handler
 2877              	.LVL177:
 2878              	.L221:
1237:Src/main.c    ****   }
 2879              		.loc 1 1237 0
 2880 0048 40F2D541 		movw	r1, #1237
 2881 004c 0348     		ldr	r0, .L222+8
 2882 004e FFF7FEFF 		bl	_Error_Handler
 2883              	.LVL178:
 2884              	.L223:
 2885 0052 00BF     		.align	2
 2886              	.L222:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 87


 2887 0054 00000000 		.word	htim12
 2888 0058 00180040 		.word	1073747968
 2889 005c 00000000 		.word	.LC7
 2890              		.cfi_endproc
 2891              	.LFE183:
 2893              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 2894              		.align	1
 2895              		.syntax unified
 2896              		.thumb
 2897              		.thumb_func
 2898              		.fpu fpv5-sp-d16
 2900              	MX_USART1_UART_Init:
 2901              	.LFB184:
1246:Src/main.c    **** 
 2902              		.loc 1 1246 0
 2903              		.cfi_startproc
 2904              		@ args = 0, pretend = 0, frame = 0
 2905              		@ frame_needed = 0, uses_anonymous_args = 0
 2906 0000 08B5     		push	{r3, lr}
 2907              	.LCFI57:
 2908              		.cfi_def_cfa_offset 8
 2909              		.cfi_offset 3, -8
 2910              		.cfi_offset 14, -4
1248:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 2911              		.loc 1 1248 0
 2912 0002 0C48     		ldr	r0, .L228
 2913 0004 0C4B     		ldr	r3, .L228+4
 2914 0006 0360     		str	r3, [r0]
1249:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 2915              		.loc 1 1249 0
 2916 0008 4FF4E133 		mov	r3, #115200
 2917 000c 4360     		str	r3, [r0, #4]
1250:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 2918              		.loc 1 1250 0
 2919 000e 0023     		movs	r3, #0
 2920 0010 8360     		str	r3, [r0, #8]
1251:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 2921              		.loc 1 1251 0
 2922 0012 C360     		str	r3, [r0, #12]
1252:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 2923              		.loc 1 1252 0
 2924 0014 0361     		str	r3, [r0, #16]
1253:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2925              		.loc 1 1253 0
 2926 0016 0C22     		movs	r2, #12
 2927 0018 4261     		str	r2, [r0, #20]
1254:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 2928              		.loc 1 1254 0
 2929 001a 8361     		str	r3, [r0, #24]
1255:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2930              		.loc 1 1255 0
 2931 001c C361     		str	r3, [r0, #28]
1256:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2932              		.loc 1 1256 0
 2933 001e 0362     		str	r3, [r0, #32]
1257:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 2934              		.loc 1 1257 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 88


 2935 0020 4362     		str	r3, [r0, #36]
1258:Src/main.c    ****   {
 2936              		.loc 1 1258 0
 2937 0022 FFF7FEFF 		bl	HAL_UART_Init
 2938              	.LVL179:
 2939 0026 00B9     		cbnz	r0, .L227
 2940 0028 08BD     		pop	{r3, pc}
 2941              	.L227:
1260:Src/main.c    ****   }
 2942              		.loc 1 1260 0
 2943 002a 40F2EC41 		movw	r1, #1260
 2944 002e 0348     		ldr	r0, .L228+8
 2945 0030 FFF7FEFF 		bl	_Error_Handler
 2946              	.LVL180:
 2947              	.L229:
 2948              		.align	2
 2949              	.L228:
 2950 0034 00000000 		.word	huart1
 2951 0038 00100140 		.word	1073811456
 2952 003c 00000000 		.word	.LC7
 2953              		.cfi_endproc
 2954              	.LFE184:
 2956              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 2957              		.align	1
 2958              		.syntax unified
 2959              		.thumb
 2960              		.thumb_func
 2961              		.fpu fpv5-sp-d16
 2963              	MX_USART6_UART_Init:
 2964              	.LFB185:
1267:Src/main.c    **** 
 2965              		.loc 1 1267 0
 2966              		.cfi_startproc
 2967              		@ args = 0, pretend = 0, frame = 0
 2968              		@ frame_needed = 0, uses_anonymous_args = 0
 2969 0000 08B5     		push	{r3, lr}
 2970              	.LCFI58:
 2971              		.cfi_def_cfa_offset 8
 2972              		.cfi_offset 3, -8
 2973              		.cfi_offset 14, -4
1269:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 2974              		.loc 1 1269 0
 2975 0002 0C48     		ldr	r0, .L234
 2976 0004 0C4B     		ldr	r3, .L234+4
 2977 0006 0360     		str	r3, [r0]
1270:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 2978              		.loc 1 1270 0
 2979 0008 4FF4E133 		mov	r3, #115200
 2980 000c 4360     		str	r3, [r0, #4]
1271:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 2981              		.loc 1 1271 0
 2982 000e 0023     		movs	r3, #0
 2983 0010 8360     		str	r3, [r0, #8]
1272:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 2984              		.loc 1 1272 0
 2985 0012 C360     		str	r3, [r0, #12]
1273:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 89


 2986              		.loc 1 1273 0
 2987 0014 0361     		str	r3, [r0, #16]
1274:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2988              		.loc 1 1274 0
 2989 0016 0C22     		movs	r2, #12
 2990 0018 4261     		str	r2, [r0, #20]
1275:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 2991              		.loc 1 1275 0
 2992 001a 8361     		str	r3, [r0, #24]
1276:Src/main.c    ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2993              		.loc 1 1276 0
 2994 001c C361     		str	r3, [r0, #28]
1277:Src/main.c    ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2995              		.loc 1 1277 0
 2996 001e 0362     		str	r3, [r0, #32]
1278:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 2997              		.loc 1 1278 0
 2998 0020 4362     		str	r3, [r0, #36]
1279:Src/main.c    ****   {
 2999              		.loc 1 1279 0
 3000 0022 FFF7FEFF 		bl	HAL_UART_Init
 3001              	.LVL181:
 3002 0026 00B9     		cbnz	r0, .L233
 3003 0028 08BD     		pop	{r3, pc}
 3004              	.L233:
1281:Src/main.c    ****   }
 3005              		.loc 1 1281 0
 3006 002a 40F20151 		movw	r1, #1281
 3007 002e 0348     		ldr	r0, .L234+8
 3008 0030 FFF7FEFF 		bl	_Error_Handler
 3009              	.LVL182:
 3010              	.L235:
 3011              		.align	2
 3012              	.L234:
 3013 0034 00000000 		.word	huart6
 3014 0038 00140140 		.word	1073812480
 3015 003c 00000000 		.word	.LC7
 3016              		.cfi_endproc
 3017              	.LFE185:
 3019              		.section	.text.MX_TIM7_Init,"ax",%progbits
 3020              		.align	1
 3021              		.syntax unified
 3022              		.thumb
 3023              		.thumb_func
 3024              		.fpu fpv5-sp-d16
 3026              	MX_TIM7_Init:
 3027              	.LFB181:
1156:Src/main.c    **** 
 3028              		.loc 1 1156 0
 3029              		.cfi_startproc
 3030              		@ args = 0, pretend = 0, frame = 16
 3031              		@ frame_needed = 0, uses_anonymous_args = 0
 3032 0000 00B5     		push	{lr}
 3033              	.LCFI59:
 3034              		.cfi_def_cfa_offset 4
 3035              		.cfi_offset 14, -4
 3036 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 90


 3037              	.LCFI60:
 3038              		.cfi_def_cfa_offset 24
1160:Src/main.c    ****   htim7.Init.Prescaler = 0;
 3039              		.loc 1 1160 0
 3040 0004 0F48     		ldr	r0, .L242
 3041 0006 104B     		ldr	r3, .L242+4
 3042 0008 0360     		str	r3, [r0]
1161:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 3043              		.loc 1 1161 0
 3044 000a 0023     		movs	r3, #0
 3045 000c 4360     		str	r3, [r0, #4]
1162:Src/main.c    ****   htim7.Init.Period = 0;
 3046              		.loc 1 1162 0
 3047 000e 8360     		str	r3, [r0, #8]
1163:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3048              		.loc 1 1163 0
 3049 0010 C360     		str	r3, [r0, #12]
1164:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 3050              		.loc 1 1164 0
 3051 0012 8361     		str	r3, [r0, #24]
1165:Src/main.c    ****   {
 3052              		.loc 1 1165 0
 3053 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 3054              	.LVL183:
 3055 0018 50B9     		cbnz	r0, .L240
1170:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 3056              		.loc 1 1170 0
 3057 001a 0023     		movs	r3, #0
 3058 001c 0193     		str	r3, [sp, #4]
1171:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 3059              		.loc 1 1171 0
 3060 001e 0393     		str	r3, [sp, #12]
1172:Src/main.c    ****   {
 3061              		.loc 1 1172 0
 3062 0020 01A9     		add	r1, sp, #4
 3063 0022 0848     		ldr	r0, .L242
 3064 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 3065              	.LVL184:
 3066 0028 38B9     		cbnz	r0, .L241
1177:Src/main.c    **** 
 3067              		.loc 1 1177 0
 3068 002a 05B0     		add	sp, sp, #20
 3069              	.LCFI61:
 3070              		.cfi_remember_state
 3071              		.cfi_def_cfa_offset 4
 3072              		@ sp needed
 3073 002c 5DF804FB 		ldr	pc, [sp], #4
 3074              	.L240:
 3075              	.LCFI62:
 3076              		.cfi_restore_state
1167:Src/main.c    ****   }
 3077              		.loc 1 1167 0
 3078 0030 40F28F41 		movw	r1, #1167
 3079 0034 0548     		ldr	r0, .L242+8
 3080 0036 FFF7FEFF 		bl	_Error_Handler
 3081              	.LVL185:
 3082              	.L241:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 91


1174:Src/main.c    ****   }
 3083              		.loc 1 1174 0
 3084 003a 40F29641 		movw	r1, #1174
 3085 003e 0348     		ldr	r0, .L242+8
 3086 0040 FFF7FEFF 		bl	_Error_Handler
 3087              	.LVL186:
 3088              	.L243:
 3089              		.align	2
 3090              	.L242:
 3091 0044 00000000 		.word	htim7
 3092 0048 00140040 		.word	1073746944
 3093 004c 00000000 		.word	.LC7
 3094              		.cfi_endproc
 3095              	.LFE181:
 3097              		.section	.text.SystemClock_Config,"ax",%progbits
 3098              		.align	1
 3099              		.global	SystemClock_Config
 3100              		.syntax unified
 3101              		.thumb
 3102              		.thumb_func
 3103              		.fpu fpv5-sp-d16
 3105              	SystemClock_Config:
 3106              	.LFB163:
 391:Src/main.c    **** 
 3107              		.loc 1 391 0
 3108              		.cfi_startproc
 3109              		@ args = 0, pretend = 0, frame = 208
 3110              		@ frame_needed = 0, uses_anonymous_args = 0
 3111 0000 00B5     		push	{lr}
 3112              	.LCFI63:
 3113              		.cfi_def_cfa_offset 4
 3114              		.cfi_offset 14, -4
 3115 0002 B5B0     		sub	sp, sp, #212
 3116              	.LCFI64:
 3117              		.cfi_def_cfa_offset 216
 3118              	.LBB13:
 399:Src/main.c    **** 
 3119              		.loc 1 399 0
 3120 0004 474B     		ldr	r3, .L254
 3121 0006 1A6C     		ldr	r2, [r3, #64]
 3122 0008 42F08052 		orr	r2, r2, #268435456
 3123 000c 1A64     		str	r2, [r3, #64]
 3124 000e 1B6C     		ldr	r3, [r3, #64]
 3125 0010 03F08053 		and	r3, r3, #268435456
 3126 0014 0093     		str	r3, [sp]
 3127 0016 009B     		ldr	r3, [sp]
 3128              	.LBE13:
 3129              	.LBB14:
 401:Src/main.c    **** 
 3130              		.loc 1 401 0
 3131 0018 434B     		ldr	r3, .L254+4
 3132 001a 1A68     		ldr	r2, [r3]
 3133 001c 42F44042 		orr	r2, r2, #49152
 3134 0020 1A60     		str	r2, [r3]
 3135 0022 1B68     		ldr	r3, [r3]
 3136 0024 03F44043 		and	r3, r3, #49152
 3137 0028 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 92


 3138 002a 019B     		ldr	r3, [sp, #4]
 3139              	.LBE14:
 405:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 3140              		.loc 1 405 0
 3141 002c 0923     		movs	r3, #9
 3142 002e 2893     		str	r3, [sp, #160]
 406:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 3143              		.loc 1 406 0
 3144 0030 4FF48033 		mov	r3, #65536
 3145 0034 2993     		str	r3, [sp, #164]
 407:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3146              		.loc 1 407 0
 3147 0036 0123     		movs	r3, #1
 3148 0038 2D93     		str	r3, [sp, #180]
 408:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 3149              		.loc 1 408 0
 3150 003a 0223     		movs	r3, #2
 3151 003c 2E93     		str	r3, [sp, #184]
 409:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 3152              		.loc 1 409 0
 3153 003e 4FF48002 		mov	r2, #4194304
 3154 0042 2F92     		str	r2, [sp, #188]
 410:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 3155              		.loc 1 410 0
 3156 0044 1922     		movs	r2, #25
 3157 0046 3092     		str	r2, [sp, #192]
 411:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 3158              		.loc 1 411 0
 3159 0048 4FF4C872 		mov	r2, #400
 3160 004c 3192     		str	r2, [sp, #196]
 412:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 3161              		.loc 1 412 0
 3162 004e 3293     		str	r3, [sp, #200]
 413:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3163              		.loc 1 413 0
 3164 0050 0823     		movs	r3, #8
 3165 0052 3393     		str	r3, [sp, #204]
 414:Src/main.c    ****   {
 3166              		.loc 1 414 0
 3167 0054 28A8     		add	r0, sp, #160
 3168 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 3169              	.LVL187:
 3170 005a 0028     		cmp	r0, #0
 3171 005c 4ED1     		bne	.L250
 421:Src/main.c    ****   {
 3172              		.loc 1 421 0
 3173 005e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 3174              	.LVL188:
 3175 0062 0028     		cmp	r0, #0
 3176 0064 4FD1     		bne	.L251
 428:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3177              		.loc 1 428 0
 3178 0066 0F23     		movs	r3, #15
 3179 0068 2393     		str	r3, [sp, #140]
 430:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3180              		.loc 1 430 0
 3181 006a 0223     		movs	r3, #2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 93


 3182 006c 2493     		str	r3, [sp, #144]
 431:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 3183              		.loc 1 431 0
 3184 006e 0023     		movs	r3, #0
 3185 0070 2593     		str	r3, [sp, #148]
 432:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 3186              		.loc 1 432 0
 3187 0072 4FF4A053 		mov	r3, #5120
 3188 0076 2693     		str	r3, [sp, #152]
 433:Src/main.c    **** 
 3189              		.loc 1 433 0
 3190 0078 4FF48053 		mov	r3, #4096
 3191 007c 2793     		str	r3, [sp, #156]
 435:Src/main.c    ****   {
 3192              		.loc 1 435 0
 3193 007e 0621     		movs	r1, #6
 3194 0080 23A8     		add	r0, sp, #140
 3195 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3196              	.LVL189:
 3197 0086 0028     		cmp	r0, #0
 3198 0088 42D1     		bne	.L252
 440:Src/main.c    ****                               |RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART1
 3199              		.loc 1 440 0
 3200 008a 284B     		ldr	r3, .L254+8
 3201 008c 0293     		str	r3, [sp, #8]
 445:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 3202              		.loc 1 445 0
 3203 008e 6423     		movs	r3, #100
 3204 0090 0393     		str	r3, [sp, #12]
 446:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 3205              		.loc 1 446 0
 3206 0092 0223     		movs	r3, #2
 3207 0094 0693     		str	r3, [sp, #24]
 447:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 3208              		.loc 1 447 0
 3209 0096 0493     		str	r3, [sp, #16]
 448:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 3210              		.loc 1 448 0
 3211 0098 0593     		str	r3, [sp, #20]
 449:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 3212              		.loc 1 449 0
 3213 009a C023     		movs	r3, #192
 3214 009c 0793     		str	r3, [sp, #28]
 450:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 3215              		.loc 1 450 0
 3216 009e 0423     		movs	r3, #4
 3217 00a0 0993     		str	r3, [sp, #36]
 451:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
 3218              		.loc 1 451 0
 3219 00a2 0893     		str	r3, [sp, #32]
 452:Src/main.c    ****   PeriphClkInitStruct.PLLI2SDivQ = 1;
 3220              		.loc 1 452 0
 3221 00a4 0123     		movs	r3, #1
 3222 00a6 0A93     		str	r3, [sp, #40]
 453:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 3223              		.loc 1 453 0
 3224 00a8 0B93     		str	r3, [sp, #44]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 94


 454:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 3225              		.loc 1 454 0
 3226 00aa 0C93     		str	r3, [sp, #48]
 455:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 3227              		.loc 1 455 0
 3228 00ac 4FF40033 		mov	r3, #131072
 3229 00b0 0D93     		str	r3, [sp, #52]
 456:Src/main.c    ****   PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 3230              		.loc 1 456 0
 3231 00b2 4FF40073 		mov	r3, #512
 3232 00b6 0E93     		str	r3, [sp, #56]
 457:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 3233              		.loc 1 457 0
 3234 00b8 0023     		movs	r3, #0
 3235 00ba 1293     		str	r3, [sp, #72]
 458:Src/main.c    ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 3236              		.loc 1 458 0
 3237 00bc 1393     		str	r3, [sp, #76]
 459:Src/main.c    ****   PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 3238              		.loc 1 459 0
 3239 00be 1893     		str	r3, [sp, #96]
 460:Src/main.c    ****   PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 3240              		.loc 1 460 0
 3241 00c0 1B93     		str	r3, [sp, #108]
 461:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 3242              		.loc 1 461 0
 3243 00c2 1D93     		str	r3, [sp, #116]
 462:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 3244              		.loc 1 462 0
 3245 00c4 4FF00062 		mov	r2, #134217728
 3246 00c8 2192     		str	r2, [sp, #132]
 463:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 3247              		.loc 1 463 0
 3248 00ca 2293     		str	r3, [sp, #136]
 464:Src/main.c    ****   {
 3249              		.loc 1 464 0
 3250 00cc 02A8     		add	r0, sp, #8
 3251 00ce FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 3252              	.LVL190:
 3253 00d2 10BB     		cbnz	r0, .L253
 471:Src/main.c    **** 
 3254              		.loc 1 471 0
 3255 00d4 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3256              	.LVL191:
 3257 00d8 154B     		ldr	r3, .L254+12
 3258 00da A3FB0030 		umull	r3, r0, r3, r0
 3259 00de 8009     		lsrs	r0, r0, #6
 3260 00e0 FFF7FEFF 		bl	HAL_SYSTICK_Config
 3261              	.LVL192:
 475:Src/main.c    **** 
 3262              		.loc 1 475 0
 3263 00e4 0420     		movs	r0, #4
 3264 00e6 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 3265              	.LVL193:
 478:Src/main.c    **** }
 3266              		.loc 1 478 0
 3267 00ea 0022     		movs	r2, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 95


 3268 00ec 0F21     		movs	r1, #15
 3269 00ee 4FF0FF30 		mov	r0, #-1
 3270 00f2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 3271              	.LVL194:
 479:Src/main.c    **** 
 3272              		.loc 1 479 0
 3273 00f6 35B0     		add	sp, sp, #212
 3274              	.LCFI65:
 3275              		.cfi_remember_state
 3276              		.cfi_def_cfa_offset 4
 3277              		@ sp needed
 3278 00f8 5DF804FB 		ldr	pc, [sp], #4
 3279              	.L250:
 3280              	.LCFI66:
 3281              		.cfi_restore_state
 416:Src/main.c    ****   }
 3282              		.loc 1 416 0
 3283 00fc 4FF4D071 		mov	r1, #416
 3284 0100 0C48     		ldr	r0, .L254+16
 3285 0102 FFF7FEFF 		bl	_Error_Handler
 3286              	.LVL195:
 3287              	.L251:
 423:Src/main.c    ****   }
 3288              		.loc 1 423 0
 3289 0106 40F2A711 		movw	r1, #423
 3290 010a 0A48     		ldr	r0, .L254+16
 3291 010c FFF7FEFF 		bl	_Error_Handler
 3292              	.LVL196:
 3293              	.L252:
 437:Src/main.c    ****   }
 3294              		.loc 1 437 0
 3295 0110 40F2B511 		movw	r1, #437
 3296 0114 0748     		ldr	r0, .L254+16
 3297 0116 FFF7FEFF 		bl	_Error_Handler
 3298              	.LVL197:
 3299              	.L253:
 466:Src/main.c    ****   }
 3300              		.loc 1 466 0
 3301 011a 4FF4E971 		mov	r1, #466
 3302 011e 0548     		ldr	r0, .L254+16
 3303 0120 FFF7FEFF 		bl	_Error_Handler
 3304              	.LVL198:
 3305              	.L255:
 3306              		.align	2
 3307              	.L254:
 3308 0124 00380240 		.word	1073887232
 3309 0128 00700040 		.word	1073770496
 3310 012c 6848B101 		.word	28395624
 3311 0130 D34D6210 		.word	274877907
 3312 0134 00000000 		.word	.LC7
 3313              		.cfi_endproc
 3314              	.LFE163:
 3316              		.section	.text.main,"ax",%progbits
 3317              		.align	1
 3318              		.global	main
 3319              		.syntax unified
 3320              		.thumb
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 96


 3321              		.thumb_func
 3322              		.fpu fpv5-sp-d16
 3324              	main:
 3325              	.LFB162:
 282:Src/main.c    ****   /* USER CODE BEGIN 1 */
 3326              		.loc 1 282 0
 3327              		.cfi_startproc
 3328              		@ Volatile: function does not return.
 3329              		@ args = 0, pretend = 0, frame = 24
 3330              		@ frame_needed = 0, uses_anonymous_args = 0
 3331 0000 00B5     		push	{lr}
 3332              	.LCFI67:
 3333              		.cfi_def_cfa_offset 4
 3334              		.cfi_offset 14, -4
 3335 0002 87B0     		sub	sp, sp, #28
 3336              	.LCFI68:
 3337              		.cfi_def_cfa_offset 32
 290:Src/main.c    **** 
 3338              		.loc 1 290 0
 3339 0004 FFF7FEFF 		bl	HAL_Init
 3340              	.LVL199:
 297:Src/main.c    **** 
 3341              		.loc 1 297 0
 3342 0008 FFF7FEFF 		bl	SystemClock_Config
 3343              	.LVL200:
 304:Src/main.c    ****   MX_ADC3_Init();
 3344              		.loc 1 304 0
 3345 000c FFF7FEFF 		bl	MX_GPIO_Init
 3346              	.LVL201:
 305:Src/main.c    ****   MX_CRC_Init();
 3347              		.loc 1 305 0
 3348 0010 FFF7FEFF 		bl	MX_ADC3_Init
 3349              	.LVL202:
 306:Src/main.c    ****   MX_DCMI_Init();
 3350              		.loc 1 306 0
 3351 0014 FFF7FEFF 		bl	MX_CRC_Init
 3352              	.LVL203:
 307:Src/main.c    ****   MX_DMA2D_Init();
 3353              		.loc 1 307 0
 3354 0018 FFF7FEFF 		bl	MX_DCMI_Init
 3355              	.LVL204:
 308:Src/main.c    ****   MX_FMC_Init();
 3356              		.loc 1 308 0
 3357 001c FFF7FEFF 		bl	MX_DMA2D_Init
 3358              	.LVL205:
 309:Src/main.c    ****   MX_I2C1_Init();
 3359              		.loc 1 309 0
 3360 0020 FFF7FEFF 		bl	MX_FMC_Init
 3361              	.LVL206:
 310:Src/main.c    ****   MX_I2C3_Init();
 3362              		.loc 1 310 0
 3363 0024 FFF7FEFF 		bl	MX_I2C1_Init
 3364              	.LVL207:
 311:Src/main.c    ****   MX_LTDC_Init();
 3365              		.loc 1 311 0
 3366 0028 FFF7FEFF 		bl	MX_I2C3_Init
 3367              	.LVL208:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 97


 312:Src/main.c    ****   MX_QUADSPI_Init();
 3368              		.loc 1 312 0
 3369 002c FFF7FEFF 		bl	MX_LTDC_Init
 3370              	.LVL209:
 313:Src/main.c    ****   MX_RTC_Init();
 3371              		.loc 1 313 0
 3372 0030 FFF7FEFF 		bl	MX_QUADSPI_Init
 3373              	.LVL210:
 314:Src/main.c    ****   MX_SAI2_Init();
 3374              		.loc 1 314 0
 3375 0034 FFF7FEFF 		bl	MX_RTC_Init
 3376              	.LVL211:
 315:Src/main.c    ****   MX_SDMMC1_SD_Init();
 3377              		.loc 1 315 0
 3378 0038 FFF7FEFF 		bl	MX_SAI2_Init
 3379              	.LVL212:
 316:Src/main.c    ****   MX_SPDIFRX_Init();
 3380              		.loc 1 316 0
 3381 003c FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 3382              	.LVL213:
 317:Src/main.c    ****   MX_SPI2_Init();
 3383              		.loc 1 317 0
 3384 0040 FFF7FEFF 		bl	MX_SPDIFRX_Init
 3385              	.LVL214:
 318:Src/main.c    ****   MX_TIM1_Init();
 3386              		.loc 1 318 0
 3387 0044 FFF7FEFF 		bl	MX_SPI2_Init
 3388              	.LVL215:
 319:Src/main.c    ****   MX_TIM2_Init();
 3389              		.loc 1 319 0
 3390 0048 FFF7FEFF 		bl	MX_TIM1_Init
 3391              	.LVL216:
 320:Src/main.c    ****   MX_TIM3_Init();
 3392              		.loc 1 320 0
 3393 004c FFF7FEFF 		bl	MX_TIM2_Init
 3394              	.LVL217:
 321:Src/main.c    ****   MX_TIM5_Init();
 3395              		.loc 1 321 0
 3396 0050 FFF7FEFF 		bl	MX_TIM3_Init
 3397              	.LVL218:
 322:Src/main.c    ****   MX_TIM8_Init();
 3398              		.loc 1 322 0
 3399 0054 FFF7FEFF 		bl	MX_TIM5_Init
 3400              	.LVL219:
 323:Src/main.c    ****   MX_TIM12_Init();
 3401              		.loc 1 323 0
 3402 0058 FFF7FEFF 		bl	MX_TIM8_Init
 3403              	.LVL220:
 324:Src/main.c    ****   MX_USART1_UART_Init();
 3404              		.loc 1 324 0
 3405 005c FFF7FEFF 		bl	MX_TIM12_Init
 3406              	.LVL221:
 325:Src/main.c    ****   MX_USART6_UART_Init();
 3407              		.loc 1 325 0
 3408 0060 FFF7FEFF 		bl	MX_USART1_UART_Init
 3409              	.LVL222:
 326:Src/main.c    ****   MX_TIM7_Init();
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 98


 3410              		.loc 1 326 0
 3411 0064 FFF7FEFF 		bl	MX_USART6_UART_Init
 3412              	.LVL223:
 327:Src/main.c    ****   /* USER CODE BEGIN 2 */
 3413              		.loc 1 327 0
 3414 0068 FFF7FEFF 		bl	MX_TIM7_Init
 3415              	.LVL224:
 329:Src/main.c    **** 
 3416              		.loc 1 329 0
 3417 006c 0E48     		ldr	r0, .L259
 3418 006e FFF7FEFF 		bl	debug_init
 3419              	.LVL225:
 331:Src/main.c    **** 
 3420              		.loc 1 331 0
 3421 0072 0E48     		ldr	r0, .L259+4
 3422 0074 FFF7FEFF 		bl	xprintf
 3423              	.LVL226:
 333:Src/main.c    **** 
 3424              		.loc 1 333 0
 3425 0078 0D48     		ldr	r0, .L259+8
 3426 007a FFF7FEFF 		bl	puts
 3427              	.LVL227:
 335:Src/main.c    **** draw_background();
 3428              		.loc 1 335 0
 3429 007e FFF7FEFF 		bl	lcd_start
 3430              	.LVL228:
 336:Src/main.c    **** initialize_touchscreen();
 3431              		.loc 1 336 0
 3432 0082 FFF7FEFF 		bl	draw_background
 3433              	.LVL229:
 337:Src/main.c    **** 
 3434              		.loc 1 337 0
 3435 0086 FFF7FEFF 		bl	initialize_touchscreen
 3436              	.LVL230:
 355:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 3437              		.loc 1 355 0
 3438 008a 01AC     		add	r4, sp, #4
 3439 008c 094D     		ldr	r5, .L259+12
 3440 008e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3441 0090 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3442 0092 2B68     		ldr	r3, [r5]
 3443 0094 2360     		str	r3, [r4]
 356:Src/main.c    **** 
 3444              		.loc 1 356 0
 3445 0096 0021     		movs	r1, #0
 3446 0098 01A8     		add	r0, sp, #4
 3447 009a FFF7FEFF 		bl	osThreadCreate
 3448              	.LVL231:
 3449 009e 064B     		ldr	r3, .L259+16
 3450 00a0 1860     		str	r0, [r3]
 368:Src/main.c    ****   
 3451              		.loc 1 368 0
 3452 00a2 FFF7FEFF 		bl	osKernelStart
 3453              	.LVL232:
 3454              	.L257:
 3455 00a6 FEE7     		b	.L257
 3456              	.L260:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 99


 3457              		.align	2
 3458              	.L259:
 3459 00a8 00000000 		.word	huart1
 3460 00ac 00000000 		.word	.LC8
 3461 00b0 2C000000 		.word	.LC9
 3462 00b4 00000000 		.word	.LANCHOR1
 3463 00b8 00000000 		.word	defaultTaskHandle
 3464              		.cfi_endproc
 3465              	.LFE162:
 3467              		.comm	netconn_thread_handle,4,4
 3468              		.comm	defaultTaskHandle,4,4
 3469              		.comm	hsdram1,52,4
 3470              		.comm	huart6,112,4
 3471              		.comm	huart1,112,4
 3472              		.comm	htim12,64,4
 3473              		.comm	htim8,64,4
 3474              		.comm	htim7,64,4
 3475              		.comm	htim5,64,4
 3476              		.comm	htim3,64,4
 3477              		.comm	htim2,64,4
 3478              		.comm	htim1,64,4
 3479              		.comm	hspi2,100,4
 3480              		.comm	hspdif,76,4
 3481              		.comm	hsd1,132,4
 3482              		.comm	hsai_BlockB2,132,4
 3483              		.comm	hsai_BlockA2,132,4
 3484              		.comm	hrtc,32,4
 3485              		.comm	hqspi,76,4
 3486              		.comm	hltdc,168,4
 3487              		.comm	hi2c3,76,4
 3488              		.comm	hi2c1,76,4
 3489              		.comm	hdma2d,64,4
 3490              		.comm	hdcmi,80,4
 3491              		.comm	hcrc,36,4
 3492              		.comm	hadc3,72,4
 3493              		.section	.rodata
 3494              		.align	2
 3495              		.set	.LANCHOR1,. + 0
 3496              	.LC10:
 3497 0000 00000000 		.word	.LC0
 3498 0004 00000000 		.word	StartDefaultTask
 3499 0008 0000     		.short	0
 3500 000a 0000     		.space	2
 3501 000c 00000000 		.word	0
 3502 0010 00100000 		.word	4096
 3503              		.section	.bss.file,"aw",%nobits
 3504              		.align	2
 3505              		.set	.LANCHOR0,. + 0
 3508              	file:
 3509 0000 00000000 		.space	560
 3509      00000000 
 3509      00000000 
 3509      00000000 
 3509      00000000 
 3510              		.section	.rodata.MX_ADC3_Init.str1.4,"aMS",%progbits,1
 3511              		.align	2
 3512              	.LC7:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 100


 3513 0000 5372632F 		.ascii	"Src/main.c\000"
 3513      6D61696E 
 3513      2E6300
 3514              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 3515              		.align	2
 3516              	.LC2:
 3517 0000 77616974 		.ascii	"waiting for USB mass storage\012\000"
 3517      696E6720 
 3517      666F7220 
 3517      55534220 
 3517      6D617373 
 3518 001e 0000     		.space	2
 3519              	.LC3:
 3520 0020 2E00     		.ascii	".\000"
 3521 0022 0000     		.space	2
 3522              	.LC4:
 3523 0024 74657374 		.ascii	"test.mp3\000"
 3523      2E6D7033 
 3523      00
 3524 002d 000000   		.space	3
 3525              	.LC5:
 3526 0030 77617665 		.ascii	"wave file open OK\012\000"
 3526      2066696C 
 3526      65206F70 
 3526      656E204F 
 3526      4B0A00
 3527 0043 00       		.space	1
 3528              	.LC6:
 3529 0044 77617665 		.ascii	"wave file open ERROR, res = %d\012\000"
 3529      2066696C 
 3529      65206F70 
 3529      656E2045 
 3529      52524F52 
 3530              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 3531              		.align	2
 3532              	.LC8:
 3533 0000 1B5B303B 		.ascii	"\033[0;32mSTM32F746 Discovery Project\033[0;39m\012"
 3533      33326D53 
 3533      544D3332 
 3533      46373436 
 3533      20446973 
 3534 002a 00       		.ascii	"\000"
 3535 002b 00       		.space	1
 3536              	.LC9:
 3537 002c 52656775 		.ascii	"Regular printf\000"
 3537      6C617220 
 3537      7072696E 
 3537      746600
 3538              		.section	.rodata.str1.4,"aMS",%progbits,1
 3539              		.align	2
 3540              	.LC0:
 3541 0000 64656661 		.ascii	"defaultTask\000"
 3541      756C7454 
 3541      61736B00 
 3542              		.text
 3543              	.Letext0:
 3544              		.file 2 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 101


 3545              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 3546              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 3547              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 3548              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 3549              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 3550              		.file 8 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 3551              		.file 9 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 3552              		.file 10 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 3553              		.file 11 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 3554              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3555              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 3556              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 3557              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 3558              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 3559              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 3560              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_crc.h"
 3561              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma2d.h"
 3562              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dcmi.h"
 3563              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 3564              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_fmc.h"
 3565              		.file 23 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sdram.h"
 3566              		.file 24 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 3567              		.file 25 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_ltdc.h"
 3568              		.file 26 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_qspi.h"
 3569              		.file 27 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 3570              		.file 28 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sai.h"
 3571              		.file 29 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 3572              		.file 30 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 3573              		.file 31 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spdifrx.h"
 3574              		.file 32 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 3575              		.file 33 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 3576              		.file 34 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 3577              		.file 35 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 3578              		.file 36 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3579              		.file 37 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 3580              		.file 38 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 3581              		.file 39 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 3582              		.file 40 "Middlewares/Third_Party/FatFs/src/integer.h"
 3583              		.file 41 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdlib.h"
 3584              		.file 42 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 3585              		.file 43 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 3586              		.file 44 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 3587              		.file 45 "Middlewares/Third_Party/FatFs/src/ff.h"
 3588              		.file 46 "Middlewares/Third_Party/FatFs/src/diskio.h"
 3589              		.file 47 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 3590              		.file 48 "Inc/sd_diskio.h"
 3591              		.file 49 "Inc/usbh_diskio.h"
 3592              		.file 50 "Inc/fatfs.h"
 3593              		.file 51 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\time.h"
 3594              		.file 52 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 3595              		.file 53 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 3596              		.file 54 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 3597              		.file 55 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 3598              		.file 56 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 3599              		.file 57 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 3600              		.file 58 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 3601              		.file 59 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 102


 3602              		.file 60 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ip4.h"
 3603              		.file 61 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 3604              		.file 62 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 3605              		.file 63 "Middlewares/Third_Party/LwIP/src/include/lwip/ip.h"
 3606              		.file 64 "Middlewares/Third_Party/LwIP/src/include/lwip/udp.h"
 3607              		.file 65 "Middlewares/Third_Party/LwIP/system/arch/sys_arch.h"
 3608              		.file 66 "Middlewares/Third_Party/LwIP/src/include/lwip/timeouts.h"
 3609              		.file 67 "Middlewares/Third_Party/LwIP/src/include/lwip/tcpip.h"
 3610              		.file 68 "Inc/lwip.h"
 3611              		.file 69 "Inc/usb_host.h"
 3612              		.file 70 "Middlewares/Third_Party/LwIP/src/include/lwip/errno.h"
 3613              		.file 71 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\unistd.h"
 3614              		.file 72 "Drivers/BSP/STM32746G-Discovery/../../../Utilities/Fonts/fonts.h"
 3615              		.file 73 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/../Common/ts.h"
 3616              		.file 74 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/ft5336.h"
 3617              		.file 75 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_ts.h"
 3618              		.file 76 "Drivers/BSP/STM32746G-Discovery/../Components/wm8994/../Common/audio.h"
 3619              		.file 77 "Drivers/BSP/STM32746G-Discovery/../Components/wm8994/wm8994.h"
 3620              		.file 78 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_audio.h"
 3621              		.file 79 "Middlewares/Third_Party/LwIP/src/include/lwip/inet.h"
 3622              		.file 80 "Middlewares/Third_Party/LwIP/src/include/lwip/netdb.h"
 3623              		.file 81 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 3624              		.file 82 "Inc/term_io.h"
 3625              		.file 83 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
 3626              		.file 84 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c_ex.h"
 3627              		.file 85 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 3628              		.file 86 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 3629              		.file 87 "Inc/dbgu.h"
 3630              		.file 88 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_lcd.h"
 3631              		.file 89 "<built-in>"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 103


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:18     .text.MX_SDMMC1_SD_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:24     .text.MX_SDMMC1_SD_Init:00000000 MX_SDMMC1_SD_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:53     .text.MX_SDMMC1_SD_Init:00000018 $d
                            *COM*:00000084 hsd1
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:59     .text.MX_GPIO_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:65     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:474    .text.MX_GPIO_Init:00000270 $d
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:490    .text.lcd_start:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:496    .text.lcd_start:00000000 lcd_start
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:566    .text.lcd_start:00000064 $d
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:571    .text.StartDefaultTask:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:578    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:646    .text.StartDefaultTask:0000004c $d
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:657    .text.__io_putchar:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:664    .text.__io_putchar:00000000 __io_putchar
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:689    .text.__io_putchar:00000014 $d
                            *COM*:00000070 huart1
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:694    .text.inkey:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:701    .text.inkey:00000000 inkey
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:733    .text.inkey:0000001c $d
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:738    .text.draw_background:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:745    .text.draw_background:00000000 draw_background
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:780    .text.initialize_touchscreen:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:787    .text.initialize_touchscreen:00000000 initialize_touchscreen
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:826    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:833    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:863    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:868    .text._Error_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:875    .text._Error_Handler:00000000 _Error_Handler
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:890    .text.MX_ADC3_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:896    .text.MX_ADC3_Init:00000000 MX_ADC3_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:983    .text.MX_ADC3_Init:00000060 $d
                            *COM*:00000048 hadc3
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:991    .text.MX_CRC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:997    .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1038   .text.MX_CRC_Init:00000028 $d
                            *COM*:00000024 hcrc
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1045   .text.MX_DCMI_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1051   .text.MX_DCMI_Init:00000000 MX_DCMI_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1103   .text.MX_DCMI_Init:00000034 $d
                            *COM*:00000050 hdcmi
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1110   .text.MX_DMA2D_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1116   .text.MX_DMA2D_Init:00000000 MX_DMA2D_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1172   .text.MX_DMA2D_Init:00000040 $d
                            *COM*:00000040 hdma2d
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1179   .text.MX_FMC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1185   .text.MX_FMC_Init:00000000 MX_FMC_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1269   .text.MX_FMC_Init:00000060 $d
                            *COM*:00000034 hsdram1
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1276   .text.MX_I2C1_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1282   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1354   .text.MX_I2C1_Init:00000058 $d
                            *COM*:0000004c hi2c1
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1362   .text.MX_I2C3_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1368   .text.MX_I2C3_Init:00000000 MX_I2C3_Init
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 104


C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1440   .text.MX_I2C3_Init:00000058 $d
                            *COM*:0000004c hi2c3
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1448   .text.MX_LTDC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1454   .text.MX_LTDC_Init:00000000 MX_LTDC_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1581   .text.MX_LTDC_Init:000000ac $d
                            *COM*:000000a8 hltdc
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1588   .text.MX_QUADSPI_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1594   .text.MX_QUADSPI_Init:00000000 MX_QUADSPI_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1642   .text.MX_QUADSPI_Init:00000030 $d
                            *COM*:0000004c hqspi
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1649   .text.MX_RTC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1655   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1826   .text.MX_RTC_Init:000000f8 $d
                            *COM*:00000020 hrtc
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1833   .text.MX_SAI2_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1839   .text.MX_SAI2_Init:00000000 MX_SAI2_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1980   .text.MX_SAI2_Init:0000009c $d
                            *COM*:00000084 hsai_BlockA2
                            *COM*:00000084 hsai_BlockB2
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1990   .text.MX_SPDIFRX_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:1996   .text.MX_SPDIFRX_Init:00000000 MX_SPDIFRX_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2046   .text.MX_SPDIFRX_Init:00000034 $d
                            *COM*:0000004c hspdif
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2052   .text.MX_SPI2_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2058   .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2119   .text.MX_SPI2_Init:00000048 $d
                            *COM*:00000064 hspi2
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2126   .text.MX_TIM1_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2132   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2303   .text.MX_TIM1_Init:000000e4 $d
                            *COM*:00000040 htim1
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2310   .text.MX_TIM2_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2316   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2435   .text.MX_TIM2_Init:0000009c $d
                            *COM*:00000040 htim2
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2441   .text.MX_TIM3_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2447   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2566   .text.MX_TIM3_Init:0000009c $d
                            *COM*:00000040 htim3
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2573   .text.MX_TIM5_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2579   .text.MX_TIM5_Init:00000000 MX_TIM5_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2699   .text.MX_TIM5_Init:0000009c $d
                            *COM*:00000040 htim5
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2706   .text.MX_TIM8_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2712   .text.MX_TIM8_Init:00000000 MX_TIM8_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2798   .text.MX_TIM8_Init:00000068 $d
                            *COM*:00000040 htim8
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2805   .text.MX_TIM12_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2811   .text.MX_TIM12_Init:00000000 MX_TIM12_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2887   .text.MX_TIM12_Init:00000054 $d
                            *COM*:00000040 htim12
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2894   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2900   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2950   .text.MX_USART1_UART_Init:00000034 $d
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2957   .text.MX_USART6_UART_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:2963   .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3013   .text.MX_USART6_UART_Init:00000034 $d
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 105


                            *COM*:00000070 huart6
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3020   .text.MX_TIM7_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3026   .text.MX_TIM7_Init:00000000 MX_TIM7_Init
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3091   .text.MX_TIM7_Init:00000044 $d
                            *COM*:00000040 htim7
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3098   .text.SystemClock_Config:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3105   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3308   .text.SystemClock_Config:00000124 $d
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3317   .text.main:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3324   .text.main:00000000 main
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3459   .text.main:000000a8 $d
                            *COM*:00000004 defaultTaskHandle
                            *COM*:00000004 netconn_thread_handle
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3494   .rodata:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3504   .bss.file:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3508   .bss.file:00000000 file
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3511   .rodata.MX_ADC3_Init.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3515   .rodata.StartDefaultTask.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3531   .rodata.main.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s:3539   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
BSP_LCD_Init
BSP_LCD_LayerDefaultInit
BSP_LCD_DisplayOn
BSP_LCD_SelectLayer
BSP_LCD_Clear
BSP_LCD_SetBackColor
BSP_LCD_SetColorKeying
BSP_LCD_SetTransparency
MX_FATFS_Init
MX_USB_HOST_Init
vTaskDelay
xprintf
f_open
Appli_state
BSP_LCD_SetTextColor
BSP_LCD_FillRect
BSP_LCD_GetXSize
BSP_LCD_GetYSize
BSP_TS_Init
HAL_IncTick
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CRC_Init
HAL_DCMI_Init
HAL_DMA2D_Init
HAL_DMA2D_ConfigLayer
HAL_SDRAM_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_LTDC_Init
HAL_LTDC_ConfigLayer
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccSqNQr0.s 			page 106


HAL_QSPI_Init
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RTC_SetAlarm
HAL_RTCEx_SetTimeStamp
HAL_SAI_Init
HAL_SPDIFRX_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
debug_init
puts
osThreadCreate
osKernelStart
