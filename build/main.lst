ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	MX_SDMMC1_SD_Init:
  25              	.LFB176:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  32:Src/main.c    ****   *    this license. 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 2


  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  50:Src/main.c    **** #include "main.h"
  51:Src/main.c    **** #include "stm32f7xx_hal.h"
  52:Src/main.c    **** #include "cmsis_os.h"
  53:Src/main.c    **** #include "fatfs.h"
  54:Src/main.c    **** #include "lwip.h"
  55:Src/main.c    **** #include "usb_host.h"
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE BEGIN Includes */
  58:Src/main.c    **** #include "mp3_player.h"
  59:Src/main.c    **** 
  60:Src/main.c    **** #include  <errno.h>
  61:Src/main.c    **** #include  <sys/unistd.h>
  62:Src/main.c    **** 
  63:Src/main.c    **** #include "stm32746g_discovery_lcd.h"
  64:Src/main.c    **** #include "Utilities/Fonts/fonts.h"
  65:Src/main.c    **** #include "stm32746g_discovery_ts.h"
  66:Src/main.c    **** #include "stm32746g_discovery_audio.h"
  67:Src/main.c    **** #include "term_io.h"
  68:Src/main.c    **** #include "dbgu.h"
  69:Src/main.c    **** #include "ansi.h"
  70:Src/main.c    **** 
  71:Src/main.c    **** #include "FreeRTOS.h"
  72:Src/main.c    **** #include "task.h"
  73:Src/main.c    **** #include "queue.h"
  74:Src/main.c    **** 
  75:Src/main.c    **** #include "lwip/opt.h"
  76:Src/main.c    **** #include "lwip/api.h"
  77:Src/main.c    **** #include "lwip/apps/fs.h"
  78:Src/main.c    **** #include "lwip/dhcp.h"
  79:Src/main.c    **** #include "lwip/tcpip.h"
  80:Src/main.c    **** #include "lwip/netdb.h"
  81:Src/main.c    **** #include "lwip/sockets.h"
  82:Src/main.c    **** 
  83:Src/main.c    **** #include "lwip.h"
  84:Src/main.c    **** 
  85:Src/main.c    **** #include "wm8994/wm8994.h"
  86:Src/main.c    **** 
  87:Src/main.c    **** 
  88:Src/main.c    **** 
  89:Src/main.c    **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 3


  90:Src/main.c    **** /* USER CODE END Includes */
  91:Src/main.c    **** 
  92:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  93:Src/main.c    **** ADC_HandleTypeDef hadc3;
  94:Src/main.c    **** 
  95:Src/main.c    **** CRC_HandleTypeDef hcrc;
  96:Src/main.c    **** 
  97:Src/main.c    **** DCMI_HandleTypeDef hdcmi;
  98:Src/main.c    **** 
  99:Src/main.c    **** DMA2D_HandleTypeDef hdma2d;
 100:Src/main.c    **** 
 101:Src/main.c    **** I2C_HandleTypeDef hi2c1;
 102:Src/main.c    **** I2C_HandleTypeDef hi2c3;
 103:Src/main.c    **** 
 104:Src/main.c    **** LTDC_HandleTypeDef hltdc;
 105:Src/main.c    **** 
 106:Src/main.c    **** QSPI_HandleTypeDef hqspi;
 107:Src/main.c    **** 
 108:Src/main.c    **** RTC_HandleTypeDef hrtc;
 109:Src/main.c    **** 
 110:Src/main.c    **** SAI_HandleTypeDef hsai_BlockA2;
 111:Src/main.c    **** SAI_HandleTypeDef hsai_BlockB2;
 112:Src/main.c    **** 
 113:Src/main.c    **** SD_HandleTypeDef hsd1;
 114:Src/main.c    **** 
 115:Src/main.c    **** SPDIFRX_HandleTypeDef hspdif;
 116:Src/main.c    **** 
 117:Src/main.c    **** SPI_HandleTypeDef hspi2;
 118:Src/main.c    **** 
 119:Src/main.c    **** TIM_HandleTypeDef htim1;
 120:Src/main.c    **** TIM_HandleTypeDef htim2;
 121:Src/main.c    **** TIM_HandleTypeDef htim3;
 122:Src/main.c    **** TIM_HandleTypeDef htim5;
 123:Src/main.c    **** TIM_HandleTypeDef htim7;
 124:Src/main.c    **** TIM_HandleTypeDef htim8;
 125:Src/main.c    **** TIM_HandleTypeDef htim12;
 126:Src/main.c    **** 
 127:Src/main.c    **** UART_HandleTypeDef huart1;
 128:Src/main.c    **** UART_HandleTypeDef huart6;
 129:Src/main.c    **** 
 130:Src/main.c    **** SDRAM_HandleTypeDef hsdram1;
 131:Src/main.c    **** 
 132:Src/main.c    **** osThreadId defaultTaskHandle;
 133:Src/main.c    **** 
 134:Src/main.c    **** /* USER CODE BEGIN PV */
 135:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
 136:Src/main.c    **** 
 137:Src/main.c    **** /* USER CODE END PV */
 138:Src/main.c    **** 
 139:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 140:Src/main.c    **** void SystemClock_Config(void);
 141:Src/main.c    **** static void MX_GPIO_Init(void);
 142:Src/main.c    **** static void MX_ADC3_Init(void);
 143:Src/main.c    **** static void MX_CRC_Init(void);
 144:Src/main.c    **** static void MX_DCMI_Init(void);
 145:Src/main.c    **** static void MX_DMA2D_Init(void);
 146:Src/main.c    **** static void MX_FMC_Init(void);
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 4


 147:Src/main.c    **** static void MX_I2C1_Init(void);
 148:Src/main.c    **** static void MX_I2C3_Init(void);
 149:Src/main.c    **** static void MX_LTDC_Init(void);
 150:Src/main.c    **** static void MX_QUADSPI_Init(void);
 151:Src/main.c    **** static void MX_RTC_Init(void);
 152:Src/main.c    **** static void MX_SAI2_Init(void);
 153:Src/main.c    **** static void MX_SDMMC1_SD_Init(void);
 154:Src/main.c    **** static void MX_SPDIFRX_Init(void);
 155:Src/main.c    **** static void MX_SPI2_Init(void);
 156:Src/main.c    **** static void MX_TIM1_Init(void);
 157:Src/main.c    **** static void MX_TIM2_Init(void);
 158:Src/main.c    **** static void MX_TIM3_Init(void);
 159:Src/main.c    **** static void MX_TIM5_Init(void);
 160:Src/main.c    **** static void MX_TIM8_Init(void);
 161:Src/main.c    **** static void MX_TIM12_Init(void);
 162:Src/main.c    **** static void MX_USART1_UART_Init(void);
 163:Src/main.c    **** static void MX_USART6_UART_Init(void);
 164:Src/main.c    **** static void MX_TIM7_Init(void);
 165:Src/main.c    **** void StartDefaultTask(void const * argument);
 166:Src/main.c    **** 
 167:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
 168:Src/main.c    ****                                 
 169:Src/main.c    ****                                 
 170:Src/main.c    ****                                 
 171:Src/main.c    ****                                 
 172:Src/main.c    **** 
 173:Src/main.c    **** /* USER CODE BEGIN PFP */
 174:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 175:Src/main.c    **** 
 176:Src/main.c    **** /* USER CODE END PFP */
 177:Src/main.c    **** 
 178:Src/main.c    **** /* USER CODE BEGIN 0 */
 179:Src/main.c    **** void mainTask(void* p);
 180:Src/main.c    **** 
 181:Src/main.c    **** osThreadId netconn_thread_handle;
 182:Src/main.c    **** 
 183:Src/main.c    **** #define LCD_X_SIZE			RK043FN48H_WIDTH
 184:Src/main.c    **** #define LCD_Y_SIZE			RK043FN48H_HEIGHT
 185:Src/main.c    **** 
 186:Src/main.c    **** #define PRINTF_USES_HAL_TX		0
 187:Src/main.c    **** 
 188:Src/main.c    **** int __io_putchar(int ch)
 189:Src/main.c    **** {
 190:Src/main.c    **** 	uint8_t data = ch;
 191:Src/main.c    **** 	#if PRINTF_USES_HAL_TX
 192:Src/main.c    **** 		HAL_StatusTypeDef status = HAL_UART_Transmit(&huart1, (uint8_t*)&data, len, 100);	
 193:Src/main.c    **** 	#else
 194:Src/main.c    **** 		while(__HAL_UART_GET_FLAG(&huart1, UART_FLAG_TXE) == RESET) { ; }
 195:Src/main.c    **** 		huart1.Instance->TDR = (uint16_t)data;
 196:Src/main.c    **** 	#endif
 197:Src/main.c    **** 	return 0;
 198:Src/main.c    **** }
 199:Src/main.c    **** 
 200:Src/main.c    **** char inkey(void)
 201:Src/main.c    **** {
 202:Src/main.c    **** 	uint32_t flags = huart1.Instance->ISR;
 203:Src/main.c    **** 	
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 5


 204:Src/main.c    **** 	if((flags & UART_FLAG_RXNE) || (flags & UART_FLAG_ORE))
 205:Src/main.c    **** 	{
 206:Src/main.c    **** 		__HAL_UART_CLEAR_OREFLAG(&huart1);
 207:Src/main.c    **** 		return (huart1.Instance->RDR);
 208:Src/main.c    **** 	}
 209:Src/main.c    **** 	else
 210:Src/main.c    **** 		return 0;
 211:Src/main.c    **** }
 212:Src/main.c    **** 
 213:Src/main.c    **** //partially based on available code examples
 214:Src/main.c    **** static void lcd_start(void)
 215:Src/main.c    **** {
 216:Src/main.c    ****   /* LCD Initialization */ 
 217:Src/main.c    ****   BSP_LCD_Init();
 218:Src/main.c    **** 
 219:Src/main.c    ****   /* LCD Initialization */ 
 220:Src/main.c    ****   BSP_LCD_LayerDefaultInit(0, (unsigned int)0xC0000000);
 221:Src/main.c    ****   //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
 222:Src/main.c    ****   BSP_LCD_LayerDefaultInit(1, (unsigned int)0xC0000000+(LCD_X_SIZE*LCD_Y_SIZE*4));
 223:Src/main.c    **** 
 224:Src/main.c    ****   /* Enable the LCD */ 
 225:Src/main.c    ****   BSP_LCD_DisplayOn(); 
 226:Src/main.c    ****   
 227:Src/main.c    ****   /* Select the LCD Background Layer  */
 228:Src/main.c    ****   BSP_LCD_SelectLayer(0);
 229:Src/main.c    **** 
 230:Src/main.c    ****   /* Clear the Background Layer */ 
 231:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
 232:Src/main.c    ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 233:Src/main.c    ****   
 234:Src/main.c    ****   BSP_LCD_SetColorKeying(1,LCD_COLOR_WHITE);
 235:Src/main.c    ****   
 236:Src/main.c    ****   /* Select the LCD Foreground Layer  */
 237:Src/main.c    ****   BSP_LCD_SelectLayer(1);
 238:Src/main.c    **** 
 239:Src/main.c    ****   /* Clear the Foreground Layer */ 
 240:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
 241:Src/main.c    ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 242:Src/main.c    ****   
 243:Src/main.c    ****   /* Configure the transparency for foreground and background :
 244:Src/main.c    ****      Increase the transparency */
 245:Src/main.c    ****   BSP_LCD_SetTransparency(0, 255);
 246:Src/main.c    ****   BSP_LCD_SetTransparency(1, 255);
 247:Src/main.c    **** }
 248:Src/main.c    **** 
 249:Src/main.c    **** //[rmv]
 250:Src/main.c    **** void draw_background(void)
 251:Src/main.c    **** {
 252:Src/main.c    **** 	/* Select the LCD Background Layer  */
 253:Src/main.c    **** 	BSP_LCD_SelectLayer(0);
 254:Src/main.c    **** 	BSP_LCD_SetTextColor(LCD_COLOR_GREEN);
 255:Src/main.c    **** 	BSP_LCD_FillRect(0.4*LCD_X_SIZE,0.2*LCD_Y_SIZE,150,130);
 256:Src/main.c    **** 	
 257:Src/main.c    **** 	//select Foreground Layer
 258:Src/main.c    **** 	BSP_LCD_SelectLayer(1);
 259:Src/main.c    **** }
 260:Src/main.c    **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 6


 261:Src/main.c    **** static TS_StateTypeDef  TS_State;
 262:Src/main.c    **** 
 263:Src/main.c    **** 
 264:Src/main.c    **** int initialize_touchscreen(void)
 265:Src/main.c    **** {
 266:Src/main.c    **** 	uint8_t  status = 0;
 267:Src/main.c    **** 	status = BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
 268:Src/main.c    **** 	if(status != TS_OK) return -1;
 269:Src/main.c    **** 	return 0;
 270:Src/main.c    **** }
 271:Src/main.c    **** 
 272:Src/main.c    **** 
 273:Src/main.c    **** 
 274:Src/main.c    **** /* USER CODE END 0 */
 275:Src/main.c    **** 
 276:Src/main.c    **** /**
 277:Src/main.c    ****   * @brief  The application entry point.
 278:Src/main.c    ****   *
 279:Src/main.c    ****   * @retval None
 280:Src/main.c    ****   */
 281:Src/main.c    **** int main(void)
 282:Src/main.c    **** {
 283:Src/main.c    ****   /* USER CODE BEGIN 1 */
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE END 1 */
 286:Src/main.c    **** 
 287:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 288:Src/main.c    **** 
 289:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 290:Src/main.c    ****   HAL_Init();
 291:Src/main.c    **** 
 292:Src/main.c    ****   /* USER CODE BEGIN Init */
 293:Src/main.c    **** 
 294:Src/main.c    ****   /* USER CODE END Init */
 295:Src/main.c    **** 
 296:Src/main.c    ****   /* Configure the system clock */
 297:Src/main.c    ****   SystemClock_Config();
 298:Src/main.c    **** 
 299:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 300:Src/main.c    **** 
 301:Src/main.c    ****   /* USER CODE END SysInit */
 302:Src/main.c    **** 
 303:Src/main.c    ****   /* Initialize all configured peripherals */
 304:Src/main.c    ****   MX_GPIO_Init();
 305:Src/main.c    ****   MX_ADC3_Init();
 306:Src/main.c    ****   MX_CRC_Init();
 307:Src/main.c    ****   MX_DCMI_Init();
 308:Src/main.c    ****   MX_DMA2D_Init();
 309:Src/main.c    ****   MX_FMC_Init();
 310:Src/main.c    ****   MX_I2C1_Init();
 311:Src/main.c    ****   MX_I2C3_Init();
 312:Src/main.c    ****   MX_LTDC_Init();
 313:Src/main.c    ****   MX_QUADSPI_Init();
 314:Src/main.c    ****   MX_RTC_Init();
 315:Src/main.c    ****   MX_SAI2_Init();
 316:Src/main.c    ****   MX_SDMMC1_SD_Init();
 317:Src/main.c    ****   MX_SPDIFRX_Init();
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 7


 318:Src/main.c    ****   MX_SPI2_Init();
 319:Src/main.c    ****   MX_TIM1_Init();
 320:Src/main.c    ****   MX_TIM2_Init();
 321:Src/main.c    ****   MX_TIM3_Init();
 322:Src/main.c    ****   MX_TIM5_Init();
 323:Src/main.c    ****   MX_TIM8_Init();
 324:Src/main.c    ****   MX_TIM12_Init();
 325:Src/main.c    ****   MX_USART1_UART_Init();
 326:Src/main.c    ****   MX_USART6_UART_Init();
 327:Src/main.c    ****   MX_TIM7_Init();
 328:Src/main.c    ****   /* USER CODE BEGIN 2 */
 329:Src/main.c    ****   debug_init(&huart1);
 330:Src/main.c    **** 
 331:Src/main.c    ****   xprintf(ANSI_FG_GREEN "STM32F746 Discovery Project" ANSI_FG_DEFAULT "\n");
 332:Src/main.c    **** 
 333:Src/main.c    ****   printf("Regular printf\n");
 334:Src/main.c    **** 
 335:Src/main.c    **** lcd_start();
 336:Src/main.c    **** draw_background();
 337:Src/main.c    **** initialize_touchscreen();
 338:Src/main.c    **** 
 339:Src/main.c    ****   /* USER CODE END 2 */
 340:Src/main.c    **** 
 341:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 342:Src/main.c    ****   /* add mutexes, ... */
 343:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 344:Src/main.c    **** 
 345:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 346:Src/main.c    ****   /* add semaphores, ... */
 347:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 350:Src/main.c    ****   /* start timers, add new ones, ... */
 351:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 352:Src/main.c    **** 
 353:Src/main.c    ****   /* Create the thread(s) */
 354:Src/main.c    ****   /* definition and creation of defaultTask */
 355:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 4096);
 356:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 357:Src/main.c    **** 
 358:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 359:Src/main.c    ****   /* add threads, ... */
 360:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 361:Src/main.c    **** 
 362:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 363:Src/main.c    ****   /* add queues, ... */
 364:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 365:Src/main.c    ****  
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* Start scheduler */
 368:Src/main.c    ****   osKernelStart();
 369:Src/main.c    ****   
 370:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 371:Src/main.c    **** 
 372:Src/main.c    ****   /* Infinite loop */
 373:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 374:Src/main.c    ****   while (1)
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 8


 375:Src/main.c    ****   {
 376:Src/main.c    **** 
 377:Src/main.c    ****   /* USER CODE END WHILE */
 378:Src/main.c    **** 
 379:Src/main.c    ****   /* USER CODE BEGIN 3 */
 380:Src/main.c    **** 
 381:Src/main.c    ****   }
 382:Src/main.c    ****   /* USER CODE END 3 */
 383:Src/main.c    **** 
 384:Src/main.c    **** }
 385:Src/main.c    **** 
 386:Src/main.c    **** /**
 387:Src/main.c    ****   * @brief System Clock Configuration
 388:Src/main.c    ****   * @retval None
 389:Src/main.c    ****   */
 390:Src/main.c    **** void SystemClock_Config(void)
 391:Src/main.c    **** {
 392:Src/main.c    **** 
 393:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 394:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 395:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 396:Src/main.c    **** 
 397:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 398:Src/main.c    ****     */
 399:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 400:Src/main.c    **** 
 401:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 402:Src/main.c    **** 
 403:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 404:Src/main.c    ****     */
 405:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 406:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 407:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 408:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 409:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 410:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 411:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 412:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 413:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 414:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 415:Src/main.c    ****   {
 416:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 417:Src/main.c    ****   }
 418:Src/main.c    **** 
 419:Src/main.c    ****     /**Activate the Over-Drive mode 
 420:Src/main.c    ****     */
 421:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 422:Src/main.c    ****   {
 423:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 424:Src/main.c    ****   }
 425:Src/main.c    **** 
 426:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 427:Src/main.c    ****     */
 428:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 429:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 430:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 431:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 9


 432:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 433:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 434:Src/main.c    **** 
 435:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 436:Src/main.c    ****   {
 437:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 438:Src/main.c    ****   }
 439:Src/main.c    **** 
 440:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPDIFRX|RCC_PERIPHCLK_LTDC
 441:Src/main.c    ****                               |RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART1
 442:Src/main.c    ****                               |RCC_PERIPHCLK_USART6|RCC_PERIPHCLK_SAI2
 443:Src/main.c    ****                               |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_I2C3
 444:Src/main.c    ****                               |RCC_PERIPHCLK_SDMMC1|RCC_PERIPHCLK_CLK48;
 445:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 100;
 446:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 447:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 448:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 449:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 450:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 451:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 452:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
 453:Src/main.c    ****   PeriphClkInitStruct.PLLI2SDivQ = 1;
 454:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 455:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 456:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 457:Src/main.c    ****   PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 458:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 459:Src/main.c    ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 460:Src/main.c    ****   PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 461:Src/main.c    ****   PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 462:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 463:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 464:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 465:Src/main.c    ****   {
 466:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 467:Src/main.c    ****   }
 468:Src/main.c    **** 
 469:Src/main.c    ****     /**Configure the Systick interrupt time 
 470:Src/main.c    ****     */
 471:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 472:Src/main.c    **** 
 473:Src/main.c    ****     /**Configure the Systick 
 474:Src/main.c    ****     */
 475:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 476:Src/main.c    **** 
 477:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 478:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 479:Src/main.c    **** }
 480:Src/main.c    **** 
 481:Src/main.c    **** /* ADC3 init function */
 482:Src/main.c    **** static void MX_ADC3_Init(void)
 483:Src/main.c    **** {
 484:Src/main.c    **** 
 485:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 486:Src/main.c    **** 
 487:Src/main.c    ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 488:Src/main.c    ****     */
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 10


 489:Src/main.c    ****   hadc3.Instance = ADC3;
 490:Src/main.c    ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 491:Src/main.c    ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 492:Src/main.c    ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 493:Src/main.c    ****   hadc3.Init.ContinuousConvMode = DISABLE;
 494:Src/main.c    ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 495:Src/main.c    ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 496:Src/main.c    ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 497:Src/main.c    ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 498:Src/main.c    ****   hadc3.Init.NbrOfConversion = 1;
 499:Src/main.c    ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 500:Src/main.c    ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 501:Src/main.c    ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 502:Src/main.c    ****   {
 503:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 504:Src/main.c    ****   }
 505:Src/main.c    **** 
 506:Src/main.c    ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 507:Src/main.c    ****     */
 508:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_4;
 509:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 510:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 511:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 512:Src/main.c    ****   {
 513:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 514:Src/main.c    ****   }
 515:Src/main.c    **** 
 516:Src/main.c    **** }
 517:Src/main.c    **** 
 518:Src/main.c    **** /* CRC init function */
 519:Src/main.c    **** static void MX_CRC_Init(void)
 520:Src/main.c    **** {
 521:Src/main.c    **** 
 522:Src/main.c    ****   hcrc.Instance = CRC;
 523:Src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 524:Src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 525:Src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 526:Src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 527:Src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 528:Src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 529:Src/main.c    ****   {
 530:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 531:Src/main.c    ****   }
 532:Src/main.c    **** 
 533:Src/main.c    **** }
 534:Src/main.c    **** 
 535:Src/main.c    **** /* DCMI init function */
 536:Src/main.c    **** static void MX_DCMI_Init(void)
 537:Src/main.c    **** {
 538:Src/main.c    **** 
 539:Src/main.c    ****   hdcmi.Instance = DCMI;
 540:Src/main.c    ****   hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 541:Src/main.c    ****   hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 542:Src/main.c    ****   hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 543:Src/main.c    ****   hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 544:Src/main.c    ****   hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 545:Src/main.c    ****   hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 11


 546:Src/main.c    ****   hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 547:Src/main.c    ****   hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 548:Src/main.c    ****   hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 549:Src/main.c    ****   hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 550:Src/main.c    ****   hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 551:Src/main.c    ****   if (HAL_DCMI_Init(&hdcmi) != HAL_OK)
 552:Src/main.c    ****   {
 553:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 554:Src/main.c    ****   }
 555:Src/main.c    **** 
 556:Src/main.c    **** }
 557:Src/main.c    **** 
 558:Src/main.c    **** /* DMA2D init function */
 559:Src/main.c    **** static void MX_DMA2D_Init(void)
 560:Src/main.c    **** {
 561:Src/main.c    **** 
 562:Src/main.c    ****   hdma2d.Instance = DMA2D;
 563:Src/main.c    ****   hdma2d.Init.Mode = DMA2D_M2M;
 564:Src/main.c    ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 565:Src/main.c    ****   hdma2d.Init.OutputOffset = 0;
 566:Src/main.c    ****   hdma2d.LayerCfg[1].InputOffset = 0;
 567:Src/main.c    ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 568:Src/main.c    ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 569:Src/main.c    ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 570:Src/main.c    ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 571:Src/main.c    ****   {
 572:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 573:Src/main.c    ****   }
 574:Src/main.c    **** 
 575:Src/main.c    ****   if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 576:Src/main.c    ****   {
 577:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 578:Src/main.c    ****   }
 579:Src/main.c    **** 
 580:Src/main.c    **** }
 581:Src/main.c    **** 
 582:Src/main.c    **** /* I2C1 init function */
 583:Src/main.c    **** static void MX_I2C1_Init(void)
 584:Src/main.c    **** {
 585:Src/main.c    **** 
 586:Src/main.c    ****   hi2c1.Instance = I2C1;
 587:Src/main.c    ****   hi2c1.Init.Timing = 0x00C0EAFF;
 588:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 589:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 590:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 591:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 592:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 593:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 594:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 595:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 596:Src/main.c    ****   {
 597:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 598:Src/main.c    ****   }
 599:Src/main.c    **** 
 600:Src/main.c    ****     /**Configure Analogue filter 
 601:Src/main.c    ****     */
 602:Src/main.c    ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 12


 603:Src/main.c    ****   {
 604:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 605:Src/main.c    ****   }
 606:Src/main.c    **** 
 607:Src/main.c    ****     /**Configure Digital filter 
 608:Src/main.c    ****     */
 609:Src/main.c    ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 610:Src/main.c    ****   {
 611:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 612:Src/main.c    ****   }
 613:Src/main.c    **** 
 614:Src/main.c    **** }
 615:Src/main.c    **** 
 616:Src/main.c    **** /* I2C3 init function */
 617:Src/main.c    **** static void MX_I2C3_Init(void)
 618:Src/main.c    **** {
 619:Src/main.c    **** 
 620:Src/main.c    ****   hi2c3.Instance = I2C3;
 621:Src/main.c    ****   hi2c3.Init.Timing = 0x00C0EAFF;
 622:Src/main.c    ****   hi2c3.Init.OwnAddress1 = 0;
 623:Src/main.c    ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 624:Src/main.c    ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 625:Src/main.c    ****   hi2c3.Init.OwnAddress2 = 0;
 626:Src/main.c    ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 627:Src/main.c    ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 628:Src/main.c    ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 629:Src/main.c    ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 630:Src/main.c    ****   {
 631:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 632:Src/main.c    ****   }
 633:Src/main.c    **** 
 634:Src/main.c    ****     /**Configure Analogue filter 
 635:Src/main.c    ****     */
 636:Src/main.c    ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 637:Src/main.c    ****   {
 638:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 639:Src/main.c    ****   }
 640:Src/main.c    **** 
 641:Src/main.c    ****     /**Configure Digital filter 
 642:Src/main.c    ****     */
 643:Src/main.c    ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 644:Src/main.c    ****   {
 645:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 646:Src/main.c    ****   }
 647:Src/main.c    **** 
 648:Src/main.c    **** }
 649:Src/main.c    **** 
 650:Src/main.c    **** /* LTDC init function */
 651:Src/main.c    **** static void MX_LTDC_Init(void)
 652:Src/main.c    **** {
 653:Src/main.c    **** 
 654:Src/main.c    ****   LTDC_LayerCfgTypeDef pLayerCfg;
 655:Src/main.c    **** 
 656:Src/main.c    ****   hltdc.Instance = LTDC;
 657:Src/main.c    ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 658:Src/main.c    ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 659:Src/main.c    ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 13


 660:Src/main.c    ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 661:Src/main.c    ****   hltdc.Init.HorizontalSync = 40;
 662:Src/main.c    ****   hltdc.Init.VerticalSync = 9;
 663:Src/main.c    ****   hltdc.Init.AccumulatedHBP = 53;
 664:Src/main.c    ****   hltdc.Init.AccumulatedVBP = 11;
 665:Src/main.c    ****   hltdc.Init.AccumulatedActiveW = 533;
 666:Src/main.c    ****   hltdc.Init.AccumulatedActiveH = 283;
 667:Src/main.c    ****   hltdc.Init.TotalWidth = 565;
 668:Src/main.c    ****   hltdc.Init.TotalHeigh = 285;
 669:Src/main.c    ****   hltdc.Init.Backcolor.Blue = 0;
 670:Src/main.c    ****   hltdc.Init.Backcolor.Green = 0;
 671:Src/main.c    ****   hltdc.Init.Backcolor.Red = 0;
 672:Src/main.c    ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 673:Src/main.c    ****   {
 674:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 675:Src/main.c    ****   }
 676:Src/main.c    **** 
 677:Src/main.c    ****   pLayerCfg.WindowX0 = 0;
 678:Src/main.c    ****   pLayerCfg.WindowX1 = 480;
 679:Src/main.c    ****   pLayerCfg.WindowY0 = 0;
 680:Src/main.c    ****   pLayerCfg.WindowY1 = 272;
 681:Src/main.c    ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
 682:Src/main.c    ****   pLayerCfg.Alpha = 255;
 683:Src/main.c    ****   pLayerCfg.Alpha0 = 0;
 684:Src/main.c    ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 685:Src/main.c    ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 686:Src/main.c    ****   pLayerCfg.FBStartAdress = 0xC0000000;
 687:Src/main.c    ****   pLayerCfg.ImageWidth = 480;
 688:Src/main.c    ****   pLayerCfg.ImageHeight = 272;
 689:Src/main.c    ****   pLayerCfg.Backcolor.Blue = 0;
 690:Src/main.c    ****   pLayerCfg.Backcolor.Green = 0;
 691:Src/main.c    ****   pLayerCfg.Backcolor.Red = 0;
 692:Src/main.c    ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 693:Src/main.c    ****   {
 694:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 695:Src/main.c    ****   }
 696:Src/main.c    **** 
 697:Src/main.c    **** }
 698:Src/main.c    **** 
 699:Src/main.c    **** /* QUADSPI init function */
 700:Src/main.c    **** static void MX_QUADSPI_Init(void)
 701:Src/main.c    **** {
 702:Src/main.c    **** 
 703:Src/main.c    ****   /* QUADSPI parameter configuration*/
 704:Src/main.c    ****   hqspi.Instance = QUADSPI;
 705:Src/main.c    ****   hqspi.Init.ClockPrescaler = 255;
 706:Src/main.c    ****   hqspi.Init.FifoThreshold = 1;
 707:Src/main.c    ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 708:Src/main.c    ****   hqspi.Init.FlashSize = 1;
 709:Src/main.c    ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 710:Src/main.c    ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 711:Src/main.c    ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 712:Src/main.c    ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 713:Src/main.c    ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 714:Src/main.c    ****   {
 715:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 716:Src/main.c    ****   }
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 14


 717:Src/main.c    **** 
 718:Src/main.c    **** }
 719:Src/main.c    **** 
 720:Src/main.c    **** /* RTC init function */
 721:Src/main.c    **** static void MX_RTC_Init(void)
 722:Src/main.c    **** {
 723:Src/main.c    **** 
 724:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 0 */
 725:Src/main.c    **** 
 726:Src/main.c    ****   /* USER CODE END RTC_Init 0 */
 727:Src/main.c    **** 
 728:Src/main.c    ****   RTC_TimeTypeDef sTime;
 729:Src/main.c    ****   RTC_DateTypeDef sDate;
 730:Src/main.c    ****   RTC_AlarmTypeDef sAlarm;
 731:Src/main.c    **** 
 732:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 1 */
 733:Src/main.c    **** 
 734:Src/main.c    ****   /* USER CODE END RTC_Init 1 */
 735:Src/main.c    **** 
 736:Src/main.c    ****     /**Initialize RTC Only 
 737:Src/main.c    ****     */
 738:Src/main.c    ****   hrtc.Instance = RTC;
 739:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 740:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 741:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 742:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 743:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 744:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 745:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 746:Src/main.c    ****   {
 747:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 748:Src/main.c    ****   }
 749:Src/main.c    **** 
 750:Src/main.c    ****     /**Initialize RTC and set the Time and Date 
 751:Src/main.c    ****     */
 752:Src/main.c    ****   sTime.Hours = 0x0;
 753:Src/main.c    ****   sTime.Minutes = 0x0;
 754:Src/main.c    ****   sTime.Seconds = 0x0;
 755:Src/main.c    ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 756:Src/main.c    ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 757:Src/main.c    ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 758:Src/main.c    ****   {
 759:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 760:Src/main.c    ****   }
 761:Src/main.c    **** 
 762:Src/main.c    ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 763:Src/main.c    ****   sDate.Month = RTC_MONTH_JANUARY;
 764:Src/main.c    ****   sDate.Date = 0x1;
 765:Src/main.c    ****   sDate.Year = 0x0;
 766:Src/main.c    **** 
 767:Src/main.c    ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 768:Src/main.c    ****   {
 769:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 770:Src/main.c    ****   }
 771:Src/main.c    **** 
 772:Src/main.c    ****     /**Enable the Alarm A 
 773:Src/main.c    ****     */
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 15


 774:Src/main.c    ****   sAlarm.AlarmTime.Hours = 0x0;
 775:Src/main.c    ****   sAlarm.AlarmTime.Minutes = 0x0;
 776:Src/main.c    ****   sAlarm.AlarmTime.Seconds = 0x0;
 777:Src/main.c    ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 778:Src/main.c    ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 779:Src/main.c    ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 780:Src/main.c    ****   sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 781:Src/main.c    ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 782:Src/main.c    ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 783:Src/main.c    ****   sAlarm.AlarmDateWeekDay = 0x1;
 784:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_A;
 785:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 786:Src/main.c    ****   {
 787:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 788:Src/main.c    ****   }
 789:Src/main.c    **** 
 790:Src/main.c    ****     /**Enable the Alarm B 
 791:Src/main.c    ****     */
 792:Src/main.c    ****   sAlarm.AlarmDateWeekDay = 0x1;
 793:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_B;
 794:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 795:Src/main.c    ****   {
 796:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 797:Src/main.c    ****   }
 798:Src/main.c    **** 
 799:Src/main.c    ****     /**Enable the TimeStamp 
 800:Src/main.c    ****     */
 801:Src/main.c    ****   if (HAL_RTCEx_SetTimeStamp(&hrtc, RTC_TIMESTAMPEDGE_RISING, RTC_TIMESTAMPPIN_POS1) != HAL_OK)
 802:Src/main.c    ****   {
 803:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 804:Src/main.c    ****   }
 805:Src/main.c    **** 
 806:Src/main.c    **** }
 807:Src/main.c    **** 
 808:Src/main.c    **** /* SAI2 init function */
 809:Src/main.c    **** static void MX_SAI2_Init(void)
 810:Src/main.c    **** {
 811:Src/main.c    **** 
 812:Src/main.c    ****   hsai_BlockA2.Instance = SAI2_Block_A;
 813:Src/main.c    ****   hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 814:Src/main.c    ****   hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 815:Src/main.c    ****   hsai_BlockA2.Init.DataSize = SAI_DATASIZE_24;
 816:Src/main.c    ****   hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 817:Src/main.c    ****   hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 818:Src/main.c    ****   hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 819:Src/main.c    ****   hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 820:Src/main.c    ****   hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 821:Src/main.c    ****   hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 822:Src/main.c    ****   hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 823:Src/main.c    ****   hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 824:Src/main.c    ****   hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 825:Src/main.c    ****   hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 826:Src/main.c    ****   hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 827:Src/main.c    ****   hsai_BlockA2.FrameInit.FrameLength = 8;
 828:Src/main.c    ****   hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 829:Src/main.c    ****   hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 830:Src/main.c    ****   hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 16


 831:Src/main.c    ****   hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 832:Src/main.c    ****   hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 833:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 834:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotNumber = 1;
 835:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 836:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK)
 837:Src/main.c    ****   {
 838:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 839:Src/main.c    ****   }
 840:Src/main.c    **** 
 841:Src/main.c    ****   hsai_BlockB2.Instance = SAI2_Block_B;
 842:Src/main.c    ****   hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 843:Src/main.c    ****   hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 844:Src/main.c    ****   hsai_BlockB2.Init.DataSize = SAI_DATASIZE_24;
 845:Src/main.c    ****   hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 846:Src/main.c    ****   hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 847:Src/main.c    ****   hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 848:Src/main.c    ****   hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 849:Src/main.c    ****   hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 850:Src/main.c    ****   hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 851:Src/main.c    ****   hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 852:Src/main.c    ****   hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 853:Src/main.c    ****   hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 854:Src/main.c    ****   hsai_BlockB2.FrameInit.FrameLength = 8;
 855:Src/main.c    ****   hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 856:Src/main.c    ****   hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 857:Src/main.c    ****   hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 858:Src/main.c    ****   hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 859:Src/main.c    ****   hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 860:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 861:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotNumber = 1;
 862:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 863:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK)
 864:Src/main.c    ****   {
 865:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 866:Src/main.c    ****   }
 867:Src/main.c    **** 
 868:Src/main.c    **** }
 869:Src/main.c    **** 
 870:Src/main.c    **** /* SDMMC1 init function */
 871:Src/main.c    **** static void MX_SDMMC1_SD_Init(void)
 872:Src/main.c    **** {
  27              		.loc 1 872 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 873:Src/main.c    **** 
 874:Src/main.c    ****   hsd1.Instance = SDMMC1;
  32              		.loc 1 874 0
  33 0000 054B     		ldr	r3, .L2
  34 0002 064A     		ldr	r2, .L2+4
  35 0004 1A60     		str	r2, [r3]
 875:Src/main.c    ****   hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  36              		.loc 1 875 0
  37 0006 0022     		movs	r2, #0
  38 0008 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 17


 876:Src/main.c    ****   hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  39              		.loc 1 876 0
  40 000a 9A60     		str	r2, [r3, #8]
 877:Src/main.c    ****   hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  41              		.loc 1 877 0
  42 000c DA60     		str	r2, [r3, #12]
 878:Src/main.c    ****   hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
  43              		.loc 1 878 0
  44 000e 1A61     		str	r2, [r3, #16]
 879:Src/main.c    ****   hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  45              		.loc 1 879 0
  46 0010 5A61     		str	r2, [r3, #20]
 880:Src/main.c    ****   hsd1.Init.ClockDiv = 0;
  47              		.loc 1 880 0
  48 0012 9A61     		str	r2, [r3, #24]
 881:Src/main.c    **** 
 882:Src/main.c    **** }
  49              		.loc 1 882 0
  50 0014 7047     		bx	lr
  51              	.L3:
  52 0016 00BF     		.align	2
  53              	.L2:
  54 0018 00000000 		.word	hsd1
  55 001c 002C0140 		.word	1073818624
  56              		.cfi_endproc
  57              	.LFE176:
  59              		.section	.text.MX_GPIO_Init,"ax",%progbits
  60              		.align	1
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv5-sp-d16
  66              	MX_GPIO_Init:
  67              	.LFB189:
 883:Src/main.c    **** 
 884:Src/main.c    **** /* SPDIFRX init function */
 885:Src/main.c    **** static void MX_SPDIFRX_Init(void)
 886:Src/main.c    **** {
 887:Src/main.c    **** 
 888:Src/main.c    ****   hspdif.Instance = SPDIFRX;
 889:Src/main.c    ****   hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 890:Src/main.c    ****   hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 891:Src/main.c    ****   hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 892:Src/main.c    ****   hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 893:Src/main.c    ****   hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 894:Src/main.c    ****   hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 895:Src/main.c    ****   hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 896:Src/main.c    ****   hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 897:Src/main.c    ****   hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 898:Src/main.c    ****   hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 899:Src/main.c    ****   if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK)
 900:Src/main.c    ****   {
 901:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 902:Src/main.c    ****   }
 903:Src/main.c    **** 
 904:Src/main.c    **** }
 905:Src/main.c    **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 18


 906:Src/main.c    **** /* SPI2 init function */
 907:Src/main.c    **** static void MX_SPI2_Init(void)
 908:Src/main.c    **** {
 909:Src/main.c    **** 
 910:Src/main.c    ****   /* SPI2 parameter configuration*/
 911:Src/main.c    ****   hspi2.Instance = SPI2;
 912:Src/main.c    ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 913:Src/main.c    ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 914:Src/main.c    ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 915:Src/main.c    ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 916:Src/main.c    ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 917:Src/main.c    ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 918:Src/main.c    ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 919:Src/main.c    ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 920:Src/main.c    ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 921:Src/main.c    ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 922:Src/main.c    ****   hspi2.Init.CRCPolynomial = 7;
 923:Src/main.c    ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 924:Src/main.c    ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 925:Src/main.c    ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 926:Src/main.c    ****   {
 927:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 928:Src/main.c    ****   }
 929:Src/main.c    **** 
 930:Src/main.c    **** }
 931:Src/main.c    **** 
 932:Src/main.c    **** /* TIM1 init function */
 933:Src/main.c    **** static void MX_TIM1_Init(void)
 934:Src/main.c    **** {
 935:Src/main.c    **** 
 936:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 937:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 938:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 939:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 940:Src/main.c    **** 
 941:Src/main.c    ****   htim1.Instance = TIM1;
 942:Src/main.c    ****   htim1.Init.Prescaler = 0;
 943:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 944:Src/main.c    ****   htim1.Init.Period = 0;
 945:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 946:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 947:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 948:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 949:Src/main.c    ****   {
 950:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 951:Src/main.c    ****   }
 952:Src/main.c    **** 
 953:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 954:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 955:Src/main.c    ****   {
 956:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 957:Src/main.c    ****   }
 958:Src/main.c    **** 
 959:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 960:Src/main.c    ****   {
 961:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 962:Src/main.c    ****   }
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 19


 963:Src/main.c    **** 
 964:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 965:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 966:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 967:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 968:Src/main.c    ****   {
 969:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 970:Src/main.c    ****   }
 971:Src/main.c    **** 
 972:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 973:Src/main.c    ****   sConfigOC.Pulse = 0;
 974:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 975:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 976:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 977:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 978:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 979:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 980:Src/main.c    ****   {
 981:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 982:Src/main.c    ****   }
 983:Src/main.c    **** 
 984:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 985:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 986:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 987:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 988:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 989:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 990:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 991:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 992:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 993:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 994:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 995:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 996:Src/main.c    ****   {
 997:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 998:Src/main.c    ****   }
 999:Src/main.c    **** 
1000:Src/main.c    ****   HAL_TIM_MspPostInit(&htim1);
1001:Src/main.c    **** 
1002:Src/main.c    **** }
1003:Src/main.c    **** 
1004:Src/main.c    **** /* TIM2 init function */
1005:Src/main.c    **** static void MX_TIM2_Init(void)
1006:Src/main.c    **** {
1007:Src/main.c    **** 
1008:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
1009:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1010:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
1011:Src/main.c    **** 
1012:Src/main.c    ****   htim2.Instance = TIM2;
1013:Src/main.c    ****   htim2.Init.Prescaler = 0;
1014:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
1015:Src/main.c    ****   htim2.Init.Period = 0;
1016:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1017:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1018:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
1019:Src/main.c    ****   {
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 20


1020:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1021:Src/main.c    ****   }
1022:Src/main.c    **** 
1023:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1024:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
1025:Src/main.c    ****   {
1026:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1027:Src/main.c    ****   }
1028:Src/main.c    **** 
1029:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
1030:Src/main.c    ****   {
1031:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1032:Src/main.c    ****   }
1033:Src/main.c    **** 
1034:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1035:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1036:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
1037:Src/main.c    ****   {
1038:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1039:Src/main.c    ****   }
1040:Src/main.c    **** 
1041:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1042:Src/main.c    ****   sConfigOC.Pulse = 0;
1043:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1044:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1045:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1046:Src/main.c    ****   {
1047:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1048:Src/main.c    ****   }
1049:Src/main.c    **** 
1050:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
1051:Src/main.c    **** 
1052:Src/main.c    **** }
1053:Src/main.c    **** 
1054:Src/main.c    **** /* TIM3 init function */
1055:Src/main.c    **** static void MX_TIM3_Init(void)
1056:Src/main.c    **** {
1057:Src/main.c    **** 
1058:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
1059:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1060:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
1061:Src/main.c    **** 
1062:Src/main.c    ****   htim3.Instance = TIM3;
1063:Src/main.c    ****   htim3.Init.Prescaler = 0;
1064:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
1065:Src/main.c    ****   htim3.Init.Period = 0;
1066:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1067:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1068:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
1069:Src/main.c    ****   {
1070:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1071:Src/main.c    ****   }
1072:Src/main.c    **** 
1073:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1074:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
1075:Src/main.c    ****   {
1076:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 21


1077:Src/main.c    ****   }
1078:Src/main.c    **** 
1079:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
1080:Src/main.c    ****   {
1081:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1082:Src/main.c    ****   }
1083:Src/main.c    **** 
1084:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1085:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1086:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
1087:Src/main.c    ****   {
1088:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1089:Src/main.c    ****   }
1090:Src/main.c    **** 
1091:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1092:Src/main.c    ****   sConfigOC.Pulse = 0;
1093:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1094:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1095:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1096:Src/main.c    ****   {
1097:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1098:Src/main.c    ****   }
1099:Src/main.c    **** 
1100:Src/main.c    ****   HAL_TIM_MspPostInit(&htim3);
1101:Src/main.c    **** 
1102:Src/main.c    **** }
1103:Src/main.c    **** 
1104:Src/main.c    **** /* TIM5 init function */
1105:Src/main.c    **** static void MX_TIM5_Init(void)
1106:Src/main.c    **** {
1107:Src/main.c    **** 
1108:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
1109:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1110:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
1111:Src/main.c    **** 
1112:Src/main.c    ****   htim5.Instance = TIM5;
1113:Src/main.c    ****   htim5.Init.Prescaler = 0;
1114:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
1115:Src/main.c    ****   htim5.Init.Period = 0;
1116:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1117:Src/main.c    ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1118:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
1119:Src/main.c    ****   {
1120:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1121:Src/main.c    ****   }
1122:Src/main.c    **** 
1123:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1124:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
1125:Src/main.c    ****   {
1126:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1127:Src/main.c    ****   }
1128:Src/main.c    **** 
1129:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
1130:Src/main.c    ****   {
1131:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1132:Src/main.c    ****   }
1133:Src/main.c    **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 22


1134:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1135:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1136:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
1137:Src/main.c    ****   {
1138:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1139:Src/main.c    ****   }
1140:Src/main.c    **** 
1141:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1142:Src/main.c    ****   sConfigOC.Pulse = 0;
1143:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1144:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1145:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
1146:Src/main.c    ****   {
1147:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1148:Src/main.c    ****   }
1149:Src/main.c    **** 
1150:Src/main.c    ****   HAL_TIM_MspPostInit(&htim5);
1151:Src/main.c    **** 
1152:Src/main.c    **** }
1153:Src/main.c    **** 
1154:Src/main.c    **** /* TIM7 init function */
1155:Src/main.c    **** static void MX_TIM7_Init(void)
1156:Src/main.c    **** {
1157:Src/main.c    **** 
1158:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1159:Src/main.c    **** 
1160:Src/main.c    ****   htim7.Instance = TIM7;
1161:Src/main.c    ****   htim7.Init.Prescaler = 0;
1162:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
1163:Src/main.c    ****   htim7.Init.Period = 0;
1164:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1165:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
1166:Src/main.c    ****   {
1167:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1168:Src/main.c    ****   }
1169:Src/main.c    **** 
1170:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1171:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1172:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
1173:Src/main.c    ****   {
1174:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1175:Src/main.c    ****   }
1176:Src/main.c    **** 
1177:Src/main.c    **** }
1178:Src/main.c    **** 
1179:Src/main.c    **** /* TIM8 init function */
1180:Src/main.c    **** static void MX_TIM8_Init(void)
1181:Src/main.c    **** {
1182:Src/main.c    **** 
1183:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
1184:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1185:Src/main.c    **** 
1186:Src/main.c    ****   htim8.Instance = TIM8;
1187:Src/main.c    ****   htim8.Init.Prescaler = 0;
1188:Src/main.c    ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
1189:Src/main.c    ****   htim8.Init.Period = 0;
1190:Src/main.c    ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 23


1191:Src/main.c    ****   htim8.Init.RepetitionCounter = 0;
1192:Src/main.c    ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1193:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
1194:Src/main.c    ****   {
1195:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1196:Src/main.c    ****   }
1197:Src/main.c    **** 
1198:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1199:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
1200:Src/main.c    ****   {
1201:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1202:Src/main.c    ****   }
1203:Src/main.c    **** 
1204:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1205:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
1206:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1207:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
1208:Src/main.c    ****   {
1209:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1210:Src/main.c    ****   }
1211:Src/main.c    **** 
1212:Src/main.c    **** }
1213:Src/main.c    **** 
1214:Src/main.c    **** /* TIM12 init function */
1215:Src/main.c    **** static void MX_TIM12_Init(void)
1216:Src/main.c    **** {
1217:Src/main.c    **** 
1218:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
1219:Src/main.c    **** 
1220:Src/main.c    ****   htim12.Instance = TIM12;
1221:Src/main.c    ****   htim12.Init.Prescaler = 0;
1222:Src/main.c    ****   htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
1223:Src/main.c    ****   htim12.Init.Period = 0;
1224:Src/main.c    ****   htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1225:Src/main.c    ****   htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1226:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
1227:Src/main.c    ****   {
1228:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1229:Src/main.c    ****   }
1230:Src/main.c    **** 
1231:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1232:Src/main.c    ****   sConfigOC.Pulse = 0;
1233:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1234:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1235:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1236:Src/main.c    ****   {
1237:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1238:Src/main.c    ****   }
1239:Src/main.c    **** 
1240:Src/main.c    ****   HAL_TIM_MspPostInit(&htim12);
1241:Src/main.c    **** 
1242:Src/main.c    **** }
1243:Src/main.c    **** 
1244:Src/main.c    **** /* USART1 init function */
1245:Src/main.c    **** static void MX_USART1_UART_Init(void)
1246:Src/main.c    **** {
1247:Src/main.c    **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 24


1248:Src/main.c    ****   huart1.Instance = USART1;
1249:Src/main.c    ****   huart1.Init.BaudRate = 115200;
1250:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
1251:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
1252:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
1253:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
1254:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1255:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
1256:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1257:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1258:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
1259:Src/main.c    ****   {
1260:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1261:Src/main.c    ****   }
1262:Src/main.c    **** 
1263:Src/main.c    **** }
1264:Src/main.c    **** 
1265:Src/main.c    **** /* USART6 init function */
1266:Src/main.c    **** static void MX_USART6_UART_Init(void)
1267:Src/main.c    **** {
1268:Src/main.c    **** 
1269:Src/main.c    ****   huart6.Instance = USART6;
1270:Src/main.c    ****   huart6.Init.BaudRate = 115200;
1271:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
1272:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
1273:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
1274:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
1275:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1276:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
1277:Src/main.c    ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1278:Src/main.c    ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1279:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
1280:Src/main.c    ****   {
1281:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1282:Src/main.c    ****   }
1283:Src/main.c    **** 
1284:Src/main.c    **** }
1285:Src/main.c    **** 
1286:Src/main.c    **** /* FMC initialization function */
1287:Src/main.c    **** static void MX_FMC_Init(void)
1288:Src/main.c    **** {
1289:Src/main.c    ****   FMC_SDRAM_TimingTypeDef SdramTiming;
1290:Src/main.c    **** 
1291:Src/main.c    ****   /** Perform the SDRAM1 memory initialization sequence
1292:Src/main.c    ****   */
1293:Src/main.c    ****   hsdram1.Instance = FMC_SDRAM_DEVICE;
1294:Src/main.c    ****   /* hsdram1.Init */
1295:Src/main.c    ****   hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
1296:Src/main.c    ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
1297:Src/main.c    ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
1298:Src/main.c    ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
1299:Src/main.c    ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
1300:Src/main.c    ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
1301:Src/main.c    ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
1302:Src/main.c    ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
1303:Src/main.c    ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
1304:Src/main.c    ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 25


1305:Src/main.c    ****   /* SdramTiming */
1306:Src/main.c    ****   SdramTiming.LoadToActiveDelay = 2;
1307:Src/main.c    ****   SdramTiming.ExitSelfRefreshDelay = 7;
1308:Src/main.c    ****   SdramTiming.SelfRefreshTime = 4;
1309:Src/main.c    ****   SdramTiming.RowCycleDelay = 7;
1310:Src/main.c    ****   SdramTiming.WriteRecoveryTime = 3;
1311:Src/main.c    ****   SdramTiming.RPDelay = 2;
1312:Src/main.c    ****   SdramTiming.RCDDelay = 2;
1313:Src/main.c    **** 
1314:Src/main.c    ****   if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
1315:Src/main.c    ****   {
1316:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1317:Src/main.c    ****   }
1318:Src/main.c    **** 
1319:Src/main.c    **** }
1320:Src/main.c    **** 
1321:Src/main.c    **** /** Configure pins as 
1322:Src/main.c    ****         * Analog 
1323:Src/main.c    ****         * Input 
1324:Src/main.c    ****         * Output
1325:Src/main.c    ****         * EVENT_OUT
1326:Src/main.c    ****         * EXTI
1327:Src/main.c    ****      PB5   ------> USB_OTG_HS_ULPI_D7
1328:Src/main.c    ****      PH4   ------> USB_OTG_HS_ULPI_NXT
1329:Src/main.c    ****      PB13   ------> USB_OTG_HS_ULPI_D6
1330:Src/main.c    ****      PB12   ------> USB_OTG_HS_ULPI_D5
1331:Src/main.c    ****      PC0   ------> USB_OTG_HS_ULPI_STP
1332:Src/main.c    ****      PC2   ------> USB_OTG_HS_ULPI_DIR
1333:Src/main.c    ****      PA5   ------> USB_OTG_HS_ULPI_CK
1334:Src/main.c    ****      PB10   ------> USB_OTG_HS_ULPI_D3
1335:Src/main.c    ****      PA3   ------> USB_OTG_HS_ULPI_D0
1336:Src/main.c    ****      PB1   ------> USB_OTG_HS_ULPI_D2
1337:Src/main.c    ****      PB0   ------> USB_OTG_HS_ULPI_D1
1338:Src/main.c    ****      PB11   ------> USB_OTG_HS_ULPI_D4
1339:Src/main.c    **** */
1340:Src/main.c    **** static void MX_GPIO_Init(void)
1341:Src/main.c    **** {
  68              		.loc 1 1341 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 64
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 36
  75              		.cfi_offset 4, -36
  76              		.cfi_offset 5, -32
  77              		.cfi_offset 6, -28
  78              		.cfi_offset 7, -24
  79              		.cfi_offset 8, -20
  80              		.cfi_offset 9, -16
  81              		.cfi_offset 10, -12
  82              		.cfi_offset 11, -8
  83              		.cfi_offset 14, -4
  84 0004 91B0     		sub	sp, sp, #68
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 104
  87              	.LBB2:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 26


1342:Src/main.c    **** 
1343:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
1344:Src/main.c    **** 
1345:Src/main.c    ****   /* GPIO Ports Clock Enable */
1346:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  88              		.loc 1 1346 0
  89 0006 9A4B     		ldr	r3, .L6
  90 0008 1A6B     		ldr	r2, [r3, #48]
  91 000a 42F01002 		orr	r2, r2, #16
  92 000e 1A63     		str	r2, [r3, #48]
  93 0010 1A6B     		ldr	r2, [r3, #48]
  94 0012 02F01002 		and	r2, r2, #16
  95 0016 0092     		str	r2, [sp]
  96 0018 009A     		ldr	r2, [sp]
  97              	.LBE2:
  98              	.LBB3:
1347:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
  99              		.loc 1 1347 0
 100 001a 1A6B     		ldr	r2, [r3, #48]
 101 001c 42F04002 		orr	r2, r2, #64
 102 0020 1A63     		str	r2, [r3, #48]
 103 0022 1A6B     		ldr	r2, [r3, #48]
 104 0024 02F04002 		and	r2, r2, #64
 105 0028 0192     		str	r2, [sp, #4]
 106 002a 019A     		ldr	r2, [sp, #4]
 107              	.LBE3:
 108              	.LBB4:
1348:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 109              		.loc 1 1348 0
 110 002c 1A6B     		ldr	r2, [r3, #48]
 111 002e 42F00202 		orr	r2, r2, #2
 112 0032 1A63     		str	r2, [r3, #48]
 113 0034 1A6B     		ldr	r2, [r3, #48]
 114 0036 02F00202 		and	r2, r2, #2
 115 003a 0292     		str	r2, [sp, #8]
 116 003c 029A     		ldr	r2, [sp, #8]
 117              	.LBE4:
 118              	.LBB5:
1349:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 119              		.loc 1 1349 0
 120 003e 1A6B     		ldr	r2, [r3, #48]
 121 0040 42F00802 		orr	r2, r2, #8
 122 0044 1A63     		str	r2, [r3, #48]
 123 0046 1A6B     		ldr	r2, [r3, #48]
 124 0048 02F00802 		and	r2, r2, #8
 125 004c 0392     		str	r2, [sp, #12]
 126 004e 039A     		ldr	r2, [sp, #12]
 127              	.LBE5:
 128              	.LBB6:
1350:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 129              		.loc 1 1350 0
 130 0050 1A6B     		ldr	r2, [r3, #48]
 131 0052 42F00402 		orr	r2, r2, #4
 132 0056 1A63     		str	r2, [r3, #48]
 133 0058 1A6B     		ldr	r2, [r3, #48]
 134 005a 02F00402 		and	r2, r2, #4
 135 005e 0492     		str	r2, [sp, #16]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 27


 136 0060 049A     		ldr	r2, [sp, #16]
 137              	.LBE6:
 138              	.LBB7:
1351:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 139              		.loc 1 1351 0
 140 0062 1A6B     		ldr	r2, [r3, #48]
 141 0064 42F00102 		orr	r2, r2, #1
 142 0068 1A63     		str	r2, [r3, #48]
 143 006a 1A6B     		ldr	r2, [r3, #48]
 144 006c 02F00102 		and	r2, r2, #1
 145 0070 0592     		str	r2, [sp, #20]
 146 0072 059A     		ldr	r2, [sp, #20]
 147              	.LBE7:
 148              	.LBB8:
1352:Src/main.c    ****   __HAL_RCC_GPIOJ_CLK_ENABLE();
 149              		.loc 1 1352 0
 150 0074 1A6B     		ldr	r2, [r3, #48]
 151 0076 42F40072 		orr	r2, r2, #512
 152 007a 1A63     		str	r2, [r3, #48]
 153 007c 1A6B     		ldr	r2, [r3, #48]
 154 007e 02F40072 		and	r2, r2, #512
 155 0082 0692     		str	r2, [sp, #24]
 156 0084 069A     		ldr	r2, [sp, #24]
 157              	.LBE8:
 158              	.LBB9:
1353:Src/main.c    ****   __HAL_RCC_GPIOI_CLK_ENABLE();
 159              		.loc 1 1353 0
 160 0086 1A6B     		ldr	r2, [r3, #48]
 161 0088 42F48072 		orr	r2, r2, #256
 162 008c 1A63     		str	r2, [r3, #48]
 163 008e 1A6B     		ldr	r2, [r3, #48]
 164 0090 02F48072 		and	r2, r2, #256
 165 0094 0792     		str	r2, [sp, #28]
 166 0096 079A     		ldr	r2, [sp, #28]
 167              	.LBE9:
 168              	.LBB10:
1354:Src/main.c    ****   __HAL_RCC_GPIOK_CLK_ENABLE();
 169              		.loc 1 1354 0
 170 0098 1A6B     		ldr	r2, [r3, #48]
 171 009a 42F48062 		orr	r2, r2, #1024
 172 009e 1A63     		str	r2, [r3, #48]
 173 00a0 1A6B     		ldr	r2, [r3, #48]
 174 00a2 02F48062 		and	r2, r2, #1024
 175 00a6 0892     		str	r2, [sp, #32]
 176 00a8 089A     		ldr	r2, [sp, #32]
 177              	.LBE10:
 178              	.LBB11:
1355:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 179              		.loc 1 1355 0
 180 00aa 1A6B     		ldr	r2, [r3, #48]
 181 00ac 42F02002 		orr	r2, r2, #32
 182 00b0 1A63     		str	r2, [r3, #48]
 183 00b2 1A6B     		ldr	r2, [r3, #48]
 184 00b4 02F02002 		and	r2, r2, #32
 185 00b8 0992     		str	r2, [sp, #36]
 186 00ba 099A     		ldr	r2, [sp, #36]
 187              	.LBE11:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 28


 188              	.LBB12:
1356:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 189              		.loc 1 1356 0
 190 00bc 1A6B     		ldr	r2, [r3, #48]
 191 00be 42F08002 		orr	r2, r2, #128
 192 00c2 1A63     		str	r2, [r3, #48]
 193 00c4 1B6B     		ldr	r3, [r3, #48]
 194 00c6 03F08003 		and	r3, r3, #128
 195 00ca 0A93     		str	r3, [sp, #40]
 196 00cc 0A9B     		ldr	r3, [sp, #40]
 197              	.LBE12:
1357:Src/main.c    **** 
1358:Src/main.c    ****   /*Configure GPIO pin Output Level */
1359:Src/main.c    ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 198              		.loc 1 1359 0
 199 00ce 0122     		movs	r2, #1
 200 00d0 2021     		movs	r1, #32
 201 00d2 6848     		ldr	r0, .L6+4
 202 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 203              	.LVL0:
1360:Src/main.c    **** 
1361:Src/main.c    ****   /*Configure GPIO pin Output Level */
1362:Src/main.c    ****   HAL_GPIO_WritePin(GPIOI, ARDUINO_D7_Pin|ARDUINO_D8_Pin, GPIO_PIN_RESET);
 204              		.loc 1 1362 0
 205 00d8 0022     		movs	r2, #0
 206 00da 0C21     		movs	r1, #12
 207 00dc 6648     		ldr	r0, .L6+8
 208 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 209              	.LVL1:
1363:Src/main.c    **** 
1364:Src/main.c    ****   /*Configure GPIO pin Output Level */
1365:Src/main.c    ****   HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 210              		.loc 1 1365 0
 211 00e2 0122     		movs	r2, #1
 212 00e4 0821     		movs	r1, #8
 213 00e6 6548     		ldr	r0, .L6+12
 214 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 215              	.LVL2:
1366:Src/main.c    **** 
1367:Src/main.c    ****   /*Configure GPIO pin Output Level */
1368:Src/main.c    ****   HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 216              		.loc 1 1368 0
 217 00ec 0122     		movs	r2, #1
 218 00ee 4FF48051 		mov	r1, #4096
 219 00f2 6148     		ldr	r0, .L6+8
 220 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 221              	.LVL3:
1369:Src/main.c    **** 
1370:Src/main.c    ****   /*Configure GPIO pin Output Level */
1371:Src/main.c    ****   HAL_GPIO_WritePin(DCMI_PWR_EN_GPIO_Port, DCMI_PWR_EN_Pin, GPIO_PIN_RESET);
 222              		.loc 1 1371 0
 223 00f8 0022     		movs	r2, #0
 224 00fa 4FF40051 		mov	r1, #8192
 225 00fe 6048     		ldr	r0, .L6+16
 226 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 227              	.LVL4:
1372:Src/main.c    **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 29


1373:Src/main.c    ****   /*Configure GPIO pin Output Level */
1374:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin, GPIO_PIN_RESET);
 228              		.loc 1 1374 0
 229 0104 0022     		movs	r2, #0
 230 0106 C821     		movs	r1, #200
 231 0108 5E48     		ldr	r0, .L6+20
 232 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 233              	.LVL5:
1375:Src/main.c    **** 
1376:Src/main.c    ****   /*Configure GPIO pin : OTG_HS_OverCurrent_Pin */
1377:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
 234              		.loc 1 1377 0
 235 010e 4FF0080A 		mov	r10, #8
 236 0112 CDF82CA0 		str	r10, [sp, #44]
1378:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 237              		.loc 1 1378 0
 238 0116 0024     		movs	r4, #0
 239 0118 0C94     		str	r4, [sp, #48]
1379:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 240              		.loc 1 1379 0
 241 011a 0D94     		str	r4, [sp, #52]
1380:Src/main.c    ****   HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 242              		.loc 1 1380 0
 243 011c 0BA9     		add	r1, sp, #44
 244 011e 5A48     		ldr	r0, .L6+24
 245 0120 FFF7FEFF 		bl	HAL_GPIO_Init
 246              	.LVL6:
1381:Src/main.c    **** 
1382:Src/main.c    ****   /*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D3_Pin 
1383:Src/main.c    ****                            ULPI_D2_Pin ULPI_D1_Pin ULPI_D4_Pin */
1384:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_D7_Pin|ULPI_D6_Pin|ULPI_D5_Pin|ULPI_D3_Pin 
 247              		.loc 1 1384 0
 248 0124 43F62343 		movw	r3, #15395
 249 0128 0B93     		str	r3, [sp, #44]
1385:Src/main.c    ****                           |ULPI_D2_Pin|ULPI_D1_Pin|ULPI_D4_Pin;
1386:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 250              		.loc 1 1386 0
 251 012a 4FF00208 		mov	r8, #2
 252 012e CDF83080 		str	r8, [sp, #48]
1387:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 253              		.loc 1 1387 0
 254 0132 0D94     		str	r4, [sp, #52]
1388:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 255              		.loc 1 1388 0
 256 0134 0327     		movs	r7, #3
 257 0136 0E97     		str	r7, [sp, #56]
1389:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 258              		.loc 1 1389 0
 259 0138 0A26     		movs	r6, #10
 260 013a 0F96     		str	r6, [sp, #60]
1390:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 261              		.loc 1 1390 0
 262 013c 0BA9     		add	r1, sp, #44
 263 013e 5348     		ldr	r0, .L6+28
 264 0140 FFF7FEFF 		bl	HAL_GPIO_Init
 265              	.LVL7:
1391:Src/main.c    **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 30


1392:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_VBUS_Pin */
1393:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 266              		.loc 1 1393 0
 267 0144 4FF48053 		mov	r3, #4096
 268 0148 0B93     		str	r3, [sp, #44]
1394:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 269              		.loc 1 1394 0
 270 014a 0C94     		str	r4, [sp, #48]
1395:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 271              		.loc 1 1395 0
 272 014c 0D94     		str	r4, [sp, #52]
1396:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 273              		.loc 1 1396 0
 274 014e 0BA9     		add	r1, sp, #44
 275 0150 4F48     		ldr	r0, .L6+32
 276 0152 FFF7FEFF 		bl	HAL_GPIO_Init
 277              	.LVL8:
1397:Src/main.c    **** 
1398:Src/main.c    ****   /*Configure GPIO pin : Audio_INT_Pin */
1399:Src/main.c    ****   GPIO_InitStruct.Pin = Audio_INT_Pin;
 278              		.loc 1 1399 0
 279 0156 4023     		movs	r3, #64
 280 0158 0B93     		str	r3, [sp, #44]
1400:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 281              		.loc 1 1400 0
 282 015a DFF840B1 		ldr	fp, .L6+44
 283 015e CDF830B0 		str	fp, [sp, #48]
1401:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 284              		.loc 1 1401 0
 285 0162 0D94     		str	r4, [sp, #52]
1402:Src/main.c    ****   HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 286              		.loc 1 1402 0
 287 0164 0BA9     		add	r1, sp, #44
 288 0166 4348     		ldr	r0, .L6+4
 289 0168 FFF7FEFF 		bl	HAL_GPIO_Init
 290              	.LVL9:
1403:Src/main.c    **** 
1404:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
1405:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 291              		.loc 1 1405 0
 292 016c 2023     		movs	r3, #32
 293 016e 0B93     		str	r3, [sp, #44]
1406:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 294              		.loc 1 1406 0
 295 0170 0125     		movs	r5, #1
 296 0172 0C95     		str	r5, [sp, #48]
1407:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 297              		.loc 1 1407 0
 298 0174 0D94     		str	r4, [sp, #52]
1408:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 299              		.loc 1 1408 0
 300 0176 0E94     		str	r4, [sp, #56]
1409:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 301              		.loc 1 1409 0
 302 0178 0BA9     		add	r1, sp, #44
 303 017a 3E48     		ldr	r0, .L6+4
 304 017c FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 31


 305              	.LVL10:
1410:Src/main.c    **** 
1411:Src/main.c    ****   /*Configure GPIO pins : ARDUINO_D7_Pin ARDUINO_D8_Pin LCD_DISP_Pin */
1412:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_D7_Pin|ARDUINO_D8_Pin|LCD_DISP_Pin;
 306              		.loc 1 1412 0
 307 0180 41F20C03 		movw	r3, #4108
 308 0184 0B93     		str	r3, [sp, #44]
1413:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 309              		.loc 1 1413 0
 310 0186 0C95     		str	r5, [sp, #48]
1414:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 311              		.loc 1 1414 0
 312 0188 0D94     		str	r4, [sp, #52]
1415:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 313              		.loc 1 1415 0
 314 018a 0E94     		str	r4, [sp, #56]
1416:Src/main.c    ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 315              		.loc 1 1416 0
 316 018c 0BA9     		add	r1, sp, #44
 317 018e 3A48     		ldr	r0, .L6+8
 318 0190 FFF7FEFF 		bl	HAL_GPIO_Init
 319              	.LVL11:
1417:Src/main.c    **** 
1418:Src/main.c    ****   /*Configure GPIO pin : uSD_Detect_Pin */
1419:Src/main.c    ****   GPIO_InitStruct.Pin = uSD_Detect_Pin;
 320              		.loc 1 1419 0
 321 0194 4FF40059 		mov	r9, #8192
 322 0198 CDF82C90 		str	r9, [sp, #44]
1420:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 323              		.loc 1 1420 0
 324 019c 0C94     		str	r4, [sp, #48]
1421:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 325              		.loc 1 1421 0
 326 019e 0D94     		str	r4, [sp, #52]
1422:Src/main.c    ****   HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 327              		.loc 1 1422 0
 328 01a0 0BA9     		add	r1, sp, #44
 329 01a2 3C48     		ldr	r0, .L6+36
 330 01a4 FFF7FEFF 		bl	HAL_GPIO_Init
 331              	.LVL12:
1423:Src/main.c    **** 
1424:Src/main.c    ****   /*Configure GPIO pin : LCD_BL_CTRL_Pin */
1425:Src/main.c    ****   GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 332              		.loc 1 1425 0
 333 01a8 CDF82CA0 		str	r10, [sp, #44]
1426:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 334              		.loc 1 1426 0
 335 01ac 0C95     		str	r5, [sp, #48]
1427:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 336              		.loc 1 1427 0
 337 01ae 0D94     		str	r4, [sp, #52]
1428:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 338              		.loc 1 1428 0
 339 01b0 0E94     		str	r4, [sp, #56]
1429:Src/main.c    ****   HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 340              		.loc 1 1429 0
 341 01b2 0BA9     		add	r1, sp, #44
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 32


 342 01b4 3148     		ldr	r0, .L6+12
 343 01b6 FFF7FEFF 		bl	HAL_GPIO_Init
 344              	.LVL13:
1430:Src/main.c    **** 
1431:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
1432:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 345              		.loc 1 1432 0
 346 01ba 4FF0100A 		mov	r10, #16
 347 01be CDF82CA0 		str	r10, [sp, #44]
1433:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 348              		.loc 1 1433 0
 349 01c2 0C94     		str	r4, [sp, #48]
1434:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 350              		.loc 1 1434 0
 351 01c4 0D94     		str	r4, [sp, #52]
1435:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 352              		.loc 1 1435 0
 353 01c6 0BA9     		add	r1, sp, #44
 354 01c8 2A48     		ldr	r0, .L6+4
 355 01ca FFF7FEFF 		bl	HAL_GPIO_Init
 356              	.LVL14:
1436:Src/main.c    **** 
1437:Src/main.c    ****   /*Configure GPIO pins : TP3_Pin NC2_Pin */
1438:Src/main.c    ****   GPIO_InitStruct.Pin = TP3_Pin|NC2_Pin;
 357              		.loc 1 1438 0
 358 01ce 48F20403 		movw	r3, #32772
 359 01d2 0B93     		str	r3, [sp, #44]
1439:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 360              		.loc 1 1439 0
 361 01d4 0C94     		str	r4, [sp, #48]
1440:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 362              		.loc 1 1440 0
 363 01d6 0D94     		str	r4, [sp, #52]
1441:Src/main.c    ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 364              		.loc 1 1441 0
 365 01d8 0BA9     		add	r1, sp, #44
 366 01da 2948     		ldr	r0, .L6+16
 367 01dc FFF7FEFF 		bl	HAL_GPIO_Init
 368              	.LVL15:
1442:Src/main.c    **** 
1443:Src/main.c    ****   /*Configure GPIO pin : DCMI_PWR_EN_Pin */
1444:Src/main.c    ****   GPIO_InitStruct.Pin = DCMI_PWR_EN_Pin;
 369              		.loc 1 1444 0
 370 01e0 CDF82C90 		str	r9, [sp, #44]
1445:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 371              		.loc 1 1445 0
 372 01e4 0C95     		str	r5, [sp, #48]
1446:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 373              		.loc 1 1446 0
 374 01e6 0D94     		str	r4, [sp, #52]
1447:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 375              		.loc 1 1447 0
 376 01e8 0E94     		str	r4, [sp, #56]
1448:Src/main.c    ****   HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 377              		.loc 1 1448 0
 378 01ea 0BA9     		add	r1, sp, #44
 379 01ec 2448     		ldr	r0, .L6+16
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 33


 380 01ee FFF7FEFF 		bl	HAL_GPIO_Init
 381              	.LVL16:
1449:Src/main.c    **** 
1450:Src/main.c    ****   /*Configure GPIO pin : LCD_INT_Pin */
1451:Src/main.c    ****   GPIO_InitStruct.Pin = LCD_INT_Pin;
 382              		.loc 1 1451 0
 383 01f2 CDF82C90 		str	r9, [sp, #44]
1452:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 384              		.loc 1 1452 0
 385 01f6 CDF830B0 		str	fp, [sp, #48]
1453:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 386              		.loc 1 1453 0
 387 01fa 0D94     		str	r4, [sp, #52]
1454:Src/main.c    ****   HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 388              		.loc 1 1454 0
 389 01fc 0BA9     		add	r1, sp, #44
 390 01fe 1E48     		ldr	r0, .L6+8
 391 0200 FFF7FEFF 		bl	HAL_GPIO_Init
 392              	.LVL17:
1455:Src/main.c    **** 
1456:Src/main.c    ****   /*Configure GPIO pin : ULPI_NXT_Pin */
1457:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 393              		.loc 1 1457 0
 394 0204 CDF82CA0 		str	r10, [sp, #44]
1458:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 395              		.loc 1 1458 0
 396 0208 CDF83080 		str	r8, [sp, #48]
1459:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 397              		.loc 1 1459 0
 398 020c 0D94     		str	r4, [sp, #52]
1460:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 399              		.loc 1 1460 0
 400 020e 0E97     		str	r7, [sp, #56]
1461:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 401              		.loc 1 1461 0
 402 0210 0F96     		str	r6, [sp, #60]
1462:Src/main.c    ****   HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 403              		.loc 1 1462 0
 404 0212 0BA9     		add	r1, sp, #44
 405 0214 1A48     		ldr	r0, .L6+16
 406 0216 FFF7FEFF 		bl	HAL_GPIO_Init
 407              	.LVL18:
1463:Src/main.c    **** 
1464:Src/main.c    ****   /*Configure GPIO pins : ARDUINO_D4_Pin ARDUINO_D2_Pin EXT_RST_Pin */
1465:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin;
 408              		.loc 1 1465 0
 409 021a C823     		movs	r3, #200
 410 021c 0B93     		str	r3, [sp, #44]
1466:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 411              		.loc 1 1466 0
 412 021e 0C95     		str	r5, [sp, #48]
1467:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 413              		.loc 1 1467 0
 414 0220 0D94     		str	r4, [sp, #52]
1468:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 415              		.loc 1 1468 0
 416 0222 0E94     		str	r4, [sp, #56]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 34


1469:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 417              		.loc 1 1469 0
 418 0224 0BA9     		add	r1, sp, #44
 419 0226 1748     		ldr	r0, .L6+20
 420 0228 FFF7FEFF 		bl	HAL_GPIO_Init
 421              	.LVL19:
1470:Src/main.c    **** 
1471:Src/main.c    ****   /*Configure GPIO pins : ULPI_STP_Pin ULPI_DIR_Pin */
1472:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_STP_Pin|ULPI_DIR_Pin;
 422              		.loc 1 1472 0
 423 022c 0523     		movs	r3, #5
 424 022e 0B93     		str	r3, [sp, #44]
1473:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 425              		.loc 1 1473 0
 426 0230 CDF83080 		str	r8, [sp, #48]
1474:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 427              		.loc 1 1474 0
 428 0234 0D94     		str	r4, [sp, #52]
1475:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 429              		.loc 1 1475 0
 430 0236 0E97     		str	r7, [sp, #56]
1476:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 431              		.loc 1 1476 0
 432 0238 0F96     		str	r6, [sp, #60]
1477:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 433              		.loc 1 1477 0
 434 023a 0BA9     		add	r1, sp, #44
 435 023c 1548     		ldr	r0, .L6+36
 436 023e FFF7FEFF 		bl	HAL_GPIO_Init
 437              	.LVL20:
1478:Src/main.c    **** 
1479:Src/main.c    ****   /*Configure GPIO pin : RMII_RXER_Pin */
1480:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_RXER_Pin;
 438              		.loc 1 1480 0
 439 0242 0423     		movs	r3, #4
 440 0244 0B93     		str	r3, [sp, #44]
1481:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 441              		.loc 1 1481 0
 442 0246 0C94     		str	r4, [sp, #48]
1482:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 443              		.loc 1 1482 0
 444 0248 0D94     		str	r4, [sp, #52]
1483:Src/main.c    ****   HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 445              		.loc 1 1483 0
 446 024a 0BA9     		add	r1, sp, #44
 447 024c 0D48     		ldr	r0, .L6+20
 448 024e FFF7FEFF 		bl	HAL_GPIO_Init
 449              	.LVL21:
1484:Src/main.c    **** 
1485:Src/main.c    ****   /*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
1486:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_CLK_Pin|ULPI_D0_Pin;
 450              		.loc 1 1486 0
 451 0252 2823     		movs	r3, #40
 452 0254 0B93     		str	r3, [sp, #44]
1487:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 453              		.loc 1 1487 0
 454 0256 CDF83080 		str	r8, [sp, #48]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 35


1488:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 455              		.loc 1 1488 0
 456 025a 0D94     		str	r4, [sp, #52]
1489:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 457              		.loc 1 1489 0
 458 025c 0E97     		str	r7, [sp, #56]
1490:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 459              		.loc 1 1490 0
 460 025e 0F96     		str	r6, [sp, #60]
1491:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 461              		.loc 1 1491 0
 462 0260 0BA9     		add	r1, sp, #44
 463 0262 0D48     		ldr	r0, .L6+40
 464 0264 FFF7FEFF 		bl	HAL_GPIO_Init
 465              	.LVL22:
1492:Src/main.c    **** 
1493:Src/main.c    **** }
 466              		.loc 1 1493 0
 467 0268 11B0     		add	sp, sp, #68
 468              	.LCFI2:
 469              		.cfi_def_cfa_offset 36
 470              		@ sp needed
 471 026a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 472              	.L7:
 473 026e 00BF     		.align	2
 474              	.L6:
 475 0270 00380240 		.word	1073887232
 476 0274 000C0240 		.word	1073875968
 477 0278 00200240 		.word	1073881088
 478 027c 00280240 		.word	1073883136
 479 0280 001C0240 		.word	1073880064
 480 0284 00180240 		.word	1073879040
 481 0288 00100240 		.word	1073876992
 482 028c 00040240 		.word	1073873920
 483 0290 00240240 		.word	1073882112
 484 0294 00080240 		.word	1073874944
 485 0298 00000240 		.word	1073872896
 486 029c 00001210 		.word	269615104
 487              		.cfi_endproc
 488              	.LFE189:
 490              		.section	.text.lcd_start,"ax",%progbits
 491              		.align	1
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 495              		.fpu fpv5-sp-d16
 497              	lcd_start:
 498              	.LFB161:
 215:Src/main.c    ****   /* LCD Initialization */ 
 499              		.loc 1 215 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503 0000 08B5     		push	{r3, lr}
 504              	.LCFI3:
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 3, -8
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 36


 507              		.cfi_offset 14, -4
 217:Src/main.c    **** 
 508              		.loc 1 217 0
 509 0002 FFF7FEFF 		bl	BSP_LCD_Init
 510              	.LVL23:
 220:Src/main.c    ****   //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
 511              		.loc 1 220 0
 512 0006 4FF04041 		mov	r1, #-1073741824
 513 000a 0020     		movs	r0, #0
 514 000c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 515              	.LVL24:
 222:Src/main.c    **** 
 516              		.loc 1 222 0
 517 0010 1449     		ldr	r1, .L10
 518 0012 0120     		movs	r0, #1
 519 0014 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 520              	.LVL25:
 225:Src/main.c    ****   
 521              		.loc 1 225 0
 522 0018 FFF7FEFF 		bl	BSP_LCD_DisplayOn
 523              	.LVL26:
 228:Src/main.c    **** 
 524              		.loc 1 228 0
 525 001c 0020     		movs	r0, #0
 526 001e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 527              	.LVL27:
 231:Src/main.c    ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 528              		.loc 1 231 0
 529 0022 4FF0FF30 		mov	r0, #-1
 530 0026 FFF7FEFF 		bl	BSP_LCD_Clear
 531              	.LVL28:
 232:Src/main.c    ****   
 532              		.loc 1 232 0
 533 002a 4FF0FF30 		mov	r0, #-1
 534 002e FFF7FEFF 		bl	BSP_LCD_SetBackColor
 535              	.LVL29:
 234:Src/main.c    ****   
 536              		.loc 1 234 0
 537 0032 4FF0FF31 		mov	r1, #-1
 538 0036 0120     		movs	r0, #1
 539 0038 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
 540              	.LVL30:
 237:Src/main.c    **** 
 541              		.loc 1 237 0
 542 003c 0120     		movs	r0, #1
 543 003e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 544              	.LVL31:
 240:Src/main.c    ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 545              		.loc 1 240 0
 546 0042 4FF0FF30 		mov	r0, #-1
 547 0046 FFF7FEFF 		bl	BSP_LCD_Clear
 548              	.LVL32:
 241:Src/main.c    ****   
 549              		.loc 1 241 0
 550 004a 4FF0FF30 		mov	r0, #-1
 551 004e FFF7FEFF 		bl	BSP_LCD_SetBackColor
 552              	.LVL33:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 37


 245:Src/main.c    ****   BSP_LCD_SetTransparency(1, 255);
 553              		.loc 1 245 0
 554 0052 FF21     		movs	r1, #255
 555 0054 0020     		movs	r0, #0
 556 0056 FFF7FEFF 		bl	BSP_LCD_SetTransparency
 557              	.LVL34:
 246:Src/main.c    **** }
 558              		.loc 1 246 0
 559 005a FF21     		movs	r1, #255
 560 005c 0120     		movs	r0, #1
 561 005e FFF7FEFF 		bl	BSP_LCD_SetTransparency
 562              	.LVL35:
 247:Src/main.c    **** 
 563              		.loc 1 247 0
 564 0062 08BD     		pop	{r3, pc}
 565              	.L11:
 566              		.align	2
 567              	.L10:
 568 0064 00F807C0 		.word	-1073219584
 569              		.cfi_endproc
 570              	.LFE161:
 572              		.section	.text.StartDefaultTask,"ax",%progbits
 573              		.align	1
 574              		.global	StartDefaultTask
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu fpv5-sp-d16
 580              	StartDefaultTask:
 581              	.LFB190:
1494:Src/main.c    **** 
1495:Src/main.c    **** /* USER CODE BEGIN 4 */
1496:Src/main.c    **** 
1497:Src/main.c    **** static FIL file;
1498:Src/main.c    **** extern ApplicationTypeDef Appli_state;
1499:Src/main.c    **** 
1500:Src/main.c    **** /* USER CODE END 4 */
1501:Src/main.c    **** 
1502:Src/main.c    **** /* USER CODE BEGIN Header_StartDefaultTask */
1503:Src/main.c    **** /**
1504:Src/main.c    ****   * @brief  Function implementing the defaultTask thread.
1505:Src/main.c    ****   * @param  argument: Not used 
1506:Src/main.c    ****   * @retval None
1507:Src/main.c    ****   */
1508:Src/main.c    **** /* USER CODE END Header_StartDefaultTask */
1509:Src/main.c    **** void StartDefaultTask(void const * argument)
1510:Src/main.c    **** {
 582              		.loc 1 1510 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              	.LVL36:
 587 0000 08B5     		push	{r3, lr}
 588              	.LCFI4:
 589              		.cfi_def_cfa_offset 8
 590              		.cfi_offset 3, -8
 591              		.cfi_offset 14, -4
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 38


1511:Src/main.c    ****   /* init code for FATFS */
1512:Src/main.c    ****   MX_FATFS_Init();
 592              		.loc 1 1512 0
 593 0002 FFF7FEFF 		bl	MX_FATFS_Init
 594              	.LVL37:
1513:Src/main.c    **** 
1514:Src/main.c    ****   /* init code for USB_HOST */
1515:Src/main.c    ****   MX_USB_HOST_Init();
 595              		.loc 1 1515 0
 596 0006 FFF7FEFF 		bl	MX_USB_HOST_Init
 597              	.LVL38:
1516:Src/main.c    **** 
1517:Src/main.c    ****   /* init code for LWIP */
1518:Src/main.c    ****   //MX_LWIP_Init();
1519:Src/main.c    **** 
1520:Src/main.c    ****   /* USER CODE BEGIN 5 */
1521:Src/main.c    ****   //osThreadDef(netconn_thread, http_server_netconn_thread, osPriorityNormal, 0, 1024);
1522:Src/main.c    ****   //netconn_thread_handle = osThreadCreate(osThread(netconn_thread), NULL);
1523:Src/main.c    ****   
1524:Src/main.c    ****   vTaskDelay(1000);
 598              		.loc 1 1524 0
 599 000a 4FF47A70 		mov	r0, #1000
 600 000e FFF7FEFF 		bl	vTaskDelay
 601              	.LVL39:
1525:Src/main.c    ****   
1526:Src/main.c    ****   xprintf("waiting for USB mass storage\n");
 602              		.loc 1 1526 0
 603 0012 0E48     		ldr	r0, .L18
 604 0014 FFF7FEFF 		bl	xprintf
 605              	.LVL40:
 606              	.L13:
1527:Src/main.c    ****   
1528:Src/main.c    ****   do
1529:Src/main.c    ****   {
1530:Src/main.c    **** 	  xprintf(".");
 607              		.loc 1 1530 0 discriminator 1
 608 0018 0D48     		ldr	r0, .L18+4
 609 001a FFF7FEFF 		bl	xprintf
 610              	.LVL41:
1531:Src/main.c    **** 	  vTaskDelay(250);
 611              		.loc 1 1531 0 discriminator 1
 612 001e FA20     		movs	r0, #250
 613 0020 FFF7FEFF 		bl	vTaskDelay
 614              	.LVL42:
1532:Src/main.c    ****   }while(Appli_state != APPLICATION_READY);
 615              		.loc 1 1532 0 discriminator 1
 616 0024 0B4B     		ldr	r3, .L18+8
 617 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 618 0028 022B     		cmp	r3, #2
 619 002a F5D1     		bne	.L13
1533:Src/main.c    ****   
1534:Src/main.c    ****   FRESULT res;
1535:Src/main.c    ****   
1536:Src/main.c    ****   ////////////////////////////
1537:Src/main.c    ****   ////////////////////////////
1538:Src/main.c    ****   ////////////////////////////
1539:Src/main.c    ****   ////////////////////////////
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 39


1540:Src/main.c    ****   ////////////////////////////
1541:Src/main.c    ****   
1542:Src/main.c    ****   res = f_open(&file,"test.mp3",FA_READ);
 620              		.loc 1 1542 0
 621 002c 0122     		movs	r2, #1
 622 002e 0A49     		ldr	r1, .L18+12
 623 0030 0A48     		ldr	r0, .L18+16
 624 0032 FFF7FEFF 		bl	f_open
 625              	.LVL43:
1543:Src/main.c    ****   
1544:Src/main.c    ****   if(res==FR_OK)
 626              		.loc 1 1544 0
 627 0036 0146     		mov	r1, r0
 628 0038 18B9     		cbnz	r0, .L14
1545:Src/main.c    ****   {
1546:Src/main.c    **** 	  xprintf("mp3 file open OK\n");
 629              		.loc 1 1546 0
 630 003a 0948     		ldr	r0, .L18+20
 631              	.LVL44:
 632 003c FFF7FEFF 		bl	xprintf
 633              	.LVL45:
 634              	.L15:
 635 0040 FEE7     		b	.L15
 636              	.LVL46:
 637              	.L14:
1547:Src/main.c    ****   }
1548:Src/main.c    ****   else
1549:Src/main.c    ****   {
1550:Src/main.c    **** 	  xprintf("mp3 file open ERROR, res = %d\n",res);
 638              		.loc 1 1550 0
 639 0042 0848     		ldr	r0, .L18+24
 640              	.LVL47:
 641 0044 FFF7FEFF 		bl	xprintf
 642              	.LVL48:
 643              	.L16:
 644 0048 FEE7     		b	.L16
 645              	.L19:
 646 004a 00BF     		.align	2
 647              	.L18:
 648 004c 00000000 		.word	.LC2
 649 0050 20000000 		.word	.LC3
 650 0054 00000000 		.word	Appli_state
 651 0058 24000000 		.word	.LC4
 652 005c 00000000 		.word	.LANCHOR0
 653 0060 30000000 		.word	.LC5
 654 0064 44000000 		.word	.LC6
 655              		.cfi_endproc
 656              	.LFE190:
 658              		.section	.text.__io_putchar,"ax",%progbits
 659              		.align	1
 660              		.global	__io_putchar
 661              		.syntax unified
 662              		.thumb
 663              		.thumb_func
 664              		.fpu fpv5-sp-d16
 666              	__io_putchar:
 667              	.LFB159:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 40


 189:Src/main.c    **** 	uint8_t data = ch;
 668              		.loc 1 189 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              		@ link register save eliminated.
 673              	.LVL49:
 674              	.L21:
 194:Src/main.c    **** 		huart1.Instance->TDR = (uint16_t)data;
 675              		.loc 1 194 0 discriminator 1
 676 0000 044B     		ldr	r3, .L22
 677 0002 1B68     		ldr	r3, [r3]
 678 0004 DA69     		ldr	r2, [r3, #28]
 679 0006 12F0800F 		tst	r2, #128
 680 000a F9D0     		beq	.L21
 195:Src/main.c    **** 	#endif
 681              		.loc 1 195 0
 682 000c C0B2     		uxtb	r0, r0
 683              	.LVL50:
 684 000e 9862     		str	r0, [r3, #40]
 198:Src/main.c    **** 
 685              		.loc 1 198 0
 686 0010 0020     		movs	r0, #0
 687 0012 7047     		bx	lr
 688              	.L23:
 689              		.align	2
 690              	.L22:
 691 0014 00000000 		.word	huart1
 692              		.cfi_endproc
 693              	.LFE159:
 695              		.section	.text.inkey,"ax",%progbits
 696              		.align	1
 697              		.global	inkey
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 701              		.fpu fpv5-sp-d16
 703              	inkey:
 704              	.LFB160:
 201:Src/main.c    **** 	uint32_t flags = huart1.Instance->ISR;
 705              		.loc 1 201 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              		@ link register save eliminated.
 202:Src/main.c    **** 	
 710              		.loc 1 202 0
 711 0000 064B     		ldr	r3, .L27
 712 0002 1B68     		ldr	r3, [r3]
 713 0004 DA69     		ldr	r2, [r3, #28]
 714              	.LVL51:
 204:Src/main.c    **** 	{
 715              		.loc 1 204 0
 716 0006 12F0280F 		tst	r2, #40
 717 000a 04D0     		beq	.L26
 206:Src/main.c    **** 		return (huart1.Instance->RDR);
 718              		.loc 1 206 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 41


 719 000c 0822     		movs	r2, #8
 720              	.LVL52:
 721 000e 1A62     		str	r2, [r3, #32]
 207:Src/main.c    **** 	}
 722              		.loc 1 207 0
 723 0010 586A     		ldr	r0, [r3, #36]
 724 0012 C0B2     		uxtb	r0, r0
 725 0014 7047     		bx	lr
 726              	.LVL53:
 727              	.L26:
 210:Src/main.c    **** }
 728              		.loc 1 210 0
 729 0016 0020     		movs	r0, #0
 211:Src/main.c    **** 
 730              		.loc 1 211 0
 731 0018 7047     		bx	lr
 732              	.L28:
 733 001a 00BF     		.align	2
 734              	.L27:
 735 001c 00000000 		.word	huart1
 736              		.cfi_endproc
 737              	.LFE160:
 739              		.section	.text.draw_background,"ax",%progbits
 740              		.align	1
 741              		.global	draw_background
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu fpv5-sp-d16
 747              	draw_background:
 748              	.LFB162:
 251:Src/main.c    **** 	/* Select the LCD Background Layer  */
 749              		.loc 1 251 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753 0000 08B5     		push	{r3, lr}
 754              	.LCFI5:
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 3, -8
 757              		.cfi_offset 14, -4
 253:Src/main.c    **** 	BSP_LCD_SetTextColor(LCD_COLOR_GREEN);
 758              		.loc 1 253 0
 759 0002 0020     		movs	r0, #0
 760 0004 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 761              	.LVL54:
 254:Src/main.c    **** 	BSP_LCD_FillRect(0.4*LCD_X_SIZE,0.2*LCD_Y_SIZE,150,130);
 762              		.loc 1 254 0
 763 0008 4FF0FF20 		mov	r0, #-16711936
 764 000c FFF7FEFF 		bl	BSP_LCD_SetTextColor
 765              	.LVL55:
 255:Src/main.c    **** 	
 766              		.loc 1 255 0
 767 0010 8223     		movs	r3, #130
 768 0012 9622     		movs	r2, #150
 769 0014 3621     		movs	r1, #54
 770 0016 C020     		movs	r0, #192
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 42


 771 0018 FFF7FEFF 		bl	BSP_LCD_FillRect
 772              	.LVL56:
 258:Src/main.c    **** }
 773              		.loc 1 258 0
 774 001c 0120     		movs	r0, #1
 775 001e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 776              	.LVL57:
 259:Src/main.c    **** 
 777              		.loc 1 259 0
 778 0022 08BD     		pop	{r3, pc}
 779              		.cfi_endproc
 780              	.LFE162:
 782              		.section	.text.initialize_touchscreen,"ax",%progbits
 783              		.align	1
 784              		.global	initialize_touchscreen
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 788              		.fpu fpv5-sp-d16
 790              	initialize_touchscreen:
 791              	.LFB163:
 265:Src/main.c    **** 	uint8_t  status = 0;
 792              		.loc 1 265 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 0
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796 0000 10B5     		push	{r4, lr}
 797              	.LCFI6:
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 4, -8
 800              		.cfi_offset 14, -4
 801              	.LVL58:
 267:Src/main.c    **** 	if(status != TS_OK) return -1;
 802              		.loc 1 267 0
 803 0002 FFF7FEFF 		bl	BSP_LCD_GetXSize
 804              	.LVL59:
 805 0006 84B2     		uxth	r4, r0
 806 0008 FFF7FEFF 		bl	BSP_LCD_GetYSize
 807              	.LVL60:
 808 000c 81B2     		uxth	r1, r0
 809 000e 2046     		mov	r0, r4
 810 0010 FFF7FEFF 		bl	BSP_TS_Init
 811              	.LVL61:
 268:Src/main.c    **** 	return 0;
 812              		.loc 1 268 0
 813 0014 08B9     		cbnz	r0, .L35
 269:Src/main.c    **** }
 814              		.loc 1 269 0
 815 0016 0020     		movs	r0, #0
 816              	.LVL62:
 817              	.L31:
 270:Src/main.c    **** 
 818              		.loc 1 270 0
 819 0018 10BD     		pop	{r4, pc}
 820              	.LVL63:
 821              	.L35:
 268:Src/main.c    **** 	return 0;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 43


 822              		.loc 1 268 0
 823 001a 4FF0FF30 		mov	r0, #-1
 824              	.LVL64:
 825 001e FBE7     		b	.L31
 826              		.cfi_endproc
 827              	.LFE163:
 829              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 830              		.align	1
 831              		.global	HAL_TIM_PeriodElapsedCallback
 832              		.syntax unified
 833              		.thumb
 834              		.thumb_func
 835              		.fpu fpv5-sp-d16
 837              	HAL_TIM_PeriodElapsedCallback:
 838              	.LFB191:
1551:Src/main.c    **** 	  while(1);
1552:Src/main.c    ****   }
1553:Src/main.c    ****   
1554:Src/main.c    ****   
1555:Src/main.c    ****   /* Infinite loop */
1556:Src/main.c    ****   while(1);
1557:Src/main.c    ****   /* USER CODE END 5 */ 
1558:Src/main.c    **** }
1559:Src/main.c    **** 
1560:Src/main.c    **** /**
1561:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
1562:Src/main.c    ****   * @note   This function is called  when TIM6 interrupt took place, inside
1563:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
1564:Src/main.c    ****   * a global variable "uwTick" used as application time base.
1565:Src/main.c    ****   * @param  htim : TIM handle
1566:Src/main.c    ****   * @retval None
1567:Src/main.c    ****   */
1568:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1569:Src/main.c    **** {
 839              		.loc 1 1569 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              	.LVL65:
 844 0000 08B5     		push	{r3, lr}
 845              	.LCFI7:
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 3, -8
 848              		.cfi_offset 14, -4
1570:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
1571:Src/main.c    **** 
1572:Src/main.c    ****   /* USER CODE END Callback 0 */
1573:Src/main.c    ****   if (htim->Instance == TIM6) {
 849              		.loc 1 1573 0
 850 0002 0268     		ldr	r2, [r0]
 851 0004 034B     		ldr	r3, .L40
 852 0006 9A42     		cmp	r2, r3
 853 0008 00D0     		beq	.L39
 854              	.LVL66:
 855              	.L36:
1574:Src/main.c    ****     HAL_IncTick();
1575:Src/main.c    ****   }
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 44


1576:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
1577:Src/main.c    **** 
1578:Src/main.c    ****   /* USER CODE END Callback 1 */
1579:Src/main.c    **** }
 856              		.loc 1 1579 0
 857 000a 08BD     		pop	{r3, pc}
 858              	.LVL67:
 859              	.L39:
1574:Src/main.c    ****     HAL_IncTick();
 860              		.loc 1 1574 0
 861 000c FFF7FEFF 		bl	HAL_IncTick
 862              	.LVL68:
 863              		.loc 1 1579 0
 864 0010 FBE7     		b	.L36
 865              	.L41:
 866 0012 00BF     		.align	2
 867              	.L40:
 868 0014 00100040 		.word	1073745920
 869              		.cfi_endproc
 870              	.LFE191:
 872              		.section	.text._Error_Handler,"ax",%progbits
 873              		.align	1
 874              		.global	_Error_Handler
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 878              		.fpu fpv5-sp-d16
 880              	_Error_Handler:
 881              	.LFB192:
1580:Src/main.c    **** 
1581:Src/main.c    **** /**
1582:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
1583:Src/main.c    ****   * @param  file: The file name as string.
1584:Src/main.c    ****   * @param  line: The line in file as a number.
1585:Src/main.c    ****   * @retval None
1586:Src/main.c    ****   */
1587:Src/main.c    **** void _Error_Handler(char *file, int line)
1588:Src/main.c    **** {
 882              		.loc 1 1588 0
 883              		.cfi_startproc
 884              		@ Volatile: function does not return.
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              		@ link register save eliminated.
 888              	.LVL69:
 889              	.L43:
 890 0000 FEE7     		b	.L43
 891              		.cfi_endproc
 892              	.LFE192:
 894              		.section	.text.MX_ADC3_Init,"ax",%progbits
 895              		.align	1
 896              		.syntax unified
 897              		.thumb
 898              		.thumb_func
 899              		.fpu fpv5-sp-d16
 901              	MX_ADC3_Init:
 902              	.LFB166:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 45


 483:Src/main.c    **** 
 903              		.loc 1 483 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 16
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 483:Src/main.c    **** 
 907              		.loc 1 483 0
 908 0000 00B5     		push	{lr}
 909              	.LCFI8:
 910              		.cfi_def_cfa_offset 4
 911              		.cfi_offset 14, -4
 912 0002 85B0     		sub	sp, sp, #20
 913              	.LCFI9:
 914              		.cfi_def_cfa_offset 24
 489:Src/main.c    ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 915              		.loc 1 489 0
 916 0004 1648     		ldr	r0, .L50
 917 0006 174B     		ldr	r3, .L50+4
 918 0008 0360     		str	r3, [r0]
 490:Src/main.c    ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 919              		.loc 1 490 0
 920 000a 4FF48033 		mov	r3, #65536
 921 000e 4360     		str	r3, [r0, #4]
 491:Src/main.c    ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 922              		.loc 1 491 0
 923 0010 0023     		movs	r3, #0
 924 0012 8360     		str	r3, [r0, #8]
 492:Src/main.c    ****   hadc3.Init.ContinuousConvMode = DISABLE;
 925              		.loc 1 492 0
 926 0014 0361     		str	r3, [r0, #16]
 493:Src/main.c    ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 927              		.loc 1 493 0
 928 0016 8361     		str	r3, [r0, #24]
 494:Src/main.c    ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 929              		.loc 1 494 0
 930 0018 0362     		str	r3, [r0, #32]
 495:Src/main.c    ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 931              		.loc 1 495 0
 932 001a C362     		str	r3, [r0, #44]
 496:Src/main.c    ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 933              		.loc 1 496 0
 934 001c 124A     		ldr	r2, .L50+8
 935 001e 8262     		str	r2, [r0, #40]
 497:Src/main.c    ****   hadc3.Init.NbrOfConversion = 1;
 936              		.loc 1 497 0
 937 0020 C360     		str	r3, [r0, #12]
 498:Src/main.c    ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 938              		.loc 1 498 0
 939 0022 0122     		movs	r2, #1
 940 0024 C261     		str	r2, [r0, #28]
 499:Src/main.c    ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 941              		.loc 1 499 0
 942 0026 0363     		str	r3, [r0, #48]
 500:Src/main.c    ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 943              		.loc 1 500 0
 944 0028 4261     		str	r2, [r0, #20]
 501:Src/main.c    ****   {
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 46


 945              		.loc 1 501 0
 946 002a FFF7FEFF 		bl	HAL_ADC_Init
 947              	.LVL70:
 948 002e 68B9     		cbnz	r0, .L48
 508:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 949              		.loc 1 508 0
 950 0030 0423     		movs	r3, #4
 951 0032 0093     		str	r3, [sp]
 509:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 952              		.loc 1 509 0
 953 0034 0123     		movs	r3, #1
 954 0036 0193     		str	r3, [sp, #4]
 510:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 955              		.loc 1 510 0
 956 0038 0023     		movs	r3, #0
 957 003a 0293     		str	r3, [sp, #8]
 511:Src/main.c    ****   {
 958              		.loc 1 511 0
 959 003c 6946     		mov	r1, sp
 960 003e 0848     		ldr	r0, .L50
 961 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 962              	.LVL71:
 963 0044 38B9     		cbnz	r0, .L49
 516:Src/main.c    **** 
 964              		.loc 1 516 0
 965 0046 05B0     		add	sp, sp, #20
 966              	.LCFI10:
 967              		.cfi_remember_state
 968              		.cfi_def_cfa_offset 4
 969              		@ sp needed
 970 0048 5DF804FB 		ldr	pc, [sp], #4
 971              	.L48:
 972              	.LCFI11:
 973              		.cfi_restore_state
 503:Src/main.c    ****   }
 974              		.loc 1 503 0
 975 004c 40F2F711 		movw	r1, #503
 976 0050 0648     		ldr	r0, .L50+12
 977 0052 FFF7FEFF 		bl	_Error_Handler
 978              	.LVL72:
 979              	.L49:
 513:Src/main.c    ****   }
 980              		.loc 1 513 0
 981 0056 40F20121 		movw	r1, #513
 982 005a 0448     		ldr	r0, .L50+12
 983 005c FFF7FEFF 		bl	_Error_Handler
 984              	.LVL73:
 985              	.L51:
 986              		.align	2
 987              	.L50:
 988 0060 00000000 		.word	hadc3
 989 0064 00220140 		.word	1073816064
 990 0068 0100000F 		.word	251658241
 991 006c 00000000 		.word	.LC7
 992              		.cfi_endproc
 993              	.LFE166:
 995              		.section	.text.MX_CRC_Init,"ax",%progbits
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 47


 996              		.align	1
 997              		.syntax unified
 998              		.thumb
 999              		.thumb_func
 1000              		.fpu fpv5-sp-d16
 1002              	MX_CRC_Init:
 1003              	.LFB167:
 520:Src/main.c    **** 
 1004              		.loc 1 520 0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 0
 1007              		@ frame_needed = 0, uses_anonymous_args = 0
 1008 0000 08B5     		push	{r3, lr}
 1009              	.LCFI12:
 1010              		.cfi_def_cfa_offset 8
 1011              		.cfi_offset 3, -8
 1012              		.cfi_offset 14, -4
 522:Src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 1013              		.loc 1 522 0
 1014 0002 0948     		ldr	r0, .L56
 1015 0004 094B     		ldr	r3, .L56+4
 1016 0006 0360     		str	r3, [r0]
 523:Src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 1017              		.loc 1 523 0
 1018 0008 0023     		movs	r3, #0
 1019 000a 0371     		strb	r3, [r0, #4]
 524:Src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 1020              		.loc 1 524 0
 1021 000c 4371     		strb	r3, [r0, #5]
 525:Src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 1022              		.loc 1 525 0
 1023 000e 4361     		str	r3, [r0, #20]
 526:Src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 1024              		.loc 1 526 0
 1025 0010 8361     		str	r3, [r0, #24]
 527:Src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 1026              		.loc 1 527 0
 1027 0012 0123     		movs	r3, #1
 1028 0014 0362     		str	r3, [r0, #32]
 528:Src/main.c    ****   {
 1029              		.loc 1 528 0
 1030 0016 FFF7FEFF 		bl	HAL_CRC_Init
 1031              	.LVL74:
 1032 001a 00B9     		cbnz	r0, .L55
 533:Src/main.c    **** 
 1033              		.loc 1 533 0
 1034 001c 08BD     		pop	{r3, pc}
 1035              	.L55:
 530:Src/main.c    ****   }
 1036              		.loc 1 530 0
 1037 001e 40F21221 		movw	r1, #530
 1038 0022 0348     		ldr	r0, .L56+8
 1039 0024 FFF7FEFF 		bl	_Error_Handler
 1040              	.LVL75:
 1041              	.L57:
 1042              		.align	2
 1043              	.L56:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 48


 1044 0028 00000000 		.word	hcrc
 1045 002c 00300240 		.word	1073885184
 1046 0030 00000000 		.word	.LC7
 1047              		.cfi_endproc
 1048              	.LFE167:
 1050              		.section	.text.MX_DCMI_Init,"ax",%progbits
 1051              		.align	1
 1052              		.syntax unified
 1053              		.thumb
 1054              		.thumb_func
 1055              		.fpu fpv5-sp-d16
 1057              	MX_DCMI_Init:
 1058              	.LFB168:
 537:Src/main.c    **** 
 1059              		.loc 1 537 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063 0000 08B5     		push	{r3, lr}
 1064              	.LCFI13:
 1065              		.cfi_def_cfa_offset 8
 1066              		.cfi_offset 3, -8
 1067              		.cfi_offset 14, -4
 539:Src/main.c    ****   hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 1068              		.loc 1 539 0
 1069 0002 0C48     		ldr	r0, .L62
 1070 0004 0C4B     		ldr	r3, .L62+4
 1071 0006 0360     		str	r3, [r0]
 540:Src/main.c    ****   hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 1072              		.loc 1 540 0
 1073 0008 0023     		movs	r3, #0
 1074 000a 4360     		str	r3, [r0, #4]
 541:Src/main.c    ****   hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 1075              		.loc 1 541 0
 1076 000c 8360     		str	r3, [r0, #8]
 542:Src/main.c    ****   hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 1077              		.loc 1 542 0
 1078 000e C360     		str	r3, [r0, #12]
 543:Src/main.c    ****   hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 1079              		.loc 1 543 0
 1080 0010 0361     		str	r3, [r0, #16]
 544:Src/main.c    ****   hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
 1081              		.loc 1 544 0
 1082 0012 4361     		str	r3, [r0, #20]
 545:Src/main.c    ****   hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 1083              		.loc 1 545 0
 1084 0014 8361     		str	r3, [r0, #24]
 546:Src/main.c    ****   hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 1085              		.loc 1 546 0
 1086 0016 0362     		str	r3, [r0, #32]
 547:Src/main.c    ****   hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 1087              		.loc 1 547 0
 1088 0018 4362     		str	r3, [r0, #36]
 548:Src/main.c    ****   hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 1089              		.loc 1 548 0
 1090 001a 8362     		str	r3, [r0, #40]
 549:Src/main.c    ****   hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 49


 1091              		.loc 1 549 0
 1092 001c C362     		str	r3, [r0, #44]
 550:Src/main.c    ****   if (HAL_DCMI_Init(&hdcmi) != HAL_OK)
 1093              		.loc 1 550 0
 1094 001e 0363     		str	r3, [r0, #48]
 551:Src/main.c    ****   {
 1095              		.loc 1 551 0
 1096 0020 FFF7FEFF 		bl	HAL_DCMI_Init
 1097              	.LVL76:
 1098 0024 00B9     		cbnz	r0, .L61
 556:Src/main.c    **** 
 1099              		.loc 1 556 0
 1100 0026 08BD     		pop	{r3, pc}
 1101              	.L61:
 553:Src/main.c    ****   }
 1102              		.loc 1 553 0
 1103 0028 40F22921 		movw	r1, #553
 1104 002c 0348     		ldr	r0, .L62+8
 1105 002e FFF7FEFF 		bl	_Error_Handler
 1106              	.LVL77:
 1107              	.L63:
 1108 0032 00BF     		.align	2
 1109              	.L62:
 1110 0034 00000000 		.word	hdcmi
 1111 0038 00000550 		.word	1342504960
 1112 003c 00000000 		.word	.LC7
 1113              		.cfi_endproc
 1114              	.LFE168:
 1116              		.section	.text.MX_DMA2D_Init,"ax",%progbits
 1117              		.align	1
 1118              		.syntax unified
 1119              		.thumb
 1120              		.thumb_func
 1121              		.fpu fpv5-sp-d16
 1123              	MX_DMA2D_Init:
 1124              	.LFB169:
 560:Src/main.c    **** 
 1125              		.loc 1 560 0
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 0
 1128              		@ frame_needed = 0, uses_anonymous_args = 0
 1129 0000 08B5     		push	{r3, lr}
 1130              	.LCFI14:
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 3, -8
 1133              		.cfi_offset 14, -4
 562:Src/main.c    ****   hdma2d.Init.Mode = DMA2D_M2M;
 1134              		.loc 1 562 0
 1135 0002 0F48     		ldr	r0, .L70
 1136 0004 0F4B     		ldr	r3, .L70+4
 1137 0006 0360     		str	r3, [r0]
 563:Src/main.c    ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 1138              		.loc 1 563 0
 1139 0008 0023     		movs	r3, #0
 1140 000a 4360     		str	r3, [r0, #4]
 564:Src/main.c    ****   hdma2d.Init.OutputOffset = 0;
 1141              		.loc 1 564 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 50


 1142 000c 8360     		str	r3, [r0, #8]
 565:Src/main.c    ****   hdma2d.LayerCfg[1].InputOffset = 0;
 1143              		.loc 1 565 0
 1144 000e C360     		str	r3, [r0, #12]
 566:Src/main.c    ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 1145              		.loc 1 566 0
 1146 0010 8362     		str	r3, [r0, #40]
 567:Src/main.c    ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 1147              		.loc 1 567 0
 1148 0012 C362     		str	r3, [r0, #44]
 568:Src/main.c    ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 1149              		.loc 1 568 0
 1150 0014 0363     		str	r3, [r0, #48]
 569:Src/main.c    ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 1151              		.loc 1 569 0
 1152 0016 4363     		str	r3, [r0, #52]
 570:Src/main.c    ****   {
 1153              		.loc 1 570 0
 1154 0018 FFF7FEFF 		bl	HAL_DMA2D_Init
 1155              	.LVL78:
 1156 001c 28B9     		cbnz	r0, .L68
 575:Src/main.c    ****   {
 1157              		.loc 1 575 0
 1158 001e 0121     		movs	r1, #1
 1159 0020 0748     		ldr	r0, .L70
 1160 0022 FFF7FEFF 		bl	HAL_DMA2D_ConfigLayer
 1161              	.LVL79:
 1162 0026 28B9     		cbnz	r0, .L69
 580:Src/main.c    **** 
 1163              		.loc 1 580 0
 1164 0028 08BD     		pop	{r3, pc}
 1165              	.L68:
 572:Src/main.c    ****   }
 1166              		.loc 1 572 0
 1167 002a 4FF40F71 		mov	r1, #572
 1168 002e 0648     		ldr	r0, .L70+8
 1169 0030 FFF7FEFF 		bl	_Error_Handler
 1170              	.LVL80:
 1171              	.L69:
 577:Src/main.c    ****   }
 1172              		.loc 1 577 0
 1173 0034 40F24121 		movw	r1, #577
 1174 0038 0348     		ldr	r0, .L70+8
 1175 003a FFF7FEFF 		bl	_Error_Handler
 1176              	.LVL81:
 1177              	.L71:
 1178 003e 00BF     		.align	2
 1179              	.L70:
 1180 0040 00000000 		.word	hdma2d
 1181 0044 00B00240 		.word	1073917952
 1182 0048 00000000 		.word	.LC7
 1183              		.cfi_endproc
 1184              	.LFE169:
 1186              		.section	.text.MX_FMC_Init,"ax",%progbits
 1187              		.align	1
 1188              		.syntax unified
 1189              		.thumb
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 51


 1190              		.thumb_func
 1191              		.fpu fpv5-sp-d16
 1193              	MX_FMC_Init:
 1194              	.LFB188:
1288:Src/main.c    ****   FMC_SDRAM_TimingTypeDef SdramTiming;
 1195              		.loc 1 1288 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 32
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199 0000 00B5     		push	{lr}
 1200              	.LCFI15:
 1201              		.cfi_def_cfa_offset 4
 1202              		.cfi_offset 14, -4
 1203 0002 89B0     		sub	sp, sp, #36
 1204              	.LCFI16:
 1205              		.cfi_def_cfa_offset 40
1293:Src/main.c    ****   /* hsdram1.Init */
 1206              		.loc 1 1293 0
 1207 0004 1648     		ldr	r0, .L76
 1208 0006 174B     		ldr	r3, .L76+4
 1209 0008 0360     		str	r3, [r0]
1295:Src/main.c    ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 1210              		.loc 1 1295 0
 1211 000a 0023     		movs	r3, #0
 1212 000c 4360     		str	r3, [r0, #4]
1296:Src/main.c    ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 1213              		.loc 1 1296 0
 1214 000e 8360     		str	r3, [r0, #8]
1297:Src/main.c    ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 1215              		.loc 1 1297 0
 1216 0010 0421     		movs	r1, #4
 1217 0012 C160     		str	r1, [r0, #12]
1298:Src/main.c    ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 1218              		.loc 1 1298 0
 1219 0014 1022     		movs	r2, #16
 1220 0016 0261     		str	r2, [r0, #16]
1299:Src/main.c    ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 1221              		.loc 1 1299 0
 1222 0018 4022     		movs	r2, #64
 1223 001a 4261     		str	r2, [r0, #20]
1300:Src/main.c    ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 1224              		.loc 1 1300 0
 1225 001c 4FF4C072 		mov	r2, #384
 1226 0020 8261     		str	r2, [r0, #24]
1301:Src/main.c    ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 1227              		.loc 1 1301 0
 1228 0022 C361     		str	r3, [r0, #28]
1302:Src/main.c    ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 1229              		.loc 1 1302 0
 1230 0024 4FF40062 		mov	r2, #2048
 1231 0028 0262     		str	r2, [r0, #32]
1303:Src/main.c    ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 1232              		.loc 1 1303 0
 1233 002a 4FF48052 		mov	r2, #4096
 1234 002e 4262     		str	r2, [r0, #36]
1304:Src/main.c    ****   /* SdramTiming */
 1235              		.loc 1 1304 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 52


 1236 0030 8362     		str	r3, [r0, #40]
1306:Src/main.c    ****   SdramTiming.ExitSelfRefreshDelay = 7;
 1237              		.loc 1 1306 0
 1238 0032 0223     		movs	r3, #2
 1239 0034 0193     		str	r3, [sp, #4]
1307:Src/main.c    ****   SdramTiming.SelfRefreshTime = 4;
 1240              		.loc 1 1307 0
 1241 0036 0722     		movs	r2, #7
 1242 0038 0292     		str	r2, [sp, #8]
1308:Src/main.c    ****   SdramTiming.RowCycleDelay = 7;
 1243              		.loc 1 1308 0
 1244 003a 0391     		str	r1, [sp, #12]
1309:Src/main.c    ****   SdramTiming.WriteRecoveryTime = 3;
 1245              		.loc 1 1309 0
 1246 003c 0492     		str	r2, [sp, #16]
1310:Src/main.c    ****   SdramTiming.RPDelay = 2;
 1247              		.loc 1 1310 0
 1248 003e 0322     		movs	r2, #3
 1249 0040 0592     		str	r2, [sp, #20]
1311:Src/main.c    ****   SdramTiming.RCDDelay = 2;
 1250              		.loc 1 1311 0
 1251 0042 0693     		str	r3, [sp, #24]
1312:Src/main.c    **** 
 1252              		.loc 1 1312 0
 1253 0044 0793     		str	r3, [sp, #28]
1314:Src/main.c    ****   {
 1254              		.loc 1 1314 0
 1255 0046 6944     		add	r1, sp, r1
 1256 0048 FFF7FEFF 		bl	HAL_SDRAM_Init
 1257              	.LVL82:
 1258 004c 10B9     		cbnz	r0, .L75
1319:Src/main.c    **** 
 1259              		.loc 1 1319 0
 1260 004e 09B0     		add	sp, sp, #36
 1261              	.LCFI17:
 1262              		.cfi_remember_state
 1263              		.cfi_def_cfa_offset 4
 1264              		@ sp needed
 1265 0050 5DF804FB 		ldr	pc, [sp], #4
 1266              	.L75:
 1267              	.LCFI18:
 1268              		.cfi_restore_state
1316:Src/main.c    ****   }
 1269              		.loc 1 1316 0
 1270 0054 40F22451 		movw	r1, #1316
 1271 0058 0348     		ldr	r0, .L76+8
 1272 005a FFF7FEFF 		bl	_Error_Handler
 1273              	.LVL83:
 1274              	.L77:
 1275 005e 00BF     		.align	2
 1276              	.L76:
 1277 0060 00000000 		.word	hsdram1
 1278 0064 400100A0 		.word	-1610612416
 1279 0068 00000000 		.word	.LC7
 1280              		.cfi_endproc
 1281              	.LFE188:
 1283              		.section	.text.MX_I2C1_Init,"ax",%progbits
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 53


 1284              		.align	1
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1288              		.fpu fpv5-sp-d16
 1290              	MX_I2C1_Init:
 1291              	.LFB170:
 584:Src/main.c    **** 
 1292              		.loc 1 584 0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296 0000 08B5     		push	{r3, lr}
 1297              	.LCFI19:
 1298              		.cfi_def_cfa_offset 8
 1299              		.cfi_offset 3, -8
 1300              		.cfi_offset 14, -4
 586:Src/main.c    ****   hi2c1.Init.Timing = 0x00C0EAFF;
 1301              		.loc 1 586 0
 1302 0002 1548     		ldr	r0, .L86
 1303 0004 154B     		ldr	r3, .L86+4
 1304 0006 0360     		str	r3, [r0]
 587:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 1305              		.loc 1 587 0
 1306 0008 154B     		ldr	r3, .L86+8
 1307 000a 4360     		str	r3, [r0, #4]
 588:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1308              		.loc 1 588 0
 1309 000c 0023     		movs	r3, #0
 1310 000e 8360     		str	r3, [r0, #8]
 589:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1311              		.loc 1 589 0
 1312 0010 0122     		movs	r2, #1
 1313 0012 C260     		str	r2, [r0, #12]
 590:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 1314              		.loc 1 590 0
 1315 0014 0361     		str	r3, [r0, #16]
 591:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1316              		.loc 1 591 0
 1317 0016 4361     		str	r3, [r0, #20]
 592:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1318              		.loc 1 592 0
 1319 0018 8361     		str	r3, [r0, #24]
 593:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1320              		.loc 1 593 0
 1321 001a C361     		str	r3, [r0, #28]
 594:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1322              		.loc 1 594 0
 1323 001c 0362     		str	r3, [r0, #32]
 595:Src/main.c    ****   {
 1324              		.loc 1 595 0
 1325 001e FFF7FEFF 		bl	HAL_I2C_Init
 1326              	.LVL84:
 1327 0022 50B9     		cbnz	r0, .L83
 602:Src/main.c    ****   {
 1328              		.loc 1 602 0
 1329 0024 0021     		movs	r1, #0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 54


 1330 0026 0C48     		ldr	r0, .L86
 1331 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1332              	.LVL85:
 1333 002c 50B9     		cbnz	r0, .L84
 609:Src/main.c    ****   {
 1334              		.loc 1 609 0
 1335 002e 0021     		movs	r1, #0
 1336 0030 0948     		ldr	r0, .L86
 1337 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1338              	.LVL86:
 1339 0036 50B9     		cbnz	r0, .L85
 614:Src/main.c    **** 
 1340              		.loc 1 614 0
 1341 0038 08BD     		pop	{r3, pc}
 1342              	.L83:
 597:Src/main.c    ****   }
 1343              		.loc 1 597 0
 1344 003a 40F25521 		movw	r1, #597
 1345 003e 0948     		ldr	r0, .L86+12
 1346 0040 FFF7FEFF 		bl	_Error_Handler
 1347              	.LVL87:
 1348              	.L84:
 604:Src/main.c    ****   }
 1349              		.loc 1 604 0
 1350 0044 4FF41771 		mov	r1, #604
 1351 0048 0648     		ldr	r0, .L86+12
 1352 004a FFF7FEFF 		bl	_Error_Handler
 1353              	.LVL88:
 1354              	.L85:
 611:Src/main.c    ****   }
 1355              		.loc 1 611 0
 1356 004e 40F26321 		movw	r1, #611
 1357 0052 0448     		ldr	r0, .L86+12
 1358 0054 FFF7FEFF 		bl	_Error_Handler
 1359              	.LVL89:
 1360              	.L87:
 1361              		.align	2
 1362              	.L86:
 1363 0058 00000000 		.word	hi2c1
 1364 005c 00540040 		.word	1073763328
 1365 0060 FFEAC000 		.word	12643071
 1366 0064 00000000 		.word	.LC7
 1367              		.cfi_endproc
 1368              	.LFE170:
 1370              		.section	.text.MX_I2C3_Init,"ax",%progbits
 1371              		.align	1
 1372              		.syntax unified
 1373              		.thumb
 1374              		.thumb_func
 1375              		.fpu fpv5-sp-d16
 1377              	MX_I2C3_Init:
 1378              	.LFB171:
 618:Src/main.c    **** 
 1379              		.loc 1 618 0
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 0
 1382              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 55


 1383 0000 08B5     		push	{r3, lr}
 1384              	.LCFI20:
 1385              		.cfi_def_cfa_offset 8
 1386              		.cfi_offset 3, -8
 1387              		.cfi_offset 14, -4
 620:Src/main.c    ****   hi2c3.Init.Timing = 0x00C0EAFF;
 1388              		.loc 1 620 0
 1389 0002 1548     		ldr	r0, .L96
 1390 0004 154B     		ldr	r3, .L96+4
 1391 0006 0360     		str	r3, [r0]
 621:Src/main.c    ****   hi2c3.Init.OwnAddress1 = 0;
 1392              		.loc 1 621 0
 1393 0008 154B     		ldr	r3, .L96+8
 1394 000a 4360     		str	r3, [r0, #4]
 622:Src/main.c    ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1395              		.loc 1 622 0
 1396 000c 0023     		movs	r3, #0
 1397 000e 8360     		str	r3, [r0, #8]
 623:Src/main.c    ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1398              		.loc 1 623 0
 1399 0010 0122     		movs	r2, #1
 1400 0012 C260     		str	r2, [r0, #12]
 624:Src/main.c    ****   hi2c3.Init.OwnAddress2 = 0;
 1401              		.loc 1 624 0
 1402 0014 0361     		str	r3, [r0, #16]
 625:Src/main.c    ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1403              		.loc 1 625 0
 1404 0016 4361     		str	r3, [r0, #20]
 626:Src/main.c    ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1405              		.loc 1 626 0
 1406 0018 8361     		str	r3, [r0, #24]
 627:Src/main.c    ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1407              		.loc 1 627 0
 1408 001a C361     		str	r3, [r0, #28]
 628:Src/main.c    ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 1409              		.loc 1 628 0
 1410 001c 0362     		str	r3, [r0, #32]
 629:Src/main.c    ****   {
 1411              		.loc 1 629 0
 1412 001e FFF7FEFF 		bl	HAL_I2C_Init
 1413              	.LVL90:
 1414 0022 50B9     		cbnz	r0, .L93
 636:Src/main.c    ****   {
 1415              		.loc 1 636 0
 1416 0024 0021     		movs	r1, #0
 1417 0026 0C48     		ldr	r0, .L96
 1418 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1419              	.LVL91:
 1420 002c 50B9     		cbnz	r0, .L94
 643:Src/main.c    ****   {
 1421              		.loc 1 643 0
 1422 002e 0021     		movs	r1, #0
 1423 0030 0948     		ldr	r0, .L96
 1424 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1425              	.LVL92:
 1426 0036 50B9     		cbnz	r0, .L95
 648:Src/main.c    **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 56


 1427              		.loc 1 648 0
 1428 0038 08BD     		pop	{r3, pc}
 1429              	.L93:
 631:Src/main.c    ****   }
 1430              		.loc 1 631 0
 1431 003a 40F27721 		movw	r1, #631
 1432 003e 0948     		ldr	r0, .L96+12
 1433 0040 FFF7FEFF 		bl	_Error_Handler
 1434              	.LVL93:
 1435              	.L94:
 638:Src/main.c    ****   }
 1436              		.loc 1 638 0
 1437 0044 40F27E21 		movw	r1, #638
 1438 0048 0648     		ldr	r0, .L96+12
 1439 004a FFF7FEFF 		bl	_Error_Handler
 1440              	.LVL94:
 1441              	.L95:
 645:Src/main.c    ****   }
 1442              		.loc 1 645 0
 1443 004e 40F28521 		movw	r1, #645
 1444 0052 0448     		ldr	r0, .L96+12
 1445 0054 FFF7FEFF 		bl	_Error_Handler
 1446              	.LVL95:
 1447              	.L97:
 1448              		.align	2
 1449              	.L96:
 1450 0058 00000000 		.word	hi2c3
 1451 005c 005C0040 		.word	1073765376
 1452 0060 FFEAC000 		.word	12643071
 1453 0064 00000000 		.word	.LC7
 1454              		.cfi_endproc
 1455              	.LFE171:
 1457              		.section	.text.MX_LTDC_Init,"ax",%progbits
 1458              		.align	1
 1459              		.syntax unified
 1460              		.thumb
 1461              		.thumb_func
 1462              		.fpu fpv5-sp-d16
 1464              	MX_LTDC_Init:
 1465              	.LFB172:
 652:Src/main.c    **** 
 1466              		.loc 1 652 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 56
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470 0000 00B5     		push	{lr}
 1471              	.LCFI21:
 1472              		.cfi_def_cfa_offset 4
 1473              		.cfi_offset 14, -4
 1474 0002 8FB0     		sub	sp, sp, #60
 1475              	.LCFI22:
 1476              		.cfi_def_cfa_offset 64
 656:Src/main.c    ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 1477              		.loc 1 656 0
 1478 0004 2948     		ldr	r0, .L104
 1479 0006 2A4B     		ldr	r3, .L104+4
 1480 0008 0360     		str	r3, [r0]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 57


 657:Src/main.c    ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 1481              		.loc 1 657 0
 1482 000a 0023     		movs	r3, #0
 1483 000c 4360     		str	r3, [r0, #4]
 658:Src/main.c    ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 1484              		.loc 1 658 0
 1485 000e 8360     		str	r3, [r0, #8]
 659:Src/main.c    ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 1486              		.loc 1 659 0
 1487 0010 C360     		str	r3, [r0, #12]
 660:Src/main.c    ****   hltdc.Init.HorizontalSync = 40;
 1488              		.loc 1 660 0
 1489 0012 0361     		str	r3, [r0, #16]
 661:Src/main.c    ****   hltdc.Init.VerticalSync = 9;
 1490              		.loc 1 661 0
 1491 0014 2822     		movs	r2, #40
 1492 0016 4261     		str	r2, [r0, #20]
 662:Src/main.c    ****   hltdc.Init.AccumulatedHBP = 53;
 1493              		.loc 1 662 0
 1494 0018 0922     		movs	r2, #9
 1495 001a 8261     		str	r2, [r0, #24]
 663:Src/main.c    ****   hltdc.Init.AccumulatedVBP = 11;
 1496              		.loc 1 663 0
 1497 001c 3522     		movs	r2, #53
 1498 001e C261     		str	r2, [r0, #28]
 664:Src/main.c    ****   hltdc.Init.AccumulatedActiveW = 533;
 1499              		.loc 1 664 0
 1500 0020 0B22     		movs	r2, #11
 1501 0022 0262     		str	r2, [r0, #32]
 665:Src/main.c    ****   hltdc.Init.AccumulatedActiveH = 283;
 1502              		.loc 1 665 0
 1503 0024 40F21522 		movw	r2, #533
 1504 0028 4262     		str	r2, [r0, #36]
 666:Src/main.c    ****   hltdc.Init.TotalWidth = 565;
 1505              		.loc 1 666 0
 1506 002a 40F21B12 		movw	r2, #283
 1507 002e 8262     		str	r2, [r0, #40]
 667:Src/main.c    ****   hltdc.Init.TotalHeigh = 285;
 1508              		.loc 1 667 0
 1509 0030 40F23522 		movw	r2, #565
 1510 0034 C262     		str	r2, [r0, #44]
 668:Src/main.c    ****   hltdc.Init.Backcolor.Blue = 0;
 1511              		.loc 1 668 0
 1512 0036 40F21D12 		movw	r2, #285
 1513 003a 0263     		str	r2, [r0, #48]
 669:Src/main.c    ****   hltdc.Init.Backcolor.Green = 0;
 1514              		.loc 1 669 0
 1515 003c 80F83430 		strb	r3, [r0, #52]
 670:Src/main.c    ****   hltdc.Init.Backcolor.Red = 0;
 1516              		.loc 1 670 0
 1517 0040 80F83530 		strb	r3, [r0, #53]
 671:Src/main.c    ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 1518              		.loc 1 671 0
 1519 0044 80F83630 		strb	r3, [r0, #54]
 672:Src/main.c    ****   {
 1520              		.loc 1 672 0
 1521 0048 FFF7FEFF 		bl	HAL_LTDC_Init
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 58


 1522              	.LVL96:
 1523 004c 20BB     		cbnz	r0, .L102
 677:Src/main.c    ****   pLayerCfg.WindowX1 = 480;
 1524              		.loc 1 677 0
 1525 004e 0022     		movs	r2, #0
 1526 0050 0192     		str	r2, [sp, #4]
 678:Src/main.c    ****   pLayerCfg.WindowY0 = 0;
 1527              		.loc 1 678 0
 1528 0052 4FF4F071 		mov	r1, #480
 1529 0056 0291     		str	r1, [sp, #8]
 679:Src/main.c    ****   pLayerCfg.WindowY1 = 272;
 1530              		.loc 1 679 0
 1531 0058 0392     		str	r2, [sp, #12]
 680:Src/main.c    ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
 1532              		.loc 1 680 0
 1533 005a 4FF48873 		mov	r3, #272
 1534 005e 0493     		str	r3, [sp, #16]
 681:Src/main.c    ****   pLayerCfg.Alpha = 255;
 1535              		.loc 1 681 0
 1536 0060 0592     		str	r2, [sp, #20]
 682:Src/main.c    ****   pLayerCfg.Alpha0 = 0;
 1537              		.loc 1 682 0
 1538 0062 FF20     		movs	r0, #255
 1539 0064 0690     		str	r0, [sp, #24]
 683:Src/main.c    ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 1540              		.loc 1 683 0
 1541 0066 0792     		str	r2, [sp, #28]
 684:Src/main.c    ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 1542              		.loc 1 684 0
 1543 0068 4FF4C060 		mov	r0, #1536
 1544 006c 0890     		str	r0, [sp, #32]
 685:Src/main.c    ****   pLayerCfg.FBStartAdress = 0xC0000000;
 1545              		.loc 1 685 0
 1546 006e 0720     		movs	r0, #7
 1547 0070 0990     		str	r0, [sp, #36]
 686:Src/main.c    ****   pLayerCfg.ImageWidth = 480;
 1548              		.loc 1 686 0
 1549 0072 4FF04040 		mov	r0, #-1073741824
 1550 0076 0A90     		str	r0, [sp, #40]
 687:Src/main.c    ****   pLayerCfg.ImageHeight = 272;
 1551              		.loc 1 687 0
 1552 0078 0B91     		str	r1, [sp, #44]
 688:Src/main.c    ****   pLayerCfg.Backcolor.Blue = 0;
 1553              		.loc 1 688 0
 1554 007a 0C93     		str	r3, [sp, #48]
 689:Src/main.c    ****   pLayerCfg.Backcolor.Green = 0;
 1555              		.loc 1 689 0
 1556 007c 8DF83420 		strb	r2, [sp, #52]
 690:Src/main.c    ****   pLayerCfg.Backcolor.Red = 0;
 1557              		.loc 1 690 0
 1558 0080 8DF83520 		strb	r2, [sp, #53]
 691:Src/main.c    ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 1559              		.loc 1 691 0
 1560 0084 8DF83620 		strb	r2, [sp, #54]
 692:Src/main.c    ****   {
 1561              		.loc 1 692 0
 1562 0088 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 59


 1563 008a 0848     		ldr	r0, .L104
 1564 008c FFF7FEFF 		bl	HAL_LTDC_ConfigLayer
 1565              	.LVL97:
 1566 0090 38B9     		cbnz	r0, .L103
 697:Src/main.c    **** 
 1567              		.loc 1 697 0
 1568 0092 0FB0     		add	sp, sp, #60
 1569              	.LCFI23:
 1570              		.cfi_remember_state
 1571              		.cfi_def_cfa_offset 4
 1572              		@ sp needed
 1573 0094 5DF804FB 		ldr	pc, [sp], #4
 1574              	.L102:
 1575              	.LCFI24:
 1576              		.cfi_restore_state
 674:Src/main.c    ****   }
 1577              		.loc 1 674 0
 1578 0098 40F2A221 		movw	r1, #674
 1579 009c 0548     		ldr	r0, .L104+8
 1580 009e FFF7FEFF 		bl	_Error_Handler
 1581              	.LVL98:
 1582              	.L103:
 694:Src/main.c    ****   }
 1583              		.loc 1 694 0
 1584 00a2 40F2B621 		movw	r1, #694
 1585 00a6 0348     		ldr	r0, .L104+8
 1586 00a8 FFF7FEFF 		bl	_Error_Handler
 1587              	.LVL99:
 1588              	.L105:
 1589              		.align	2
 1590              	.L104:
 1591 00ac 00000000 		.word	hltdc
 1592 00b0 00680140 		.word	1073833984
 1593 00b4 00000000 		.word	.LC7
 1594              		.cfi_endproc
 1595              	.LFE172:
 1597              		.section	.text.MX_QUADSPI_Init,"ax",%progbits
 1598              		.align	1
 1599              		.syntax unified
 1600              		.thumb
 1601              		.thumb_func
 1602              		.fpu fpv5-sp-d16
 1604              	MX_QUADSPI_Init:
 1605              	.LFB173:
 701:Src/main.c    **** 
 1606              		.loc 1 701 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610 0000 08B5     		push	{r3, lr}
 1611              	.LCFI25:
 1612              		.cfi_def_cfa_offset 8
 1613              		.cfi_offset 3, -8
 1614              		.cfi_offset 14, -4
 704:Src/main.c    ****   hqspi.Init.ClockPrescaler = 255;
 1615              		.loc 1 704 0
 1616 0002 0B48     		ldr	r0, .L110
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 60


 1617 0004 0B4B     		ldr	r3, .L110+4
 1618 0006 0360     		str	r3, [r0]
 705:Src/main.c    ****   hqspi.Init.FifoThreshold = 1;
 1619              		.loc 1 705 0
 1620 0008 FF23     		movs	r3, #255
 1621 000a 4360     		str	r3, [r0, #4]
 706:Src/main.c    ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 1622              		.loc 1 706 0
 1623 000c 0122     		movs	r2, #1
 1624 000e 8260     		str	r2, [r0, #8]
 707:Src/main.c    ****   hqspi.Init.FlashSize = 1;
 1625              		.loc 1 707 0
 1626 0010 0023     		movs	r3, #0
 1627 0012 C360     		str	r3, [r0, #12]
 708:Src/main.c    ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 1628              		.loc 1 708 0
 1629 0014 0261     		str	r2, [r0, #16]
 709:Src/main.c    ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 1630              		.loc 1 709 0
 1631 0016 4361     		str	r3, [r0, #20]
 710:Src/main.c    ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 1632              		.loc 1 710 0
 1633 0018 8361     		str	r3, [r0, #24]
 711:Src/main.c    ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 1634              		.loc 1 711 0
 1635 001a C361     		str	r3, [r0, #28]
 712:Src/main.c    ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 1636              		.loc 1 712 0
 1637 001c 0362     		str	r3, [r0, #32]
 713:Src/main.c    ****   {
 1638              		.loc 1 713 0
 1639 001e FFF7FEFF 		bl	HAL_QSPI_Init
 1640              	.LVL100:
 1641 0022 00B9     		cbnz	r0, .L109
 718:Src/main.c    **** 
 1642              		.loc 1 718 0
 1643 0024 08BD     		pop	{r3, pc}
 1644              	.L109:
 715:Src/main.c    ****   }
 1645              		.loc 1 715 0
 1646 0026 40F2CB21 		movw	r1, #715
 1647 002a 0348     		ldr	r0, .L110+8
 1648 002c FFF7FEFF 		bl	_Error_Handler
 1649              	.LVL101:
 1650              	.L111:
 1651              		.align	2
 1652              	.L110:
 1653 0030 00000000 		.word	hqspi
 1654 0034 001000A0 		.word	-1610608640
 1655 0038 00000000 		.word	.LC7
 1656              		.cfi_endproc
 1657              	.LFE173:
 1659              		.section	.text.MX_RTC_Init,"ax",%progbits
 1660              		.align	1
 1661              		.syntax unified
 1662              		.thumb
 1663              		.thumb_func
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 61


 1664              		.fpu fpv5-sp-d16
 1666              	MX_RTC_Init:
 1667              	.LFB174:
 722:Src/main.c    **** 
 1668              		.loc 1 722 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 72
 1671              		@ frame_needed = 0, uses_anonymous_args = 0
 1672 0000 00B5     		push	{lr}
 1673              	.LCFI26:
 1674              		.cfi_def_cfa_offset 4
 1675              		.cfi_offset 14, -4
 1676 0002 93B0     		sub	sp, sp, #76
 1677              	.LCFI27:
 1678              		.cfi_def_cfa_offset 80
 738:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1679              		.loc 1 738 0
 1680 0004 3C48     		ldr	r0, .L126
 1681 0006 3D4B     		ldr	r3, .L126+4
 1682 0008 0360     		str	r3, [r0]
 739:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 1683              		.loc 1 739 0
 1684 000a 0023     		movs	r3, #0
 1685 000c 4360     		str	r3, [r0, #4]
 740:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 1686              		.loc 1 740 0
 1687 000e 7F22     		movs	r2, #127
 1688 0010 8260     		str	r2, [r0, #8]
 741:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1689              		.loc 1 741 0
 1690 0012 FF22     		movs	r2, #255
 1691 0014 C260     		str	r2, [r0, #12]
 742:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1692              		.loc 1 742 0
 1693 0016 0361     		str	r3, [r0, #16]
 743:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1694              		.loc 1 743 0
 1695 0018 4361     		str	r3, [r0, #20]
 744:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1696              		.loc 1 744 0
 1697 001a 8361     		str	r3, [r0, #24]
 745:Src/main.c    ****   {
 1698              		.loc 1 745 0
 1699 001c FFF7FEFF 		bl	HAL_RTC_Init
 1700              	.LVL102:
 1701 0020 0028     		cmp	r0, #0
 1702 0022 4BD1     		bne	.L120
 752:Src/main.c    ****   sTime.Minutes = 0x0;
 1703              		.loc 1 752 0
 1704 0024 0023     		movs	r3, #0
 1705 0026 8DF83030 		strb	r3, [sp, #48]
 753:Src/main.c    ****   sTime.Seconds = 0x0;
 1706              		.loc 1 753 0
 1707 002a 8DF83130 		strb	r3, [sp, #49]
 754:Src/main.c    ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1708              		.loc 1 754 0
 1709 002e 8DF83230 		strb	r3, [sp, #50]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 62


 755:Src/main.c    ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1710              		.loc 1 755 0
 1711 0032 1093     		str	r3, [sp, #64]
 756:Src/main.c    ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1712              		.loc 1 756 0
 1713 0034 1193     		str	r3, [sp, #68]
 757:Src/main.c    ****   {
 1714              		.loc 1 757 0
 1715 0036 0122     		movs	r2, #1
 1716 0038 0CA9     		add	r1, sp, #48
 1717 003a 2F48     		ldr	r0, .L126
 1718 003c FFF7FEFF 		bl	HAL_RTC_SetTime
 1719              	.LVL103:
 1720 0040 0028     		cmp	r0, #0
 1721 0042 40D1     		bne	.L121
 762:Src/main.c    ****   sDate.Month = RTC_MONTH_JANUARY;
 1722              		.loc 1 762 0
 1723 0044 0122     		movs	r2, #1
 1724 0046 8DF82C20 		strb	r2, [sp, #44]
 763:Src/main.c    ****   sDate.Date = 0x1;
 1725              		.loc 1 763 0
 1726 004a 8DF82D20 		strb	r2, [sp, #45]
 764:Src/main.c    ****   sDate.Year = 0x0;
 1727              		.loc 1 764 0
 1728 004e 8DF82E20 		strb	r2, [sp, #46]
 765:Src/main.c    **** 
 1729              		.loc 1 765 0
 1730 0052 0023     		movs	r3, #0
 1731 0054 8DF82F30 		strb	r3, [sp, #47]
 767:Src/main.c    ****   {
 1732              		.loc 1 767 0
 1733 0058 0BA9     		add	r1, sp, #44
 1734 005a 2748     		ldr	r0, .L126
 1735 005c FFF7FEFF 		bl	HAL_RTC_SetDate
 1736              	.LVL104:
 1737 0060 0028     		cmp	r0, #0
 1738 0062 35D1     		bne	.L122
 774:Src/main.c    ****   sAlarm.AlarmTime.Minutes = 0x0;
 1739              		.loc 1 774 0
 1740 0064 0023     		movs	r3, #0
 1741 0066 8DF80030 		strb	r3, [sp]
 775:Src/main.c    ****   sAlarm.AlarmTime.Seconds = 0x0;
 1742              		.loc 1 775 0
 1743 006a 8DF80130 		strb	r3, [sp, #1]
 776:Src/main.c    ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 1744              		.loc 1 776 0
 1745 006e 8DF80230 		strb	r3, [sp, #2]
 777:Src/main.c    ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1746              		.loc 1 777 0
 1747 0072 0193     		str	r3, [sp, #4]
 778:Src/main.c    ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1748              		.loc 1 778 0
 1749 0074 0493     		str	r3, [sp, #16]
 779:Src/main.c    ****   sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 1750              		.loc 1 779 0
 1751 0076 0593     		str	r3, [sp, #20]
 780:Src/main.c    ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 63


 1752              		.loc 1 780 0
 1753 0078 0693     		str	r3, [sp, #24]
 781:Src/main.c    ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 1754              		.loc 1 781 0
 1755 007a 0793     		str	r3, [sp, #28]
 782:Src/main.c    ****   sAlarm.AlarmDateWeekDay = 0x1;
 1756              		.loc 1 782 0
 1757 007c 0893     		str	r3, [sp, #32]
 783:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_A;
 1758              		.loc 1 783 0
 1759 007e 0122     		movs	r2, #1
 1760 0080 8DF82420 		strb	r2, [sp, #36]
 784:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 1761              		.loc 1 784 0
 1762 0084 4FF48073 		mov	r3, #256
 1763 0088 0A93     		str	r3, [sp, #40]
 785:Src/main.c    ****   {
 1764              		.loc 1 785 0
 1765 008a 6946     		mov	r1, sp
 1766 008c 1A48     		ldr	r0, .L126
 1767 008e FFF7FEFF 		bl	HAL_RTC_SetAlarm
 1768              	.LVL105:
 1769 0092 10BB     		cbnz	r0, .L123
 792:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_B;
 1770              		.loc 1 792 0
 1771 0094 0122     		movs	r2, #1
 1772 0096 8DF82420 		strb	r2, [sp, #36]
 793:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 1773              		.loc 1 793 0
 1774 009a 4FF40073 		mov	r3, #512
 1775 009e 0A93     		str	r3, [sp, #40]
 794:Src/main.c    ****   {
 1776              		.loc 1 794 0
 1777 00a0 6946     		mov	r1, sp
 1778 00a2 1548     		ldr	r0, .L126
 1779 00a4 FFF7FEFF 		bl	HAL_RTC_SetAlarm
 1780              	.LVL106:
 1781 00a8 E0B9     		cbnz	r0, .L124
 801:Src/main.c    ****   {
 1782              		.loc 1 801 0
 1783 00aa 0222     		movs	r2, #2
 1784 00ac 0021     		movs	r1, #0
 1785 00ae 1248     		ldr	r0, .L126
 1786 00b0 FFF7FEFF 		bl	HAL_RTCEx_SetTimeStamp
 1787              	.LVL107:
 1788 00b4 D8B9     		cbnz	r0, .L125
 806:Src/main.c    **** 
 1789              		.loc 1 806 0
 1790 00b6 13B0     		add	sp, sp, #76
 1791              	.LCFI28:
 1792              		.cfi_remember_state
 1793              		.cfi_def_cfa_offset 4
 1794              		@ sp needed
 1795 00b8 5DF804FB 		ldr	pc, [sp], #4
 1796              	.L120:
 1797              	.LCFI29:
 1798              		.cfi_restore_state
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 64


 747:Src/main.c    ****   }
 1799              		.loc 1 747 0
 1800 00bc 40F2EB21 		movw	r1, #747
 1801 00c0 0F48     		ldr	r0, .L126+8
 1802 00c2 FFF7FEFF 		bl	_Error_Handler
 1803              	.LVL108:
 1804              	.L121:
 759:Src/main.c    ****   }
 1805              		.loc 1 759 0
 1806 00c6 40F2F721 		movw	r1, #759
 1807 00ca 0D48     		ldr	r0, .L126+8
 1808 00cc FFF7FEFF 		bl	_Error_Handler
 1809              	.LVL109:
 1810              	.L122:
 769:Src/main.c    ****   }
 1811              		.loc 1 769 0
 1812 00d0 40F20131 		movw	r1, #769
 1813 00d4 0A48     		ldr	r0, .L126+8
 1814 00d6 FFF7FEFF 		bl	_Error_Handler
 1815              	.LVL110:
 1816              	.L123:
 787:Src/main.c    ****   }
 1817              		.loc 1 787 0
 1818 00da 40F21331 		movw	r1, #787
 1819 00de 0848     		ldr	r0, .L126+8
 1820 00e0 FFF7FEFF 		bl	_Error_Handler
 1821              	.LVL111:
 1822              	.L124:
 796:Src/main.c    ****   }
 1823              		.loc 1 796 0
 1824 00e4 4FF44771 		mov	r1, #796
 1825 00e8 0548     		ldr	r0, .L126+8
 1826 00ea FFF7FEFF 		bl	_Error_Handler
 1827              	.LVL112:
 1828              	.L125:
 803:Src/main.c    ****   }
 1829              		.loc 1 803 0
 1830 00ee 40F22331 		movw	r1, #803
 1831 00f2 0348     		ldr	r0, .L126+8
 1832 00f4 FFF7FEFF 		bl	_Error_Handler
 1833              	.LVL113:
 1834              	.L127:
 1835              		.align	2
 1836              	.L126:
 1837 00f8 00000000 		.word	hrtc
 1838 00fc 00280040 		.word	1073752064
 1839 0100 00000000 		.word	.LC7
 1840              		.cfi_endproc
 1841              	.LFE174:
 1843              		.section	.text.MX_SAI2_Init,"ax",%progbits
 1844              		.align	1
 1845              		.syntax unified
 1846              		.thumb
 1847              		.thumb_func
 1848              		.fpu fpv5-sp-d16
 1850              	MX_SAI2_Init:
 1851              	.LFB175:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 65


 810:Src/main.c    **** 
 1852              		.loc 1 810 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 0
 1855              		@ frame_needed = 0, uses_anonymous_args = 0
 1856 0000 08B5     		push	{r3, lr}
 1857              	.LCFI30:
 1858              		.cfi_def_cfa_offset 8
 1859              		.cfi_offset 3, -8
 1860              		.cfi_offset 14, -4
 812:Src/main.c    ****   hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 1861              		.loc 1 812 0
 1862 0002 2648     		ldr	r0, .L134
 1863 0004 264B     		ldr	r3, .L134+4
 1864 0006 0360     		str	r3, [r0]
 813:Src/main.c    ****   hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 1865              		.loc 1 813 0
 1866 0008 0023     		movs	r3, #0
 1867 000a 0363     		str	r3, [r0, #48]
 814:Src/main.c    ****   hsai_BlockA2.Init.DataSize = SAI_DATASIZE_24;
 1868              		.loc 1 814 0
 1869 000c 4360     		str	r3, [r0, #4]
 815:Src/main.c    ****   hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 1870              		.loc 1 815 0
 1871 000e C022     		movs	r2, #192
 1872 0010 4263     		str	r2, [r0, #52]
 816:Src/main.c    ****   hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 1873              		.loc 1 816 0
 1874 0012 8363     		str	r3, [r0, #56]
 817:Src/main.c    ****   hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 1875              		.loc 1 817 0
 1876 0014 C363     		str	r3, [r0, #60]
 818:Src/main.c    ****   hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 1877              		.loc 1 818 0
 1878 0016 8360     		str	r3, [r0, #8]
 819:Src/main.c    ****   hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 1879              		.loc 1 819 0
 1880 0018 0361     		str	r3, [r0, #16]
 820:Src/main.c    ****   hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 1881              		.loc 1 820 0
 1882 001a 4361     		str	r3, [r0, #20]
 821:Src/main.c    ****   hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 1883              		.loc 1 821 0
 1884 001c 8361     		str	r3, [r0, #24]
 822:Src/main.c    ****   hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 1885              		.loc 1 822 0
 1886 001e 214A     		ldr	r2, .L134+8
 1887 0020 C261     		str	r2, [r0, #28]
 823:Src/main.c    ****   hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 1888              		.loc 1 823 0
 1889 0022 C360     		str	r3, [r0, #12]
 824:Src/main.c    ****   hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 1890              		.loc 1 824 0
 1891 0024 4362     		str	r3, [r0, #36]
 825:Src/main.c    ****   hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 1892              		.loc 1 825 0
 1893 0026 8362     		str	r3, [r0, #40]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 66


 826:Src/main.c    ****   hsai_BlockA2.FrameInit.FrameLength = 8;
 1894              		.loc 1 826 0
 1895 0028 C362     		str	r3, [r0, #44]
 827:Src/main.c    ****   hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 1896              		.loc 1 827 0
 1897 002a 0822     		movs	r2, #8
 1898 002c 0264     		str	r2, [r0, #64]
 828:Src/main.c    ****   hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 1899              		.loc 1 828 0
 1900 002e 0122     		movs	r2, #1
 1901 0030 4264     		str	r2, [r0, #68]
 829:Src/main.c    ****   hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 1902              		.loc 1 829 0
 1903 0032 8364     		str	r3, [r0, #72]
 830:Src/main.c    ****   hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 1904              		.loc 1 830 0
 1905 0034 C364     		str	r3, [r0, #76]
 831:Src/main.c    ****   hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 1906              		.loc 1 831 0
 1907 0036 0365     		str	r3, [r0, #80]
 832:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 1908              		.loc 1 832 0
 1909 0038 4365     		str	r3, [r0, #84]
 833:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotNumber = 1;
 1910              		.loc 1 833 0
 1911 003a 8365     		str	r3, [r0, #88]
 834:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 1912              		.loc 1 834 0
 1913 003c C265     		str	r2, [r0, #92]
 835:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK)
 1914              		.loc 1 835 0
 1915 003e 0366     		str	r3, [r0, #96]
 836:Src/main.c    ****   {
 1916              		.loc 1 836 0
 1917 0040 FFF7FEFF 		bl	HAL_SAI_Init
 1918              	.LVL114:
 1919 0044 00BB     		cbnz	r0, .L132
 841:Src/main.c    ****   hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 1920              		.loc 1 841 0
 1921 0046 1848     		ldr	r0, .L134+12
 1922 0048 184B     		ldr	r3, .L134+16
 1923 004a 0360     		str	r3, [r0]
 842:Src/main.c    ****   hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 1924              		.loc 1 842 0
 1925 004c 0023     		movs	r3, #0
 1926 004e 0363     		str	r3, [r0, #48]
 843:Src/main.c    ****   hsai_BlockB2.Init.DataSize = SAI_DATASIZE_24;
 1927              		.loc 1 843 0
 1928 0050 0322     		movs	r2, #3
 1929 0052 4260     		str	r2, [r0, #4]
 844:Src/main.c    ****   hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 1930              		.loc 1 844 0
 1931 0054 C022     		movs	r2, #192
 1932 0056 4263     		str	r2, [r0, #52]
 845:Src/main.c    ****   hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 1933              		.loc 1 845 0
 1934 0058 8363     		str	r3, [r0, #56]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 67


 846:Src/main.c    ****   hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 1935              		.loc 1 846 0
 1936 005a C363     		str	r3, [r0, #60]
 847:Src/main.c    ****   hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 1937              		.loc 1 847 0
 1938 005c 0122     		movs	r2, #1
 1939 005e 8260     		str	r2, [r0, #8]
 848:Src/main.c    ****   hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 1940              		.loc 1 848 0
 1941 0060 0361     		str	r3, [r0, #16]
 849:Src/main.c    ****   hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 1942              		.loc 1 849 0
 1943 0062 8361     		str	r3, [r0, #24]
 850:Src/main.c    ****   hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 1944              		.loc 1 850 0
 1945 0064 C360     		str	r3, [r0, #12]
 851:Src/main.c    ****   hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 1946              		.loc 1 851 0
 1947 0066 4362     		str	r3, [r0, #36]
 852:Src/main.c    ****   hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 1948              		.loc 1 852 0
 1949 0068 8362     		str	r3, [r0, #40]
 853:Src/main.c    ****   hsai_BlockB2.FrameInit.FrameLength = 8;
 1950              		.loc 1 853 0
 1951 006a C362     		str	r3, [r0, #44]
 854:Src/main.c    ****   hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 1952              		.loc 1 854 0
 1953 006c 0821     		movs	r1, #8
 1954 006e 0164     		str	r1, [r0, #64]
 855:Src/main.c    ****   hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 1955              		.loc 1 855 0
 1956 0070 4264     		str	r2, [r0, #68]
 856:Src/main.c    ****   hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 1957              		.loc 1 856 0
 1958 0072 8364     		str	r3, [r0, #72]
 857:Src/main.c    ****   hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 1959              		.loc 1 857 0
 1960 0074 C364     		str	r3, [r0, #76]
 858:Src/main.c    ****   hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 1961              		.loc 1 858 0
 1962 0076 0365     		str	r3, [r0, #80]
 859:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 1963              		.loc 1 859 0
 1964 0078 4365     		str	r3, [r0, #84]
 860:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotNumber = 1;
 1965              		.loc 1 860 0
 1966 007a 8365     		str	r3, [r0, #88]
 861:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 1967              		.loc 1 861 0
 1968 007c C265     		str	r2, [r0, #92]
 862:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK)
 1969              		.loc 1 862 0
 1970 007e 0366     		str	r3, [r0, #96]
 863:Src/main.c    ****   {
 1971              		.loc 1 863 0
 1972 0080 FFF7FEFF 		bl	HAL_SAI_Init
 1973              	.LVL115:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 68


 1974 0084 28B9     		cbnz	r0, .L133
 868:Src/main.c    **** 
 1975              		.loc 1 868 0
 1976 0086 08BD     		pop	{r3, pc}
 1977              	.L132:
 838:Src/main.c    ****   }
 1978              		.loc 1 838 0
 1979 0088 40F24631 		movw	r1, #838
 1980 008c 0848     		ldr	r0, .L134+20
 1981 008e FFF7FEFF 		bl	_Error_Handler
 1982              	.LVL116:
 1983              	.L133:
 865:Src/main.c    ****   }
 1984              		.loc 1 865 0
 1985 0092 40F26131 		movw	r1, #865
 1986 0096 0648     		ldr	r0, .L134+20
 1987 0098 FFF7FEFF 		bl	_Error_Handler
 1988              	.LVL117:
 1989              	.L135:
 1990              		.align	2
 1991              	.L134:
 1992 009c 00000000 		.word	hsai_BlockA2
 1993 00a0 045C0140 		.word	1073830916
 1994 00a4 00EE0200 		.word	192000
 1995 00a8 00000000 		.word	hsai_BlockB2
 1996 00ac 245C0140 		.word	1073830948
 1997 00b0 00000000 		.word	.LC7
 1998              		.cfi_endproc
 1999              	.LFE175:
 2001              		.section	.text.MX_SPDIFRX_Init,"ax",%progbits
 2002              		.align	1
 2003              		.syntax unified
 2004              		.thumb
 2005              		.thumb_func
 2006              		.fpu fpv5-sp-d16
 2008              	MX_SPDIFRX_Init:
 2009              	.LFB177:
 886:Src/main.c    **** 
 2010              		.loc 1 886 0
 2011              		.cfi_startproc
 2012              		@ args = 0, pretend = 0, frame = 0
 2013              		@ frame_needed = 0, uses_anonymous_args = 0
 2014 0000 08B5     		push	{r3, lr}
 2015              	.LCFI31:
 2016              		.cfi_def_cfa_offset 8
 2017              		.cfi_offset 3, -8
 2018              		.cfi_offset 14, -4
 888:Src/main.c    ****   hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 2019              		.loc 1 888 0
 2020 0002 0C48     		ldr	r0, .L140
 2021 0004 4FF04023 		mov	r3, #1073758208
 2022 0008 0360     		str	r3, [r0]
 889:Src/main.c    ****   hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 2023              		.loc 1 889 0
 2024 000a 0023     		movs	r3, #0
 2025 000c 4360     		str	r3, [r0, #4]
 890:Src/main.c    ****   hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 69


 2026              		.loc 1 890 0
 2027 000e 8360     		str	r3, [r0, #8]
 891:Src/main.c    ****   hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 2028              		.loc 1 891 0
 2029 0010 C360     		str	r3, [r0, #12]
 892:Src/main.c    ****   hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 2030              		.loc 1 892 0
 2031 0012 0361     		str	r3, [r0, #16]
 893:Src/main.c    ****   hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 2032              		.loc 1 893 0
 2033 0014 4361     		str	r3, [r0, #20]
 894:Src/main.c    ****   hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 2034              		.loc 1 894 0
 2035 0016 8361     		str	r3, [r0, #24]
 895:Src/main.c    ****   hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 2036              		.loc 1 895 0
 2037 0018 C361     		str	r3, [r0, #28]
 896:Src/main.c    ****   hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 2038              		.loc 1 896 0
 2039 001a 0362     		str	r3, [r0, #32]
 897:Src/main.c    ****   hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 2040              		.loc 1 897 0
 2041 001c 4362     		str	r3, [r0, #36]
 898:Src/main.c    ****   if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK)
 2042              		.loc 1 898 0
 2043 001e 8362     		str	r3, [r0, #40]
 899:Src/main.c    ****   {
 2044              		.loc 1 899 0
 2045 0020 FFF7FEFF 		bl	HAL_SPDIFRX_Init
 2046              	.LVL118:
 2047 0024 00B9     		cbnz	r0, .L139
 904:Src/main.c    **** 
 2048              		.loc 1 904 0
 2049 0026 08BD     		pop	{r3, pc}
 2050              	.L139:
 901:Src/main.c    ****   }
 2051              		.loc 1 901 0
 2052 0028 40F28531 		movw	r1, #901
 2053 002c 0248     		ldr	r0, .L140+4
 2054 002e FFF7FEFF 		bl	_Error_Handler
 2055              	.LVL119:
 2056              	.L141:
 2057 0032 00BF     		.align	2
 2058              	.L140:
 2059 0034 00000000 		.word	hspdif
 2060 0038 00000000 		.word	.LC7
 2061              		.cfi_endproc
 2062              	.LFE177:
 2064              		.section	.text.MX_SPI2_Init,"ax",%progbits
 2065              		.align	1
 2066              		.syntax unified
 2067              		.thumb
 2068              		.thumb_func
 2069              		.fpu fpv5-sp-d16
 2071              	MX_SPI2_Init:
 2072              	.LFB178:
 908:Src/main.c    **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 70


 2073              		.loc 1 908 0
 2074              		.cfi_startproc
 2075              		@ args = 0, pretend = 0, frame = 0
 2076              		@ frame_needed = 0, uses_anonymous_args = 0
 2077 0000 08B5     		push	{r3, lr}
 2078              	.LCFI32:
 2079              		.cfi_def_cfa_offset 8
 2080              		.cfi_offset 3, -8
 2081              		.cfi_offset 14, -4
 911:Src/main.c    ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 2082              		.loc 1 911 0
 2083 0002 1148     		ldr	r0, .L146
 2084 0004 114B     		ldr	r3, .L146+4
 2085 0006 0360     		str	r3, [r0]
 912:Src/main.c    ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 2086              		.loc 1 912 0
 2087 0008 4FF48273 		mov	r3, #260
 2088 000c 4360     		str	r3, [r0, #4]
 913:Src/main.c    ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 2089              		.loc 1 913 0
 2090 000e 0023     		movs	r3, #0
 2091 0010 8360     		str	r3, [r0, #8]
 914:Src/main.c    ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 2092              		.loc 1 914 0
 2093 0012 4FF44072 		mov	r2, #768
 2094 0016 C260     		str	r2, [r0, #12]
 915:Src/main.c    ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 2095              		.loc 1 915 0
 2096 0018 0361     		str	r3, [r0, #16]
 916:Src/main.c    ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 2097              		.loc 1 916 0
 2098 001a 4361     		str	r3, [r0, #20]
 917:Src/main.c    ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 2099              		.loc 1 917 0
 2100 001c 4FF40072 		mov	r2, #512
 2101 0020 8261     		str	r2, [r0, #24]
 918:Src/main.c    ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2102              		.loc 1 918 0
 2103 0022 C361     		str	r3, [r0, #28]
 919:Src/main.c    ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 2104              		.loc 1 919 0
 2105 0024 0362     		str	r3, [r0, #32]
 920:Src/main.c    ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2106              		.loc 1 920 0
 2107 0026 4362     		str	r3, [r0, #36]
 921:Src/main.c    ****   hspi2.Init.CRCPolynomial = 7;
 2108              		.loc 1 921 0
 2109 0028 8362     		str	r3, [r0, #40]
 922:Src/main.c    ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2110              		.loc 1 922 0
 2111 002a 0722     		movs	r2, #7
 2112 002c C262     		str	r2, [r0, #44]
 923:Src/main.c    ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2113              		.loc 1 923 0
 2114 002e 0363     		str	r3, [r0, #48]
 924:Src/main.c    ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 2115              		.loc 1 924 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 71


 2116 0030 0823     		movs	r3, #8
 2117 0032 4363     		str	r3, [r0, #52]
 925:Src/main.c    ****   {
 2118              		.loc 1 925 0
 2119 0034 FFF7FEFF 		bl	HAL_SPI_Init
 2120              	.LVL120:
 2121 0038 00B9     		cbnz	r0, .L145
 930:Src/main.c    **** 
 2122              		.loc 1 930 0
 2123 003a 08BD     		pop	{r3, pc}
 2124              	.L145:
 927:Src/main.c    ****   }
 2125              		.loc 1 927 0
 2126 003c 40F29F31 		movw	r1, #927
 2127 0040 0348     		ldr	r0, .L146+8
 2128 0042 FFF7FEFF 		bl	_Error_Handler
 2129              	.LVL121:
 2130              	.L147:
 2131 0046 00BF     		.align	2
 2132              	.L146:
 2133 0048 00000000 		.word	hspi2
 2134 004c 00380040 		.word	1073756160
 2135 0050 00000000 		.word	.LC7
 2136              		.cfi_endproc
 2137              	.LFE178:
 2139              		.section	.text.MX_TIM1_Init,"ax",%progbits
 2140              		.align	1
 2141              		.syntax unified
 2142              		.thumb
 2143              		.thumb_func
 2144              		.fpu fpv5-sp-d16
 2146              	MX_TIM1_Init:
 2147              	.LFB179:
 934:Src/main.c    **** 
 2148              		.loc 1 934 0
 2149              		.cfi_startproc
 2150              		@ args = 0, pretend = 0, frame = 104
 2151              		@ frame_needed = 0, uses_anonymous_args = 0
 2152 0000 00B5     		push	{lr}
 2153              	.LCFI33:
 2154              		.cfi_def_cfa_offset 4
 2155              		.cfi_offset 14, -4
 2156 0002 9BB0     		sub	sp, sp, #108
 2157              	.LCFI34:
 2158              		.cfi_def_cfa_offset 112
 941:Src/main.c    ****   htim1.Init.Prescaler = 0;
 2159              		.loc 1 941 0
 2160 0004 3748     		ldr	r0, .L162
 2161 0006 384B     		ldr	r3, .L162+4
 2162 0008 0360     		str	r3, [r0]
 942:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 2163              		.loc 1 942 0
 2164 000a 0023     		movs	r3, #0
 2165 000c 4360     		str	r3, [r0, #4]
 943:Src/main.c    ****   htim1.Init.Period = 0;
 2166              		.loc 1 943 0
 2167 000e 8360     		str	r3, [r0, #8]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 72


 944:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2168              		.loc 1 944 0
 2169 0010 C360     		str	r3, [r0, #12]
 945:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 2170              		.loc 1 945 0
 2171 0012 0361     		str	r3, [r0, #16]
 946:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2172              		.loc 1 946 0
 2173 0014 4361     		str	r3, [r0, #20]
 947:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 2174              		.loc 1 947 0
 2175 0016 8361     		str	r3, [r0, #24]
 948:Src/main.c    ****   {
 2176              		.loc 1 948 0
 2177 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2178              	.LVL122:
 2179 001c 0028     		cmp	r0, #0
 2180 001e 42D1     		bne	.L156
 953:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 2181              		.loc 1 953 0
 2182 0020 1AA9     		add	r1, sp, #104
 2183 0022 4FF48053 		mov	r3, #4096
 2184 0026 41F8103D 		str	r3, [r1, #-16]!
 954:Src/main.c    ****   {
 2185              		.loc 1 954 0
 2186 002a 2E48     		ldr	r0, .L162
 2187 002c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2188              	.LVL123:
 2189 0030 0028     		cmp	r0, #0
 2190 0032 3DD1     		bne	.L157
 959:Src/main.c    ****   {
 2191              		.loc 1 959 0
 2192 0034 2B48     		ldr	r0, .L162
 2193 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2194              	.LVL124:
 2195 003a 0028     		cmp	r0, #0
 2196 003c 3DD1     		bne	.L158
 964:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2197              		.loc 1 964 0
 2198 003e 0023     		movs	r3, #0
 2199 0040 1393     		str	r3, [sp, #76]
 965:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2200              		.loc 1 965 0
 2201 0042 1493     		str	r3, [sp, #80]
 966:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 2202              		.loc 1 966 0
 2203 0044 1593     		str	r3, [sp, #84]
 967:Src/main.c    ****   {
 2204              		.loc 1 967 0
 2205 0046 13A9     		add	r1, sp, #76
 2206 0048 2648     		ldr	r0, .L162
 2207 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2208              	.LVL125:
 2209 004e 0028     		cmp	r0, #0
 2210 0050 38D1     		bne	.L159
 972:Src/main.c    ****   sConfigOC.Pulse = 0;
 2211              		.loc 1 972 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 73


 2212 0052 6023     		movs	r3, #96
 2213 0054 0C93     		str	r3, [sp, #48]
 973:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2214              		.loc 1 973 0
 2215 0056 0022     		movs	r2, #0
 2216 0058 0D92     		str	r2, [sp, #52]
 974:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 2217              		.loc 1 974 0
 2218 005a 0E92     		str	r2, [sp, #56]
 975:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2219              		.loc 1 975 0
 2220 005c 0F92     		str	r2, [sp, #60]
 976:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 2221              		.loc 1 976 0
 2222 005e 1092     		str	r2, [sp, #64]
 977:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 2223              		.loc 1 977 0
 2224 0060 1192     		str	r2, [sp, #68]
 978:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2225              		.loc 1 978 0
 2226 0062 1292     		str	r2, [sp, #72]
 979:Src/main.c    ****   {
 2227              		.loc 1 979 0
 2228 0064 0CA9     		add	r1, sp, #48
 2229 0066 1F48     		ldr	r0, .L162
 2230 0068 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2231              	.LVL126:
 2232 006c 0028     		cmp	r0, #0
 2233 006e 2ED1     		bne	.L160
 984:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 2234              		.loc 1 984 0
 2235 0070 0023     		movs	r3, #0
 2236 0072 0193     		str	r3, [sp, #4]
 985:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 2237              		.loc 1 985 0
 2238 0074 0293     		str	r3, [sp, #8]
 986:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 2239              		.loc 1 986 0
 2240 0076 0393     		str	r3, [sp, #12]
 987:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 2241              		.loc 1 987 0
 2242 0078 0493     		str	r3, [sp, #16]
 988:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 2243              		.loc 1 988 0
 2244 007a 0593     		str	r3, [sp, #20]
 989:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 2245              		.loc 1 989 0
 2246 007c 4FF40052 		mov	r2, #8192
 2247 0080 0692     		str	r2, [sp, #24]
 990:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 2248              		.loc 1 990 0
 2249 0082 0793     		str	r3, [sp, #28]
 991:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 2250              		.loc 1 991 0
 2251 0084 0893     		str	r3, [sp, #32]
 992:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 2252              		.loc 1 992 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 74


 2253 0086 4FF00072 		mov	r2, #33554432
 2254 008a 0992     		str	r2, [sp, #36]
 993:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 2255              		.loc 1 993 0
 2256 008c 0A93     		str	r3, [sp, #40]
 994:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 2257              		.loc 1 994 0
 2258 008e 0B93     		str	r3, [sp, #44]
 995:Src/main.c    ****   {
 2259              		.loc 1 995 0
 2260 0090 01A9     		add	r1, sp, #4
 2261 0092 1448     		ldr	r0, .L162
 2262 0094 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 2263              	.LVL127:
 2264 0098 F0B9     		cbnz	r0, .L161
1000:Src/main.c    **** 
 2265              		.loc 1 1000 0
 2266 009a 1248     		ldr	r0, .L162
 2267 009c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2268              	.LVL128:
1002:Src/main.c    **** 
 2269              		.loc 1 1002 0
 2270 00a0 1BB0     		add	sp, sp, #108
 2271              	.LCFI35:
 2272              		.cfi_remember_state
 2273              		.cfi_def_cfa_offset 4
 2274              		@ sp needed
 2275 00a2 5DF804FB 		ldr	pc, [sp], #4
 2276              	.L156:
 2277              	.LCFI36:
 2278              		.cfi_restore_state
 950:Src/main.c    ****   }
 2279              		.loc 1 950 0
 2280 00a6 40F2B631 		movw	r1, #950
 2281 00aa 1048     		ldr	r0, .L162+8
 2282 00ac FFF7FEFF 		bl	_Error_Handler
 2283              	.LVL129:
 2284              	.L157:
 956:Src/main.c    ****   }
 2285              		.loc 1 956 0
 2286 00b0 4FF46F71 		mov	r1, #956
 2287 00b4 0D48     		ldr	r0, .L162+8
 2288 00b6 FFF7FEFF 		bl	_Error_Handler
 2289              	.LVL130:
 2290              	.L158:
 961:Src/main.c    ****   }
 2291              		.loc 1 961 0
 2292 00ba 40F2C131 		movw	r1, #961
 2293 00be 0B48     		ldr	r0, .L162+8
 2294 00c0 FFF7FEFF 		bl	_Error_Handler
 2295              	.LVL131:
 2296              	.L159:
 969:Src/main.c    ****   }
 2297              		.loc 1 969 0
 2298 00c4 40F2C931 		movw	r1, #969
 2299 00c8 0848     		ldr	r0, .L162+8
 2300 00ca FFF7FEFF 		bl	_Error_Handler
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 75


 2301              	.LVL132:
 2302              	.L160:
 981:Src/main.c    ****   }
 2303              		.loc 1 981 0
 2304 00ce 40F2D531 		movw	r1, #981
 2305 00d2 0648     		ldr	r0, .L162+8
 2306 00d4 FFF7FEFF 		bl	_Error_Handler
 2307              	.LVL133:
 2308              	.L161:
 997:Src/main.c    ****   }
 2309              		.loc 1 997 0
 2310 00d8 40F2E531 		movw	r1, #997
 2311 00dc 0348     		ldr	r0, .L162+8
 2312 00de FFF7FEFF 		bl	_Error_Handler
 2313              	.LVL134:
 2314              	.L163:
 2315 00e2 00BF     		.align	2
 2316              	.L162:
 2317 00e4 00000000 		.word	htim1
 2318 00e8 00000140 		.word	1073807360
 2319 00ec 00000000 		.word	.LC7
 2320              		.cfi_endproc
 2321              	.LFE179:
 2323              		.section	.text.MX_TIM2_Init,"ax",%progbits
 2324              		.align	1
 2325              		.syntax unified
 2326              		.thumb
 2327              		.thumb_func
 2328              		.fpu fpv5-sp-d16
 2330              	MX_TIM2_Init:
 2331              	.LFB180:
1006:Src/main.c    **** 
 2332              		.loc 1 1006 0
 2333              		.cfi_startproc
 2334              		@ args = 0, pretend = 0, frame = 56
 2335              		@ frame_needed = 0, uses_anonymous_args = 0
 2336 0000 00B5     		push	{lr}
 2337              	.LCFI37:
 2338              		.cfi_def_cfa_offset 4
 2339              		.cfi_offset 14, -4
 2340 0002 8FB0     		sub	sp, sp, #60
 2341              	.LCFI38:
 2342              		.cfi_def_cfa_offset 64
1012:Src/main.c    ****   htim2.Init.Prescaler = 0;
 2343              		.loc 1 1012 0
 2344 0004 2548     		ldr	r0, .L176
 2345 0006 4FF08043 		mov	r3, #1073741824
 2346 000a 0360     		str	r3, [r0]
1013:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2347              		.loc 1 1013 0
 2348 000c 0023     		movs	r3, #0
 2349 000e 4360     		str	r3, [r0, #4]
1014:Src/main.c    ****   htim2.Init.Period = 0;
 2350              		.loc 1 1014 0
 2351 0010 8360     		str	r3, [r0, #8]
1015:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2352              		.loc 1 1015 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 76


 2353 0012 C360     		str	r3, [r0, #12]
1016:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2354              		.loc 1 1016 0
 2355 0014 0361     		str	r3, [r0, #16]
1017:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 2356              		.loc 1 1017 0
 2357 0016 8361     		str	r3, [r0, #24]
1018:Src/main.c    ****   {
 2358              		.loc 1 1018 0
 2359 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2360              	.LVL135:
 2361 001c 28BB     		cbnz	r0, .L171
1023:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 2362              		.loc 1 1023 0
 2363 001e 0EA9     		add	r1, sp, #56
 2364 0020 4FF48053 		mov	r3, #4096
 2365 0024 41F8103D 		str	r3, [r1, #-16]!
1024:Src/main.c    ****   {
 2366              		.loc 1 1024 0
 2367 0028 1C48     		ldr	r0, .L176
 2368 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2369              	.LVL136:
 2370 002e 08BB     		cbnz	r0, .L172
1029:Src/main.c    ****   {
 2371              		.loc 1 1029 0
 2372 0030 1A48     		ldr	r0, .L176
 2373 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2374              	.LVL137:
 2375 0036 10BB     		cbnz	r0, .L173
1034:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2376              		.loc 1 1034 0
 2377 0038 0023     		movs	r3, #0
 2378 003a 0793     		str	r3, [sp, #28]
1035:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2379              		.loc 1 1035 0
 2380 003c 0993     		str	r3, [sp, #36]
1036:Src/main.c    ****   {
 2381              		.loc 1 1036 0
 2382 003e 07A9     		add	r1, sp, #28
 2383 0040 1648     		ldr	r0, .L176
 2384 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2385              	.LVL138:
 2386 0046 F8B9     		cbnz	r0, .L174
1041:Src/main.c    ****   sConfigOC.Pulse = 0;
 2387              		.loc 1 1041 0
 2388 0048 6023     		movs	r3, #96
 2389 004a 0093     		str	r3, [sp]
1042:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2390              		.loc 1 1042 0
 2391 004c 0022     		movs	r2, #0
 2392 004e 0192     		str	r2, [sp, #4]
1043:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2393              		.loc 1 1043 0
 2394 0050 0292     		str	r2, [sp, #8]
1044:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2395              		.loc 1 1044 0
 2396 0052 0492     		str	r2, [sp, #16]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 77


1045:Src/main.c    ****   {
 2397              		.loc 1 1045 0
 2398 0054 6946     		mov	r1, sp
 2399 0056 1148     		ldr	r0, .L176
 2400 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2401              	.LVL139:
 2402 005c C8B9     		cbnz	r0, .L175
1050:Src/main.c    **** 
 2403              		.loc 1 1050 0
 2404 005e 0F48     		ldr	r0, .L176
 2405 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2406              	.LVL140:
1052:Src/main.c    **** 
 2407              		.loc 1 1052 0
 2408 0064 0FB0     		add	sp, sp, #60
 2409              	.LCFI39:
 2410              		.cfi_remember_state
 2411              		.cfi_def_cfa_offset 4
 2412              		@ sp needed
 2413 0066 5DF804FB 		ldr	pc, [sp], #4
 2414              	.L171:
 2415              	.LCFI40:
 2416              		.cfi_restore_state
1020:Src/main.c    ****   }
 2417              		.loc 1 1020 0
 2418 006a 4FF47F71 		mov	r1, #1020
 2419 006e 0C48     		ldr	r0, .L176+4
 2420 0070 FFF7FEFF 		bl	_Error_Handler
 2421              	.LVL141:
 2422              	.L172:
1026:Src/main.c    ****   }
 2423              		.loc 1 1026 0
 2424 0074 40F20241 		movw	r1, #1026
 2425 0078 0948     		ldr	r0, .L176+4
 2426 007a FFF7FEFF 		bl	_Error_Handler
 2427              	.LVL142:
 2428              	.L173:
1031:Src/main.c    ****   }
 2429              		.loc 1 1031 0
 2430 007e 40F20741 		movw	r1, #1031
 2431 0082 0748     		ldr	r0, .L176+4
 2432 0084 FFF7FEFF 		bl	_Error_Handler
 2433              	.LVL143:
 2434              	.L174:
1038:Src/main.c    ****   }
 2435              		.loc 1 1038 0
 2436 0088 40F20E41 		movw	r1, #1038
 2437 008c 0448     		ldr	r0, .L176+4
 2438 008e FFF7FEFF 		bl	_Error_Handler
 2439              	.LVL144:
 2440              	.L175:
1047:Src/main.c    ****   }
 2441              		.loc 1 1047 0
 2442 0092 40F21741 		movw	r1, #1047
 2443 0096 0248     		ldr	r0, .L176+4
 2444 0098 FFF7FEFF 		bl	_Error_Handler
 2445              	.LVL145:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 78


 2446              	.L177:
 2447              		.align	2
 2448              	.L176:
 2449 009c 00000000 		.word	htim2
 2450 00a0 00000000 		.word	.LC7
 2451              		.cfi_endproc
 2452              	.LFE180:
 2454              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2455              		.align	1
 2456              		.syntax unified
 2457              		.thumb
 2458              		.thumb_func
 2459              		.fpu fpv5-sp-d16
 2461              	MX_TIM3_Init:
 2462              	.LFB181:
1056:Src/main.c    **** 
 2463              		.loc 1 1056 0
 2464              		.cfi_startproc
 2465              		@ args = 0, pretend = 0, frame = 56
 2466              		@ frame_needed = 0, uses_anonymous_args = 0
 2467 0000 00B5     		push	{lr}
 2468              	.LCFI41:
 2469              		.cfi_def_cfa_offset 4
 2470              		.cfi_offset 14, -4
 2471 0002 8FB0     		sub	sp, sp, #60
 2472              	.LCFI42:
 2473              		.cfi_def_cfa_offset 64
1062:Src/main.c    ****   htim3.Init.Prescaler = 0;
 2474              		.loc 1 1062 0
 2475 0004 2548     		ldr	r0, .L190
 2476 0006 264B     		ldr	r3, .L190+4
 2477 0008 0360     		str	r3, [r0]
1063:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2478              		.loc 1 1063 0
 2479 000a 0023     		movs	r3, #0
 2480 000c 4360     		str	r3, [r0, #4]
1064:Src/main.c    ****   htim3.Init.Period = 0;
 2481              		.loc 1 1064 0
 2482 000e 8360     		str	r3, [r0, #8]
1065:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2483              		.loc 1 1065 0
 2484 0010 C360     		str	r3, [r0, #12]
1066:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2485              		.loc 1 1066 0
 2486 0012 0361     		str	r3, [r0, #16]
1067:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2487              		.loc 1 1067 0
 2488 0014 8361     		str	r3, [r0, #24]
1068:Src/main.c    ****   {
 2489              		.loc 1 1068 0
 2490 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2491              	.LVL146:
 2492 001a 28BB     		cbnz	r0, .L185
1073:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2493              		.loc 1 1073 0
 2494 001c 0EA9     		add	r1, sp, #56
 2495 001e 4FF48053 		mov	r3, #4096
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 79


 2496 0022 41F8103D 		str	r3, [r1, #-16]!
1074:Src/main.c    ****   {
 2497              		.loc 1 1074 0
 2498 0026 1D48     		ldr	r0, .L190
 2499 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2500              	.LVL147:
 2501 002c 08BB     		cbnz	r0, .L186
1079:Src/main.c    ****   {
 2502              		.loc 1 1079 0
 2503 002e 1B48     		ldr	r0, .L190
 2504 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2505              	.LVL148:
 2506 0034 10BB     		cbnz	r0, .L187
1084:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2507              		.loc 1 1084 0
 2508 0036 0023     		movs	r3, #0
 2509 0038 0793     		str	r3, [sp, #28]
1085:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2510              		.loc 1 1085 0
 2511 003a 0993     		str	r3, [sp, #36]
1086:Src/main.c    ****   {
 2512              		.loc 1 1086 0
 2513 003c 07A9     		add	r1, sp, #28
 2514 003e 1748     		ldr	r0, .L190
 2515 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2516              	.LVL149:
 2517 0044 F8B9     		cbnz	r0, .L188
1091:Src/main.c    ****   sConfigOC.Pulse = 0;
 2518              		.loc 1 1091 0
 2519 0046 6023     		movs	r3, #96
 2520 0048 0093     		str	r3, [sp]
1092:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2521              		.loc 1 1092 0
 2522 004a 0022     		movs	r2, #0
 2523 004c 0192     		str	r2, [sp, #4]
1093:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2524              		.loc 1 1093 0
 2525 004e 0292     		str	r2, [sp, #8]
1094:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2526              		.loc 1 1094 0
 2527 0050 0492     		str	r2, [sp, #16]
1095:Src/main.c    ****   {
 2528              		.loc 1 1095 0
 2529 0052 6946     		mov	r1, sp
 2530 0054 1148     		ldr	r0, .L190
 2531 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2532              	.LVL150:
 2533 005a C8B9     		cbnz	r0, .L189
1100:Src/main.c    **** 
 2534              		.loc 1 1100 0
 2535 005c 0F48     		ldr	r0, .L190
 2536 005e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2537              	.LVL151:
1102:Src/main.c    **** 
 2538              		.loc 1 1102 0
 2539 0062 0FB0     		add	sp, sp, #60
 2540              	.LCFI43:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 80


 2541              		.cfi_remember_state
 2542              		.cfi_def_cfa_offset 4
 2543              		@ sp needed
 2544 0064 5DF804FB 		ldr	pc, [sp], #4
 2545              	.L185:
 2546              	.LCFI44:
 2547              		.cfi_restore_state
1070:Src/main.c    ****   }
 2548              		.loc 1 1070 0
 2549 0068 40F22E41 		movw	r1, #1070
 2550 006c 0D48     		ldr	r0, .L190+8
 2551 006e FFF7FEFF 		bl	_Error_Handler
 2552              	.LVL152:
 2553              	.L186:
1076:Src/main.c    ****   }
 2554              		.loc 1 1076 0
 2555 0072 40F23441 		movw	r1, #1076
 2556 0076 0B48     		ldr	r0, .L190+8
 2557 0078 FFF7FEFF 		bl	_Error_Handler
 2558              	.LVL153:
 2559              	.L187:
1081:Src/main.c    ****   }
 2560              		.loc 1 1081 0
 2561 007c 40F23941 		movw	r1, #1081
 2562 0080 0848     		ldr	r0, .L190+8
 2563 0082 FFF7FEFF 		bl	_Error_Handler
 2564              	.LVL154:
 2565              	.L188:
1088:Src/main.c    ****   }
 2566              		.loc 1 1088 0
 2567 0086 4FF48861 		mov	r1, #1088
 2568 008a 0648     		ldr	r0, .L190+8
 2569 008c FFF7FEFF 		bl	_Error_Handler
 2570              	.LVL155:
 2571              	.L189:
1097:Src/main.c    ****   }
 2572              		.loc 1 1097 0
 2573 0090 40F24941 		movw	r1, #1097
 2574 0094 0348     		ldr	r0, .L190+8
 2575 0096 FFF7FEFF 		bl	_Error_Handler
 2576              	.LVL156:
 2577              	.L191:
 2578 009a 00BF     		.align	2
 2579              	.L190:
 2580 009c 00000000 		.word	htim3
 2581 00a0 00040040 		.word	1073742848
 2582 00a4 00000000 		.word	.LC7
 2583              		.cfi_endproc
 2584              	.LFE181:
 2586              		.section	.text.MX_TIM5_Init,"ax",%progbits
 2587              		.align	1
 2588              		.syntax unified
 2589              		.thumb
 2590              		.thumb_func
 2591              		.fpu fpv5-sp-d16
 2593              	MX_TIM5_Init:
 2594              	.LFB182:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 81


1106:Src/main.c    **** 
 2595              		.loc 1 1106 0
 2596              		.cfi_startproc
 2597              		@ args = 0, pretend = 0, frame = 56
 2598              		@ frame_needed = 0, uses_anonymous_args = 0
 2599 0000 00B5     		push	{lr}
 2600              	.LCFI45:
 2601              		.cfi_def_cfa_offset 4
 2602              		.cfi_offset 14, -4
 2603 0002 8FB0     		sub	sp, sp, #60
 2604              	.LCFI46:
 2605              		.cfi_def_cfa_offset 64
1112:Src/main.c    ****   htim5.Init.Prescaler = 0;
 2606              		.loc 1 1112 0
 2607 0004 2548     		ldr	r0, .L204
 2608 0006 264B     		ldr	r3, .L204+4
 2609 0008 0360     		str	r3, [r0]
1113:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2610              		.loc 1 1113 0
 2611 000a 0023     		movs	r3, #0
 2612 000c 4360     		str	r3, [r0, #4]
1114:Src/main.c    ****   htim5.Init.Period = 0;
 2613              		.loc 1 1114 0
 2614 000e 8360     		str	r3, [r0, #8]
1115:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2615              		.loc 1 1115 0
 2616 0010 C360     		str	r3, [r0, #12]
1116:Src/main.c    ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2617              		.loc 1 1116 0
 2618 0012 0361     		str	r3, [r0, #16]
1117:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 2619              		.loc 1 1117 0
 2620 0014 8361     		str	r3, [r0, #24]
1118:Src/main.c    ****   {
 2621              		.loc 1 1118 0
 2622 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2623              	.LVL157:
 2624 001a 30BB     		cbnz	r0, .L199
1123:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 2625              		.loc 1 1123 0
 2626 001c 0EA9     		add	r1, sp, #56
 2627 001e 4FF48053 		mov	r3, #4096
 2628 0022 41F8103D 		str	r3, [r1, #-16]!
1124:Src/main.c    ****   {
 2629              		.loc 1 1124 0
 2630 0026 1D48     		ldr	r0, .L204
 2631 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2632              	.LVL158:
 2633 002c 10BB     		cbnz	r0, .L200
1129:Src/main.c    ****   {
 2634              		.loc 1 1129 0
 2635 002e 1B48     		ldr	r0, .L204
 2636 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2637              	.LVL159:
 2638 0034 18BB     		cbnz	r0, .L201
1134:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2639              		.loc 1 1134 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 82


 2640 0036 0023     		movs	r3, #0
 2641 0038 0793     		str	r3, [sp, #28]
1135:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 2642              		.loc 1 1135 0
 2643 003a 0993     		str	r3, [sp, #36]
1136:Src/main.c    ****   {
 2644              		.loc 1 1136 0
 2645 003c 07A9     		add	r1, sp, #28
 2646 003e 1748     		ldr	r0, .L204
 2647 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2648              	.LVL160:
 2649 0044 00BB     		cbnz	r0, .L202
1141:Src/main.c    ****   sConfigOC.Pulse = 0;
 2650              		.loc 1 1141 0
 2651 0046 6023     		movs	r3, #96
 2652 0048 0093     		str	r3, [sp]
1142:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2653              		.loc 1 1142 0
 2654 004a 0023     		movs	r3, #0
 2655 004c 0193     		str	r3, [sp, #4]
1143:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2656              		.loc 1 1143 0
 2657 004e 0293     		str	r3, [sp, #8]
1144:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2658              		.loc 1 1144 0
 2659 0050 0493     		str	r3, [sp, #16]
1145:Src/main.c    ****   {
 2660              		.loc 1 1145 0
 2661 0052 0C22     		movs	r2, #12
 2662 0054 6946     		mov	r1, sp
 2663 0056 1148     		ldr	r0, .L204
 2664 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2665              	.LVL161:
 2666 005c C8B9     		cbnz	r0, .L203
1150:Src/main.c    **** 
 2667              		.loc 1 1150 0
 2668 005e 0F48     		ldr	r0, .L204
 2669 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2670              	.LVL162:
1152:Src/main.c    **** 
 2671              		.loc 1 1152 0
 2672 0064 0FB0     		add	sp, sp, #60
 2673              	.LCFI47:
 2674              		.cfi_remember_state
 2675              		.cfi_def_cfa_offset 4
 2676              		@ sp needed
 2677 0066 5DF804FB 		ldr	pc, [sp], #4
 2678              	.L199:
 2679              	.LCFI48:
 2680              		.cfi_restore_state
1120:Src/main.c    ****   }
 2681              		.loc 1 1120 0
 2682 006a 4FF48C61 		mov	r1, #1120
 2683 006e 0D48     		ldr	r0, .L204+8
 2684 0070 FFF7FEFF 		bl	_Error_Handler
 2685              	.LVL163:
 2686              	.L200:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 83


1126:Src/main.c    ****   }
 2687              		.loc 1 1126 0
 2688 0074 40F26641 		movw	r1, #1126
 2689 0078 0A48     		ldr	r0, .L204+8
 2690 007a FFF7FEFF 		bl	_Error_Handler
 2691              	.LVL164:
 2692              	.L201:
1131:Src/main.c    ****   }
 2693              		.loc 1 1131 0
 2694 007e 40F26B41 		movw	r1, #1131
 2695 0082 0848     		ldr	r0, .L204+8
 2696 0084 FFF7FEFF 		bl	_Error_Handler
 2697              	.LVL165:
 2698              	.L202:
1138:Src/main.c    ****   }
 2699              		.loc 1 1138 0
 2700 0088 40F27241 		movw	r1, #1138
 2701 008c 0548     		ldr	r0, .L204+8
 2702 008e FFF7FEFF 		bl	_Error_Handler
 2703              	.LVL166:
 2704              	.L203:
1147:Src/main.c    ****   }
 2705              		.loc 1 1147 0
 2706 0092 40F27B41 		movw	r1, #1147
 2707 0096 0348     		ldr	r0, .L204+8
 2708 0098 FFF7FEFF 		bl	_Error_Handler
 2709              	.LVL167:
 2710              	.L205:
 2711              		.align	2
 2712              	.L204:
 2713 009c 00000000 		.word	htim5
 2714 00a0 000C0040 		.word	1073744896
 2715 00a4 00000000 		.word	.LC7
 2716              		.cfi_endproc
 2717              	.LFE182:
 2719              		.section	.text.MX_TIM8_Init,"ax",%progbits
 2720              		.align	1
 2721              		.syntax unified
 2722              		.thumb
 2723              		.thumb_func
 2724              		.fpu fpv5-sp-d16
 2726              	MX_TIM8_Init:
 2727              	.LFB184:
1181:Src/main.c    **** 
 2728              		.loc 1 1181 0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 32
 2731              		@ frame_needed = 0, uses_anonymous_args = 0
 2732 0000 00B5     		push	{lr}
 2733              	.LCFI49:
 2734              		.cfi_def_cfa_offset 4
 2735              		.cfi_offset 14, -4
 2736 0002 89B0     		sub	sp, sp, #36
 2737              	.LCFI50:
 2738              		.cfi_def_cfa_offset 40
1186:Src/main.c    ****   htim8.Init.Prescaler = 0;
 2739              		.loc 1 1186 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 84


 2740 0004 1848     		ldr	r0, .L214
 2741 0006 194B     		ldr	r3, .L214+4
 2742 0008 0360     		str	r3, [r0]
1187:Src/main.c    ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 2743              		.loc 1 1187 0
 2744 000a 0023     		movs	r3, #0
 2745 000c 4360     		str	r3, [r0, #4]
1188:Src/main.c    ****   htim8.Init.Period = 0;
 2746              		.loc 1 1188 0
 2747 000e 8360     		str	r3, [r0, #8]
1189:Src/main.c    ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2748              		.loc 1 1189 0
 2749 0010 C360     		str	r3, [r0, #12]
1190:Src/main.c    ****   htim8.Init.RepetitionCounter = 0;
 2750              		.loc 1 1190 0
 2751 0012 0361     		str	r3, [r0, #16]
1191:Src/main.c    ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2752              		.loc 1 1191 0
 2753 0014 4361     		str	r3, [r0, #20]
1192:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 2754              		.loc 1 1192 0
 2755 0016 8361     		str	r3, [r0, #24]
1193:Src/main.c    ****   {
 2756              		.loc 1 1193 0
 2757 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2758              	.LVL168:
 2759 001c A0B9     		cbnz	r0, .L211
1198:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 2760              		.loc 1 1198 0
 2761 001e 08A9     		add	r1, sp, #32
 2762 0020 4FF48053 		mov	r3, #4096
 2763 0024 41F8103D 		str	r3, [r1, #-16]!
1199:Src/main.c    ****   {
 2764              		.loc 1 1199 0
 2765 0028 0F48     		ldr	r0, .L214
 2766 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2767              	.LVL169:
 2768 002e 80B9     		cbnz	r0, .L212
1204:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2769              		.loc 1 1204 0
 2770 0030 0023     		movs	r3, #0
 2771 0032 0193     		str	r3, [sp, #4]
1205:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2772              		.loc 1 1205 0
 2773 0034 0293     		str	r3, [sp, #8]
1206:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 2774              		.loc 1 1206 0
 2775 0036 0393     		str	r3, [sp, #12]
1207:Src/main.c    ****   {
 2776              		.loc 1 1207 0
 2777 0038 01A9     		add	r1, sp, #4
 2778 003a 0B48     		ldr	r0, .L214
 2779 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2780              	.LVL170:
 2781 0040 60B9     		cbnz	r0, .L213
1212:Src/main.c    **** 
 2782              		.loc 1 1212 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 85


 2783 0042 09B0     		add	sp, sp, #36
 2784              	.LCFI51:
 2785              		.cfi_remember_state
 2786              		.cfi_def_cfa_offset 4
 2787              		@ sp needed
 2788 0044 5DF804FB 		ldr	pc, [sp], #4
 2789              	.L211:
 2790              	.LCFI52:
 2791              		.cfi_restore_state
1195:Src/main.c    ****   }
 2792              		.loc 1 1195 0
 2793 0048 40F2AB41 		movw	r1, #1195
 2794 004c 0848     		ldr	r0, .L214+8
 2795 004e FFF7FEFF 		bl	_Error_Handler
 2796              	.LVL171:
 2797              	.L212:
1201:Src/main.c    ****   }
 2798              		.loc 1 1201 0
 2799 0052 40F2B141 		movw	r1, #1201
 2800 0056 0648     		ldr	r0, .L214+8
 2801 0058 FFF7FEFF 		bl	_Error_Handler
 2802              	.LVL172:
 2803              	.L213:
1209:Src/main.c    ****   }
 2804              		.loc 1 1209 0
 2805 005c 40F2B941 		movw	r1, #1209
 2806 0060 0348     		ldr	r0, .L214+8
 2807 0062 FFF7FEFF 		bl	_Error_Handler
 2808              	.LVL173:
 2809              	.L215:
 2810 0066 00BF     		.align	2
 2811              	.L214:
 2812 0068 00000000 		.word	htim8
 2813 006c 00040140 		.word	1073808384
 2814 0070 00000000 		.word	.LC7
 2815              		.cfi_endproc
 2816              	.LFE184:
 2818              		.section	.text.MX_TIM12_Init,"ax",%progbits
 2819              		.align	1
 2820              		.syntax unified
 2821              		.thumb
 2822              		.thumb_func
 2823              		.fpu fpv5-sp-d16
 2825              	MX_TIM12_Init:
 2826              	.LFB185:
1216:Src/main.c    **** 
 2827              		.loc 1 1216 0
 2828              		.cfi_startproc
 2829              		@ args = 0, pretend = 0, frame = 32
 2830              		@ frame_needed = 0, uses_anonymous_args = 0
 2831 0000 00B5     		push	{lr}
 2832              	.LCFI53:
 2833              		.cfi_def_cfa_offset 4
 2834              		.cfi_offset 14, -4
 2835 0002 89B0     		sub	sp, sp, #36
 2836              	.LCFI54:
 2837              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 86


1220:Src/main.c    ****   htim12.Init.Prescaler = 0;
 2838              		.loc 1 1220 0
 2839 0004 1348     		ldr	r0, .L222
 2840 0006 144B     		ldr	r3, .L222+4
 2841 0008 0360     		str	r3, [r0]
1221:Src/main.c    ****   htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 2842              		.loc 1 1221 0
 2843 000a 0023     		movs	r3, #0
 2844 000c 4360     		str	r3, [r0, #4]
1222:Src/main.c    ****   htim12.Init.Period = 0;
 2845              		.loc 1 1222 0
 2846 000e 8360     		str	r3, [r0, #8]
1223:Src/main.c    ****   htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2847              		.loc 1 1223 0
 2848 0010 C360     		str	r3, [r0, #12]
1224:Src/main.c    ****   htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2849              		.loc 1 1224 0
 2850 0012 0361     		str	r3, [r0, #16]
1225:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 2851              		.loc 1 1225 0
 2852 0014 8361     		str	r3, [r0, #24]
1226:Src/main.c    ****   {
 2853              		.loc 1 1226 0
 2854 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2855              	.LVL174:
 2856 001a 80B9     		cbnz	r0, .L220
1231:Src/main.c    ****   sConfigOC.Pulse = 0;
 2857              		.loc 1 1231 0
 2858 001c 6023     		movs	r3, #96
 2859 001e 0193     		str	r3, [sp, #4]
1232:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2860              		.loc 1 1232 0
 2861 0020 0022     		movs	r2, #0
 2862 0022 0292     		str	r2, [sp, #8]
1233:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2863              		.loc 1 1233 0
 2864 0024 0392     		str	r2, [sp, #12]
1234:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2865              		.loc 1 1234 0
 2866 0026 0592     		str	r2, [sp, #20]
1235:Src/main.c    ****   {
 2867              		.loc 1 1235 0
 2868 0028 01A9     		add	r1, sp, #4
 2869 002a 0A48     		ldr	r0, .L222
 2870 002c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2871              	.LVL175:
 2872 0030 50B9     		cbnz	r0, .L221
1240:Src/main.c    **** 
 2873              		.loc 1 1240 0
 2874 0032 0848     		ldr	r0, .L222
 2875 0034 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2876              	.LVL176:
1242:Src/main.c    **** 
 2877              		.loc 1 1242 0
 2878 0038 09B0     		add	sp, sp, #36
 2879              	.LCFI55:
 2880              		.cfi_remember_state
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 87


 2881              		.cfi_def_cfa_offset 4
 2882              		@ sp needed
 2883 003a 5DF804FB 		ldr	pc, [sp], #4
 2884              	.L220:
 2885              	.LCFI56:
 2886              		.cfi_restore_state
1228:Src/main.c    ****   }
 2887              		.loc 1 1228 0
 2888 003e 40F2CC41 		movw	r1, #1228
 2889 0042 0648     		ldr	r0, .L222+8
 2890 0044 FFF7FEFF 		bl	_Error_Handler
 2891              	.LVL177:
 2892              	.L221:
1237:Src/main.c    ****   }
 2893              		.loc 1 1237 0
 2894 0048 40F2D541 		movw	r1, #1237
 2895 004c 0348     		ldr	r0, .L222+8
 2896 004e FFF7FEFF 		bl	_Error_Handler
 2897              	.LVL178:
 2898              	.L223:
 2899 0052 00BF     		.align	2
 2900              	.L222:
 2901 0054 00000000 		.word	htim12
 2902 0058 00180040 		.word	1073747968
 2903 005c 00000000 		.word	.LC7
 2904              		.cfi_endproc
 2905              	.LFE185:
 2907              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 2908              		.align	1
 2909              		.syntax unified
 2910              		.thumb
 2911              		.thumb_func
 2912              		.fpu fpv5-sp-d16
 2914              	MX_USART1_UART_Init:
 2915              	.LFB186:
1246:Src/main.c    **** 
 2916              		.loc 1 1246 0
 2917              		.cfi_startproc
 2918              		@ args = 0, pretend = 0, frame = 0
 2919              		@ frame_needed = 0, uses_anonymous_args = 0
 2920 0000 08B5     		push	{r3, lr}
 2921              	.LCFI57:
 2922              		.cfi_def_cfa_offset 8
 2923              		.cfi_offset 3, -8
 2924              		.cfi_offset 14, -4
1248:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 2925              		.loc 1 1248 0
 2926 0002 0C48     		ldr	r0, .L228
 2927 0004 0C4B     		ldr	r3, .L228+4
 2928 0006 0360     		str	r3, [r0]
1249:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 2929              		.loc 1 1249 0
 2930 0008 4FF4E133 		mov	r3, #115200
 2931 000c 4360     		str	r3, [r0, #4]
1250:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 2932              		.loc 1 1250 0
 2933 000e 0023     		movs	r3, #0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 88


 2934 0010 8360     		str	r3, [r0, #8]
1251:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 2935              		.loc 1 1251 0
 2936 0012 C360     		str	r3, [r0, #12]
1252:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 2937              		.loc 1 1252 0
 2938 0014 0361     		str	r3, [r0, #16]
1253:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2939              		.loc 1 1253 0
 2940 0016 0C22     		movs	r2, #12
 2941 0018 4261     		str	r2, [r0, #20]
1254:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 2942              		.loc 1 1254 0
 2943 001a 8361     		str	r3, [r0, #24]
1255:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2944              		.loc 1 1255 0
 2945 001c C361     		str	r3, [r0, #28]
1256:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2946              		.loc 1 1256 0
 2947 001e 0362     		str	r3, [r0, #32]
1257:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 2948              		.loc 1 1257 0
 2949 0020 4362     		str	r3, [r0, #36]
1258:Src/main.c    ****   {
 2950              		.loc 1 1258 0
 2951 0022 FFF7FEFF 		bl	HAL_UART_Init
 2952              	.LVL179:
 2953 0026 00B9     		cbnz	r0, .L227
1263:Src/main.c    **** 
 2954              		.loc 1 1263 0
 2955 0028 08BD     		pop	{r3, pc}
 2956              	.L227:
1260:Src/main.c    ****   }
 2957              		.loc 1 1260 0
 2958 002a 40F2EC41 		movw	r1, #1260
 2959 002e 0348     		ldr	r0, .L228+8
 2960 0030 FFF7FEFF 		bl	_Error_Handler
 2961              	.LVL180:
 2962              	.L229:
 2963              		.align	2
 2964              	.L228:
 2965 0034 00000000 		.word	huart1
 2966 0038 00100140 		.word	1073811456
 2967 003c 00000000 		.word	.LC7
 2968              		.cfi_endproc
 2969              	.LFE186:
 2971              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 2972              		.align	1
 2973              		.syntax unified
 2974              		.thumb
 2975              		.thumb_func
 2976              		.fpu fpv5-sp-d16
 2978              	MX_USART6_UART_Init:
 2979              	.LFB187:
1267:Src/main.c    **** 
 2980              		.loc 1 1267 0
 2981              		.cfi_startproc
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 89


 2982              		@ args = 0, pretend = 0, frame = 0
 2983              		@ frame_needed = 0, uses_anonymous_args = 0
 2984 0000 08B5     		push	{r3, lr}
 2985              	.LCFI58:
 2986              		.cfi_def_cfa_offset 8
 2987              		.cfi_offset 3, -8
 2988              		.cfi_offset 14, -4
1269:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 2989              		.loc 1 1269 0
 2990 0002 0C48     		ldr	r0, .L234
 2991 0004 0C4B     		ldr	r3, .L234+4
 2992 0006 0360     		str	r3, [r0]
1270:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 2993              		.loc 1 1270 0
 2994 0008 4FF4E133 		mov	r3, #115200
 2995 000c 4360     		str	r3, [r0, #4]
1271:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 2996              		.loc 1 1271 0
 2997 000e 0023     		movs	r3, #0
 2998 0010 8360     		str	r3, [r0, #8]
1272:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 2999              		.loc 1 1272 0
 3000 0012 C360     		str	r3, [r0, #12]
1273:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 3001              		.loc 1 1273 0
 3002 0014 0361     		str	r3, [r0, #16]
1274:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3003              		.loc 1 1274 0
 3004 0016 0C22     		movs	r2, #12
 3005 0018 4261     		str	r2, [r0, #20]
1275:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 3006              		.loc 1 1275 0
 3007 001a 8361     		str	r3, [r0, #24]
1276:Src/main.c    ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3008              		.loc 1 1276 0
 3009 001c C361     		str	r3, [r0, #28]
1277:Src/main.c    ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3010              		.loc 1 1277 0
 3011 001e 0362     		str	r3, [r0, #32]
1278:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 3012              		.loc 1 1278 0
 3013 0020 4362     		str	r3, [r0, #36]
1279:Src/main.c    ****   {
 3014              		.loc 1 1279 0
 3015 0022 FFF7FEFF 		bl	HAL_UART_Init
 3016              	.LVL181:
 3017 0026 00B9     		cbnz	r0, .L233
1284:Src/main.c    **** 
 3018              		.loc 1 1284 0
 3019 0028 08BD     		pop	{r3, pc}
 3020              	.L233:
1281:Src/main.c    ****   }
 3021              		.loc 1 1281 0
 3022 002a 40F20151 		movw	r1, #1281
 3023 002e 0348     		ldr	r0, .L234+8
 3024 0030 FFF7FEFF 		bl	_Error_Handler
 3025              	.LVL182:
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 90


 3026              	.L235:
 3027              		.align	2
 3028              	.L234:
 3029 0034 00000000 		.word	huart6
 3030 0038 00140140 		.word	1073812480
 3031 003c 00000000 		.word	.LC7
 3032              		.cfi_endproc
 3033              	.LFE187:
 3035              		.section	.text.MX_TIM7_Init,"ax",%progbits
 3036              		.align	1
 3037              		.syntax unified
 3038              		.thumb
 3039              		.thumb_func
 3040              		.fpu fpv5-sp-d16
 3042              	MX_TIM7_Init:
 3043              	.LFB183:
1156:Src/main.c    **** 
 3044              		.loc 1 1156 0
 3045              		.cfi_startproc
 3046              		@ args = 0, pretend = 0, frame = 16
 3047              		@ frame_needed = 0, uses_anonymous_args = 0
 3048 0000 00B5     		push	{lr}
 3049              	.LCFI59:
 3050              		.cfi_def_cfa_offset 4
 3051              		.cfi_offset 14, -4
 3052 0002 85B0     		sub	sp, sp, #20
 3053              	.LCFI60:
 3054              		.cfi_def_cfa_offset 24
1160:Src/main.c    ****   htim7.Init.Prescaler = 0;
 3055              		.loc 1 1160 0
 3056 0004 0F48     		ldr	r0, .L242
 3057 0006 104B     		ldr	r3, .L242+4
 3058 0008 0360     		str	r3, [r0]
1161:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 3059              		.loc 1 1161 0
 3060 000a 0023     		movs	r3, #0
 3061 000c 4360     		str	r3, [r0, #4]
1162:Src/main.c    ****   htim7.Init.Period = 0;
 3062              		.loc 1 1162 0
 3063 000e 8360     		str	r3, [r0, #8]
1163:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3064              		.loc 1 1163 0
 3065 0010 C360     		str	r3, [r0, #12]
1164:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 3066              		.loc 1 1164 0
 3067 0012 8361     		str	r3, [r0, #24]
1165:Src/main.c    ****   {
 3068              		.loc 1 1165 0
 3069 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 3070              	.LVL183:
 3071 0018 50B9     		cbnz	r0, .L240
1170:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 3072              		.loc 1 1170 0
 3073 001a 0023     		movs	r3, #0
 3074 001c 0193     		str	r3, [sp, #4]
1171:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 3075              		.loc 1 1171 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 91


 3076 001e 0393     		str	r3, [sp, #12]
1172:Src/main.c    ****   {
 3077              		.loc 1 1172 0
 3078 0020 01A9     		add	r1, sp, #4
 3079 0022 0848     		ldr	r0, .L242
 3080 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 3081              	.LVL184:
 3082 0028 38B9     		cbnz	r0, .L241
1177:Src/main.c    **** 
 3083              		.loc 1 1177 0
 3084 002a 05B0     		add	sp, sp, #20
 3085              	.LCFI61:
 3086              		.cfi_remember_state
 3087              		.cfi_def_cfa_offset 4
 3088              		@ sp needed
 3089 002c 5DF804FB 		ldr	pc, [sp], #4
 3090              	.L240:
 3091              	.LCFI62:
 3092              		.cfi_restore_state
1167:Src/main.c    ****   }
 3093              		.loc 1 1167 0
 3094 0030 40F28F41 		movw	r1, #1167
 3095 0034 0548     		ldr	r0, .L242+8
 3096 0036 FFF7FEFF 		bl	_Error_Handler
 3097              	.LVL185:
 3098              	.L241:
1174:Src/main.c    ****   }
 3099              		.loc 1 1174 0
 3100 003a 40F29641 		movw	r1, #1174
 3101 003e 0348     		ldr	r0, .L242+8
 3102 0040 FFF7FEFF 		bl	_Error_Handler
 3103              	.LVL186:
 3104              	.L243:
 3105              		.align	2
 3106              	.L242:
 3107 0044 00000000 		.word	htim7
 3108 0048 00140040 		.word	1073746944
 3109 004c 00000000 		.word	.LC7
 3110              		.cfi_endproc
 3111              	.LFE183:
 3113              		.section	.text.SystemClock_Config,"ax",%progbits
 3114              		.align	1
 3115              		.global	SystemClock_Config
 3116              		.syntax unified
 3117              		.thumb
 3118              		.thumb_func
 3119              		.fpu fpv5-sp-d16
 3121              	SystemClock_Config:
 3122              	.LFB165:
 391:Src/main.c    **** 
 3123              		.loc 1 391 0
 3124              		.cfi_startproc
 3125              		@ args = 0, pretend = 0, frame = 208
 3126              		@ frame_needed = 0, uses_anonymous_args = 0
 3127 0000 00B5     		push	{lr}
 3128              	.LCFI63:
 3129              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 92


 3130              		.cfi_offset 14, -4
 3131 0002 B5B0     		sub	sp, sp, #212
 3132              	.LCFI64:
 3133              		.cfi_def_cfa_offset 216
 3134              	.LBB13:
 399:Src/main.c    **** 
 3135              		.loc 1 399 0
 3136 0004 474B     		ldr	r3, .L254
 3137 0006 1A6C     		ldr	r2, [r3, #64]
 3138 0008 42F08052 		orr	r2, r2, #268435456
 3139 000c 1A64     		str	r2, [r3, #64]
 3140 000e 1B6C     		ldr	r3, [r3, #64]
 3141 0010 03F08053 		and	r3, r3, #268435456
 3142 0014 0093     		str	r3, [sp]
 3143 0016 009B     		ldr	r3, [sp]
 3144              	.LBE13:
 3145              	.LBB14:
 401:Src/main.c    **** 
 3146              		.loc 1 401 0
 3147 0018 434B     		ldr	r3, .L254+4
 3148 001a 1A68     		ldr	r2, [r3]
 3149 001c 42F44042 		orr	r2, r2, #49152
 3150 0020 1A60     		str	r2, [r3]
 3151 0022 1B68     		ldr	r3, [r3]
 3152 0024 03F44043 		and	r3, r3, #49152
 3153 0028 0193     		str	r3, [sp, #4]
 3154 002a 019B     		ldr	r3, [sp, #4]
 3155              	.LBE14:
 405:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 3156              		.loc 1 405 0
 3157 002c 0923     		movs	r3, #9
 3158 002e 2893     		str	r3, [sp, #160]
 406:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 3159              		.loc 1 406 0
 3160 0030 4FF48033 		mov	r3, #65536
 3161 0034 2993     		str	r3, [sp, #164]
 407:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3162              		.loc 1 407 0
 3163 0036 0123     		movs	r3, #1
 3164 0038 2D93     		str	r3, [sp, #180]
 408:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 3165              		.loc 1 408 0
 3166 003a 0223     		movs	r3, #2
 3167 003c 2E93     		str	r3, [sp, #184]
 409:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 3168              		.loc 1 409 0
 3169 003e 4FF48002 		mov	r2, #4194304
 3170 0042 2F92     		str	r2, [sp, #188]
 410:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 3171              		.loc 1 410 0
 3172 0044 1922     		movs	r2, #25
 3173 0046 3092     		str	r2, [sp, #192]
 411:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 3174              		.loc 1 411 0
 3175 0048 4FF4C872 		mov	r2, #400
 3176 004c 3192     		str	r2, [sp, #196]
 412:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 8;
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 93


 3177              		.loc 1 412 0
 3178 004e 3293     		str	r3, [sp, #200]
 413:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3179              		.loc 1 413 0
 3180 0050 0823     		movs	r3, #8
 3181 0052 3393     		str	r3, [sp, #204]
 414:Src/main.c    ****   {
 3182              		.loc 1 414 0
 3183 0054 28A8     		add	r0, sp, #160
 3184 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 3185              	.LVL187:
 3186 005a 0028     		cmp	r0, #0
 3187 005c 4ED1     		bne	.L250
 421:Src/main.c    ****   {
 3188              		.loc 1 421 0
 3189 005e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 3190              	.LVL188:
 3191 0062 0028     		cmp	r0, #0
 3192 0064 4FD1     		bne	.L251
 428:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3193              		.loc 1 428 0
 3194 0066 0F23     		movs	r3, #15
 3195 0068 2393     		str	r3, [sp, #140]
 430:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3196              		.loc 1 430 0
 3197 006a 0223     		movs	r3, #2
 3198 006c 2493     		str	r3, [sp, #144]
 431:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 3199              		.loc 1 431 0
 3200 006e 0023     		movs	r3, #0
 3201 0070 2593     		str	r3, [sp, #148]
 432:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 3202              		.loc 1 432 0
 3203 0072 4FF4A053 		mov	r3, #5120
 3204 0076 2693     		str	r3, [sp, #152]
 433:Src/main.c    **** 
 3205              		.loc 1 433 0
 3206 0078 4FF48053 		mov	r3, #4096
 3207 007c 2793     		str	r3, [sp, #156]
 435:Src/main.c    ****   {
 3208              		.loc 1 435 0
 3209 007e 0621     		movs	r1, #6
 3210 0080 23A8     		add	r0, sp, #140
 3211 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3212              	.LVL189:
 3213 0086 0028     		cmp	r0, #0
 3214 0088 42D1     		bne	.L252
 440:Src/main.c    ****                               |RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART1
 3215              		.loc 1 440 0
 3216 008a 284B     		ldr	r3, .L254+8
 3217 008c 0293     		str	r3, [sp, #8]
 445:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 3218              		.loc 1 445 0
 3219 008e 6423     		movs	r3, #100
 3220 0090 0393     		str	r3, [sp, #12]
 446:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 3221              		.loc 1 446 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 94


 3222 0092 0223     		movs	r3, #2
 3223 0094 0693     		str	r3, [sp, #24]
 447:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 3224              		.loc 1 447 0
 3225 0096 0493     		str	r3, [sp, #16]
 448:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 3226              		.loc 1 448 0
 3227 0098 0593     		str	r3, [sp, #20]
 449:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 3228              		.loc 1 449 0
 3229 009a C023     		movs	r3, #192
 3230 009c 0793     		str	r3, [sp, #28]
 450:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 3231              		.loc 1 450 0
 3232 009e 0423     		movs	r3, #4
 3233 00a0 0993     		str	r3, [sp, #36]
 451:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
 3234              		.loc 1 451 0
 3235 00a2 0893     		str	r3, [sp, #32]
 452:Src/main.c    ****   PeriphClkInitStruct.PLLI2SDivQ = 1;
 3236              		.loc 1 452 0
 3237 00a4 0123     		movs	r3, #1
 3238 00a6 0A93     		str	r3, [sp, #40]
 453:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 3239              		.loc 1 453 0
 3240 00a8 0B93     		str	r3, [sp, #44]
 454:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 3241              		.loc 1 454 0
 3242 00aa 0C93     		str	r3, [sp, #48]
 455:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 3243              		.loc 1 455 0
 3244 00ac 4FF40033 		mov	r3, #131072
 3245 00b0 0D93     		str	r3, [sp, #52]
 456:Src/main.c    ****   PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 3246              		.loc 1 456 0
 3247 00b2 4FF40073 		mov	r3, #512
 3248 00b6 0E93     		str	r3, [sp, #56]
 457:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 3249              		.loc 1 457 0
 3250 00b8 0023     		movs	r3, #0
 3251 00ba 1293     		str	r3, [sp, #72]
 458:Src/main.c    ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 3252              		.loc 1 458 0
 3253 00bc 1393     		str	r3, [sp, #76]
 459:Src/main.c    ****   PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 3254              		.loc 1 459 0
 3255 00be 1893     		str	r3, [sp, #96]
 460:Src/main.c    ****   PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 3256              		.loc 1 460 0
 3257 00c0 1B93     		str	r3, [sp, #108]
 461:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 3258              		.loc 1 461 0
 3259 00c2 1D93     		str	r3, [sp, #116]
 462:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 3260              		.loc 1 462 0
 3261 00c4 4FF00062 		mov	r2, #134217728
 3262 00c8 2192     		str	r2, [sp, #132]
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 95


 463:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 3263              		.loc 1 463 0
 3264 00ca 2293     		str	r3, [sp, #136]
 464:Src/main.c    ****   {
 3265              		.loc 1 464 0
 3266 00cc 02A8     		add	r0, sp, #8
 3267 00ce FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 3268              	.LVL190:
 3269 00d2 10BB     		cbnz	r0, .L253
 471:Src/main.c    **** 
 3270              		.loc 1 471 0
 3271 00d4 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3272              	.LVL191:
 3273 00d8 154B     		ldr	r3, .L254+12
 3274 00da A3FB0030 		umull	r3, r0, r3, r0
 3275 00de 8009     		lsrs	r0, r0, #6
 3276 00e0 FFF7FEFF 		bl	HAL_SYSTICK_Config
 3277              	.LVL192:
 475:Src/main.c    **** 
 3278              		.loc 1 475 0
 3279 00e4 0420     		movs	r0, #4
 3280 00e6 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 3281              	.LVL193:
 478:Src/main.c    **** }
 3282              		.loc 1 478 0
 3283 00ea 0022     		movs	r2, #0
 3284 00ec 0F21     		movs	r1, #15
 3285 00ee 4FF0FF30 		mov	r0, #-1
 3286 00f2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 3287              	.LVL194:
 479:Src/main.c    **** 
 3288              		.loc 1 479 0
 3289 00f6 35B0     		add	sp, sp, #212
 3290              	.LCFI65:
 3291              		.cfi_remember_state
 3292              		.cfi_def_cfa_offset 4
 3293              		@ sp needed
 3294 00f8 5DF804FB 		ldr	pc, [sp], #4
 3295              	.L250:
 3296              	.LCFI66:
 3297              		.cfi_restore_state
 416:Src/main.c    ****   }
 3298              		.loc 1 416 0
 3299 00fc 4FF4D071 		mov	r1, #416
 3300 0100 0C48     		ldr	r0, .L254+16
 3301 0102 FFF7FEFF 		bl	_Error_Handler
 3302              	.LVL195:
 3303              	.L251:
 423:Src/main.c    ****   }
 3304              		.loc 1 423 0
 3305 0106 40F2A711 		movw	r1, #423
 3306 010a 0A48     		ldr	r0, .L254+16
 3307 010c FFF7FEFF 		bl	_Error_Handler
 3308              	.LVL196:
 3309              	.L252:
 437:Src/main.c    ****   }
 3310              		.loc 1 437 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 96


 3311 0110 40F2B511 		movw	r1, #437
 3312 0114 0748     		ldr	r0, .L254+16
 3313 0116 FFF7FEFF 		bl	_Error_Handler
 3314              	.LVL197:
 3315              	.L253:
 466:Src/main.c    ****   }
 3316              		.loc 1 466 0
 3317 011a 4FF4E971 		mov	r1, #466
 3318 011e 0548     		ldr	r0, .L254+16
 3319 0120 FFF7FEFF 		bl	_Error_Handler
 3320              	.LVL198:
 3321              	.L255:
 3322              		.align	2
 3323              	.L254:
 3324 0124 00380240 		.word	1073887232
 3325 0128 00700040 		.word	1073770496
 3326 012c 6848B101 		.word	28395624
 3327 0130 D34D6210 		.word	274877907
 3328 0134 00000000 		.word	.LC7
 3329              		.cfi_endproc
 3330              	.LFE165:
 3332              		.section	.text.main,"ax",%progbits
 3333              		.align	1
 3334              		.global	main
 3335              		.syntax unified
 3336              		.thumb
 3337              		.thumb_func
 3338              		.fpu fpv5-sp-d16
 3340              	main:
 3341              	.LFB164:
 282:Src/main.c    ****   /* USER CODE BEGIN 1 */
 3342              		.loc 1 282 0
 3343              		.cfi_startproc
 3344              		@ Volatile: function does not return.
 3345              		@ args = 0, pretend = 0, frame = 24
 3346              		@ frame_needed = 0, uses_anonymous_args = 0
 3347 0000 00B5     		push	{lr}
 3348              	.LCFI67:
 3349              		.cfi_def_cfa_offset 4
 3350              		.cfi_offset 14, -4
 3351 0002 87B0     		sub	sp, sp, #28
 3352              	.LCFI68:
 3353              		.cfi_def_cfa_offset 32
 290:Src/main.c    **** 
 3354              		.loc 1 290 0
 3355 0004 FFF7FEFF 		bl	HAL_Init
 3356              	.LVL199:
 297:Src/main.c    **** 
 3357              		.loc 1 297 0
 3358 0008 FFF7FEFF 		bl	SystemClock_Config
 3359              	.LVL200:
 304:Src/main.c    ****   MX_ADC3_Init();
 3360              		.loc 1 304 0
 3361 000c FFF7FEFF 		bl	MX_GPIO_Init
 3362              	.LVL201:
 305:Src/main.c    ****   MX_CRC_Init();
 3363              		.loc 1 305 0
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 97


 3364 0010 FFF7FEFF 		bl	MX_ADC3_Init
 3365              	.LVL202:
 306:Src/main.c    ****   MX_DCMI_Init();
 3366              		.loc 1 306 0
 3367 0014 FFF7FEFF 		bl	MX_CRC_Init
 3368              	.LVL203:
 307:Src/main.c    ****   MX_DMA2D_Init();
 3369              		.loc 1 307 0
 3370 0018 FFF7FEFF 		bl	MX_DCMI_Init
 3371              	.LVL204:
 308:Src/main.c    ****   MX_FMC_Init();
 3372              		.loc 1 308 0
 3373 001c FFF7FEFF 		bl	MX_DMA2D_Init
 3374              	.LVL205:
 309:Src/main.c    ****   MX_I2C1_Init();
 3375              		.loc 1 309 0
 3376 0020 FFF7FEFF 		bl	MX_FMC_Init
 3377              	.LVL206:
 310:Src/main.c    ****   MX_I2C3_Init();
 3378              		.loc 1 310 0
 3379 0024 FFF7FEFF 		bl	MX_I2C1_Init
 3380              	.LVL207:
 311:Src/main.c    ****   MX_LTDC_Init();
 3381              		.loc 1 311 0
 3382 0028 FFF7FEFF 		bl	MX_I2C3_Init
 3383              	.LVL208:
 312:Src/main.c    ****   MX_QUADSPI_Init();
 3384              		.loc 1 312 0
 3385 002c FFF7FEFF 		bl	MX_LTDC_Init
 3386              	.LVL209:
 313:Src/main.c    ****   MX_RTC_Init();
 3387              		.loc 1 313 0
 3388 0030 FFF7FEFF 		bl	MX_QUADSPI_Init
 3389              	.LVL210:
 314:Src/main.c    ****   MX_SAI2_Init();
 3390              		.loc 1 314 0
 3391 0034 FFF7FEFF 		bl	MX_RTC_Init
 3392              	.LVL211:
 315:Src/main.c    ****   MX_SDMMC1_SD_Init();
 3393              		.loc 1 315 0
 3394 0038 FFF7FEFF 		bl	MX_SAI2_Init
 3395              	.LVL212:
 316:Src/main.c    ****   MX_SPDIFRX_Init();
 3396              		.loc 1 316 0
 3397 003c FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 3398              	.LVL213:
 317:Src/main.c    ****   MX_SPI2_Init();
 3399              		.loc 1 317 0
 3400 0040 FFF7FEFF 		bl	MX_SPDIFRX_Init
 3401              	.LVL214:
 318:Src/main.c    ****   MX_TIM1_Init();
 3402              		.loc 1 318 0
 3403 0044 FFF7FEFF 		bl	MX_SPI2_Init
 3404              	.LVL215:
 319:Src/main.c    ****   MX_TIM2_Init();
 3405              		.loc 1 319 0
 3406 0048 FFF7FEFF 		bl	MX_TIM1_Init
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 98


 3407              	.LVL216:
 320:Src/main.c    ****   MX_TIM3_Init();
 3408              		.loc 1 320 0
 3409 004c FFF7FEFF 		bl	MX_TIM2_Init
 3410              	.LVL217:
 321:Src/main.c    ****   MX_TIM5_Init();
 3411              		.loc 1 321 0
 3412 0050 FFF7FEFF 		bl	MX_TIM3_Init
 3413              	.LVL218:
 322:Src/main.c    ****   MX_TIM8_Init();
 3414              		.loc 1 322 0
 3415 0054 FFF7FEFF 		bl	MX_TIM5_Init
 3416              	.LVL219:
 323:Src/main.c    ****   MX_TIM12_Init();
 3417              		.loc 1 323 0
 3418 0058 FFF7FEFF 		bl	MX_TIM8_Init
 3419              	.LVL220:
 324:Src/main.c    ****   MX_USART1_UART_Init();
 3420              		.loc 1 324 0
 3421 005c FFF7FEFF 		bl	MX_TIM12_Init
 3422              	.LVL221:
 325:Src/main.c    ****   MX_USART6_UART_Init();
 3423              		.loc 1 325 0
 3424 0060 FFF7FEFF 		bl	MX_USART1_UART_Init
 3425              	.LVL222:
 326:Src/main.c    ****   MX_TIM7_Init();
 3426              		.loc 1 326 0
 3427 0064 FFF7FEFF 		bl	MX_USART6_UART_Init
 3428              	.LVL223:
 327:Src/main.c    ****   /* USER CODE BEGIN 2 */
 3429              		.loc 1 327 0
 3430 0068 FFF7FEFF 		bl	MX_TIM7_Init
 3431              	.LVL224:
 329:Src/main.c    **** 
 3432              		.loc 1 329 0
 3433 006c 0E48     		ldr	r0, .L259
 3434 006e FFF7FEFF 		bl	debug_init
 3435              	.LVL225:
 331:Src/main.c    **** 
 3436              		.loc 1 331 0
 3437 0072 0E48     		ldr	r0, .L259+4
 3438 0074 FFF7FEFF 		bl	xprintf
 3439              	.LVL226:
 333:Src/main.c    **** 
 3440              		.loc 1 333 0
 3441 0078 0D48     		ldr	r0, .L259+8
 3442 007a FFF7FEFF 		bl	puts
 3443              	.LVL227:
 335:Src/main.c    **** draw_background();
 3444              		.loc 1 335 0
 3445 007e FFF7FEFF 		bl	lcd_start
 3446              	.LVL228:
 336:Src/main.c    **** initialize_touchscreen();
 3447              		.loc 1 336 0
 3448 0082 FFF7FEFF 		bl	draw_background
 3449              	.LVL229:
 337:Src/main.c    **** 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 99


 3450              		.loc 1 337 0
 3451 0086 FFF7FEFF 		bl	initialize_touchscreen
 3452              	.LVL230:
 355:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 3453              		.loc 1 355 0
 3454 008a 01AC     		add	r4, sp, #4
 3455 008c 094D     		ldr	r5, .L259+12
 3456 008e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3457 0090 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3458 0092 2B68     		ldr	r3, [r5]
 3459 0094 2360     		str	r3, [r4]
 356:Src/main.c    **** 
 3460              		.loc 1 356 0
 3461 0096 0021     		movs	r1, #0
 3462 0098 01A8     		add	r0, sp, #4
 3463 009a FFF7FEFF 		bl	osThreadCreate
 3464              	.LVL231:
 3465 009e 064B     		ldr	r3, .L259+16
 3466 00a0 1860     		str	r0, [r3]
 368:Src/main.c    ****   
 3467              		.loc 1 368 0
 3468 00a2 FFF7FEFF 		bl	osKernelStart
 3469              	.LVL232:
 3470              	.L257:
 3471 00a6 FEE7     		b	.L257
 3472              	.L260:
 3473              		.align	2
 3474              	.L259:
 3475 00a8 00000000 		.word	huart1
 3476 00ac 00000000 		.word	.LC8
 3477 00b0 2C000000 		.word	.LC9
 3478 00b4 00000000 		.word	.LANCHOR1
 3479 00b8 00000000 		.word	defaultTaskHandle
 3480              		.cfi_endproc
 3481              	.LFE164:
 3483              		.comm	netconn_thread_handle,4,4
 3484              		.comm	defaultTaskHandle,4,4
 3485              		.comm	hsdram1,52,4
 3486              		.comm	huart6,112,4
 3487              		.comm	huart1,112,4
 3488              		.comm	htim12,64,4
 3489              		.comm	htim8,64,4
 3490              		.comm	htim7,64,4
 3491              		.comm	htim5,64,4
 3492              		.comm	htim3,64,4
 3493              		.comm	htim2,64,4
 3494              		.comm	htim1,64,4
 3495              		.comm	hspi2,100,4
 3496              		.comm	hspdif,76,4
 3497              		.comm	hsd1,132,4
 3498              		.comm	hsai_BlockB2,132,4
 3499              		.comm	hsai_BlockA2,132,4
 3500              		.comm	hrtc,32,4
 3501              		.comm	hqspi,76,4
 3502              		.comm	hltdc,168,4
 3503              		.comm	hi2c3,76,4
 3504              		.comm	hi2c1,76,4
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 100


 3505              		.comm	hdma2d,64,4
 3506              		.comm	hdcmi,80,4
 3507              		.comm	hcrc,36,4
 3508              		.comm	hadc3,72,4
 3509              		.section	.rodata
 3510              		.align	2
 3511              		.set	.LANCHOR1,. + 0
 3512              	.LC10:
 3513 0000 00000000 		.word	.LC0
 3514 0004 00000000 		.word	StartDefaultTask
 3515 0008 0000     		.short	0
 3516 000a 0000     		.space	2
 3517 000c 00000000 		.word	0
 3518 0010 00100000 		.word	4096
 3519              		.section	.bss.file,"aw",%nobits
 3520              		.align	2
 3521              		.set	.LANCHOR0,. + 0
 3524              	file:
 3525 0000 00000000 		.space	560
 3525      00000000 
 3525      00000000 
 3525      00000000 
 3525      00000000 
 3526              		.section	.rodata.MX_ADC3_Init.str1.4,"aMS",%progbits,1
 3527              		.align	2
 3528              	.LC7:
 3529 0000 5372632F 		.ascii	"Src/main.c\000"
 3529      6D61696E 
 3529      2E6300
 3530              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 3531              		.align	2
 3532              	.LC2:
 3533 0000 77616974 		.ascii	"waiting for USB mass storage\012\000"
 3533      696E6720 
 3533      666F7220 
 3533      55534220 
 3533      6D617373 
 3534 001e 0000     		.space	2
 3535              	.LC3:
 3536 0020 2E00     		.ascii	".\000"
 3537 0022 0000     		.space	2
 3538              	.LC4:
 3539 0024 74657374 		.ascii	"test.mp3\000"
 3539      2E6D7033 
 3539      00
 3540 002d 000000   		.space	3
 3541              	.LC5:
 3542 0030 6D703320 		.ascii	"mp3 file open OK\012\000"
 3542      66696C65 
 3542      206F7065 
 3542      6E204F4B 
 3542      0A00
 3543 0042 0000     		.space	2
 3544              	.LC6:
 3545 0044 6D703320 		.ascii	"mp3 file open ERROR, res = %d\012\000"
 3545      66696C65 
 3545      206F7065 
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 101


 3545      6E204552 
 3545      524F522C 
 3546              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 3547              		.align	2
 3548              	.LC8:
 3549 0000 1B5B303B 		.ascii	"\033[0;32mSTM32F746 Discovery Project\033[0;39m\012"
 3549      33326D53 
 3549      544D3332 
 3549      46373436 
 3549      20446973 
 3550 002a 00       		.ascii	"\000"
 3551 002b 00       		.space	1
 3552              	.LC9:
 3553 002c 52656775 		.ascii	"Regular printf\000"
 3553      6C617220 
 3553      7072696E 
 3553      746600
 3554              		.section	.rodata.str1.4,"aMS",%progbits,1
 3555              		.align	2
 3556              	.LC0:
 3557 0000 64656661 		.ascii	"defaultTask\000"
 3557      756C7454 
 3557      61736B00 
 3558              		.text
 3559              	.Letext0:
 3560              		.file 2 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\machine\\_default
 3561              		.file 3 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 3562              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 3563              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 3564              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 3565              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 3566              		.file 8 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 3567              		.file 9 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 3568              		.file 10 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\
 3569              		.file 11 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 3570              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3571              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 3572              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 3573              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 3574              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 3575              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 3576              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_crc.h"
 3577              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma2d.h"
 3578              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dcmi.h"
 3579              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 3580              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_fmc.h"
 3581              		.file 23 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sdram.h"
 3582              		.file 24 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 3583              		.file 25 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_ltdc.h"
 3584              		.file 26 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_qspi.h"
 3585              		.file 27 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 3586              		.file 28 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sai.h"
 3587              		.file 29 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 3588              		.file 30 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 3589              		.file 31 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spdifrx.h"
 3590              		.file 32 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 3591              		.file 33 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 102


 3592              		.file 34 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 3593              		.file 35 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 3594              		.file 36 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3595              		.file 37 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 3596              		.file 38 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 3597              		.file 39 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 3598              		.file 40 "Middlewares/Third_Party/FatFs/src/integer.h"
 3599              		.file 41 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\stdlib.h"
 3600              		.file 42 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 3601              		.file 43 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 3602              		.file 44 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 3603              		.file 45 "Middlewares/Third_Party/FatFs/src/ff.h"
 3604              		.file 46 "Middlewares/Third_Party/FatFs/src/diskio.h"
 3605              		.file 47 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 3606              		.file 48 "Inc/sd_diskio.h"
 3607              		.file 49 "Inc/usbh_diskio.h"
 3608              		.file 50 "Inc/fatfs.h"
 3609              		.file 51 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\time.h"
 3610              		.file 52 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 3611              		.file 53 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 3612              		.file 54 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 3613              		.file 55 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 3614              		.file 56 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 3615              		.file 57 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 3616              		.file 58 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 3617              		.file 59 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 3618              		.file 60 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ip4.h"
 3619              		.file 61 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 3620              		.file 62 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 3621              		.file 63 "Middlewares/Third_Party/LwIP/src/include/lwip/ip.h"
 3622              		.file 64 "Middlewares/Third_Party/LwIP/src/include/lwip/udp.h"
 3623              		.file 65 "Middlewares/Third_Party/LwIP/system/arch/sys_arch.h"
 3624              		.file 66 "Middlewares/Third_Party/LwIP/src/include/lwip/timeouts.h"
 3625              		.file 67 "Middlewares/Third_Party/LwIP/src/include/lwip/tcpip.h"
 3626              		.file 68 "Inc/lwip.h"
 3627              		.file 69 "Inc/usb_host.h"
 3628              		.file 70 "Middlewares/Third_Party/LwIP/src/include/lwip/errno.h"
 3629              		.file 71 "d:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\unistd.h"
 3630              		.file 72 "d:\\sw\\utilities\\fonts\\fonts.h"
 3631              		.file 73 "d:\\sw\\drivers\\bsp\\components\\common\\ts.h"
 3632              		.file 74 "d:\\sw\\drivers\\bsp\\components\\ft5336\\ft5336.h"
 3633              		.file 75 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_ts.h"
 3634              		.file 76 "d:\\sw\\drivers\\bsp\\components\\common\\audio.h"
 3635              		.file 77 "d:\\sw\\drivers\\bsp\\components\\wm8994\\wm8994.h"
 3636              		.file 78 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_audio.h"
 3637              		.file 79 "Middlewares/Third_Party/LwIP/src/include/lwip/inet.h"
 3638              		.file 80 "Middlewares/Third_Party/LwIP/src/include/lwip/netdb.h"
 3639              		.file 81 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 3640              		.file 82 "Inc/term_io.h"
 3641              		.file 83 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
 3642              		.file 84 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c_ex.h"
 3643              		.file 85 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 3644              		.file 86 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 3645              		.file 87 "Inc/dbgu.h"
 3646              		.file 88 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_lcd.h"
 3647              		.file 89 "<built-in>"
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 103


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:18     .text.MX_SDMMC1_SD_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:24     .text.MX_SDMMC1_SD_Init:00000000 MX_SDMMC1_SD_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:54     .text.MX_SDMMC1_SD_Init:00000018 $d
                            *COM*:00000084 hsd1
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:60     .text.MX_GPIO_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:66     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:475    .text.MX_GPIO_Init:00000270 $d
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:491    .text.lcd_start:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:497    .text.lcd_start:00000000 lcd_start
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:568    .text.lcd_start:00000064 $d
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:573    .text.StartDefaultTask:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:580    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:648    .text.StartDefaultTask:0000004c $d
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:659    .text.__io_putchar:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:666    .text.__io_putchar:00000000 __io_putchar
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:691    .text.__io_putchar:00000014 $d
                            *COM*:00000070 huart1
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:696    .text.inkey:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:703    .text.inkey:00000000 inkey
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:735    .text.inkey:0000001c $d
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:740    .text.draw_background:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:747    .text.draw_background:00000000 draw_background
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:783    .text.initialize_touchscreen:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:790    .text.initialize_touchscreen:00000000 initialize_touchscreen
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:830    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:837    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:868    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:873    .text._Error_Handler:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:880    .text._Error_Handler:00000000 _Error_Handler
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:895    .text.MX_ADC3_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:901    .text.MX_ADC3_Init:00000000 MX_ADC3_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:988    .text.MX_ADC3_Init:00000060 $d
                            *COM*:00000048 hadc3
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:996    .text.MX_CRC_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1002   .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1044   .text.MX_CRC_Init:00000028 $d
                            *COM*:00000024 hcrc
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1051   .text.MX_DCMI_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1057   .text.MX_DCMI_Init:00000000 MX_DCMI_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1110   .text.MX_DCMI_Init:00000034 $d
                            *COM*:00000050 hdcmi
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1117   .text.MX_DMA2D_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1123   .text.MX_DMA2D_Init:00000000 MX_DMA2D_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1180   .text.MX_DMA2D_Init:00000040 $d
                            *COM*:00000040 hdma2d
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1187   .text.MX_FMC_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1193   .text.MX_FMC_Init:00000000 MX_FMC_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1277   .text.MX_FMC_Init:00000060 $d
                            *COM*:00000034 hsdram1
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1284   .text.MX_I2C1_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1290   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1363   .text.MX_I2C1_Init:00000058 $d
                            *COM*:0000004c hi2c1
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1371   .text.MX_I2C3_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1377   .text.MX_I2C3_Init:00000000 MX_I2C3_Init
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 104


C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1450   .text.MX_I2C3_Init:00000058 $d
                            *COM*:0000004c hi2c3
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1458   .text.MX_LTDC_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1464   .text.MX_LTDC_Init:00000000 MX_LTDC_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1591   .text.MX_LTDC_Init:000000ac $d
                            *COM*:000000a8 hltdc
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1598   .text.MX_QUADSPI_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1604   .text.MX_QUADSPI_Init:00000000 MX_QUADSPI_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1653   .text.MX_QUADSPI_Init:00000030 $d
                            *COM*:0000004c hqspi
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1660   .text.MX_RTC_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1666   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1837   .text.MX_RTC_Init:000000f8 $d
                            *COM*:00000020 hrtc
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1844   .text.MX_SAI2_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1850   .text.MX_SAI2_Init:00000000 MX_SAI2_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:1992   .text.MX_SAI2_Init:0000009c $d
                            *COM*:00000084 hsai_BlockA2
                            *COM*:00000084 hsai_BlockB2
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2002   .text.MX_SPDIFRX_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2008   .text.MX_SPDIFRX_Init:00000000 MX_SPDIFRX_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2059   .text.MX_SPDIFRX_Init:00000034 $d
                            *COM*:0000004c hspdif
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2065   .text.MX_SPI2_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2071   .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2133   .text.MX_SPI2_Init:00000048 $d
                            *COM*:00000064 hspi2
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2140   .text.MX_TIM1_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2146   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2317   .text.MX_TIM1_Init:000000e4 $d
                            *COM*:00000040 htim1
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2324   .text.MX_TIM2_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2330   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2449   .text.MX_TIM2_Init:0000009c $d
                            *COM*:00000040 htim2
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2455   .text.MX_TIM3_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2461   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2580   .text.MX_TIM3_Init:0000009c $d
                            *COM*:00000040 htim3
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2587   .text.MX_TIM5_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2593   .text.MX_TIM5_Init:00000000 MX_TIM5_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2713   .text.MX_TIM5_Init:0000009c $d
                            *COM*:00000040 htim5
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2720   .text.MX_TIM8_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2726   .text.MX_TIM8_Init:00000000 MX_TIM8_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2812   .text.MX_TIM8_Init:00000068 $d
                            *COM*:00000040 htim8
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2819   .text.MX_TIM12_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2825   .text.MX_TIM12_Init:00000000 MX_TIM12_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2901   .text.MX_TIM12_Init:00000054 $d
                            *COM*:00000040 htim12
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2908   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2914   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2965   .text.MX_USART1_UART_Init:00000034 $d
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2972   .text.MX_USART6_UART_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:2978   .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3029   .text.MX_USART6_UART_Init:00000034 $d
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 105


                            *COM*:00000070 huart6
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3036   .text.MX_TIM7_Init:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3042   .text.MX_TIM7_Init:00000000 MX_TIM7_Init
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3107   .text.MX_TIM7_Init:00000044 $d
                            *COM*:00000040 htim7
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3114   .text.SystemClock_Config:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3121   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3324   .text.SystemClock_Config:00000124 $d
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3333   .text.main:00000000 $t
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3340   .text.main:00000000 main
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3475   .text.main:000000a8 $d
                            *COM*:00000004 defaultTaskHandle
                            *COM*:00000004 netconn_thread_handle
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3510   .rodata:00000000 $d
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3520   .bss.file:00000000 $d
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3524   .bss.file:00000000 file
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3527   .rodata.MX_ADC3_Init.str1.4:00000000 $d
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3531   .rodata.StartDefaultTask.str1.4:00000000 $d
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3547   .rodata.main.str1.4:00000000 $d
C:\Users\milek\AppData\Local\Temp\cc2JNJng.s:3555   .rodata.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
BSP_LCD_Init
BSP_LCD_LayerDefaultInit
BSP_LCD_DisplayOn
BSP_LCD_SelectLayer
BSP_LCD_Clear
BSP_LCD_SetBackColor
BSP_LCD_SetColorKeying
BSP_LCD_SetTransparency
MX_FATFS_Init
MX_USB_HOST_Init
vTaskDelay
xprintf
f_open
Appli_state
BSP_LCD_SetTextColor
BSP_LCD_FillRect
BSP_LCD_GetXSize
BSP_LCD_GetYSize
BSP_TS_Init
HAL_IncTick
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CRC_Init
HAL_DCMI_Init
HAL_DMA2D_Init
HAL_DMA2D_ConfigLayer
HAL_SDRAM_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_LTDC_Init
HAL_LTDC_ConfigLayer
HAL_QSPI_Init
ARM GAS  C:\Users\milek\AppData\Local\Temp\cc2JNJng.s 			page 106


HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RTC_SetAlarm
HAL_RTCEx_SetTimeStamp
HAL_SAI_Init
HAL_SPDIFRX_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
debug_init
puts
osThreadCreate
osKernelStart
