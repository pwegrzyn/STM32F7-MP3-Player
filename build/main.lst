ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	MX_SDMMC1_SD_Init:
  25              	.LFB155:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V.
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice,
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under
  32:Src/main.c    ****   *    this license.
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 2


  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS"
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  50:Src/main.c    **** #include "main.h"
  51:Src/main.c    **** #include "stm32f7xx_hal.h"
  52:Src/main.c    **** #include "cmsis_os.h"
  53:Src/main.c    **** #include "fatfs.h"
  54:Src/main.c    **** #include "usb_host.h"
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE BEGIN Includes */
  57:Src/main.c    **** #include "mp3_player.h"
  58:Src/main.c    **** #include "gui.h"
  59:Src/main.c    **** 
  60:Src/main.c    **** #include  <errno.h>
  61:Src/main.c    **** #include  <sys/unistd.h>
  62:Src/main.c    **** 
  63:Src/main.c    **** #include "stm32746g_discovery_lcd.h"
  64:Src/main.c    **** #include "Utilities/Fonts/fonts.h"
  65:Src/main.c    **** #include "stm32746g_discovery_ts.h"
  66:Src/main.c    **** #include "stm32746g_discovery_audio.h"
  67:Src/main.c    **** #include "term_io.h"
  68:Src/main.c    **** #include "dbgu.h"
  69:Src/main.c    **** #include "ansi.h"
  70:Src/main.c    **** 
  71:Src/main.c    **** #include "FreeRTOS.h"
  72:Src/main.c    **** #include "task.h"
  73:Src/main.c    **** #include "queue.h"
  74:Src/main.c    **** 
  75:Src/main.c    **** #include "wm8994/wm8994.h"
  76:Src/main.c    **** 
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE END Includes */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  81:Src/main.c    **** ADC_HandleTypeDef hadc3;
  82:Src/main.c    **** 
  83:Src/main.c    **** CRC_HandleTypeDef hcrc;
  84:Src/main.c    **** 
  85:Src/main.c    **** DCMI_HandleTypeDef hdcmi;
  86:Src/main.c    **** 
  87:Src/main.c    **** DMA2D_HandleTypeDef hdma2d;
  88:Src/main.c    **** 
  89:Src/main.c    **** I2C_HandleTypeDef hi2c1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 3


  90:Src/main.c    **** I2C_HandleTypeDef hi2c3;
  91:Src/main.c    **** 
  92:Src/main.c    **** LTDC_HandleTypeDef hltdc;
  93:Src/main.c    **** 
  94:Src/main.c    **** QSPI_HandleTypeDef hqspi;
  95:Src/main.c    **** 
  96:Src/main.c    **** RTC_HandleTypeDef hrtc;
  97:Src/main.c    **** 
  98:Src/main.c    **** SAI_HandleTypeDef hsai_BlockA2;
  99:Src/main.c    **** SAI_HandleTypeDef hsai_BlockB2;
 100:Src/main.c    **** 
 101:Src/main.c    **** SD_HandleTypeDef hsd1;
 102:Src/main.c    **** 
 103:Src/main.c    **** SPDIFRX_HandleTypeDef hspdif;
 104:Src/main.c    **** 
 105:Src/main.c    **** SPI_HandleTypeDef hspi2;
 106:Src/main.c    **** 
 107:Src/main.c    **** TIM_HandleTypeDef htim1;
 108:Src/main.c    **** TIM_HandleTypeDef htim2;
 109:Src/main.c    **** TIM_HandleTypeDef htim3;
 110:Src/main.c    **** TIM_HandleTypeDef htim5;
 111:Src/main.c    **** TIM_HandleTypeDef htim7;
 112:Src/main.c    **** TIM_HandleTypeDef htim8;
 113:Src/main.c    **** TIM_HandleTypeDef htim12;
 114:Src/main.c    **** 
 115:Src/main.c    **** UART_HandleTypeDef huart1;
 116:Src/main.c    **** UART_HandleTypeDef huart6;
 117:Src/main.c    **** 
 118:Src/main.c    **** SDRAM_HandleTypeDef hsdram1;
 119:Src/main.c    **** 
 120:Src/main.c    **** osThreadId defaultTaskHandle;
 121:Src/main.c    **** 
 122:Src/main.c    **** /* USER CODE BEGIN PV */
 123:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
 124:Src/main.c    **** 
 125:Src/main.c    **** /* USER CODE END PV */
 126:Src/main.c    **** 
 127:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 128:Src/main.c    **** void SystemClock_Config(void);
 129:Src/main.c    **** static void MX_GPIO_Init(void);
 130:Src/main.c    **** static void MX_ADC3_Init(void);
 131:Src/main.c    **** static void MX_CRC_Init(void);
 132:Src/main.c    **** static void MX_DCMI_Init(void);
 133:Src/main.c    **** static void MX_DMA2D_Init(void);
 134:Src/main.c    **** static void MX_FMC_Init(void);
 135:Src/main.c    **** static void MX_I2C1_Init(void);
 136:Src/main.c    **** static void MX_I2C3_Init(void);
 137:Src/main.c    **** static void MX_LTDC_Init(void);
 138:Src/main.c    **** static void MX_QUADSPI_Init(void);
 139:Src/main.c    **** static void MX_RTC_Init(void);
 140:Src/main.c    **** static void MX_SAI2_Init(void);
 141:Src/main.c    **** static void MX_SDMMC1_SD_Init(void);
 142:Src/main.c    **** static void MX_SPDIFRX_Init(void);
 143:Src/main.c    **** static void MX_SPI2_Init(void);
 144:Src/main.c    **** static void MX_TIM1_Init(void);
 145:Src/main.c    **** static void MX_TIM2_Init(void);
 146:Src/main.c    **** static void MX_TIM3_Init(void);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 4


 147:Src/main.c    **** static void MX_TIM5_Init(void);
 148:Src/main.c    **** static void MX_TIM8_Init(void);
 149:Src/main.c    **** static void MX_TIM12_Init(void);
 150:Src/main.c    **** static void MX_USART1_UART_Init(void);
 151:Src/main.c    **** static void MX_USART6_UART_Init(void);
 152:Src/main.c    **** static void MX_TIM7_Init(void);
 153:Src/main.c    **** void StartDefaultTask(void const * argument);
 154:Src/main.c    **** 
 155:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
 156:Src/main.c    **** 
 157:Src/main.c    **** /* USER CODE BEGIN PFP */
 158:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 159:Src/main.c    **** 
 160:Src/main.c    **** /* USER CODE END PFP */
 161:Src/main.c    **** 
 162:Src/main.c    **** /* USER CODE BEGIN 0 */
 163:Src/main.c    **** void mainTask(void* p);
 164:Src/main.c    **** 
 165:Src/main.c    **** #define LCD_X_SIZE			RK043FN48H_WIDTH
 166:Src/main.c    **** #define LCD_Y_SIZE			RK043FN48H_HEIGHT
 167:Src/main.c    **** 
 168:Src/main.c    **** #define PRINTF_USES_HAL_TX		0
 169:Src/main.c    **** 
 170:Src/main.c    **** int __io_putchar(int ch)
 171:Src/main.c    **** {
 172:Src/main.c    **** 	uint8_t data = ch;
 173:Src/main.c    **** 	#if PRINTF_USES_HAL_TX
 174:Src/main.c    **** 		HAL_StatusTypeDef status = HAL_UART_Transmit(&huart1, (uint8_t*)&data, len, 100);
 175:Src/main.c    **** 	#else
 176:Src/main.c    **** 		while(__HAL_UART_GET_FLAG(&huart1, UART_FLAG_TXE) == RESET) { ; }
 177:Src/main.c    **** 		huart1.Instance->TDR = (uint16_t)data;
 178:Src/main.c    **** 	#endif
 179:Src/main.c    **** 	return 0;
 180:Src/main.c    **** }
 181:Src/main.c    **** 
 182:Src/main.c    **** char inkey(void)
 183:Src/main.c    **** {
 184:Src/main.c    **** 	uint32_t flags = huart1.Instance->ISR;
 185:Src/main.c    **** 
 186:Src/main.c    **** 	if((flags & UART_FLAG_RXNE) || (flags & UART_FLAG_ORE))
 187:Src/main.c    **** 	{
 188:Src/main.c    **** 		__HAL_UART_CLEAR_OREFLAG(&huart1);
 189:Src/main.c    **** 		return (huart1.Instance->RDR);
 190:Src/main.c    **** 	}
 191:Src/main.c    **** 	else
 192:Src/main.c    **** 		return 0;
 193:Src/main.c    **** }
 194:Src/main.c    **** 
 195:Src/main.c    **** /* USER CODE END 0 */
 196:Src/main.c    **** 
 197:Src/main.c    **** /**
 198:Src/main.c    ****   * @brief  The application entry point.
 199:Src/main.c    ****   *
 200:Src/main.c    ****   * @retval None
 201:Src/main.c    ****   */
 202:Src/main.c    **** int main(void)
 203:Src/main.c    **** {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 5


 204:Src/main.c    ****   /* USER CODE BEGIN 1 */
 205:Src/main.c    **** 
 206:Src/main.c    ****   /* USER CODE END 1 */
 207:Src/main.c    **** 
 208:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 209:Src/main.c    **** 
 210:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 211:Src/main.c    ****   HAL_Init();
 212:Src/main.c    **** 
 213:Src/main.c    ****   /* USER CODE BEGIN Init */
 214:Src/main.c    **** 
 215:Src/main.c    ****   /* USER CODE END Init */
 216:Src/main.c    **** 
 217:Src/main.c    ****   /* Configure the system clock */
 218:Src/main.c    ****   SystemClock_Config();
 219:Src/main.c    **** 
 220:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 221:Src/main.c    **** 
 222:Src/main.c    ****   /* USER CODE END SysInit */
 223:Src/main.c    **** 
 224:Src/main.c    ****   /* Initialize all configured peripherals */
 225:Src/main.c    ****   MX_GPIO_Init();
 226:Src/main.c    ****   MX_ADC3_Init();
 227:Src/main.c    ****   MX_CRC_Init();
 228:Src/main.c    ****   MX_DCMI_Init();
 229:Src/main.c    ****   MX_DMA2D_Init();
 230:Src/main.c    ****   MX_FMC_Init();
 231:Src/main.c    ****   MX_I2C1_Init();
 232:Src/main.c    ****   MX_I2C3_Init();
 233:Src/main.c    ****   MX_LTDC_Init();
 234:Src/main.c    ****   MX_QUADSPI_Init();
 235:Src/main.c    ****   MX_RTC_Init();
 236:Src/main.c    ****   MX_SAI2_Init();
 237:Src/main.c    ****   MX_SDMMC1_SD_Init();
 238:Src/main.c    ****   MX_SPDIFRX_Init();
 239:Src/main.c    ****   MX_SPI2_Init();
 240:Src/main.c    ****   MX_TIM1_Init();
 241:Src/main.c    ****   MX_TIM2_Init();
 242:Src/main.c    ****   MX_TIM3_Init();
 243:Src/main.c    ****   MX_TIM5_Init();
 244:Src/main.c    ****   MX_TIM8_Init();
 245:Src/main.c    ****   MX_TIM12_Init();
 246:Src/main.c    ****   MX_USART1_UART_Init();
 247:Src/main.c    ****   MX_USART6_UART_Init();
 248:Src/main.c    ****   MX_TIM7_Init();
 249:Src/main.c    ****   /* USER CODE BEGIN 2 */
 250:Src/main.c    ****   debug_init(&huart1);
 251:Src/main.c    **** 
 252:Src/main.c    ****   xprintf(ANSI_FG_GREEN "STM32F746 Discovery Project" ANSI_FG_DEFAULT "\n");
 253:Src/main.c    **** 
 254:Src/main.c    ****   printf("Regular printf\n");
 255:Src/main.c    **** 
 256:Src/main.c    ****   // gui.h init
 257:Src/main.c    ****   lcd_start();
 258:Src/main.c    ****   draw_background();
 259:Src/main.c    ****   if(initialize_touchscreen() == -1) {
 260:Src/main.c    ****     xprintf("Error while initializing touchscreen!\n");
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 6


 261:Src/main.c    ****   }
 262:Src/main.c    **** 
 263:Src/main.c    ****   /* USER CODE END 2 */
 264:Src/main.c    **** 
 265:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 266:Src/main.c    ****   /* add mutexes, ... */
 267:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 268:Src/main.c    **** 
 269:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 270:Src/main.c    ****   /* add semaphores, ... */
 271:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 274:Src/main.c    ****   /* start timers, add new ones, ... */
 275:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 276:Src/main.c    **** 
 277:Src/main.c    ****   /* Create the thread(s) */
 278:Src/main.c    ****   /* definition and creation of defaultTask */
 279:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 4096);
 280:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 281:Src/main.c    **** 
 282:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 283:Src/main.c    ****   /* add threads, ... */
 284:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 285:Src/main.c    **** 
 286:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 287:Src/main.c    ****   /* add queues, ... */
 288:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 289:Src/main.c    **** 
 290:Src/main.c    **** 
 291:Src/main.c    ****   /* Start scheduler */
 292:Src/main.c    ****   osKernelStart();
 293:Src/main.c    **** 
 294:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 295:Src/main.c    **** 
 296:Src/main.c    ****   /* Infinite loop */
 297:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 298:Src/main.c    ****   while (1)
 299:Src/main.c    ****   {
 300:Src/main.c    **** 
 301:Src/main.c    ****   /* USER CODE END WHILE */
 302:Src/main.c    **** 
 303:Src/main.c    ****   /* USER CODE BEGIN 3 */
 304:Src/main.c    **** 
 305:Src/main.c    ****   }
 306:Src/main.c    ****   /* USER CODE END 3 */
 307:Src/main.c    **** 
 308:Src/main.c    **** }
 309:Src/main.c    **** 
 310:Src/main.c    **** /**
 311:Src/main.c    ****   * @brief System Clock Configuration
 312:Src/main.c    ****   * @retval None
 313:Src/main.c    ****   */
 314:Src/main.c    **** void SystemClock_Config(void)
 315:Src/main.c    **** {
 316:Src/main.c    **** 
 317:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 7


 318:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 319:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 320:Src/main.c    **** 
 321:Src/main.c    ****     /**Configure the main internal regulator output voltage
 322:Src/main.c    ****     */
 323:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 324:Src/main.c    **** 
 325:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 326:Src/main.c    **** 
 327:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 328:Src/main.c    ****     */
 329:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 330:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 331:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 332:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 333:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 334:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 335:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 336:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 337:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 338:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 339:Src/main.c    ****   {
 340:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 341:Src/main.c    ****   }
 342:Src/main.c    **** 
 343:Src/main.c    ****     /**Activate the Over-Drive mode
 344:Src/main.c    ****     */
 345:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 346:Src/main.c    ****   {
 347:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 348:Src/main.c    ****   }
 349:Src/main.c    **** 
 350:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 351:Src/main.c    ****     */
 352:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 353:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 354:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 355:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 356:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 357:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 358:Src/main.c    **** 
 359:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 360:Src/main.c    ****   {
 361:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 362:Src/main.c    ****   }
 363:Src/main.c    **** 
 364:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPDIFRX|RCC_PERIPHCLK_LTDC
 365:Src/main.c    ****                               |RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART1
 366:Src/main.c    ****                               |RCC_PERIPHCLK_USART6|RCC_PERIPHCLK_SAI2
 367:Src/main.c    ****                               |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_I2C3
 368:Src/main.c    ****                               |RCC_PERIPHCLK_SDMMC1|RCC_PERIPHCLK_CLK48;
 369:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 100;
 370:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 371:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 372:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 373:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 374:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 8


 375:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 376:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
 377:Src/main.c    ****   PeriphClkInitStruct.PLLI2SDivQ = 1;
 378:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 379:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 380:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 381:Src/main.c    ****   PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 382:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 383:Src/main.c    ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 384:Src/main.c    ****   PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 385:Src/main.c    ****   PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 386:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 387:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 388:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 389:Src/main.c    ****   {
 390:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 391:Src/main.c    ****   }
 392:Src/main.c    **** 
 393:Src/main.c    ****     /**Configure the Systick interrupt time
 394:Src/main.c    ****     */
 395:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 396:Src/main.c    **** 
 397:Src/main.c    ****     /**Configure the Systick
 398:Src/main.c    ****     */
 399:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 400:Src/main.c    **** 
 401:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 402:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 403:Src/main.c    **** }
 404:Src/main.c    **** 
 405:Src/main.c    **** /* ADC3 init function */
 406:Src/main.c    **** static void MX_ADC3_Init(void)
 407:Src/main.c    **** {
 408:Src/main.c    **** 
 409:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 410:Src/main.c    **** 
 411:Src/main.c    ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 412:Src/main.c    ****     */
 413:Src/main.c    ****   hadc3.Instance = ADC3;
 414:Src/main.c    ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 415:Src/main.c    ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 416:Src/main.c    ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 417:Src/main.c    ****   hadc3.Init.ContinuousConvMode = DISABLE;
 418:Src/main.c    ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 419:Src/main.c    ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 420:Src/main.c    ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 421:Src/main.c    ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 422:Src/main.c    ****   hadc3.Init.NbrOfConversion = 1;
 423:Src/main.c    ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 424:Src/main.c    ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 425:Src/main.c    ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 426:Src/main.c    ****   {
 427:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 428:Src/main.c    ****   }
 429:Src/main.c    **** 
 430:Src/main.c    ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 431:Src/main.c    ****     */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 9


 432:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_4;
 433:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 434:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 435:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 436:Src/main.c    ****   {
 437:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 438:Src/main.c    ****   }
 439:Src/main.c    **** 
 440:Src/main.c    **** }
 441:Src/main.c    **** 
 442:Src/main.c    **** /* CRC init function */
 443:Src/main.c    **** static void MX_CRC_Init(void)
 444:Src/main.c    **** {
 445:Src/main.c    **** 
 446:Src/main.c    ****   hcrc.Instance = CRC;
 447:Src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 448:Src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 449:Src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 450:Src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 451:Src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 452:Src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 453:Src/main.c    ****   {
 454:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 455:Src/main.c    ****   }
 456:Src/main.c    **** 
 457:Src/main.c    **** }
 458:Src/main.c    **** 
 459:Src/main.c    **** /* DCMI init function */
 460:Src/main.c    **** static void MX_DCMI_Init(void)
 461:Src/main.c    **** {
 462:Src/main.c    **** 
 463:Src/main.c    ****   hdcmi.Instance = DCMI;
 464:Src/main.c    ****   hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 465:Src/main.c    ****   hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 466:Src/main.c    ****   hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 467:Src/main.c    ****   hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 468:Src/main.c    ****   hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 469:Src/main.c    ****   hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
 470:Src/main.c    ****   hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 471:Src/main.c    ****   hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 472:Src/main.c    ****   hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 473:Src/main.c    ****   hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 474:Src/main.c    ****   hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 475:Src/main.c    ****   if (HAL_DCMI_Init(&hdcmi) != HAL_OK)
 476:Src/main.c    ****   {
 477:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 478:Src/main.c    ****   }
 479:Src/main.c    **** 
 480:Src/main.c    **** }
 481:Src/main.c    **** 
 482:Src/main.c    **** /* DMA2D init function */
 483:Src/main.c    **** static void MX_DMA2D_Init(void)
 484:Src/main.c    **** {
 485:Src/main.c    **** 
 486:Src/main.c    ****   hdma2d.Instance = DMA2D;
 487:Src/main.c    ****   hdma2d.Init.Mode = DMA2D_M2M;
 488:Src/main.c    ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 10


 489:Src/main.c    ****   hdma2d.Init.OutputOffset = 0;
 490:Src/main.c    ****   hdma2d.LayerCfg[1].InputOffset = 0;
 491:Src/main.c    ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 492:Src/main.c    ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 493:Src/main.c    ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 494:Src/main.c    ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 495:Src/main.c    ****   {
 496:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 497:Src/main.c    ****   }
 498:Src/main.c    **** 
 499:Src/main.c    ****   if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 500:Src/main.c    ****   {
 501:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 502:Src/main.c    ****   }
 503:Src/main.c    **** 
 504:Src/main.c    **** }
 505:Src/main.c    **** 
 506:Src/main.c    **** /* I2C1 init function */
 507:Src/main.c    **** static void MX_I2C1_Init(void)
 508:Src/main.c    **** {
 509:Src/main.c    **** 
 510:Src/main.c    ****   hi2c1.Instance = I2C1;
 511:Src/main.c    ****   hi2c1.Init.Timing = 0x00C0EAFF;
 512:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 513:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 514:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 515:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 516:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 517:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 518:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 519:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 520:Src/main.c    ****   {
 521:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 522:Src/main.c    ****   }
 523:Src/main.c    **** 
 524:Src/main.c    ****     /**Configure Analogue filter
 525:Src/main.c    ****     */
 526:Src/main.c    ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 527:Src/main.c    ****   {
 528:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 529:Src/main.c    ****   }
 530:Src/main.c    **** 
 531:Src/main.c    ****     /**Configure Digital filter
 532:Src/main.c    ****     */
 533:Src/main.c    ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 534:Src/main.c    ****   {
 535:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 536:Src/main.c    ****   }
 537:Src/main.c    **** 
 538:Src/main.c    **** }
 539:Src/main.c    **** 
 540:Src/main.c    **** /* I2C3 init function */
 541:Src/main.c    **** static void MX_I2C3_Init(void)
 542:Src/main.c    **** {
 543:Src/main.c    **** 
 544:Src/main.c    ****   hi2c3.Instance = I2C3;
 545:Src/main.c    ****   hi2c3.Init.Timing = 0x00C0EAFF;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 11


 546:Src/main.c    ****   hi2c3.Init.OwnAddress1 = 0;
 547:Src/main.c    ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 548:Src/main.c    ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 549:Src/main.c    ****   hi2c3.Init.OwnAddress2 = 0;
 550:Src/main.c    ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 551:Src/main.c    ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 552:Src/main.c    ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 553:Src/main.c    ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 554:Src/main.c    ****   {
 555:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 556:Src/main.c    ****   }
 557:Src/main.c    **** 
 558:Src/main.c    ****     /**Configure Analogue filter
 559:Src/main.c    ****     */
 560:Src/main.c    ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 561:Src/main.c    ****   {
 562:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 563:Src/main.c    ****   }
 564:Src/main.c    **** 
 565:Src/main.c    ****     /**Configure Digital filter
 566:Src/main.c    ****     */
 567:Src/main.c    ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 568:Src/main.c    ****   {
 569:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 570:Src/main.c    ****   }
 571:Src/main.c    **** 
 572:Src/main.c    **** }
 573:Src/main.c    **** 
 574:Src/main.c    **** /* LTDC init function */
 575:Src/main.c    **** static void MX_LTDC_Init(void)
 576:Src/main.c    **** {
 577:Src/main.c    **** 
 578:Src/main.c    ****   LTDC_LayerCfgTypeDef pLayerCfg;
 579:Src/main.c    **** 
 580:Src/main.c    ****   hltdc.Instance = LTDC;
 581:Src/main.c    ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 582:Src/main.c    ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 583:Src/main.c    ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 584:Src/main.c    ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 585:Src/main.c    ****   hltdc.Init.HorizontalSync = 40;
 586:Src/main.c    ****   hltdc.Init.VerticalSync = 9;
 587:Src/main.c    ****   hltdc.Init.AccumulatedHBP = 53;
 588:Src/main.c    ****   hltdc.Init.AccumulatedVBP = 11;
 589:Src/main.c    ****   hltdc.Init.AccumulatedActiveW = 533;
 590:Src/main.c    ****   hltdc.Init.AccumulatedActiveH = 283;
 591:Src/main.c    ****   hltdc.Init.TotalWidth = 565;
 592:Src/main.c    ****   hltdc.Init.TotalHeigh = 285;
 593:Src/main.c    ****   hltdc.Init.Backcolor.Blue = 0;
 594:Src/main.c    ****   hltdc.Init.Backcolor.Green = 0;
 595:Src/main.c    ****   hltdc.Init.Backcolor.Red = 0;
 596:Src/main.c    ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 597:Src/main.c    ****   {
 598:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 599:Src/main.c    ****   }
 600:Src/main.c    **** 
 601:Src/main.c    ****   pLayerCfg.WindowX0 = 0;
 602:Src/main.c    ****   pLayerCfg.WindowX1 = 480;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 12


 603:Src/main.c    ****   pLayerCfg.WindowY0 = 0;
 604:Src/main.c    ****   pLayerCfg.WindowY1 = 272;
 605:Src/main.c    ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
 606:Src/main.c    ****   pLayerCfg.Alpha = 255;
 607:Src/main.c    ****   pLayerCfg.Alpha0 = 0;
 608:Src/main.c    ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 609:Src/main.c    ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 610:Src/main.c    ****   pLayerCfg.FBStartAdress = 0xC0000000;
 611:Src/main.c    ****   pLayerCfg.ImageWidth = 480;
 612:Src/main.c    ****   pLayerCfg.ImageHeight = 272;
 613:Src/main.c    ****   pLayerCfg.Backcolor.Blue = 0;
 614:Src/main.c    ****   pLayerCfg.Backcolor.Green = 0;
 615:Src/main.c    ****   pLayerCfg.Backcolor.Red = 0;
 616:Src/main.c    ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 617:Src/main.c    ****   {
 618:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 619:Src/main.c    ****   }
 620:Src/main.c    **** 
 621:Src/main.c    **** }
 622:Src/main.c    **** 
 623:Src/main.c    **** /* QUADSPI init function */
 624:Src/main.c    **** static void MX_QUADSPI_Init(void)
 625:Src/main.c    **** {
 626:Src/main.c    **** 
 627:Src/main.c    ****   /* QUADSPI parameter configuration*/
 628:Src/main.c    ****   hqspi.Instance = QUADSPI;
 629:Src/main.c    ****   hqspi.Init.ClockPrescaler = 255;
 630:Src/main.c    ****   hqspi.Init.FifoThreshold = 1;
 631:Src/main.c    ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 632:Src/main.c    ****   hqspi.Init.FlashSize = 1;
 633:Src/main.c    ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 634:Src/main.c    ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 635:Src/main.c    ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 636:Src/main.c    ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 637:Src/main.c    ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 638:Src/main.c    ****   {
 639:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 640:Src/main.c    ****   }
 641:Src/main.c    **** 
 642:Src/main.c    **** }
 643:Src/main.c    **** 
 644:Src/main.c    **** /* RTC init function */
 645:Src/main.c    **** static void MX_RTC_Init(void)
 646:Src/main.c    **** {
 647:Src/main.c    **** 
 648:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 0 */
 649:Src/main.c    **** 
 650:Src/main.c    ****   /* USER CODE END RTC_Init 0 */
 651:Src/main.c    **** 
 652:Src/main.c    ****   RTC_TimeTypeDef sTime;
 653:Src/main.c    ****   RTC_DateTypeDef sDate;
 654:Src/main.c    ****   RTC_AlarmTypeDef sAlarm;
 655:Src/main.c    **** 
 656:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 1 */
 657:Src/main.c    **** 
 658:Src/main.c    ****   /* USER CODE END RTC_Init 1 */
 659:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 13


 660:Src/main.c    ****     /**Initialize RTC Only
 661:Src/main.c    ****     */
 662:Src/main.c    ****   hrtc.Instance = RTC;
 663:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 664:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 665:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 666:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 667:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 668:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 669:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 670:Src/main.c    ****   {
 671:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 672:Src/main.c    ****   }
 673:Src/main.c    **** 
 674:Src/main.c    ****     /**Initialize RTC and set the Time and Date
 675:Src/main.c    ****     */
 676:Src/main.c    ****   sTime.Hours = 0x0;
 677:Src/main.c    ****   sTime.Minutes = 0x0;
 678:Src/main.c    ****   sTime.Seconds = 0x0;
 679:Src/main.c    ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 680:Src/main.c    ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 681:Src/main.c    ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 682:Src/main.c    ****   {
 683:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 684:Src/main.c    ****   }
 685:Src/main.c    **** 
 686:Src/main.c    ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 687:Src/main.c    ****   sDate.Month = RTC_MONTH_JANUARY;
 688:Src/main.c    ****   sDate.Date = 0x1;
 689:Src/main.c    ****   sDate.Year = 0x0;
 690:Src/main.c    **** 
 691:Src/main.c    ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 692:Src/main.c    ****   {
 693:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 694:Src/main.c    ****   }
 695:Src/main.c    **** 
 696:Src/main.c    ****     /**Enable the Alarm A
 697:Src/main.c    ****     */
 698:Src/main.c    ****   sAlarm.AlarmTime.Hours = 0x0;
 699:Src/main.c    ****   sAlarm.AlarmTime.Minutes = 0x0;
 700:Src/main.c    ****   sAlarm.AlarmTime.Seconds = 0x0;
 701:Src/main.c    ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 702:Src/main.c    ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 703:Src/main.c    ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 704:Src/main.c    ****   sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 705:Src/main.c    ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 706:Src/main.c    ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 707:Src/main.c    ****   sAlarm.AlarmDateWeekDay = 0x1;
 708:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_A;
 709:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 710:Src/main.c    ****   {
 711:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 712:Src/main.c    ****   }
 713:Src/main.c    **** 
 714:Src/main.c    ****     /**Enable the Alarm B
 715:Src/main.c    ****     */
 716:Src/main.c    ****   sAlarm.AlarmDateWeekDay = 0x1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 14


 717:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_B;
 718:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 719:Src/main.c    ****   {
 720:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 721:Src/main.c    ****   }
 722:Src/main.c    **** 
 723:Src/main.c    ****     /**Enable the TimeStamp
 724:Src/main.c    ****     */
 725:Src/main.c    ****   if (HAL_RTCEx_SetTimeStamp(&hrtc, RTC_TIMESTAMPEDGE_RISING, RTC_TIMESTAMPPIN_POS1) != HAL_OK)
 726:Src/main.c    ****   {
 727:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 728:Src/main.c    ****   }
 729:Src/main.c    **** 
 730:Src/main.c    **** }
 731:Src/main.c    **** 
 732:Src/main.c    **** /* SAI2 init function */
 733:Src/main.c    **** static void MX_SAI2_Init(void)
 734:Src/main.c    **** {
 735:Src/main.c    **** 
 736:Src/main.c    ****   hsai_BlockA2.Instance = SAI2_Block_A;
 737:Src/main.c    ****   hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 738:Src/main.c    ****   hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 739:Src/main.c    ****   hsai_BlockA2.Init.DataSize = SAI_DATASIZE_24;
 740:Src/main.c    ****   hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 741:Src/main.c    ****   hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 742:Src/main.c    ****   hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 743:Src/main.c    ****   hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 744:Src/main.c    ****   hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 745:Src/main.c    ****   hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 746:Src/main.c    ****   hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 747:Src/main.c    ****   hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 748:Src/main.c    ****   hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 749:Src/main.c    ****   hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 750:Src/main.c    ****   hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 751:Src/main.c    ****   hsai_BlockA2.FrameInit.FrameLength = 8;
 752:Src/main.c    ****   hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 753:Src/main.c    ****   hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 754:Src/main.c    ****   hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 755:Src/main.c    ****   hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 756:Src/main.c    ****   hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 757:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 758:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotNumber = 1;
 759:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 760:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK)
 761:Src/main.c    ****   {
 762:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 763:Src/main.c    ****   }
 764:Src/main.c    **** 
 765:Src/main.c    ****   hsai_BlockB2.Instance = SAI2_Block_B;
 766:Src/main.c    ****   hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 767:Src/main.c    ****   hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 768:Src/main.c    ****   hsai_BlockB2.Init.DataSize = SAI_DATASIZE_24;
 769:Src/main.c    ****   hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 770:Src/main.c    ****   hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 771:Src/main.c    ****   hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 772:Src/main.c    ****   hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 773:Src/main.c    ****   hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 15


 774:Src/main.c    ****   hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 775:Src/main.c    ****   hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 776:Src/main.c    ****   hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 777:Src/main.c    ****   hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 778:Src/main.c    ****   hsai_BlockB2.FrameInit.FrameLength = 8;
 779:Src/main.c    ****   hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 780:Src/main.c    ****   hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 781:Src/main.c    ****   hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 782:Src/main.c    ****   hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 783:Src/main.c    ****   hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 784:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 785:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotNumber = 1;
 786:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 787:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK)
 788:Src/main.c    ****   {
 789:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 790:Src/main.c    ****   }
 791:Src/main.c    **** 
 792:Src/main.c    **** }
 793:Src/main.c    **** 
 794:Src/main.c    **** /* SDMMC1 init function */
 795:Src/main.c    **** static void MX_SDMMC1_SD_Init(void)
 796:Src/main.c    **** {
  27              		.loc 1 796 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 797:Src/main.c    **** 
 798:Src/main.c    ****   hsd1.Instance = SDMMC1;
  32              		.loc 1 798 0
  33 0000 054B     		ldr	r3, .L2
  34 0002 064A     		ldr	r2, .L2+4
  35 0004 1A60     		str	r2, [r3]
 799:Src/main.c    ****   hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  36              		.loc 1 799 0
  37 0006 0022     		movs	r2, #0
  38 0008 5A60     		str	r2, [r3, #4]
 800:Src/main.c    ****   hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  39              		.loc 1 800 0
  40 000a 9A60     		str	r2, [r3, #8]
 801:Src/main.c    ****   hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  41              		.loc 1 801 0
  42 000c DA60     		str	r2, [r3, #12]
 802:Src/main.c    ****   hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
  43              		.loc 1 802 0
  44 000e 1A61     		str	r2, [r3, #16]
 803:Src/main.c    ****   hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  45              		.loc 1 803 0
  46 0010 5A61     		str	r2, [r3, #20]
 804:Src/main.c    ****   hsd1.Init.ClockDiv = 0;
  47              		.loc 1 804 0
  48 0012 9A61     		str	r2, [r3, #24]
  49 0014 7047     		bx	lr
  50              	.L3:
  51 0016 00BF     		.align	2
  52              	.L2:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 16


  53 0018 00000000 		.word	hsd1
  54 001c 002C0140 		.word	1073818624
  55              		.cfi_endproc
  56              	.LFE155:
  58              		.section	.text.MX_GPIO_Init,"ax",%progbits
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv5-sp-d16
  65              	MX_GPIO_Init:
  66              	.LFB168:
 805:Src/main.c    **** 
 806:Src/main.c    **** }
 807:Src/main.c    **** 
 808:Src/main.c    **** /* SPDIFRX init function */
 809:Src/main.c    **** static void MX_SPDIFRX_Init(void)
 810:Src/main.c    **** {
 811:Src/main.c    **** 
 812:Src/main.c    ****   hspdif.Instance = SPDIFRX;
 813:Src/main.c    ****   hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 814:Src/main.c    ****   hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 815:Src/main.c    ****   hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 816:Src/main.c    ****   hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 817:Src/main.c    ****   hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 818:Src/main.c    ****   hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 819:Src/main.c    ****   hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 820:Src/main.c    ****   hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 821:Src/main.c    ****   hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 822:Src/main.c    ****   hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 823:Src/main.c    ****   if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK)
 824:Src/main.c    ****   {
 825:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 826:Src/main.c    ****   }
 827:Src/main.c    **** 
 828:Src/main.c    **** }
 829:Src/main.c    **** 
 830:Src/main.c    **** /* SPI2 init function */
 831:Src/main.c    **** static void MX_SPI2_Init(void)
 832:Src/main.c    **** {
 833:Src/main.c    **** 
 834:Src/main.c    ****   /* SPI2 parameter configuration*/
 835:Src/main.c    ****   hspi2.Instance = SPI2;
 836:Src/main.c    ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 837:Src/main.c    ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 838:Src/main.c    ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 839:Src/main.c    ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 840:Src/main.c    ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 841:Src/main.c    ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 842:Src/main.c    ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 843:Src/main.c    ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 844:Src/main.c    ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 845:Src/main.c    ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 846:Src/main.c    ****   hspi2.Init.CRCPolynomial = 7;
 847:Src/main.c    ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 848:Src/main.c    ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 849:Src/main.c    ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 17


 850:Src/main.c    ****   {
 851:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 852:Src/main.c    ****   }
 853:Src/main.c    **** 
 854:Src/main.c    **** }
 855:Src/main.c    **** 
 856:Src/main.c    **** /* TIM1 init function */
 857:Src/main.c    **** static void MX_TIM1_Init(void)
 858:Src/main.c    **** {
 859:Src/main.c    **** 
 860:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 861:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 862:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 863:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 864:Src/main.c    **** 
 865:Src/main.c    ****   htim1.Instance = TIM1;
 866:Src/main.c    ****   htim1.Init.Prescaler = 0;
 867:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 868:Src/main.c    ****   htim1.Init.Period = 0;
 869:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 870:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 871:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 872:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 873:Src/main.c    ****   {
 874:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 875:Src/main.c    ****   }
 876:Src/main.c    **** 
 877:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 878:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 879:Src/main.c    ****   {
 880:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 881:Src/main.c    ****   }
 882:Src/main.c    **** 
 883:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 884:Src/main.c    ****   {
 885:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 886:Src/main.c    ****   }
 887:Src/main.c    **** 
 888:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 889:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 890:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 891:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 892:Src/main.c    ****   {
 893:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 894:Src/main.c    ****   }
 895:Src/main.c    **** 
 896:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 897:Src/main.c    ****   sConfigOC.Pulse = 0;
 898:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 899:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 900:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 901:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 902:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 903:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 904:Src/main.c    ****   {
 905:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 906:Src/main.c    ****   }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 18


 907:Src/main.c    **** 
 908:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 909:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 910:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 911:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 912:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 913:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 914:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 915:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 916:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 917:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 918:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 919:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 920:Src/main.c    ****   {
 921:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 922:Src/main.c    ****   }
 923:Src/main.c    **** 
 924:Src/main.c    ****   HAL_TIM_MspPostInit(&htim1);
 925:Src/main.c    **** 
 926:Src/main.c    **** }
 927:Src/main.c    **** 
 928:Src/main.c    **** /* TIM2 init function */
 929:Src/main.c    **** static void MX_TIM2_Init(void)
 930:Src/main.c    **** {
 931:Src/main.c    **** 
 932:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 933:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 934:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 935:Src/main.c    **** 
 936:Src/main.c    ****   htim2.Instance = TIM2;
 937:Src/main.c    ****   htim2.Init.Prescaler = 0;
 938:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 939:Src/main.c    ****   htim2.Init.Period = 0;
 940:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 941:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 942:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 943:Src/main.c    ****   {
 944:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 945:Src/main.c    ****   }
 946:Src/main.c    **** 
 947:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 948:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 949:Src/main.c    ****   {
 950:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 951:Src/main.c    ****   }
 952:Src/main.c    **** 
 953:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 954:Src/main.c    ****   {
 955:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 956:Src/main.c    ****   }
 957:Src/main.c    **** 
 958:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 959:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 960:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 961:Src/main.c    ****   {
 962:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 963:Src/main.c    ****   }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 19


 964:Src/main.c    **** 
 965:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 966:Src/main.c    ****   sConfigOC.Pulse = 0;
 967:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 968:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 969:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 970:Src/main.c    ****   {
 971:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 972:Src/main.c    ****   }
 973:Src/main.c    **** 
 974:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
 975:Src/main.c    **** 
 976:Src/main.c    **** }
 977:Src/main.c    **** 
 978:Src/main.c    **** /* TIM3 init function */
 979:Src/main.c    **** static void MX_TIM3_Init(void)
 980:Src/main.c    **** {
 981:Src/main.c    **** 
 982:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 983:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 984:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 985:Src/main.c    **** 
 986:Src/main.c    ****   htim3.Instance = TIM3;
 987:Src/main.c    ****   htim3.Init.Prescaler = 0;
 988:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 989:Src/main.c    ****   htim3.Init.Period = 0;
 990:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 991:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 992:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 993:Src/main.c    ****   {
 994:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 995:Src/main.c    ****   }
 996:Src/main.c    **** 
 997:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 998:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 999:Src/main.c    ****   {
1000:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1001:Src/main.c    ****   }
1002:Src/main.c    **** 
1003:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
1004:Src/main.c    ****   {
1005:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1006:Src/main.c    ****   }
1007:Src/main.c    **** 
1008:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1009:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1010:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
1011:Src/main.c    ****   {
1012:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1013:Src/main.c    ****   }
1014:Src/main.c    **** 
1015:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1016:Src/main.c    ****   sConfigOC.Pulse = 0;
1017:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1018:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1019:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1020:Src/main.c    ****   {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 20


1021:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1022:Src/main.c    ****   }
1023:Src/main.c    **** 
1024:Src/main.c    ****   HAL_TIM_MspPostInit(&htim3);
1025:Src/main.c    **** 
1026:Src/main.c    **** }
1027:Src/main.c    **** 
1028:Src/main.c    **** /* TIM5 init function */
1029:Src/main.c    **** static void MX_TIM5_Init(void)
1030:Src/main.c    **** {
1031:Src/main.c    **** 
1032:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
1033:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1034:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
1035:Src/main.c    **** 
1036:Src/main.c    ****   htim5.Instance = TIM5;
1037:Src/main.c    ****   htim5.Init.Prescaler = 0;
1038:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
1039:Src/main.c    ****   htim5.Init.Period = 0;
1040:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1041:Src/main.c    ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1042:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
1043:Src/main.c    ****   {
1044:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1045:Src/main.c    ****   }
1046:Src/main.c    **** 
1047:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1048:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
1049:Src/main.c    ****   {
1050:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1051:Src/main.c    ****   }
1052:Src/main.c    **** 
1053:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
1054:Src/main.c    ****   {
1055:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1056:Src/main.c    ****   }
1057:Src/main.c    **** 
1058:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1059:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1060:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
1061:Src/main.c    ****   {
1062:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1063:Src/main.c    ****   }
1064:Src/main.c    **** 
1065:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1066:Src/main.c    ****   sConfigOC.Pulse = 0;
1067:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1068:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1069:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
1070:Src/main.c    ****   {
1071:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1072:Src/main.c    ****   }
1073:Src/main.c    **** 
1074:Src/main.c    ****   HAL_TIM_MspPostInit(&htim5);
1075:Src/main.c    **** 
1076:Src/main.c    **** }
1077:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 21


1078:Src/main.c    **** /* TIM7 init function */
1079:Src/main.c    **** static void MX_TIM7_Init(void)
1080:Src/main.c    **** {
1081:Src/main.c    **** 
1082:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1083:Src/main.c    **** 
1084:Src/main.c    ****   htim7.Instance = TIM7;
1085:Src/main.c    ****   htim7.Init.Prescaler = 0;
1086:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
1087:Src/main.c    ****   htim7.Init.Period = 0;
1088:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1089:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
1090:Src/main.c    ****   {
1091:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1092:Src/main.c    ****   }
1093:Src/main.c    **** 
1094:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1095:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1096:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
1097:Src/main.c    ****   {
1098:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1099:Src/main.c    ****   }
1100:Src/main.c    **** 
1101:Src/main.c    **** }
1102:Src/main.c    **** 
1103:Src/main.c    **** /* TIM8 init function */
1104:Src/main.c    **** static void MX_TIM8_Init(void)
1105:Src/main.c    **** {
1106:Src/main.c    **** 
1107:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
1108:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
1109:Src/main.c    **** 
1110:Src/main.c    ****   htim8.Instance = TIM8;
1111:Src/main.c    ****   htim8.Init.Prescaler = 0;
1112:Src/main.c    ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
1113:Src/main.c    ****   htim8.Init.Period = 0;
1114:Src/main.c    ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1115:Src/main.c    ****   htim8.Init.RepetitionCounter = 0;
1116:Src/main.c    ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1117:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
1118:Src/main.c    ****   {
1119:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1120:Src/main.c    ****   }
1121:Src/main.c    **** 
1122:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1123:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
1124:Src/main.c    ****   {
1125:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1126:Src/main.c    ****   }
1127:Src/main.c    **** 
1128:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1129:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
1130:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1131:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
1132:Src/main.c    ****   {
1133:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1134:Src/main.c    ****   }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 22


1135:Src/main.c    **** 
1136:Src/main.c    **** }
1137:Src/main.c    **** 
1138:Src/main.c    **** /* TIM12 init function */
1139:Src/main.c    **** static void MX_TIM12_Init(void)
1140:Src/main.c    **** {
1141:Src/main.c    **** 
1142:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
1143:Src/main.c    **** 
1144:Src/main.c    ****   htim12.Instance = TIM12;
1145:Src/main.c    ****   htim12.Init.Prescaler = 0;
1146:Src/main.c    ****   htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
1147:Src/main.c    ****   htim12.Init.Period = 0;
1148:Src/main.c    ****   htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1149:Src/main.c    ****   htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1150:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
1151:Src/main.c    ****   {
1152:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1153:Src/main.c    ****   }
1154:Src/main.c    **** 
1155:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1156:Src/main.c    ****   sConfigOC.Pulse = 0;
1157:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1158:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1159:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1160:Src/main.c    ****   {
1161:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1162:Src/main.c    ****   }
1163:Src/main.c    **** 
1164:Src/main.c    ****   HAL_TIM_MspPostInit(&htim12);
1165:Src/main.c    **** 
1166:Src/main.c    **** }
1167:Src/main.c    **** 
1168:Src/main.c    **** /* USART1 init function */
1169:Src/main.c    **** static void MX_USART1_UART_Init(void)
1170:Src/main.c    **** {
1171:Src/main.c    **** 
1172:Src/main.c    ****   huart1.Instance = USART1;
1173:Src/main.c    ****   huart1.Init.BaudRate = 115200;
1174:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
1175:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
1176:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
1177:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
1178:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1179:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
1180:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1181:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1182:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
1183:Src/main.c    ****   {
1184:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1185:Src/main.c    ****   }
1186:Src/main.c    **** 
1187:Src/main.c    **** }
1188:Src/main.c    **** 
1189:Src/main.c    **** /* USART6 init function */
1190:Src/main.c    **** static void MX_USART6_UART_Init(void)
1191:Src/main.c    **** {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 23


1192:Src/main.c    **** 
1193:Src/main.c    ****   huart6.Instance = USART6;
1194:Src/main.c    ****   huart6.Init.BaudRate = 115200;
1195:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
1196:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
1197:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
1198:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
1199:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1200:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
1201:Src/main.c    ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1202:Src/main.c    ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1203:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
1204:Src/main.c    ****   {
1205:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1206:Src/main.c    ****   }
1207:Src/main.c    **** 
1208:Src/main.c    **** }
1209:Src/main.c    **** 
1210:Src/main.c    **** /* FMC initialization function */
1211:Src/main.c    **** static void MX_FMC_Init(void)
1212:Src/main.c    **** {
1213:Src/main.c    ****   FMC_SDRAM_TimingTypeDef SdramTiming;
1214:Src/main.c    **** 
1215:Src/main.c    ****   /** Perform the SDRAM1 memory initialization sequence
1216:Src/main.c    ****   */
1217:Src/main.c    ****   hsdram1.Instance = FMC_SDRAM_DEVICE;
1218:Src/main.c    ****   /* hsdram1.Init */
1219:Src/main.c    ****   hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
1220:Src/main.c    ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
1221:Src/main.c    ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
1222:Src/main.c    ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
1223:Src/main.c    ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
1224:Src/main.c    ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
1225:Src/main.c    ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
1226:Src/main.c    ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
1227:Src/main.c    ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
1228:Src/main.c    ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
1229:Src/main.c    ****   /* SdramTiming */
1230:Src/main.c    ****   SdramTiming.LoadToActiveDelay = 2;
1231:Src/main.c    ****   SdramTiming.ExitSelfRefreshDelay = 7;
1232:Src/main.c    ****   SdramTiming.SelfRefreshTime = 4;
1233:Src/main.c    ****   SdramTiming.RowCycleDelay = 7;
1234:Src/main.c    ****   SdramTiming.WriteRecoveryTime = 3;
1235:Src/main.c    ****   SdramTiming.RPDelay = 2;
1236:Src/main.c    ****   SdramTiming.RCDDelay = 2;
1237:Src/main.c    **** 
1238:Src/main.c    ****   if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
1239:Src/main.c    ****   {
1240:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
1241:Src/main.c    ****   }
1242:Src/main.c    **** 
1243:Src/main.c    **** }
1244:Src/main.c    **** 
1245:Src/main.c    **** /** Configure pins as
1246:Src/main.c    ****         * Analog
1247:Src/main.c    ****         * Input
1248:Src/main.c    ****         * Output
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 24


1249:Src/main.c    ****         * EVENT_OUT
1250:Src/main.c    ****         * EXTI
1251:Src/main.c    ****      PB5   ------> USB_OTG_HS_ULPI_D7
1252:Src/main.c    ****      PH4   ------> USB_OTG_HS_ULPI_NXT
1253:Src/main.c    ****      PB13   ------> USB_OTG_HS_ULPI_D6
1254:Src/main.c    ****      PB12   ------> USB_OTG_HS_ULPI_D5
1255:Src/main.c    ****      PC0   ------> USB_OTG_HS_ULPI_STP
1256:Src/main.c    ****      PC2   ------> USB_OTG_HS_ULPI_DIR
1257:Src/main.c    ****      PA5   ------> USB_OTG_HS_ULPI_CK
1258:Src/main.c    ****      PB10   ------> USB_OTG_HS_ULPI_D3
1259:Src/main.c    ****      PA3   ------> USB_OTG_HS_ULPI_D0
1260:Src/main.c    ****      PB1   ------> USB_OTG_HS_ULPI_D2
1261:Src/main.c    ****      PB0   ------> USB_OTG_HS_ULPI_D1
1262:Src/main.c    ****      PB11   ------> USB_OTG_HS_ULPI_D4
1263:Src/main.c    **** */
1264:Src/main.c    **** static void MX_GPIO_Init(void)
1265:Src/main.c    **** {
  67              		.loc 1 1265 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 64
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 36
  74              		.cfi_offset 4, -36
  75              		.cfi_offset 5, -32
  76              		.cfi_offset 6, -28
  77              		.cfi_offset 7, -24
  78              		.cfi_offset 8, -20
  79              		.cfi_offset 9, -16
  80              		.cfi_offset 10, -12
  81              		.cfi_offset 11, -8
  82              		.cfi_offset 14, -4
  83 0004 91B0     		sub	sp, sp, #68
  84              	.LCFI1:
  85              		.cfi_def_cfa_offset 104
  86              	.LBB2:
1266:Src/main.c    **** 
1267:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
1268:Src/main.c    **** 
1269:Src/main.c    ****   /* GPIO Ports Clock Enable */
1270:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  87              		.loc 1 1270 0
  88 0006 9A4B     		ldr	r3, .L6
  89 0008 1A6B     		ldr	r2, [r3, #48]
  90 000a 42F01002 		orr	r2, r2, #16
  91 000e 1A63     		str	r2, [r3, #48]
  92 0010 1A6B     		ldr	r2, [r3, #48]
  93 0012 02F01002 		and	r2, r2, #16
  94 0016 0092     		str	r2, [sp]
  95 0018 009A     		ldr	r2, [sp]
  96              	.LBE2:
  97              	.LBB3:
1271:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
  98              		.loc 1 1271 0
  99 001a 1A6B     		ldr	r2, [r3, #48]
 100 001c 42F04002 		orr	r2, r2, #64
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 25


 101 0020 1A63     		str	r2, [r3, #48]
 102 0022 1A6B     		ldr	r2, [r3, #48]
 103 0024 02F04002 		and	r2, r2, #64
 104 0028 0192     		str	r2, [sp, #4]
 105 002a 019A     		ldr	r2, [sp, #4]
 106              	.LBE3:
 107              	.LBB4:
1272:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 108              		.loc 1 1272 0
 109 002c 1A6B     		ldr	r2, [r3, #48]
 110 002e 42F00202 		orr	r2, r2, #2
 111 0032 1A63     		str	r2, [r3, #48]
 112 0034 1A6B     		ldr	r2, [r3, #48]
 113 0036 02F00202 		and	r2, r2, #2
 114 003a 0292     		str	r2, [sp, #8]
 115 003c 029A     		ldr	r2, [sp, #8]
 116              	.LBE4:
 117              	.LBB5:
1273:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 118              		.loc 1 1273 0
 119 003e 1A6B     		ldr	r2, [r3, #48]
 120 0040 42F00802 		orr	r2, r2, #8
 121 0044 1A63     		str	r2, [r3, #48]
 122 0046 1A6B     		ldr	r2, [r3, #48]
 123 0048 02F00802 		and	r2, r2, #8
 124 004c 0392     		str	r2, [sp, #12]
 125 004e 039A     		ldr	r2, [sp, #12]
 126              	.LBE5:
 127              	.LBB6:
1274:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 128              		.loc 1 1274 0
 129 0050 1A6B     		ldr	r2, [r3, #48]
 130 0052 42F00402 		orr	r2, r2, #4
 131 0056 1A63     		str	r2, [r3, #48]
 132 0058 1A6B     		ldr	r2, [r3, #48]
 133 005a 02F00402 		and	r2, r2, #4
 134 005e 0492     		str	r2, [sp, #16]
 135 0060 049A     		ldr	r2, [sp, #16]
 136              	.LBE6:
 137              	.LBB7:
1275:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 138              		.loc 1 1275 0
 139 0062 1A6B     		ldr	r2, [r3, #48]
 140 0064 42F00102 		orr	r2, r2, #1
 141 0068 1A63     		str	r2, [r3, #48]
 142 006a 1A6B     		ldr	r2, [r3, #48]
 143 006c 02F00102 		and	r2, r2, #1
 144 0070 0592     		str	r2, [sp, #20]
 145 0072 059A     		ldr	r2, [sp, #20]
 146              	.LBE7:
 147              	.LBB8:
1276:Src/main.c    ****   __HAL_RCC_GPIOJ_CLK_ENABLE();
 148              		.loc 1 1276 0
 149 0074 1A6B     		ldr	r2, [r3, #48]
 150 0076 42F40072 		orr	r2, r2, #512
 151 007a 1A63     		str	r2, [r3, #48]
 152 007c 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 26


 153 007e 02F40072 		and	r2, r2, #512
 154 0082 0692     		str	r2, [sp, #24]
 155 0084 069A     		ldr	r2, [sp, #24]
 156              	.LBE8:
 157              	.LBB9:
1277:Src/main.c    ****   __HAL_RCC_GPIOI_CLK_ENABLE();
 158              		.loc 1 1277 0
 159 0086 1A6B     		ldr	r2, [r3, #48]
 160 0088 42F48072 		orr	r2, r2, #256
 161 008c 1A63     		str	r2, [r3, #48]
 162 008e 1A6B     		ldr	r2, [r3, #48]
 163 0090 02F48072 		and	r2, r2, #256
 164 0094 0792     		str	r2, [sp, #28]
 165 0096 079A     		ldr	r2, [sp, #28]
 166              	.LBE9:
 167              	.LBB10:
1278:Src/main.c    ****   __HAL_RCC_GPIOK_CLK_ENABLE();
 168              		.loc 1 1278 0
 169 0098 1A6B     		ldr	r2, [r3, #48]
 170 009a 42F48062 		orr	r2, r2, #1024
 171 009e 1A63     		str	r2, [r3, #48]
 172 00a0 1A6B     		ldr	r2, [r3, #48]
 173 00a2 02F48062 		and	r2, r2, #1024
 174 00a6 0892     		str	r2, [sp, #32]
 175 00a8 089A     		ldr	r2, [sp, #32]
 176              	.LBE10:
 177              	.LBB11:
1279:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 178              		.loc 1 1279 0
 179 00aa 1A6B     		ldr	r2, [r3, #48]
 180 00ac 42F02002 		orr	r2, r2, #32
 181 00b0 1A63     		str	r2, [r3, #48]
 182 00b2 1A6B     		ldr	r2, [r3, #48]
 183 00b4 02F02002 		and	r2, r2, #32
 184 00b8 0992     		str	r2, [sp, #36]
 185 00ba 099A     		ldr	r2, [sp, #36]
 186              	.LBE11:
 187              	.LBB12:
1280:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 188              		.loc 1 1280 0
 189 00bc 1A6B     		ldr	r2, [r3, #48]
 190 00be 42F08002 		orr	r2, r2, #128
 191 00c2 1A63     		str	r2, [r3, #48]
 192 00c4 1B6B     		ldr	r3, [r3, #48]
 193 00c6 03F08003 		and	r3, r3, #128
 194 00ca 0A93     		str	r3, [sp, #40]
 195 00cc 0A9B     		ldr	r3, [sp, #40]
 196              	.LBE12:
1281:Src/main.c    **** 
1282:Src/main.c    ****   /*Configure GPIO pin Output Level */
1283:Src/main.c    ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 197              		.loc 1 1283 0
 198 00ce 0122     		movs	r2, #1
 199 00d0 2021     		movs	r1, #32
 200 00d2 6848     		ldr	r0, .L6+4
 201 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 202              	.LVL0:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 27


1284:Src/main.c    **** 
1285:Src/main.c    ****   /*Configure GPIO pin Output Level */
1286:Src/main.c    ****   HAL_GPIO_WritePin(GPIOI, ARDUINO_D7_Pin|ARDUINO_D8_Pin, GPIO_PIN_RESET);
 203              		.loc 1 1286 0
 204 00d8 0022     		movs	r2, #0
 205 00da 0C21     		movs	r1, #12
 206 00dc 6648     		ldr	r0, .L6+8
 207 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 208              	.LVL1:
1287:Src/main.c    **** 
1288:Src/main.c    ****   /*Configure GPIO pin Output Level */
1289:Src/main.c    ****   HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 209              		.loc 1 1289 0
 210 00e2 0122     		movs	r2, #1
 211 00e4 0821     		movs	r1, #8
 212 00e6 6548     		ldr	r0, .L6+12
 213 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 214              	.LVL2:
1290:Src/main.c    **** 
1291:Src/main.c    ****   /*Configure GPIO pin Output Level */
1292:Src/main.c    ****   HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 215              		.loc 1 1292 0
 216 00ec 0122     		movs	r2, #1
 217 00ee 4FF48051 		mov	r1, #4096
 218 00f2 6148     		ldr	r0, .L6+8
 219 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL3:
1293:Src/main.c    **** 
1294:Src/main.c    ****   /*Configure GPIO pin Output Level */
1295:Src/main.c    ****   HAL_GPIO_WritePin(DCMI_PWR_EN_GPIO_Port, DCMI_PWR_EN_Pin, GPIO_PIN_RESET);
 221              		.loc 1 1295 0
 222 00f8 0022     		movs	r2, #0
 223 00fa 4FF40051 		mov	r1, #8192
 224 00fe 6048     		ldr	r0, .L6+16
 225 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 226              	.LVL4:
1296:Src/main.c    **** 
1297:Src/main.c    ****   /*Configure GPIO pin Output Level */
1298:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin, GPIO_PIN_RESET);
 227              		.loc 1 1298 0
 228 0104 0022     		movs	r2, #0
 229 0106 C821     		movs	r1, #200
 230 0108 5E48     		ldr	r0, .L6+20
 231 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 232              	.LVL5:
1299:Src/main.c    **** 
1300:Src/main.c    ****   /*Configure GPIO pin : OTG_HS_OverCurrent_Pin */
1301:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
 233              		.loc 1 1301 0
 234 010e 4FF0080A 		mov	r10, #8
 235 0112 CDF82CA0 		str	r10, [sp, #44]
1302:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 236              		.loc 1 1302 0
 237 0116 0024     		movs	r4, #0
 238 0118 0C94     		str	r4, [sp, #48]
1303:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 239              		.loc 1 1303 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 28


 240 011a 0D94     		str	r4, [sp, #52]
1304:Src/main.c    ****   HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 241              		.loc 1 1304 0
 242 011c 0BA9     		add	r1, sp, #44
 243 011e 5A48     		ldr	r0, .L6+24
 244 0120 FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL6:
1305:Src/main.c    **** 
1306:Src/main.c    ****   /*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D3_Pin
1307:Src/main.c    ****                            ULPI_D2_Pin ULPI_D1_Pin ULPI_D4_Pin */
1308:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_D7_Pin|ULPI_D6_Pin|ULPI_D5_Pin|ULPI_D3_Pin
 246              		.loc 1 1308 0
 247 0124 43F62343 		movw	r3, #15395
 248 0128 0B93     		str	r3, [sp, #44]
1309:Src/main.c    ****                           |ULPI_D2_Pin|ULPI_D1_Pin|ULPI_D4_Pin;
1310:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 249              		.loc 1 1310 0
 250 012a 4FF00208 		mov	r8, #2
 251 012e CDF83080 		str	r8, [sp, #48]
1311:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 252              		.loc 1 1311 0
 253 0132 0D94     		str	r4, [sp, #52]
1312:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 254              		.loc 1 1312 0
 255 0134 0327     		movs	r7, #3
 256 0136 0E97     		str	r7, [sp, #56]
1313:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 257              		.loc 1 1313 0
 258 0138 0A26     		movs	r6, #10
 259 013a 0F96     		str	r6, [sp, #60]
1314:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 260              		.loc 1 1314 0
 261 013c 0BA9     		add	r1, sp, #44
 262 013e 5348     		ldr	r0, .L6+28
 263 0140 FFF7FEFF 		bl	HAL_GPIO_Init
 264              	.LVL7:
1315:Src/main.c    **** 
1316:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_VBUS_Pin */
1317:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 265              		.loc 1 1317 0
 266 0144 4FF48053 		mov	r3, #4096
 267 0148 0B93     		str	r3, [sp, #44]
1318:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 268              		.loc 1 1318 0
 269 014a 0C94     		str	r4, [sp, #48]
1319:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 270              		.loc 1 1319 0
 271 014c 0D94     		str	r4, [sp, #52]
1320:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 272              		.loc 1 1320 0
 273 014e 0BA9     		add	r1, sp, #44
 274 0150 4F48     		ldr	r0, .L6+32
 275 0152 FFF7FEFF 		bl	HAL_GPIO_Init
 276              	.LVL8:
1321:Src/main.c    **** 
1322:Src/main.c    ****   /*Configure GPIO pin : Audio_INT_Pin */
1323:Src/main.c    ****   GPIO_InitStruct.Pin = Audio_INT_Pin;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 29


 277              		.loc 1 1323 0
 278 0156 4023     		movs	r3, #64
 279 0158 0B93     		str	r3, [sp, #44]
1324:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 280              		.loc 1 1324 0
 281 015a DFF840B1 		ldr	fp, .L6+44
 282 015e CDF830B0 		str	fp, [sp, #48]
1325:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 283              		.loc 1 1325 0
 284 0162 0D94     		str	r4, [sp, #52]
1326:Src/main.c    ****   HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 285              		.loc 1 1326 0
 286 0164 0BA9     		add	r1, sp, #44
 287 0166 4348     		ldr	r0, .L6+4
 288 0168 FFF7FEFF 		bl	HAL_GPIO_Init
 289              	.LVL9:
1327:Src/main.c    **** 
1328:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
1329:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 290              		.loc 1 1329 0
 291 016c 2023     		movs	r3, #32
 292 016e 0B93     		str	r3, [sp, #44]
1330:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 293              		.loc 1 1330 0
 294 0170 0125     		movs	r5, #1
 295 0172 0C95     		str	r5, [sp, #48]
1331:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 296              		.loc 1 1331 0
 297 0174 0D94     		str	r4, [sp, #52]
1332:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 298              		.loc 1 1332 0
 299 0176 0E94     		str	r4, [sp, #56]
1333:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 300              		.loc 1 1333 0
 301 0178 0BA9     		add	r1, sp, #44
 302 017a 3E48     		ldr	r0, .L6+4
 303 017c FFF7FEFF 		bl	HAL_GPIO_Init
 304              	.LVL10:
1334:Src/main.c    **** 
1335:Src/main.c    ****   /*Configure GPIO pins : ARDUINO_D7_Pin ARDUINO_D8_Pin LCD_DISP_Pin */
1336:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_D7_Pin|ARDUINO_D8_Pin|LCD_DISP_Pin;
 305              		.loc 1 1336 0
 306 0180 41F20C03 		movw	r3, #4108
 307 0184 0B93     		str	r3, [sp, #44]
1337:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 308              		.loc 1 1337 0
 309 0186 0C95     		str	r5, [sp, #48]
1338:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 310              		.loc 1 1338 0
 311 0188 0D94     		str	r4, [sp, #52]
1339:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 312              		.loc 1 1339 0
 313 018a 0E94     		str	r4, [sp, #56]
1340:Src/main.c    ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 314              		.loc 1 1340 0
 315 018c 0BA9     		add	r1, sp, #44
 316 018e 3A48     		ldr	r0, .L6+8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 30


 317 0190 FFF7FEFF 		bl	HAL_GPIO_Init
 318              	.LVL11:
1341:Src/main.c    **** 
1342:Src/main.c    ****   /*Configure GPIO pin : uSD_Detect_Pin */
1343:Src/main.c    ****   GPIO_InitStruct.Pin = uSD_Detect_Pin;
 319              		.loc 1 1343 0
 320 0194 4FF40059 		mov	r9, #8192
 321 0198 CDF82C90 		str	r9, [sp, #44]
1344:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 322              		.loc 1 1344 0
 323 019c 0C94     		str	r4, [sp, #48]
1345:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 324              		.loc 1 1345 0
 325 019e 0D94     		str	r4, [sp, #52]
1346:Src/main.c    ****   HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 326              		.loc 1 1346 0
 327 01a0 0BA9     		add	r1, sp, #44
 328 01a2 3C48     		ldr	r0, .L6+36
 329 01a4 FFF7FEFF 		bl	HAL_GPIO_Init
 330              	.LVL12:
1347:Src/main.c    **** 
1348:Src/main.c    ****   /*Configure GPIO pin : LCD_BL_CTRL_Pin */
1349:Src/main.c    ****   GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 331              		.loc 1 1349 0
 332 01a8 CDF82CA0 		str	r10, [sp, #44]
1350:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 333              		.loc 1 1350 0
 334 01ac 0C95     		str	r5, [sp, #48]
1351:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 335              		.loc 1 1351 0
 336 01ae 0D94     		str	r4, [sp, #52]
1352:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 337              		.loc 1 1352 0
 338 01b0 0E94     		str	r4, [sp, #56]
1353:Src/main.c    ****   HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 339              		.loc 1 1353 0
 340 01b2 0BA9     		add	r1, sp, #44
 341 01b4 3148     		ldr	r0, .L6+12
 342 01b6 FFF7FEFF 		bl	HAL_GPIO_Init
 343              	.LVL13:
1354:Src/main.c    **** 
1355:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
1356:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 344              		.loc 1 1356 0
 345 01ba 4FF0100A 		mov	r10, #16
 346 01be CDF82CA0 		str	r10, [sp, #44]
1357:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 347              		.loc 1 1357 0
 348 01c2 0C94     		str	r4, [sp, #48]
1358:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 349              		.loc 1 1358 0
 350 01c4 0D94     		str	r4, [sp, #52]
1359:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 351              		.loc 1 1359 0
 352 01c6 0BA9     		add	r1, sp, #44
 353 01c8 2A48     		ldr	r0, .L6+4
 354 01ca FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 31


 355              	.LVL14:
1360:Src/main.c    **** 
1361:Src/main.c    ****   /*Configure GPIO pins : TP3_Pin NC2_Pin */
1362:Src/main.c    ****   GPIO_InitStruct.Pin = TP3_Pin|NC2_Pin;
 356              		.loc 1 1362 0
 357 01ce 48F20403 		movw	r3, #32772
 358 01d2 0B93     		str	r3, [sp, #44]
1363:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 359              		.loc 1 1363 0
 360 01d4 0C94     		str	r4, [sp, #48]
1364:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 361              		.loc 1 1364 0
 362 01d6 0D94     		str	r4, [sp, #52]
1365:Src/main.c    ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 363              		.loc 1 1365 0
 364 01d8 0BA9     		add	r1, sp, #44
 365 01da 2948     		ldr	r0, .L6+16
 366 01dc FFF7FEFF 		bl	HAL_GPIO_Init
 367              	.LVL15:
1366:Src/main.c    **** 
1367:Src/main.c    ****   /*Configure GPIO pin : DCMI_PWR_EN_Pin */
1368:Src/main.c    ****   GPIO_InitStruct.Pin = DCMI_PWR_EN_Pin;
 368              		.loc 1 1368 0
 369 01e0 CDF82C90 		str	r9, [sp, #44]
1369:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 370              		.loc 1 1369 0
 371 01e4 0C95     		str	r5, [sp, #48]
1370:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 372              		.loc 1 1370 0
 373 01e6 0D94     		str	r4, [sp, #52]
1371:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 374              		.loc 1 1371 0
 375 01e8 0E94     		str	r4, [sp, #56]
1372:Src/main.c    ****   HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 376              		.loc 1 1372 0
 377 01ea 0BA9     		add	r1, sp, #44
 378 01ec 2448     		ldr	r0, .L6+16
 379 01ee FFF7FEFF 		bl	HAL_GPIO_Init
 380              	.LVL16:
1373:Src/main.c    **** 
1374:Src/main.c    ****   /*Configure GPIO pin : LCD_INT_Pin */
1375:Src/main.c    ****   GPIO_InitStruct.Pin = LCD_INT_Pin;
 381              		.loc 1 1375 0
 382 01f2 CDF82C90 		str	r9, [sp, #44]
1376:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 383              		.loc 1 1376 0
 384 01f6 CDF830B0 		str	fp, [sp, #48]
1377:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 385              		.loc 1 1377 0
 386 01fa 0D94     		str	r4, [sp, #52]
1378:Src/main.c    ****   HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 387              		.loc 1 1378 0
 388 01fc 0BA9     		add	r1, sp, #44
 389 01fe 1E48     		ldr	r0, .L6+8
 390 0200 FFF7FEFF 		bl	HAL_GPIO_Init
 391              	.LVL17:
1379:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 32


1380:Src/main.c    ****   /*Configure GPIO pin : ULPI_NXT_Pin */
1381:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 392              		.loc 1 1381 0
 393 0204 CDF82CA0 		str	r10, [sp, #44]
1382:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 394              		.loc 1 1382 0
 395 0208 CDF83080 		str	r8, [sp, #48]
1383:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 396              		.loc 1 1383 0
 397 020c 0D94     		str	r4, [sp, #52]
1384:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 398              		.loc 1 1384 0
 399 020e 0E97     		str	r7, [sp, #56]
1385:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 400              		.loc 1 1385 0
 401 0210 0F96     		str	r6, [sp, #60]
1386:Src/main.c    ****   HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 402              		.loc 1 1386 0
 403 0212 0BA9     		add	r1, sp, #44
 404 0214 1A48     		ldr	r0, .L6+16
 405 0216 FFF7FEFF 		bl	HAL_GPIO_Init
 406              	.LVL18:
1387:Src/main.c    **** 
1388:Src/main.c    ****   /*Configure GPIO pins : ARDUINO_D4_Pin ARDUINO_D2_Pin EXT_RST_Pin */
1389:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin;
 407              		.loc 1 1389 0
 408 021a C823     		movs	r3, #200
 409 021c 0B93     		str	r3, [sp, #44]
1390:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 410              		.loc 1 1390 0
 411 021e 0C95     		str	r5, [sp, #48]
1391:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 412              		.loc 1 1391 0
 413 0220 0D94     		str	r4, [sp, #52]
1392:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 414              		.loc 1 1392 0
 415 0222 0E94     		str	r4, [sp, #56]
1393:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 416              		.loc 1 1393 0
 417 0224 0BA9     		add	r1, sp, #44
 418 0226 1748     		ldr	r0, .L6+20
 419 0228 FFF7FEFF 		bl	HAL_GPIO_Init
 420              	.LVL19:
1394:Src/main.c    **** 
1395:Src/main.c    ****   /*Configure GPIO pins : ULPI_STP_Pin ULPI_DIR_Pin */
1396:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_STP_Pin|ULPI_DIR_Pin;
 421              		.loc 1 1396 0
 422 022c 0523     		movs	r3, #5
 423 022e 0B93     		str	r3, [sp, #44]
1397:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 424              		.loc 1 1397 0
 425 0230 CDF83080 		str	r8, [sp, #48]
1398:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 426              		.loc 1 1398 0
 427 0234 0D94     		str	r4, [sp, #52]
1399:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 428              		.loc 1 1399 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 33


 429 0236 0E97     		str	r7, [sp, #56]
1400:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 430              		.loc 1 1400 0
 431 0238 0F96     		str	r6, [sp, #60]
1401:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 432              		.loc 1 1401 0
 433 023a 0BA9     		add	r1, sp, #44
 434 023c 1548     		ldr	r0, .L6+36
 435 023e FFF7FEFF 		bl	HAL_GPIO_Init
 436              	.LVL20:
1402:Src/main.c    **** 
1403:Src/main.c    ****   /*Configure GPIO pin : RMII_RXER_Pin */
1404:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_RXER_Pin;
 437              		.loc 1 1404 0
 438 0242 0423     		movs	r3, #4
 439 0244 0B93     		str	r3, [sp, #44]
1405:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 440              		.loc 1 1405 0
 441 0246 0C94     		str	r4, [sp, #48]
1406:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 442              		.loc 1 1406 0
 443 0248 0D94     		str	r4, [sp, #52]
1407:Src/main.c    ****   HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 444              		.loc 1 1407 0
 445 024a 0BA9     		add	r1, sp, #44
 446 024c 0D48     		ldr	r0, .L6+20
 447 024e FFF7FEFF 		bl	HAL_GPIO_Init
 448              	.LVL21:
1408:Src/main.c    **** 
1409:Src/main.c    ****   /*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
1410:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_CLK_Pin|ULPI_D0_Pin;
 449              		.loc 1 1410 0
 450 0252 2823     		movs	r3, #40
 451 0254 0B93     		str	r3, [sp, #44]
1411:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 452              		.loc 1 1411 0
 453 0256 CDF83080 		str	r8, [sp, #48]
1412:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 454              		.loc 1 1412 0
 455 025a 0D94     		str	r4, [sp, #52]
1413:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 456              		.loc 1 1413 0
 457 025c 0E97     		str	r7, [sp, #56]
1414:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 458              		.loc 1 1414 0
 459 025e 0F96     		str	r6, [sp, #60]
1415:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 460              		.loc 1 1415 0
 461 0260 0BA9     		add	r1, sp, #44
 462 0262 0D48     		ldr	r0, .L6+40
 463 0264 FFF7FEFF 		bl	HAL_GPIO_Init
 464              	.LVL22:
1416:Src/main.c    **** 
1417:Src/main.c    **** }
 465              		.loc 1 1417 0
 466 0268 11B0     		add	sp, sp, #68
 467              	.LCFI2:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 34


 468              		.cfi_def_cfa_offset 36
 469              		@ sp needed
 470 026a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 471              	.L7:
 472 026e 00BF     		.align	2
 473              	.L6:
 474 0270 00380240 		.word	1073887232
 475 0274 000C0240 		.word	1073875968
 476 0278 00200240 		.word	1073881088
 477 027c 00280240 		.word	1073883136
 478 0280 001C0240 		.word	1073880064
 479 0284 00180240 		.word	1073879040
 480 0288 00100240 		.word	1073876992
 481 028c 00040240 		.word	1073873920
 482 0290 00240240 		.word	1073882112
 483 0294 00080240 		.word	1073874944
 484 0298 00000240 		.word	1073872896
 485 029c 00001210 		.word	269615104
 486              		.cfi_endproc
 487              	.LFE168:
 489              		.section	.text.StartDefaultTask,"ax",%progbits
 490              		.align	1
 491              		.global	StartDefaultTask
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 495              		.fpu fpv5-sp-d16
 497              	StartDefaultTask:
 498              	.LFB169:
1418:Src/main.c    **** 
1419:Src/main.c    **** /* USER CODE BEGIN 4 */
1420:Src/main.c    **** 
1421:Src/main.c    **** extern ApplicationTypeDef Appli_state;
1422:Src/main.c    **** 
1423:Src/main.c    **** /* USER CODE END 4 */
1424:Src/main.c    **** 
1425:Src/main.c    **** /* USER CODE BEGIN Header_StartDefaultTask */
1426:Src/main.c    **** /**
1427:Src/main.c    ****   * @brief  Function implementing the defaultTask thread.
1428:Src/main.c    ****   * @param  argument: Not used
1429:Src/main.c    ****   * @retval None
1430:Src/main.c    ****   */
1431:Src/main.c    **** /* USER CODE END Header_StartDefaultTask */
1432:Src/main.c    **** void StartDefaultTask(void const * argument)
1433:Src/main.c    **** {
 499              		.loc 1 1433 0
 500              		.cfi_startproc
 501              		@ Volatile: function does not return.
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              	.LVL23:
 505 0000 08B5     		push	{r3, lr}
 506              	.LCFI3:
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 3, -8
 509              		.cfi_offset 14, -4
1434:Src/main.c    ****   /* init code for FATFS */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 35


1435:Src/main.c    ****   MX_FATFS_Init();
 510              		.loc 1 1435 0
 511 0002 FFF7FEFF 		bl	MX_FATFS_Init
 512              	.LVL24:
1436:Src/main.c    **** 
1437:Src/main.c    ****   /* init code for USB_HOST */
1438:Src/main.c    ****   MX_USB_HOST_Init();
 513              		.loc 1 1438 0
 514 0006 FFF7FEFF 		bl	MX_USB_HOST_Init
 515              	.LVL25:
1439:Src/main.c    **** 
1440:Src/main.c    ****   /* USER CODE BEGIN 5 */
1441:Src/main.c    **** 
1442:Src/main.c    ****   vTaskDelay(1000);
 516              		.loc 1 1442 0
 517 000a 4FF47A70 		mov	r0, #1000
 518 000e FFF7FEFF 		bl	vTaskDelay
 519              	.LVL26:
1443:Src/main.c    **** 
1444:Src/main.c    ****   xprintf("waiting for USB mass storage\n");
 520              		.loc 1 1444 0
 521 0012 0B48     		ldr	r0, .L12
 522 0014 FFF7FEFF 		bl	xprintf
 523              	.LVL27:
 524              	.L9:
1445:Src/main.c    **** 
1446:Src/main.c    ****   do
1447:Src/main.c    ****   {
1448:Src/main.c    **** 	  xprintf(".");
 525              		.loc 1 1448 0 discriminator 1
 526 0018 0A48     		ldr	r0, .L12+4
 527 001a FFF7FEFF 		bl	xprintf
 528              	.LVL28:
1449:Src/main.c    **** 	  vTaskDelay(250);
 529              		.loc 1 1449 0 discriminator 1
 530 001e FA20     		movs	r0, #250
 531 0020 FFF7FEFF 		bl	vTaskDelay
 532              	.LVL29:
1450:Src/main.c    ****   } while(Appli_state != APPLICATION_READY);
 533              		.loc 1 1450 0 discriminator 1
 534 0024 084B     		ldr	r3, .L12+8
 535 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 536 0028 022B     		cmp	r3, #2
 537 002a F5D1     		bne	.L9
1451:Src/main.c    **** 
1452:Src/main.c    **** 
1453:Src/main.c    ****   ////////////////////////////
1454:Src/main.c    ****   ////////////////////////////
1455:Src/main.c    **** 
1456:Src/main.c    ****   xprintf("Starting player...\n");
 538              		.loc 1 1456 0
 539 002c 0748     		ldr	r0, .L12+12
 540 002e FFF7FEFF 		bl	xprintf
 541              	.LVL30:
1457:Src/main.c    ****   mp3_player_fsm("1:/");
 542              		.loc 1 1457 0
 543 0032 0748     		ldr	r0, .L12+16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 36


 544 0034 FFF7FEFF 		bl	mp3_player_fsm
 545              	.LVL31:
1458:Src/main.c    ****   xprintf("Player finished\n");
 546              		.loc 1 1458 0
 547 0038 0648     		ldr	r0, .L12+20
 548 003a FFF7FEFF 		bl	xprintf
 549              	.LVL32:
 550              	.L10:
 551 003e FEE7     		b	.L10
 552              	.L13:
 553              		.align	2
 554              	.L12:
 555 0040 00000000 		.word	.LC2
 556 0044 20000000 		.word	.LC3
 557 0048 00000000 		.word	Appli_state
 558 004c 24000000 		.word	.LC4
 559 0050 38000000 		.word	.LC5
 560 0054 3C000000 		.word	.LC6
 561              		.cfi_endproc
 562              	.LFE169:
 564              		.section	.text.__io_putchar,"ax",%progbits
 565              		.align	1
 566              		.global	__io_putchar
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv5-sp-d16
 572              	__io_putchar:
 573              	.LFB141:
 171:Src/main.c    **** 	uint8_t data = ch;
 574              		.loc 1 171 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579              	.LVL33:
 580              	.L15:
 176:Src/main.c    **** 		huart1.Instance->TDR = (uint16_t)data;
 581              		.loc 1 176 0 discriminator 1
 582 0000 044B     		ldr	r3, .L16
 583 0002 1B68     		ldr	r3, [r3]
 584 0004 DA69     		ldr	r2, [r3, #28]
 585 0006 12F0800F 		tst	r2, #128
 586 000a F9D0     		beq	.L15
 177:Src/main.c    **** 	#endif
 587              		.loc 1 177 0
 588 000c C0B2     		uxtb	r0, r0
 589              	.LVL34:
 590 000e 9862     		str	r0, [r3, #40]
 180:Src/main.c    **** 
 591              		.loc 1 180 0
 592 0010 0020     		movs	r0, #0
 593 0012 7047     		bx	lr
 594              	.L17:
 595              		.align	2
 596              	.L16:
 597 0014 00000000 		.word	huart1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 37


 598              		.cfi_endproc
 599              	.LFE141:
 601              		.section	.text.inkey,"ax",%progbits
 602              		.align	1
 603              		.global	inkey
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 607              		.fpu fpv5-sp-d16
 609              	inkey:
 610              	.LFB142:
 183:Src/main.c    **** 	uint32_t flags = huart1.Instance->ISR;
 611              		.loc 1 183 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 184:Src/main.c    **** 
 616              		.loc 1 184 0
 617 0000 064B     		ldr	r3, .L21
 618 0002 1B68     		ldr	r3, [r3]
 619 0004 DA69     		ldr	r2, [r3, #28]
 620              	.LVL35:
 186:Src/main.c    **** 	{
 621              		.loc 1 186 0
 622 0006 12F0280F 		tst	r2, #40
 623 000a 04D0     		beq	.L20
 188:Src/main.c    **** 		return (huart1.Instance->RDR);
 624              		.loc 1 188 0
 625 000c 0822     		movs	r2, #8
 626              	.LVL36:
 627 000e 1A62     		str	r2, [r3, #32]
 189:Src/main.c    **** 	}
 628              		.loc 1 189 0
 629 0010 586A     		ldr	r0, [r3, #36]
 630 0012 C0B2     		uxtb	r0, r0
 631 0014 7047     		bx	lr
 632              	.LVL37:
 633              	.L20:
 192:Src/main.c    **** }
 634              		.loc 1 192 0
 635 0016 0020     		movs	r0, #0
 193:Src/main.c    **** 
 636              		.loc 1 193 0
 637 0018 7047     		bx	lr
 638              	.L22:
 639 001a 00BF     		.align	2
 640              	.L21:
 641 001c 00000000 		.word	huart1
 642              		.cfi_endproc
 643              	.LFE142:
 645              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 646              		.align	1
 647              		.global	HAL_TIM_PeriodElapsedCallback
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 38


 651              		.fpu fpv5-sp-d16
 653              	HAL_TIM_PeriodElapsedCallback:
 654              	.LFB170:
1459:Src/main.c    **** 
1460:Src/main.c    ****   /* Infinite loop */
1461:Src/main.c    ****   while(1);
1462:Src/main.c    ****   /* USER CODE END 5 */
1463:Src/main.c    **** }
1464:Src/main.c    **** 
1465:Src/main.c    **** /**
1466:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
1467:Src/main.c    ****   * @note   This function is called  when TIM6 interrupt took place, inside
1468:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
1469:Src/main.c    ****   * a global variable "uwTick" used as application time base.
1470:Src/main.c    ****   * @param  htim : TIM handle
1471:Src/main.c    ****   * @retval None
1472:Src/main.c    ****   */
1473:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1474:Src/main.c    **** {
 655              		.loc 1 1474 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659              	.LVL38:
 660 0000 08B5     		push	{r3, lr}
 661              	.LCFI4:
 662              		.cfi_def_cfa_offset 8
 663              		.cfi_offset 3, -8
 664              		.cfi_offset 14, -4
1475:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
1476:Src/main.c    **** 
1477:Src/main.c    ****   /* USER CODE END Callback 0 */
1478:Src/main.c    ****   if (htim->Instance == TIM6) {
 665              		.loc 1 1478 0
 666 0002 0268     		ldr	r2, [r0]
 667 0004 034B     		ldr	r3, .L27
 668 0006 9A42     		cmp	r2, r3
 669 0008 00D0     		beq	.L26
 670              	.LVL39:
 671              	.L23:
 672 000a 08BD     		pop	{r3, pc}
 673              	.LVL40:
 674              	.L26:
1479:Src/main.c    ****     HAL_IncTick();
 675              		.loc 1 1479 0
 676 000c FFF7FEFF 		bl	HAL_IncTick
 677              	.LVL41:
1480:Src/main.c    ****   }
1481:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
1482:Src/main.c    **** 
1483:Src/main.c    ****   /* USER CODE END Callback 1 */
1484:Src/main.c    **** }
 678              		.loc 1 1484 0
 679 0010 FBE7     		b	.L23
 680              	.L28:
 681 0012 00BF     		.align	2
 682              	.L27:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 39


 683 0014 00100040 		.word	1073745920
 684              		.cfi_endproc
 685              	.LFE170:
 687              		.section	.text._Error_Handler,"ax",%progbits
 688              		.align	1
 689              		.global	_Error_Handler
 690              		.syntax unified
 691              		.thumb
 692              		.thumb_func
 693              		.fpu fpv5-sp-d16
 695              	_Error_Handler:
 696              	.LFB171:
1485:Src/main.c    **** 
1486:Src/main.c    **** /**
1487:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
1488:Src/main.c    ****   * @param  file: The file name as string.
1489:Src/main.c    ****   * @param  line: The line in file as a number.
1490:Src/main.c    ****   * @retval None
1491:Src/main.c    ****   */
1492:Src/main.c    **** void _Error_Handler(char *file, int line)
1493:Src/main.c    **** {
 697              		.loc 1 1493 0
 698              		.cfi_startproc
 699              		@ Volatile: function does not return.
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703              	.LVL42:
 704              	.L30:
 705 0000 FEE7     		b	.L30
 706              		.cfi_endproc
 707              	.LFE171:
 709              		.section	.text.MX_ADC3_Init,"ax",%progbits
 710              		.align	1
 711              		.syntax unified
 712              		.thumb
 713              		.thumb_func
 714              		.fpu fpv5-sp-d16
 716              	MX_ADC3_Init:
 717              	.LFB145:
 407:Src/main.c    **** 
 718              		.loc 1 407 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 16
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 407:Src/main.c    **** 
 722              		.loc 1 407 0
 723 0000 00B5     		push	{lr}
 724              	.LCFI5:
 725              		.cfi_def_cfa_offset 4
 726              		.cfi_offset 14, -4
 727 0002 85B0     		sub	sp, sp, #20
 728              	.LCFI6:
 729              		.cfi_def_cfa_offset 24
 413:Src/main.c    ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 730              		.loc 1 413 0
 731 0004 1648     		ldr	r0, .L37
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 40


 732 0006 174B     		ldr	r3, .L37+4
 733 0008 0360     		str	r3, [r0]
 414:Src/main.c    ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 734              		.loc 1 414 0
 735 000a 4FF48033 		mov	r3, #65536
 736 000e 4360     		str	r3, [r0, #4]
 415:Src/main.c    ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 737              		.loc 1 415 0
 738 0010 0023     		movs	r3, #0
 739 0012 8360     		str	r3, [r0, #8]
 416:Src/main.c    ****   hadc3.Init.ContinuousConvMode = DISABLE;
 740              		.loc 1 416 0
 741 0014 0361     		str	r3, [r0, #16]
 417:Src/main.c    ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 742              		.loc 1 417 0
 743 0016 8361     		str	r3, [r0, #24]
 418:Src/main.c    ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 744              		.loc 1 418 0
 745 0018 0362     		str	r3, [r0, #32]
 419:Src/main.c    ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 746              		.loc 1 419 0
 747 001a C362     		str	r3, [r0, #44]
 420:Src/main.c    ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 748              		.loc 1 420 0
 749 001c 124A     		ldr	r2, .L37+8
 750 001e 8262     		str	r2, [r0, #40]
 421:Src/main.c    ****   hadc3.Init.NbrOfConversion = 1;
 751              		.loc 1 421 0
 752 0020 C360     		str	r3, [r0, #12]
 422:Src/main.c    ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 753              		.loc 1 422 0
 754 0022 0122     		movs	r2, #1
 755 0024 C261     		str	r2, [r0, #28]
 423:Src/main.c    ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 756              		.loc 1 423 0
 757 0026 0363     		str	r3, [r0, #48]
 424:Src/main.c    ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 758              		.loc 1 424 0
 759 0028 4261     		str	r2, [r0, #20]
 425:Src/main.c    ****   {
 760              		.loc 1 425 0
 761 002a FFF7FEFF 		bl	HAL_ADC_Init
 762              	.LVL43:
 763 002e 68B9     		cbnz	r0, .L35
 432:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 764              		.loc 1 432 0
 765 0030 0423     		movs	r3, #4
 766 0032 0093     		str	r3, [sp]
 433:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 767              		.loc 1 433 0
 768 0034 0123     		movs	r3, #1
 769 0036 0193     		str	r3, [sp, #4]
 434:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 770              		.loc 1 434 0
 771 0038 0023     		movs	r3, #0
 772 003a 0293     		str	r3, [sp, #8]
 435:Src/main.c    ****   {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 41


 773              		.loc 1 435 0
 774 003c 6946     		mov	r1, sp
 775 003e 0848     		ldr	r0, .L37
 776 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 777              	.LVL44:
 778 0044 38B9     		cbnz	r0, .L36
 440:Src/main.c    **** 
 779              		.loc 1 440 0
 780 0046 05B0     		add	sp, sp, #20
 781              	.LCFI7:
 782              		.cfi_remember_state
 783              		.cfi_def_cfa_offset 4
 784              		@ sp needed
 785 0048 5DF804FB 		ldr	pc, [sp], #4
 786              	.L35:
 787              	.LCFI8:
 788              		.cfi_restore_state
 427:Src/main.c    ****   }
 789              		.loc 1 427 0
 790 004c 40F2AB11 		movw	r1, #427
 791 0050 0648     		ldr	r0, .L37+12
 792 0052 FFF7FEFF 		bl	_Error_Handler
 793              	.LVL45:
 794              	.L36:
 437:Src/main.c    ****   }
 795              		.loc 1 437 0
 796 0056 40F2B511 		movw	r1, #437
 797 005a 0448     		ldr	r0, .L37+12
 798 005c FFF7FEFF 		bl	_Error_Handler
 799              	.LVL46:
 800              	.L38:
 801              		.align	2
 802              	.L37:
 803 0060 00000000 		.word	hadc3
 804 0064 00220140 		.word	1073816064
 805 0068 0100000F 		.word	251658241
 806 006c 00000000 		.word	.LC7
 807              		.cfi_endproc
 808              	.LFE145:
 810              		.section	.text.MX_CRC_Init,"ax",%progbits
 811              		.align	1
 812              		.syntax unified
 813              		.thumb
 814              		.thumb_func
 815              		.fpu fpv5-sp-d16
 817              	MX_CRC_Init:
 818              	.LFB146:
 444:Src/main.c    **** 
 819              		.loc 1 444 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823 0000 08B5     		push	{r3, lr}
 824              	.LCFI9:
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 3, -8
 827              		.cfi_offset 14, -4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 42


 446:Src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 828              		.loc 1 446 0
 829 0002 0948     		ldr	r0, .L43
 830 0004 094B     		ldr	r3, .L43+4
 831 0006 0360     		str	r3, [r0]
 447:Src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 832              		.loc 1 447 0
 833 0008 0023     		movs	r3, #0
 834 000a 0371     		strb	r3, [r0, #4]
 448:Src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 835              		.loc 1 448 0
 836 000c 4371     		strb	r3, [r0, #5]
 449:Src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 837              		.loc 1 449 0
 838 000e 4361     		str	r3, [r0, #20]
 450:Src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 839              		.loc 1 450 0
 840 0010 8361     		str	r3, [r0, #24]
 451:Src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 841              		.loc 1 451 0
 842 0012 0123     		movs	r3, #1
 843 0014 0362     		str	r3, [r0, #32]
 452:Src/main.c    ****   {
 844              		.loc 1 452 0
 845 0016 FFF7FEFF 		bl	HAL_CRC_Init
 846              	.LVL47:
 847 001a 00B9     		cbnz	r0, .L42
 848 001c 08BD     		pop	{r3, pc}
 849              	.L42:
 454:Src/main.c    ****   }
 850              		.loc 1 454 0
 851 001e 4FF4E371 		mov	r1, #454
 852 0022 0348     		ldr	r0, .L43+8
 853 0024 FFF7FEFF 		bl	_Error_Handler
 854              	.LVL48:
 855              	.L44:
 856              		.align	2
 857              	.L43:
 858 0028 00000000 		.word	hcrc
 859 002c 00300240 		.word	1073885184
 860 0030 00000000 		.word	.LC7
 861              		.cfi_endproc
 862              	.LFE146:
 864              		.section	.text.MX_DCMI_Init,"ax",%progbits
 865              		.align	1
 866              		.syntax unified
 867              		.thumb
 868              		.thumb_func
 869              		.fpu fpv5-sp-d16
 871              	MX_DCMI_Init:
 872              	.LFB147:
 461:Src/main.c    **** 
 873              		.loc 1 461 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 0
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 43


 878              	.LCFI10:
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 3, -8
 881              		.cfi_offset 14, -4
 463:Src/main.c    ****   hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 882              		.loc 1 463 0
 883 0002 0C48     		ldr	r0, .L49
 884 0004 0C4B     		ldr	r3, .L49+4
 885 0006 0360     		str	r3, [r0]
 464:Src/main.c    ****   hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 886              		.loc 1 464 0
 887 0008 0023     		movs	r3, #0
 888 000a 4360     		str	r3, [r0, #4]
 465:Src/main.c    ****   hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 889              		.loc 1 465 0
 890 000c 8360     		str	r3, [r0, #8]
 466:Src/main.c    ****   hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 891              		.loc 1 466 0
 892 000e C360     		str	r3, [r0, #12]
 467:Src/main.c    ****   hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 893              		.loc 1 467 0
 894 0010 0361     		str	r3, [r0, #16]
 468:Src/main.c    ****   hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
 895              		.loc 1 468 0
 896 0012 4361     		str	r3, [r0, #20]
 469:Src/main.c    ****   hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 897              		.loc 1 469 0
 898 0014 8361     		str	r3, [r0, #24]
 470:Src/main.c    ****   hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 899              		.loc 1 470 0
 900 0016 0362     		str	r3, [r0, #32]
 471:Src/main.c    ****   hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 901              		.loc 1 471 0
 902 0018 4362     		str	r3, [r0, #36]
 472:Src/main.c    ****   hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 903              		.loc 1 472 0
 904 001a 8362     		str	r3, [r0, #40]
 473:Src/main.c    ****   hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 905              		.loc 1 473 0
 906 001c C362     		str	r3, [r0, #44]
 474:Src/main.c    ****   if (HAL_DCMI_Init(&hdcmi) != HAL_OK)
 907              		.loc 1 474 0
 908 001e 0363     		str	r3, [r0, #48]
 475:Src/main.c    ****   {
 909              		.loc 1 475 0
 910 0020 FFF7FEFF 		bl	HAL_DCMI_Init
 911              	.LVL49:
 912 0024 00B9     		cbnz	r0, .L48
 913 0026 08BD     		pop	{r3, pc}
 914              	.L48:
 477:Src/main.c    ****   }
 915              		.loc 1 477 0
 916 0028 40F2DD11 		movw	r1, #477
 917 002c 0348     		ldr	r0, .L49+8
 918 002e FFF7FEFF 		bl	_Error_Handler
 919              	.LVL50:
 920              	.L50:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 44


 921 0032 00BF     		.align	2
 922              	.L49:
 923 0034 00000000 		.word	hdcmi
 924 0038 00000550 		.word	1342504960
 925 003c 00000000 		.word	.LC7
 926              		.cfi_endproc
 927              	.LFE147:
 929              		.section	.text.MX_DMA2D_Init,"ax",%progbits
 930              		.align	1
 931              		.syntax unified
 932              		.thumb
 933              		.thumb_func
 934              		.fpu fpv5-sp-d16
 936              	MX_DMA2D_Init:
 937              	.LFB148:
 484:Src/main.c    **** 
 938              		.loc 1 484 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942 0000 08B5     		push	{r3, lr}
 943              	.LCFI11:
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 3, -8
 946              		.cfi_offset 14, -4
 486:Src/main.c    ****   hdma2d.Init.Mode = DMA2D_M2M;
 947              		.loc 1 486 0
 948 0002 0F48     		ldr	r0, .L57
 949 0004 0F4B     		ldr	r3, .L57+4
 950 0006 0360     		str	r3, [r0]
 487:Src/main.c    ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 951              		.loc 1 487 0
 952 0008 0023     		movs	r3, #0
 953 000a 4360     		str	r3, [r0, #4]
 488:Src/main.c    ****   hdma2d.Init.OutputOffset = 0;
 954              		.loc 1 488 0
 955 000c 8360     		str	r3, [r0, #8]
 489:Src/main.c    ****   hdma2d.LayerCfg[1].InputOffset = 0;
 956              		.loc 1 489 0
 957 000e C360     		str	r3, [r0, #12]
 490:Src/main.c    ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 958              		.loc 1 490 0
 959 0010 8362     		str	r3, [r0, #40]
 491:Src/main.c    ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 960              		.loc 1 491 0
 961 0012 C362     		str	r3, [r0, #44]
 492:Src/main.c    ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 962              		.loc 1 492 0
 963 0014 0363     		str	r3, [r0, #48]
 493:Src/main.c    ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 964              		.loc 1 493 0
 965 0016 4363     		str	r3, [r0, #52]
 494:Src/main.c    ****   {
 966              		.loc 1 494 0
 967 0018 FFF7FEFF 		bl	HAL_DMA2D_Init
 968              	.LVL51:
 969 001c 28B9     		cbnz	r0, .L55
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 45


 499:Src/main.c    ****   {
 970              		.loc 1 499 0
 971 001e 0121     		movs	r1, #1
 972 0020 0748     		ldr	r0, .L57
 973 0022 FFF7FEFF 		bl	HAL_DMA2D_ConfigLayer
 974              	.LVL52:
 975 0026 28B9     		cbnz	r0, .L56
 976 0028 08BD     		pop	{r3, pc}
 977              	.L55:
 496:Src/main.c    ****   }
 978              		.loc 1 496 0
 979 002a 4FF4F871 		mov	r1, #496
 980 002e 0648     		ldr	r0, .L57+8
 981 0030 FFF7FEFF 		bl	_Error_Handler
 982              	.LVL53:
 983              	.L56:
 501:Src/main.c    ****   }
 984              		.loc 1 501 0
 985 0034 40F2F511 		movw	r1, #501
 986 0038 0348     		ldr	r0, .L57+8
 987 003a FFF7FEFF 		bl	_Error_Handler
 988              	.LVL54:
 989              	.L58:
 990 003e 00BF     		.align	2
 991              	.L57:
 992 0040 00000000 		.word	hdma2d
 993 0044 00B00240 		.word	1073917952
 994 0048 00000000 		.word	.LC7
 995              		.cfi_endproc
 996              	.LFE148:
 998              		.section	.text.MX_FMC_Init,"ax",%progbits
 999              		.align	1
 1000              		.syntax unified
 1001              		.thumb
 1002              		.thumb_func
 1003              		.fpu fpv5-sp-d16
 1005              	MX_FMC_Init:
 1006              	.LFB167:
1212:Src/main.c    ****   FMC_SDRAM_TimingTypeDef SdramTiming;
 1007              		.loc 1 1212 0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 32
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 1011 0000 00B5     		push	{lr}
 1012              	.LCFI12:
 1013              		.cfi_def_cfa_offset 4
 1014              		.cfi_offset 14, -4
 1015 0002 89B0     		sub	sp, sp, #36
 1016              	.LCFI13:
 1017              		.cfi_def_cfa_offset 40
1217:Src/main.c    ****   /* hsdram1.Init */
 1018              		.loc 1 1217 0
 1019 0004 1648     		ldr	r0, .L63
 1020 0006 174B     		ldr	r3, .L63+4
 1021 0008 0360     		str	r3, [r0]
1219:Src/main.c    ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 1022              		.loc 1 1219 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 46


 1023 000a 0023     		movs	r3, #0
 1024 000c 4360     		str	r3, [r0, #4]
1220:Src/main.c    ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 1025              		.loc 1 1220 0
 1026 000e 8360     		str	r3, [r0, #8]
1221:Src/main.c    ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 1027              		.loc 1 1221 0
 1028 0010 0421     		movs	r1, #4
 1029 0012 C160     		str	r1, [r0, #12]
1222:Src/main.c    ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 1030              		.loc 1 1222 0
 1031 0014 1022     		movs	r2, #16
 1032 0016 0261     		str	r2, [r0, #16]
1223:Src/main.c    ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 1033              		.loc 1 1223 0
 1034 0018 4022     		movs	r2, #64
 1035 001a 4261     		str	r2, [r0, #20]
1224:Src/main.c    ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 1036              		.loc 1 1224 0
 1037 001c 4FF4C072 		mov	r2, #384
 1038 0020 8261     		str	r2, [r0, #24]
1225:Src/main.c    ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 1039              		.loc 1 1225 0
 1040 0022 C361     		str	r3, [r0, #28]
1226:Src/main.c    ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 1041              		.loc 1 1226 0
 1042 0024 4FF40062 		mov	r2, #2048
 1043 0028 0262     		str	r2, [r0, #32]
1227:Src/main.c    ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 1044              		.loc 1 1227 0
 1045 002a 4FF48052 		mov	r2, #4096
 1046 002e 4262     		str	r2, [r0, #36]
1228:Src/main.c    ****   /* SdramTiming */
 1047              		.loc 1 1228 0
 1048 0030 8362     		str	r3, [r0, #40]
1230:Src/main.c    ****   SdramTiming.ExitSelfRefreshDelay = 7;
 1049              		.loc 1 1230 0
 1050 0032 0223     		movs	r3, #2
 1051 0034 0193     		str	r3, [sp, #4]
1231:Src/main.c    ****   SdramTiming.SelfRefreshTime = 4;
 1052              		.loc 1 1231 0
 1053 0036 0722     		movs	r2, #7
 1054 0038 0292     		str	r2, [sp, #8]
1232:Src/main.c    ****   SdramTiming.RowCycleDelay = 7;
 1055              		.loc 1 1232 0
 1056 003a 0391     		str	r1, [sp, #12]
1233:Src/main.c    ****   SdramTiming.WriteRecoveryTime = 3;
 1057              		.loc 1 1233 0
 1058 003c 0492     		str	r2, [sp, #16]
1234:Src/main.c    ****   SdramTiming.RPDelay = 2;
 1059              		.loc 1 1234 0
 1060 003e 0322     		movs	r2, #3
 1061 0040 0592     		str	r2, [sp, #20]
1235:Src/main.c    ****   SdramTiming.RCDDelay = 2;
 1062              		.loc 1 1235 0
 1063 0042 0693     		str	r3, [sp, #24]
1236:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 47


 1064              		.loc 1 1236 0
 1065 0044 0793     		str	r3, [sp, #28]
1238:Src/main.c    ****   {
 1066              		.loc 1 1238 0
 1067 0046 6944     		add	r1, sp, r1
 1068 0048 FFF7FEFF 		bl	HAL_SDRAM_Init
 1069              	.LVL55:
 1070 004c 10B9     		cbnz	r0, .L62
1243:Src/main.c    **** 
 1071              		.loc 1 1243 0
 1072 004e 09B0     		add	sp, sp, #36
 1073              	.LCFI14:
 1074              		.cfi_remember_state
 1075              		.cfi_def_cfa_offset 4
 1076              		@ sp needed
 1077 0050 5DF804FB 		ldr	pc, [sp], #4
 1078              	.L62:
 1079              	.LCFI15:
 1080              		.cfi_restore_state
1240:Src/main.c    ****   }
 1081              		.loc 1 1240 0
 1082 0054 4FF49B61 		mov	r1, #1240
 1083 0058 0348     		ldr	r0, .L63+8
 1084 005a FFF7FEFF 		bl	_Error_Handler
 1085              	.LVL56:
 1086              	.L64:
 1087 005e 00BF     		.align	2
 1088              	.L63:
 1089 0060 00000000 		.word	hsdram1
 1090 0064 400100A0 		.word	-1610612416
 1091 0068 00000000 		.word	.LC7
 1092              		.cfi_endproc
 1093              	.LFE167:
 1095              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1096              		.align	1
 1097              		.syntax unified
 1098              		.thumb
 1099              		.thumb_func
 1100              		.fpu fpv5-sp-d16
 1102              	MX_I2C1_Init:
 1103              	.LFB149:
 508:Src/main.c    **** 
 1104              		.loc 1 508 0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 0
 1107              		@ frame_needed = 0, uses_anonymous_args = 0
 1108 0000 08B5     		push	{r3, lr}
 1109              	.LCFI16:
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 3, -8
 1112              		.cfi_offset 14, -4
 510:Src/main.c    ****   hi2c1.Init.Timing = 0x00C0EAFF;
 1113              		.loc 1 510 0
 1114 0002 1548     		ldr	r0, .L73
 1115 0004 154B     		ldr	r3, .L73+4
 1116 0006 0360     		str	r3, [r0]
 511:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 48


 1117              		.loc 1 511 0
 1118 0008 154B     		ldr	r3, .L73+8
 1119 000a 4360     		str	r3, [r0, #4]
 512:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1120              		.loc 1 512 0
 1121 000c 0023     		movs	r3, #0
 1122 000e 8360     		str	r3, [r0, #8]
 513:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1123              		.loc 1 513 0
 1124 0010 0122     		movs	r2, #1
 1125 0012 C260     		str	r2, [r0, #12]
 514:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 1126              		.loc 1 514 0
 1127 0014 0361     		str	r3, [r0, #16]
 515:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1128              		.loc 1 515 0
 1129 0016 4361     		str	r3, [r0, #20]
 516:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1130              		.loc 1 516 0
 1131 0018 8361     		str	r3, [r0, #24]
 517:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1132              		.loc 1 517 0
 1133 001a C361     		str	r3, [r0, #28]
 518:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1134              		.loc 1 518 0
 1135 001c 0362     		str	r3, [r0, #32]
 519:Src/main.c    ****   {
 1136              		.loc 1 519 0
 1137 001e FFF7FEFF 		bl	HAL_I2C_Init
 1138              	.LVL57:
 1139 0022 50B9     		cbnz	r0, .L70
 526:Src/main.c    ****   {
 1140              		.loc 1 526 0
 1141 0024 0021     		movs	r1, #0
 1142 0026 0C48     		ldr	r0, .L73
 1143 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1144              	.LVL58:
 1145 002c 50B9     		cbnz	r0, .L71
 533:Src/main.c    ****   {
 1146              		.loc 1 533 0
 1147 002e 0021     		movs	r1, #0
 1148 0030 0948     		ldr	r0, .L73
 1149 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1150              	.LVL59:
 1151 0036 50B9     		cbnz	r0, .L72
 1152 0038 08BD     		pop	{r3, pc}
 1153              	.L70:
 521:Src/main.c    ****   }
 1154              		.loc 1 521 0
 1155 003a 40F20921 		movw	r1, #521
 1156 003e 0948     		ldr	r0, .L73+12
 1157 0040 FFF7FEFF 		bl	_Error_Handler
 1158              	.LVL60:
 1159              	.L71:
 528:Src/main.c    ****   }
 1160              		.loc 1 528 0
 1161 0044 4FF40471 		mov	r1, #528
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 49


 1162 0048 0648     		ldr	r0, .L73+12
 1163 004a FFF7FEFF 		bl	_Error_Handler
 1164              	.LVL61:
 1165              	.L72:
 535:Src/main.c    ****   }
 1166              		.loc 1 535 0
 1167 004e 40F21721 		movw	r1, #535
 1168 0052 0448     		ldr	r0, .L73+12
 1169 0054 FFF7FEFF 		bl	_Error_Handler
 1170              	.LVL62:
 1171              	.L74:
 1172              		.align	2
 1173              	.L73:
 1174 0058 00000000 		.word	hi2c1
 1175 005c 00540040 		.word	1073763328
 1176 0060 FFEAC000 		.word	12643071
 1177 0064 00000000 		.word	.LC7
 1178              		.cfi_endproc
 1179              	.LFE149:
 1181              		.section	.text.MX_I2C3_Init,"ax",%progbits
 1182              		.align	1
 1183              		.syntax unified
 1184              		.thumb
 1185              		.thumb_func
 1186              		.fpu fpv5-sp-d16
 1188              	MX_I2C3_Init:
 1189              	.LFB150:
 542:Src/main.c    **** 
 1190              		.loc 1 542 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194 0000 08B5     		push	{r3, lr}
 1195              	.LCFI17:
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 3, -8
 1198              		.cfi_offset 14, -4
 544:Src/main.c    ****   hi2c3.Init.Timing = 0x00C0EAFF;
 1199              		.loc 1 544 0
 1200 0002 1548     		ldr	r0, .L83
 1201 0004 154B     		ldr	r3, .L83+4
 1202 0006 0360     		str	r3, [r0]
 545:Src/main.c    ****   hi2c3.Init.OwnAddress1 = 0;
 1203              		.loc 1 545 0
 1204 0008 154B     		ldr	r3, .L83+8
 1205 000a 4360     		str	r3, [r0, #4]
 546:Src/main.c    ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1206              		.loc 1 546 0
 1207 000c 0023     		movs	r3, #0
 1208 000e 8360     		str	r3, [r0, #8]
 547:Src/main.c    ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1209              		.loc 1 547 0
 1210 0010 0122     		movs	r2, #1
 1211 0012 C260     		str	r2, [r0, #12]
 548:Src/main.c    ****   hi2c3.Init.OwnAddress2 = 0;
 1212              		.loc 1 548 0
 1213 0014 0361     		str	r3, [r0, #16]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 50


 549:Src/main.c    ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1214              		.loc 1 549 0
 1215 0016 4361     		str	r3, [r0, #20]
 550:Src/main.c    ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1216              		.loc 1 550 0
 1217 0018 8361     		str	r3, [r0, #24]
 551:Src/main.c    ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1218              		.loc 1 551 0
 1219 001a C361     		str	r3, [r0, #28]
 552:Src/main.c    ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 1220              		.loc 1 552 0
 1221 001c 0362     		str	r3, [r0, #32]
 553:Src/main.c    ****   {
 1222              		.loc 1 553 0
 1223 001e FFF7FEFF 		bl	HAL_I2C_Init
 1224              	.LVL63:
 1225 0022 50B9     		cbnz	r0, .L80
 560:Src/main.c    ****   {
 1226              		.loc 1 560 0
 1227 0024 0021     		movs	r1, #0
 1228 0026 0C48     		ldr	r0, .L83
 1229 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1230              	.LVL64:
 1231 002c 50B9     		cbnz	r0, .L81
 567:Src/main.c    ****   {
 1232              		.loc 1 567 0
 1233 002e 0021     		movs	r1, #0
 1234 0030 0948     		ldr	r0, .L83
 1235 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1236              	.LVL65:
 1237 0036 50B9     		cbnz	r0, .L82
 1238 0038 08BD     		pop	{r3, pc}
 1239              	.L80:
 555:Src/main.c    ****   }
 1240              		.loc 1 555 0
 1241 003a 40F22B21 		movw	r1, #555
 1242 003e 0948     		ldr	r0, .L83+12
 1243 0040 FFF7FEFF 		bl	_Error_Handler
 1244              	.LVL66:
 1245              	.L81:
 562:Src/main.c    ****   }
 1246              		.loc 1 562 0
 1247 0044 40F23221 		movw	r1, #562
 1248 0048 0648     		ldr	r0, .L83+12
 1249 004a FFF7FEFF 		bl	_Error_Handler
 1250              	.LVL67:
 1251              	.L82:
 569:Src/main.c    ****   }
 1252              		.loc 1 569 0
 1253 004e 40F23921 		movw	r1, #569
 1254 0052 0448     		ldr	r0, .L83+12
 1255 0054 FFF7FEFF 		bl	_Error_Handler
 1256              	.LVL68:
 1257              	.L84:
 1258              		.align	2
 1259              	.L83:
 1260 0058 00000000 		.word	hi2c3
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 51


 1261 005c 005C0040 		.word	1073765376
 1262 0060 FFEAC000 		.word	12643071
 1263 0064 00000000 		.word	.LC7
 1264              		.cfi_endproc
 1265              	.LFE150:
 1267              		.section	.text.MX_LTDC_Init,"ax",%progbits
 1268              		.align	1
 1269              		.syntax unified
 1270              		.thumb
 1271              		.thumb_func
 1272              		.fpu fpv5-sp-d16
 1274              	MX_LTDC_Init:
 1275              	.LFB151:
 576:Src/main.c    **** 
 1276              		.loc 1 576 0
 1277              		.cfi_startproc
 1278              		@ args = 0, pretend = 0, frame = 56
 1279              		@ frame_needed = 0, uses_anonymous_args = 0
 1280 0000 00B5     		push	{lr}
 1281              	.LCFI18:
 1282              		.cfi_def_cfa_offset 4
 1283              		.cfi_offset 14, -4
 1284 0002 8FB0     		sub	sp, sp, #60
 1285              	.LCFI19:
 1286              		.cfi_def_cfa_offset 64
 580:Src/main.c    ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 1287              		.loc 1 580 0
 1288 0004 2948     		ldr	r0, .L91
 1289 0006 2A4B     		ldr	r3, .L91+4
 1290 0008 0360     		str	r3, [r0]
 581:Src/main.c    ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 1291              		.loc 1 581 0
 1292 000a 0023     		movs	r3, #0
 1293 000c 4360     		str	r3, [r0, #4]
 582:Src/main.c    ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 1294              		.loc 1 582 0
 1295 000e 8360     		str	r3, [r0, #8]
 583:Src/main.c    ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 1296              		.loc 1 583 0
 1297 0010 C360     		str	r3, [r0, #12]
 584:Src/main.c    ****   hltdc.Init.HorizontalSync = 40;
 1298              		.loc 1 584 0
 1299 0012 0361     		str	r3, [r0, #16]
 585:Src/main.c    ****   hltdc.Init.VerticalSync = 9;
 1300              		.loc 1 585 0
 1301 0014 2822     		movs	r2, #40
 1302 0016 4261     		str	r2, [r0, #20]
 586:Src/main.c    ****   hltdc.Init.AccumulatedHBP = 53;
 1303              		.loc 1 586 0
 1304 0018 0922     		movs	r2, #9
 1305 001a 8261     		str	r2, [r0, #24]
 587:Src/main.c    ****   hltdc.Init.AccumulatedVBP = 11;
 1306              		.loc 1 587 0
 1307 001c 3522     		movs	r2, #53
 1308 001e C261     		str	r2, [r0, #28]
 588:Src/main.c    ****   hltdc.Init.AccumulatedActiveW = 533;
 1309              		.loc 1 588 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 52


 1310 0020 0B22     		movs	r2, #11
 1311 0022 0262     		str	r2, [r0, #32]
 589:Src/main.c    ****   hltdc.Init.AccumulatedActiveH = 283;
 1312              		.loc 1 589 0
 1313 0024 40F21522 		movw	r2, #533
 1314 0028 4262     		str	r2, [r0, #36]
 590:Src/main.c    ****   hltdc.Init.TotalWidth = 565;
 1315              		.loc 1 590 0
 1316 002a 40F21B12 		movw	r2, #283
 1317 002e 8262     		str	r2, [r0, #40]
 591:Src/main.c    ****   hltdc.Init.TotalHeigh = 285;
 1318              		.loc 1 591 0
 1319 0030 40F23522 		movw	r2, #565
 1320 0034 C262     		str	r2, [r0, #44]
 592:Src/main.c    ****   hltdc.Init.Backcolor.Blue = 0;
 1321              		.loc 1 592 0
 1322 0036 40F21D12 		movw	r2, #285
 1323 003a 0263     		str	r2, [r0, #48]
 593:Src/main.c    ****   hltdc.Init.Backcolor.Green = 0;
 1324              		.loc 1 593 0
 1325 003c 80F83430 		strb	r3, [r0, #52]
 594:Src/main.c    ****   hltdc.Init.Backcolor.Red = 0;
 1326              		.loc 1 594 0
 1327 0040 80F83530 		strb	r3, [r0, #53]
 595:Src/main.c    ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 1328              		.loc 1 595 0
 1329 0044 80F83630 		strb	r3, [r0, #54]
 596:Src/main.c    ****   {
 1330              		.loc 1 596 0
 1331 0048 FFF7FEFF 		bl	HAL_LTDC_Init
 1332              	.LVL69:
 1333 004c 20BB     		cbnz	r0, .L89
 601:Src/main.c    ****   pLayerCfg.WindowX1 = 480;
 1334              		.loc 1 601 0
 1335 004e 0022     		movs	r2, #0
 1336 0050 0192     		str	r2, [sp, #4]
 602:Src/main.c    ****   pLayerCfg.WindowY0 = 0;
 1337              		.loc 1 602 0
 1338 0052 4FF4F071 		mov	r1, #480
 1339 0056 0291     		str	r1, [sp, #8]
 603:Src/main.c    ****   pLayerCfg.WindowY1 = 272;
 1340              		.loc 1 603 0
 1341 0058 0392     		str	r2, [sp, #12]
 604:Src/main.c    ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
 1342              		.loc 1 604 0
 1343 005a 4FF48873 		mov	r3, #272
 1344 005e 0493     		str	r3, [sp, #16]
 605:Src/main.c    ****   pLayerCfg.Alpha = 255;
 1345              		.loc 1 605 0
 1346 0060 0592     		str	r2, [sp, #20]
 606:Src/main.c    ****   pLayerCfg.Alpha0 = 0;
 1347              		.loc 1 606 0
 1348 0062 FF20     		movs	r0, #255
 1349 0064 0690     		str	r0, [sp, #24]
 607:Src/main.c    ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 1350              		.loc 1 607 0
 1351 0066 0792     		str	r2, [sp, #28]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 53


 608:Src/main.c    ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 1352              		.loc 1 608 0
 1353 0068 4FF4C060 		mov	r0, #1536
 1354 006c 0890     		str	r0, [sp, #32]
 609:Src/main.c    ****   pLayerCfg.FBStartAdress = 0xC0000000;
 1355              		.loc 1 609 0
 1356 006e 0720     		movs	r0, #7
 1357 0070 0990     		str	r0, [sp, #36]
 610:Src/main.c    ****   pLayerCfg.ImageWidth = 480;
 1358              		.loc 1 610 0
 1359 0072 4FF04040 		mov	r0, #-1073741824
 1360 0076 0A90     		str	r0, [sp, #40]
 611:Src/main.c    ****   pLayerCfg.ImageHeight = 272;
 1361              		.loc 1 611 0
 1362 0078 0B91     		str	r1, [sp, #44]
 612:Src/main.c    ****   pLayerCfg.Backcolor.Blue = 0;
 1363              		.loc 1 612 0
 1364 007a 0C93     		str	r3, [sp, #48]
 613:Src/main.c    ****   pLayerCfg.Backcolor.Green = 0;
 1365              		.loc 1 613 0
 1366 007c 8DF83420 		strb	r2, [sp, #52]
 614:Src/main.c    ****   pLayerCfg.Backcolor.Red = 0;
 1367              		.loc 1 614 0
 1368 0080 8DF83520 		strb	r2, [sp, #53]
 615:Src/main.c    ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 1369              		.loc 1 615 0
 1370 0084 8DF83620 		strb	r2, [sp, #54]
 616:Src/main.c    ****   {
 1371              		.loc 1 616 0
 1372 0088 01A9     		add	r1, sp, #4
 1373 008a 0848     		ldr	r0, .L91
 1374 008c FFF7FEFF 		bl	HAL_LTDC_ConfigLayer
 1375              	.LVL70:
 1376 0090 38B9     		cbnz	r0, .L90
 621:Src/main.c    **** 
 1377              		.loc 1 621 0
 1378 0092 0FB0     		add	sp, sp, #60
 1379              	.LCFI20:
 1380              		.cfi_remember_state
 1381              		.cfi_def_cfa_offset 4
 1382              		@ sp needed
 1383 0094 5DF804FB 		ldr	pc, [sp], #4
 1384              	.L89:
 1385              	.LCFI21:
 1386              		.cfi_restore_state
 598:Src/main.c    ****   }
 1387              		.loc 1 598 0
 1388 0098 40F25621 		movw	r1, #598
 1389 009c 0548     		ldr	r0, .L91+8
 1390 009e FFF7FEFF 		bl	_Error_Handler
 1391              	.LVL71:
 1392              	.L90:
 618:Src/main.c    ****   }
 1393              		.loc 1 618 0
 1394 00a2 40F26A21 		movw	r1, #618
 1395 00a6 0348     		ldr	r0, .L91+8
 1396 00a8 FFF7FEFF 		bl	_Error_Handler
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 54


 1397              	.LVL72:
 1398              	.L92:
 1399              		.align	2
 1400              	.L91:
 1401 00ac 00000000 		.word	hltdc
 1402 00b0 00680140 		.word	1073833984
 1403 00b4 00000000 		.word	.LC7
 1404              		.cfi_endproc
 1405              	.LFE151:
 1407              		.section	.text.MX_QUADSPI_Init,"ax",%progbits
 1408              		.align	1
 1409              		.syntax unified
 1410              		.thumb
 1411              		.thumb_func
 1412              		.fpu fpv5-sp-d16
 1414              	MX_QUADSPI_Init:
 1415              	.LFB152:
 625:Src/main.c    **** 
 1416              		.loc 1 625 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 0
 1419              		@ frame_needed = 0, uses_anonymous_args = 0
 1420 0000 08B5     		push	{r3, lr}
 1421              	.LCFI22:
 1422              		.cfi_def_cfa_offset 8
 1423              		.cfi_offset 3, -8
 1424              		.cfi_offset 14, -4
 628:Src/main.c    ****   hqspi.Init.ClockPrescaler = 255;
 1425              		.loc 1 628 0
 1426 0002 0B48     		ldr	r0, .L97
 1427 0004 0B4B     		ldr	r3, .L97+4
 1428 0006 0360     		str	r3, [r0]
 629:Src/main.c    ****   hqspi.Init.FifoThreshold = 1;
 1429              		.loc 1 629 0
 1430 0008 FF23     		movs	r3, #255
 1431 000a 4360     		str	r3, [r0, #4]
 630:Src/main.c    ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 1432              		.loc 1 630 0
 1433 000c 0122     		movs	r2, #1
 1434 000e 8260     		str	r2, [r0, #8]
 631:Src/main.c    ****   hqspi.Init.FlashSize = 1;
 1435              		.loc 1 631 0
 1436 0010 0023     		movs	r3, #0
 1437 0012 C360     		str	r3, [r0, #12]
 632:Src/main.c    ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 1438              		.loc 1 632 0
 1439 0014 0261     		str	r2, [r0, #16]
 633:Src/main.c    ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 1440              		.loc 1 633 0
 1441 0016 4361     		str	r3, [r0, #20]
 634:Src/main.c    ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 1442              		.loc 1 634 0
 1443 0018 8361     		str	r3, [r0, #24]
 635:Src/main.c    ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 1444              		.loc 1 635 0
 1445 001a C361     		str	r3, [r0, #28]
 636:Src/main.c    ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 55


 1446              		.loc 1 636 0
 1447 001c 0362     		str	r3, [r0, #32]
 637:Src/main.c    ****   {
 1448              		.loc 1 637 0
 1449 001e FFF7FEFF 		bl	HAL_QSPI_Init
 1450              	.LVL73:
 1451 0022 00B9     		cbnz	r0, .L96
 1452 0024 08BD     		pop	{r3, pc}
 1453              	.L96:
 639:Src/main.c    ****   }
 1454              		.loc 1 639 0
 1455 0026 40F27F21 		movw	r1, #639
 1456 002a 0348     		ldr	r0, .L97+8
 1457 002c FFF7FEFF 		bl	_Error_Handler
 1458              	.LVL74:
 1459              	.L98:
 1460              		.align	2
 1461              	.L97:
 1462 0030 00000000 		.word	hqspi
 1463 0034 001000A0 		.word	-1610608640
 1464 0038 00000000 		.word	.LC7
 1465              		.cfi_endproc
 1466              	.LFE152:
 1468              		.section	.text.MX_RTC_Init,"ax",%progbits
 1469              		.align	1
 1470              		.syntax unified
 1471              		.thumb
 1472              		.thumb_func
 1473              		.fpu fpv5-sp-d16
 1475              	MX_RTC_Init:
 1476              	.LFB153:
 646:Src/main.c    **** 
 1477              		.loc 1 646 0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 72
 1480              		@ frame_needed = 0, uses_anonymous_args = 0
 1481 0000 00B5     		push	{lr}
 1482              	.LCFI23:
 1483              		.cfi_def_cfa_offset 4
 1484              		.cfi_offset 14, -4
 1485 0002 93B0     		sub	sp, sp, #76
 1486              	.LCFI24:
 1487              		.cfi_def_cfa_offset 80
 662:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1488              		.loc 1 662 0
 1489 0004 3C48     		ldr	r0, .L113
 1490 0006 3D4B     		ldr	r3, .L113+4
 1491 0008 0360     		str	r3, [r0]
 663:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 1492              		.loc 1 663 0
 1493 000a 0023     		movs	r3, #0
 1494 000c 4360     		str	r3, [r0, #4]
 664:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 1495              		.loc 1 664 0
 1496 000e 7F22     		movs	r2, #127
 1497 0010 8260     		str	r2, [r0, #8]
 665:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 56


 1498              		.loc 1 665 0
 1499 0012 FF22     		movs	r2, #255
 1500 0014 C260     		str	r2, [r0, #12]
 666:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1501              		.loc 1 666 0
 1502 0016 0361     		str	r3, [r0, #16]
 667:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1503              		.loc 1 667 0
 1504 0018 4361     		str	r3, [r0, #20]
 668:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1505              		.loc 1 668 0
 1506 001a 8361     		str	r3, [r0, #24]
 669:Src/main.c    ****   {
 1507              		.loc 1 669 0
 1508 001c FFF7FEFF 		bl	HAL_RTC_Init
 1509              	.LVL75:
 1510 0020 0028     		cmp	r0, #0
 1511 0022 4BD1     		bne	.L107
 676:Src/main.c    ****   sTime.Minutes = 0x0;
 1512              		.loc 1 676 0
 1513 0024 0023     		movs	r3, #0
 1514 0026 8DF83030 		strb	r3, [sp, #48]
 677:Src/main.c    ****   sTime.Seconds = 0x0;
 1515              		.loc 1 677 0
 1516 002a 8DF83130 		strb	r3, [sp, #49]
 678:Src/main.c    ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1517              		.loc 1 678 0
 1518 002e 8DF83230 		strb	r3, [sp, #50]
 679:Src/main.c    ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1519              		.loc 1 679 0
 1520 0032 1093     		str	r3, [sp, #64]
 680:Src/main.c    ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1521              		.loc 1 680 0
 1522 0034 1193     		str	r3, [sp, #68]
 681:Src/main.c    ****   {
 1523              		.loc 1 681 0
 1524 0036 0122     		movs	r2, #1
 1525 0038 0CA9     		add	r1, sp, #48
 1526 003a 2F48     		ldr	r0, .L113
 1527 003c FFF7FEFF 		bl	HAL_RTC_SetTime
 1528              	.LVL76:
 1529 0040 0028     		cmp	r0, #0
 1530 0042 40D1     		bne	.L108
 686:Src/main.c    ****   sDate.Month = RTC_MONTH_JANUARY;
 1531              		.loc 1 686 0
 1532 0044 0122     		movs	r2, #1
 1533 0046 8DF82C20 		strb	r2, [sp, #44]
 687:Src/main.c    ****   sDate.Date = 0x1;
 1534              		.loc 1 687 0
 1535 004a 8DF82D20 		strb	r2, [sp, #45]
 688:Src/main.c    ****   sDate.Year = 0x0;
 1536              		.loc 1 688 0
 1537 004e 8DF82E20 		strb	r2, [sp, #46]
 689:Src/main.c    **** 
 1538              		.loc 1 689 0
 1539 0052 0023     		movs	r3, #0
 1540 0054 8DF82F30 		strb	r3, [sp, #47]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 57


 691:Src/main.c    ****   {
 1541              		.loc 1 691 0
 1542 0058 0BA9     		add	r1, sp, #44
 1543 005a 2748     		ldr	r0, .L113
 1544 005c FFF7FEFF 		bl	HAL_RTC_SetDate
 1545              	.LVL77:
 1546 0060 0028     		cmp	r0, #0
 1547 0062 35D1     		bne	.L109
 698:Src/main.c    ****   sAlarm.AlarmTime.Minutes = 0x0;
 1548              		.loc 1 698 0
 1549 0064 0023     		movs	r3, #0
 1550 0066 8DF80030 		strb	r3, [sp]
 699:Src/main.c    ****   sAlarm.AlarmTime.Seconds = 0x0;
 1551              		.loc 1 699 0
 1552 006a 8DF80130 		strb	r3, [sp, #1]
 700:Src/main.c    ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 1553              		.loc 1 700 0
 1554 006e 8DF80230 		strb	r3, [sp, #2]
 701:Src/main.c    ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1555              		.loc 1 701 0
 1556 0072 0193     		str	r3, [sp, #4]
 702:Src/main.c    ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1557              		.loc 1 702 0
 1558 0074 0493     		str	r3, [sp, #16]
 703:Src/main.c    ****   sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 1559              		.loc 1 703 0
 1560 0076 0593     		str	r3, [sp, #20]
 704:Src/main.c    ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 1561              		.loc 1 704 0
 1562 0078 0693     		str	r3, [sp, #24]
 705:Src/main.c    ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 1563              		.loc 1 705 0
 1564 007a 0793     		str	r3, [sp, #28]
 706:Src/main.c    ****   sAlarm.AlarmDateWeekDay = 0x1;
 1565              		.loc 1 706 0
 1566 007c 0893     		str	r3, [sp, #32]
 707:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_A;
 1567              		.loc 1 707 0
 1568 007e 0122     		movs	r2, #1
 1569 0080 8DF82420 		strb	r2, [sp, #36]
 708:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 1570              		.loc 1 708 0
 1571 0084 4FF48073 		mov	r3, #256
 1572 0088 0A93     		str	r3, [sp, #40]
 709:Src/main.c    ****   {
 1573              		.loc 1 709 0
 1574 008a 6946     		mov	r1, sp
 1575 008c 1A48     		ldr	r0, .L113
 1576 008e FFF7FEFF 		bl	HAL_RTC_SetAlarm
 1577              	.LVL78:
 1578 0092 10BB     		cbnz	r0, .L110
 716:Src/main.c    ****   sAlarm.Alarm = RTC_ALARM_B;
 1579              		.loc 1 716 0
 1580 0094 0122     		movs	r2, #1
 1581 0096 8DF82420 		strb	r2, [sp, #36]
 717:Src/main.c    ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 1582              		.loc 1 717 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 58


 1583 009a 4FF40073 		mov	r3, #512
 1584 009e 0A93     		str	r3, [sp, #40]
 718:Src/main.c    ****   {
 1585              		.loc 1 718 0
 1586 00a0 6946     		mov	r1, sp
 1587 00a2 1548     		ldr	r0, .L113
 1588 00a4 FFF7FEFF 		bl	HAL_RTC_SetAlarm
 1589              	.LVL79:
 1590 00a8 E0B9     		cbnz	r0, .L111
 725:Src/main.c    ****   {
 1591              		.loc 1 725 0
 1592 00aa 0222     		movs	r2, #2
 1593 00ac 0021     		movs	r1, #0
 1594 00ae 1248     		ldr	r0, .L113
 1595 00b0 FFF7FEFF 		bl	HAL_RTCEx_SetTimeStamp
 1596              	.LVL80:
 1597 00b4 D8B9     		cbnz	r0, .L112
 730:Src/main.c    **** 
 1598              		.loc 1 730 0
 1599 00b6 13B0     		add	sp, sp, #76
 1600              	.LCFI25:
 1601              		.cfi_remember_state
 1602              		.cfi_def_cfa_offset 4
 1603              		@ sp needed
 1604 00b8 5DF804FB 		ldr	pc, [sp], #4
 1605              	.L107:
 1606              	.LCFI26:
 1607              		.cfi_restore_state
 671:Src/main.c    ****   }
 1608              		.loc 1 671 0
 1609 00bc 40F29F21 		movw	r1, #671
 1610 00c0 0F48     		ldr	r0, .L113+8
 1611 00c2 FFF7FEFF 		bl	_Error_Handler
 1612              	.LVL81:
 1613              	.L108:
 683:Src/main.c    ****   }
 1614              		.loc 1 683 0
 1615 00c6 40F2AB21 		movw	r1, #683
 1616 00ca 0D48     		ldr	r0, .L113+8
 1617 00cc FFF7FEFF 		bl	_Error_Handler
 1618              	.LVL82:
 1619              	.L109:
 693:Src/main.c    ****   }
 1620              		.loc 1 693 0
 1621 00d0 40F2B521 		movw	r1, #693
 1622 00d4 0A48     		ldr	r0, .L113+8
 1623 00d6 FFF7FEFF 		bl	_Error_Handler
 1624              	.LVL83:
 1625              	.L110:
 711:Src/main.c    ****   }
 1626              		.loc 1 711 0
 1627 00da 40F2C721 		movw	r1, #711
 1628 00de 0848     		ldr	r0, .L113+8
 1629 00e0 FFF7FEFF 		bl	_Error_Handler
 1630              	.LVL84:
 1631              	.L111:
 720:Src/main.c    ****   }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 59


 1632              		.loc 1 720 0
 1633 00e4 4FF43471 		mov	r1, #720
 1634 00e8 0548     		ldr	r0, .L113+8
 1635 00ea FFF7FEFF 		bl	_Error_Handler
 1636              	.LVL85:
 1637              	.L112:
 727:Src/main.c    ****   }
 1638              		.loc 1 727 0
 1639 00ee 40F2D721 		movw	r1, #727
 1640 00f2 0348     		ldr	r0, .L113+8
 1641 00f4 FFF7FEFF 		bl	_Error_Handler
 1642              	.LVL86:
 1643              	.L114:
 1644              		.align	2
 1645              	.L113:
 1646 00f8 00000000 		.word	hrtc
 1647 00fc 00280040 		.word	1073752064
 1648 0100 00000000 		.word	.LC7
 1649              		.cfi_endproc
 1650              	.LFE153:
 1652              		.section	.text.MX_SAI2_Init,"ax",%progbits
 1653              		.align	1
 1654              		.syntax unified
 1655              		.thumb
 1656              		.thumb_func
 1657              		.fpu fpv5-sp-d16
 1659              	MX_SAI2_Init:
 1660              	.LFB154:
 734:Src/main.c    **** 
 1661              		.loc 1 734 0
 1662              		.cfi_startproc
 1663              		@ args = 0, pretend = 0, frame = 0
 1664              		@ frame_needed = 0, uses_anonymous_args = 0
 1665 0000 08B5     		push	{r3, lr}
 1666              	.LCFI27:
 1667              		.cfi_def_cfa_offset 8
 1668              		.cfi_offset 3, -8
 1669              		.cfi_offset 14, -4
 736:Src/main.c    ****   hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 1670              		.loc 1 736 0
 1671 0002 2648     		ldr	r0, .L121
 1672 0004 264B     		ldr	r3, .L121+4
 1673 0006 0360     		str	r3, [r0]
 737:Src/main.c    ****   hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 1674              		.loc 1 737 0
 1675 0008 0023     		movs	r3, #0
 1676 000a 0363     		str	r3, [r0, #48]
 738:Src/main.c    ****   hsai_BlockA2.Init.DataSize = SAI_DATASIZE_24;
 1677              		.loc 1 738 0
 1678 000c 4360     		str	r3, [r0, #4]
 739:Src/main.c    ****   hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 1679              		.loc 1 739 0
 1680 000e C022     		movs	r2, #192
 1681 0010 4263     		str	r2, [r0, #52]
 740:Src/main.c    ****   hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 1682              		.loc 1 740 0
 1683 0012 8363     		str	r3, [r0, #56]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 60


 741:Src/main.c    ****   hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 1684              		.loc 1 741 0
 1685 0014 C363     		str	r3, [r0, #60]
 742:Src/main.c    ****   hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 1686              		.loc 1 742 0
 1687 0016 8360     		str	r3, [r0, #8]
 743:Src/main.c    ****   hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 1688              		.loc 1 743 0
 1689 0018 0361     		str	r3, [r0, #16]
 744:Src/main.c    ****   hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 1690              		.loc 1 744 0
 1691 001a 4361     		str	r3, [r0, #20]
 745:Src/main.c    ****   hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 1692              		.loc 1 745 0
 1693 001c 8361     		str	r3, [r0, #24]
 746:Src/main.c    ****   hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 1694              		.loc 1 746 0
 1695 001e 214A     		ldr	r2, .L121+8
 1696 0020 C261     		str	r2, [r0, #28]
 747:Src/main.c    ****   hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 1697              		.loc 1 747 0
 1698 0022 C360     		str	r3, [r0, #12]
 748:Src/main.c    ****   hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 1699              		.loc 1 748 0
 1700 0024 4362     		str	r3, [r0, #36]
 749:Src/main.c    ****   hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 1701              		.loc 1 749 0
 1702 0026 8362     		str	r3, [r0, #40]
 750:Src/main.c    ****   hsai_BlockA2.FrameInit.FrameLength = 8;
 1703              		.loc 1 750 0
 1704 0028 C362     		str	r3, [r0, #44]
 751:Src/main.c    ****   hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 1705              		.loc 1 751 0
 1706 002a 0822     		movs	r2, #8
 1707 002c 0264     		str	r2, [r0, #64]
 752:Src/main.c    ****   hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 1708              		.loc 1 752 0
 1709 002e 0122     		movs	r2, #1
 1710 0030 4264     		str	r2, [r0, #68]
 753:Src/main.c    ****   hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 1711              		.loc 1 753 0
 1712 0032 8364     		str	r3, [r0, #72]
 754:Src/main.c    ****   hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 1713              		.loc 1 754 0
 1714 0034 C364     		str	r3, [r0, #76]
 755:Src/main.c    ****   hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 1715              		.loc 1 755 0
 1716 0036 0365     		str	r3, [r0, #80]
 756:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 1717              		.loc 1 756 0
 1718 0038 4365     		str	r3, [r0, #84]
 757:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotNumber = 1;
 1719              		.loc 1 757 0
 1720 003a 8365     		str	r3, [r0, #88]
 758:Src/main.c    ****   hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 1721              		.loc 1 758 0
 1722 003c C265     		str	r2, [r0, #92]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 61


 759:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK)
 1723              		.loc 1 759 0
 1724 003e 0366     		str	r3, [r0, #96]
 760:Src/main.c    ****   {
 1725              		.loc 1 760 0
 1726 0040 FFF7FEFF 		bl	HAL_SAI_Init
 1727              	.LVL87:
 1728 0044 00BB     		cbnz	r0, .L119
 765:Src/main.c    ****   hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 1729              		.loc 1 765 0
 1730 0046 1848     		ldr	r0, .L121+12
 1731 0048 184B     		ldr	r3, .L121+16
 1732 004a 0360     		str	r3, [r0]
 766:Src/main.c    ****   hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 1733              		.loc 1 766 0
 1734 004c 0023     		movs	r3, #0
 1735 004e 0363     		str	r3, [r0, #48]
 767:Src/main.c    ****   hsai_BlockB2.Init.DataSize = SAI_DATASIZE_24;
 1736              		.loc 1 767 0
 1737 0050 0322     		movs	r2, #3
 1738 0052 4260     		str	r2, [r0, #4]
 768:Src/main.c    ****   hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 1739              		.loc 1 768 0
 1740 0054 C022     		movs	r2, #192
 1741 0056 4263     		str	r2, [r0, #52]
 769:Src/main.c    ****   hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 1742              		.loc 1 769 0
 1743 0058 8363     		str	r3, [r0, #56]
 770:Src/main.c    ****   hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 1744              		.loc 1 770 0
 1745 005a C363     		str	r3, [r0, #60]
 771:Src/main.c    ****   hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 1746              		.loc 1 771 0
 1747 005c 0122     		movs	r2, #1
 1748 005e 8260     		str	r2, [r0, #8]
 772:Src/main.c    ****   hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 1749              		.loc 1 772 0
 1750 0060 0361     		str	r3, [r0, #16]
 773:Src/main.c    ****   hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 1751              		.loc 1 773 0
 1752 0062 8361     		str	r3, [r0, #24]
 774:Src/main.c    ****   hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 1753              		.loc 1 774 0
 1754 0064 C360     		str	r3, [r0, #12]
 775:Src/main.c    ****   hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 1755              		.loc 1 775 0
 1756 0066 4362     		str	r3, [r0, #36]
 776:Src/main.c    ****   hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 1757              		.loc 1 776 0
 1758 0068 8362     		str	r3, [r0, #40]
 777:Src/main.c    ****   hsai_BlockB2.FrameInit.FrameLength = 8;
 1759              		.loc 1 777 0
 1760 006a C362     		str	r3, [r0, #44]
 778:Src/main.c    ****   hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 1761              		.loc 1 778 0
 1762 006c 0821     		movs	r1, #8
 1763 006e 0164     		str	r1, [r0, #64]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 62


 779:Src/main.c    ****   hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 1764              		.loc 1 779 0
 1765 0070 4264     		str	r2, [r0, #68]
 780:Src/main.c    ****   hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 1766              		.loc 1 780 0
 1767 0072 8364     		str	r3, [r0, #72]
 781:Src/main.c    ****   hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 1768              		.loc 1 781 0
 1769 0074 C364     		str	r3, [r0, #76]
 782:Src/main.c    ****   hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 1770              		.loc 1 782 0
 1771 0076 0365     		str	r3, [r0, #80]
 783:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 1772              		.loc 1 783 0
 1773 0078 4365     		str	r3, [r0, #84]
 784:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotNumber = 1;
 1774              		.loc 1 784 0
 1775 007a 8365     		str	r3, [r0, #88]
 785:Src/main.c    ****   hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 1776              		.loc 1 785 0
 1777 007c C265     		str	r2, [r0, #92]
 786:Src/main.c    ****   if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK)
 1778              		.loc 1 786 0
 1779 007e 0366     		str	r3, [r0, #96]
 787:Src/main.c    ****   {
 1780              		.loc 1 787 0
 1781 0080 FFF7FEFF 		bl	HAL_SAI_Init
 1782              	.LVL88:
 1783 0084 28B9     		cbnz	r0, .L120
 1784 0086 08BD     		pop	{r3, pc}
 1785              	.L119:
 762:Src/main.c    ****   }
 1786              		.loc 1 762 0
 1787 0088 40F2FA21 		movw	r1, #762
 1788 008c 0848     		ldr	r0, .L121+20
 1789 008e FFF7FEFF 		bl	_Error_Handler
 1790              	.LVL89:
 1791              	.L120:
 789:Src/main.c    ****   }
 1792              		.loc 1 789 0
 1793 0092 40F21531 		movw	r1, #789
 1794 0096 0648     		ldr	r0, .L121+20
 1795 0098 FFF7FEFF 		bl	_Error_Handler
 1796              	.LVL90:
 1797              	.L122:
 1798              		.align	2
 1799              	.L121:
 1800 009c 00000000 		.word	hsai_BlockA2
 1801 00a0 045C0140 		.word	1073830916
 1802 00a4 00EE0200 		.word	192000
 1803 00a8 00000000 		.word	hsai_BlockB2
 1804 00ac 245C0140 		.word	1073830948
 1805 00b0 00000000 		.word	.LC7
 1806              		.cfi_endproc
 1807              	.LFE154:
 1809              		.section	.text.MX_SPDIFRX_Init,"ax",%progbits
 1810              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 63


 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1814              		.fpu fpv5-sp-d16
 1816              	MX_SPDIFRX_Init:
 1817              	.LFB156:
 810:Src/main.c    **** 
 1818              		.loc 1 810 0
 1819              		.cfi_startproc
 1820              		@ args = 0, pretend = 0, frame = 0
 1821              		@ frame_needed = 0, uses_anonymous_args = 0
 1822 0000 08B5     		push	{r3, lr}
 1823              	.LCFI28:
 1824              		.cfi_def_cfa_offset 8
 1825              		.cfi_offset 3, -8
 1826              		.cfi_offset 14, -4
 812:Src/main.c    ****   hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 1827              		.loc 1 812 0
 1828 0002 0C48     		ldr	r0, .L127
 1829 0004 4FF04023 		mov	r3, #1073758208
 1830 0008 0360     		str	r3, [r0]
 813:Src/main.c    ****   hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 1831              		.loc 1 813 0
 1832 000a 0023     		movs	r3, #0
 1833 000c 4360     		str	r3, [r0, #4]
 814:Src/main.c    ****   hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 1834              		.loc 1 814 0
 1835 000e 8360     		str	r3, [r0, #8]
 815:Src/main.c    ****   hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 1836              		.loc 1 815 0
 1837 0010 C360     		str	r3, [r0, #12]
 816:Src/main.c    ****   hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 1838              		.loc 1 816 0
 1839 0012 0361     		str	r3, [r0, #16]
 817:Src/main.c    ****   hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 1840              		.loc 1 817 0
 1841 0014 4361     		str	r3, [r0, #20]
 818:Src/main.c    ****   hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 1842              		.loc 1 818 0
 1843 0016 8361     		str	r3, [r0, #24]
 819:Src/main.c    ****   hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 1844              		.loc 1 819 0
 1845 0018 C361     		str	r3, [r0, #28]
 820:Src/main.c    ****   hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 1846              		.loc 1 820 0
 1847 001a 0362     		str	r3, [r0, #32]
 821:Src/main.c    ****   hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 1848              		.loc 1 821 0
 1849 001c 4362     		str	r3, [r0, #36]
 822:Src/main.c    ****   if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK)
 1850              		.loc 1 822 0
 1851 001e 8362     		str	r3, [r0, #40]
 823:Src/main.c    ****   {
 1852              		.loc 1 823 0
 1853 0020 FFF7FEFF 		bl	HAL_SPDIFRX_Init
 1854              	.LVL91:
 1855 0024 00B9     		cbnz	r0, .L126
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 64


 1856 0026 08BD     		pop	{r3, pc}
 1857              	.L126:
 825:Src/main.c    ****   }
 1858              		.loc 1 825 0
 1859 0028 40F23931 		movw	r1, #825
 1860 002c 0248     		ldr	r0, .L127+4
 1861 002e FFF7FEFF 		bl	_Error_Handler
 1862              	.LVL92:
 1863              	.L128:
 1864 0032 00BF     		.align	2
 1865              	.L127:
 1866 0034 00000000 		.word	hspdif
 1867 0038 00000000 		.word	.LC7
 1868              		.cfi_endproc
 1869              	.LFE156:
 1871              		.section	.text.MX_SPI2_Init,"ax",%progbits
 1872              		.align	1
 1873              		.syntax unified
 1874              		.thumb
 1875              		.thumb_func
 1876              		.fpu fpv5-sp-d16
 1878              	MX_SPI2_Init:
 1879              	.LFB157:
 832:Src/main.c    **** 
 1880              		.loc 1 832 0
 1881              		.cfi_startproc
 1882              		@ args = 0, pretend = 0, frame = 0
 1883              		@ frame_needed = 0, uses_anonymous_args = 0
 1884 0000 08B5     		push	{r3, lr}
 1885              	.LCFI29:
 1886              		.cfi_def_cfa_offset 8
 1887              		.cfi_offset 3, -8
 1888              		.cfi_offset 14, -4
 835:Src/main.c    ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 1889              		.loc 1 835 0
 1890 0002 1148     		ldr	r0, .L133
 1891 0004 114B     		ldr	r3, .L133+4
 1892 0006 0360     		str	r3, [r0]
 836:Src/main.c    ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 1893              		.loc 1 836 0
 1894 0008 4FF48273 		mov	r3, #260
 1895 000c 4360     		str	r3, [r0, #4]
 837:Src/main.c    ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 1896              		.loc 1 837 0
 1897 000e 0023     		movs	r3, #0
 1898 0010 8360     		str	r3, [r0, #8]
 838:Src/main.c    ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 1899              		.loc 1 838 0
 1900 0012 4FF44072 		mov	r2, #768
 1901 0016 C260     		str	r2, [r0, #12]
 839:Src/main.c    ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 1902              		.loc 1 839 0
 1903 0018 0361     		str	r3, [r0, #16]
 840:Src/main.c    ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 1904              		.loc 1 840 0
 1905 001a 4361     		str	r3, [r0, #20]
 841:Src/main.c    ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 65


 1906              		.loc 1 841 0
 1907 001c 4FF40072 		mov	r2, #512
 1908 0020 8261     		str	r2, [r0, #24]
 842:Src/main.c    ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1909              		.loc 1 842 0
 1910 0022 C361     		str	r3, [r0, #28]
 843:Src/main.c    ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 1911              		.loc 1 843 0
 1912 0024 0362     		str	r3, [r0, #32]
 844:Src/main.c    ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1913              		.loc 1 844 0
 1914 0026 4362     		str	r3, [r0, #36]
 845:Src/main.c    ****   hspi2.Init.CRCPolynomial = 7;
 1915              		.loc 1 845 0
 1916 0028 8362     		str	r3, [r0, #40]
 846:Src/main.c    ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 1917              		.loc 1 846 0
 1918 002a 0722     		movs	r2, #7
 1919 002c C262     		str	r2, [r0, #44]
 847:Src/main.c    ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1920              		.loc 1 847 0
 1921 002e 0363     		str	r3, [r0, #48]
 848:Src/main.c    ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 1922              		.loc 1 848 0
 1923 0030 0823     		movs	r3, #8
 1924 0032 4363     		str	r3, [r0, #52]
 849:Src/main.c    ****   {
 1925              		.loc 1 849 0
 1926 0034 FFF7FEFF 		bl	HAL_SPI_Init
 1927              	.LVL93:
 1928 0038 00B9     		cbnz	r0, .L132
 1929 003a 08BD     		pop	{r3, pc}
 1930              	.L132:
 851:Src/main.c    ****   }
 1931              		.loc 1 851 0
 1932 003c 40F25331 		movw	r1, #851
 1933 0040 0348     		ldr	r0, .L133+8
 1934 0042 FFF7FEFF 		bl	_Error_Handler
 1935              	.LVL94:
 1936              	.L134:
 1937 0046 00BF     		.align	2
 1938              	.L133:
 1939 0048 00000000 		.word	hspi2
 1940 004c 00380040 		.word	1073756160
 1941 0050 00000000 		.word	.LC7
 1942              		.cfi_endproc
 1943              	.LFE157:
 1945              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1946              		.align	1
 1947              		.syntax unified
 1948              		.thumb
 1949              		.thumb_func
 1950              		.fpu fpv5-sp-d16
 1952              	MX_TIM1_Init:
 1953              	.LFB158:
 858:Src/main.c    **** 
 1954              		.loc 1 858 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 66


 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 104
 1957              		@ frame_needed = 0, uses_anonymous_args = 0
 1958 0000 00B5     		push	{lr}
 1959              	.LCFI30:
 1960              		.cfi_def_cfa_offset 4
 1961              		.cfi_offset 14, -4
 1962 0002 9BB0     		sub	sp, sp, #108
 1963              	.LCFI31:
 1964              		.cfi_def_cfa_offset 112
 865:Src/main.c    ****   htim1.Init.Prescaler = 0;
 1965              		.loc 1 865 0
 1966 0004 3748     		ldr	r0, .L149
 1967 0006 384B     		ldr	r3, .L149+4
 1968 0008 0360     		str	r3, [r0]
 866:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1969              		.loc 1 866 0
 1970 000a 0023     		movs	r3, #0
 1971 000c 4360     		str	r3, [r0, #4]
 867:Src/main.c    ****   htim1.Init.Period = 0;
 1972              		.loc 1 867 0
 1973 000e 8360     		str	r3, [r0, #8]
 868:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1974              		.loc 1 868 0
 1975 0010 C360     		str	r3, [r0, #12]
 869:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 1976              		.loc 1 869 0
 1977 0012 0361     		str	r3, [r0, #16]
 870:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1978              		.loc 1 870 0
 1979 0014 4361     		str	r3, [r0, #20]
 871:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1980              		.loc 1 871 0
 1981 0016 8361     		str	r3, [r0, #24]
 872:Src/main.c    ****   {
 1982              		.loc 1 872 0
 1983 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1984              	.LVL95:
 1985 001c 0028     		cmp	r0, #0
 1986 001e 42D1     		bne	.L143
 877:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1987              		.loc 1 877 0
 1988 0020 1AA9     		add	r1, sp, #104
 1989 0022 4FF48053 		mov	r3, #4096
 1990 0026 41F8103D 		str	r3, [r1, #-16]!
 878:Src/main.c    ****   {
 1991              		.loc 1 878 0
 1992 002a 2E48     		ldr	r0, .L149
 1993 002c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1994              	.LVL96:
 1995 0030 0028     		cmp	r0, #0
 1996 0032 3DD1     		bne	.L144
 883:Src/main.c    ****   {
 1997              		.loc 1 883 0
 1998 0034 2B48     		ldr	r0, .L149
 1999 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2000              	.LVL97:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 67


 2001 003a 0028     		cmp	r0, #0
 2002 003c 3DD1     		bne	.L145
 888:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2003              		.loc 1 888 0
 2004 003e 0023     		movs	r3, #0
 2005 0040 1393     		str	r3, [sp, #76]
 889:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2006              		.loc 1 889 0
 2007 0042 1493     		str	r3, [sp, #80]
 890:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 2008              		.loc 1 890 0
 2009 0044 1593     		str	r3, [sp, #84]
 891:Src/main.c    ****   {
 2010              		.loc 1 891 0
 2011 0046 13A9     		add	r1, sp, #76
 2012 0048 2648     		ldr	r0, .L149
 2013 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2014              	.LVL98:
 2015 004e 0028     		cmp	r0, #0
 2016 0050 38D1     		bne	.L146
 896:Src/main.c    ****   sConfigOC.Pulse = 0;
 2017              		.loc 1 896 0
 2018 0052 6023     		movs	r3, #96
 2019 0054 0C93     		str	r3, [sp, #48]
 897:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2020              		.loc 1 897 0
 2021 0056 0022     		movs	r2, #0
 2022 0058 0D92     		str	r2, [sp, #52]
 898:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 2023              		.loc 1 898 0
 2024 005a 0E92     		str	r2, [sp, #56]
 899:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2025              		.loc 1 899 0
 2026 005c 0F92     		str	r2, [sp, #60]
 900:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 2027              		.loc 1 900 0
 2028 005e 1092     		str	r2, [sp, #64]
 901:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 2029              		.loc 1 901 0
 2030 0060 1192     		str	r2, [sp, #68]
 902:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2031              		.loc 1 902 0
 2032 0062 1292     		str	r2, [sp, #72]
 903:Src/main.c    ****   {
 2033              		.loc 1 903 0
 2034 0064 0CA9     		add	r1, sp, #48
 2035 0066 1F48     		ldr	r0, .L149
 2036 0068 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2037              	.LVL99:
 2038 006c 0028     		cmp	r0, #0
 2039 006e 2ED1     		bne	.L147
 908:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 2040              		.loc 1 908 0
 2041 0070 0023     		movs	r3, #0
 2042 0072 0193     		str	r3, [sp, #4]
 909:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 2043              		.loc 1 909 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 68


 2044 0074 0293     		str	r3, [sp, #8]
 910:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 2045              		.loc 1 910 0
 2046 0076 0393     		str	r3, [sp, #12]
 911:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 2047              		.loc 1 911 0
 2048 0078 0493     		str	r3, [sp, #16]
 912:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 2049              		.loc 1 912 0
 2050 007a 0593     		str	r3, [sp, #20]
 913:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 2051              		.loc 1 913 0
 2052 007c 4FF40052 		mov	r2, #8192
 2053 0080 0692     		str	r2, [sp, #24]
 914:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 2054              		.loc 1 914 0
 2055 0082 0793     		str	r3, [sp, #28]
 915:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 2056              		.loc 1 915 0
 2057 0084 0893     		str	r3, [sp, #32]
 916:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 2058              		.loc 1 916 0
 2059 0086 4FF00072 		mov	r2, #33554432
 2060 008a 0992     		str	r2, [sp, #36]
 917:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 2061              		.loc 1 917 0
 2062 008c 0A93     		str	r3, [sp, #40]
 918:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 2063              		.loc 1 918 0
 2064 008e 0B93     		str	r3, [sp, #44]
 919:Src/main.c    ****   {
 2065              		.loc 1 919 0
 2066 0090 01A9     		add	r1, sp, #4
 2067 0092 1448     		ldr	r0, .L149
 2068 0094 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 2069              	.LVL100:
 2070 0098 F0B9     		cbnz	r0, .L148
 924:Src/main.c    **** 
 2071              		.loc 1 924 0
 2072 009a 1248     		ldr	r0, .L149
 2073 009c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2074              	.LVL101:
 926:Src/main.c    **** 
 2075              		.loc 1 926 0
 2076 00a0 1BB0     		add	sp, sp, #108
 2077              	.LCFI32:
 2078              		.cfi_remember_state
 2079              		.cfi_def_cfa_offset 4
 2080              		@ sp needed
 2081 00a2 5DF804FB 		ldr	pc, [sp], #4
 2082              	.L143:
 2083              	.LCFI33:
 2084              		.cfi_restore_state
 874:Src/main.c    ****   }
 2085              		.loc 1 874 0
 2086 00a6 40F26A31 		movw	r1, #874
 2087 00aa 1048     		ldr	r0, .L149+8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 69


 2088 00ac FFF7FEFF 		bl	_Error_Handler
 2089              	.LVL102:
 2090              	.L144:
 880:Src/main.c    ****   }
 2091              		.loc 1 880 0
 2092 00b0 4FF45C71 		mov	r1, #880
 2093 00b4 0D48     		ldr	r0, .L149+8
 2094 00b6 FFF7FEFF 		bl	_Error_Handler
 2095              	.LVL103:
 2096              	.L145:
 885:Src/main.c    ****   }
 2097              		.loc 1 885 0
 2098 00ba 40F27531 		movw	r1, #885
 2099 00be 0B48     		ldr	r0, .L149+8
 2100 00c0 FFF7FEFF 		bl	_Error_Handler
 2101              	.LVL104:
 2102              	.L146:
 893:Src/main.c    ****   }
 2103              		.loc 1 893 0
 2104 00c4 40F27D31 		movw	r1, #893
 2105 00c8 0848     		ldr	r0, .L149+8
 2106 00ca FFF7FEFF 		bl	_Error_Handler
 2107              	.LVL105:
 2108              	.L147:
 905:Src/main.c    ****   }
 2109              		.loc 1 905 0
 2110 00ce 40F28931 		movw	r1, #905
 2111 00d2 0648     		ldr	r0, .L149+8
 2112 00d4 FFF7FEFF 		bl	_Error_Handler
 2113              	.LVL106:
 2114              	.L148:
 921:Src/main.c    ****   }
 2115              		.loc 1 921 0
 2116 00d8 40F29931 		movw	r1, #921
 2117 00dc 0348     		ldr	r0, .L149+8
 2118 00de FFF7FEFF 		bl	_Error_Handler
 2119              	.LVL107:
 2120              	.L150:
 2121 00e2 00BF     		.align	2
 2122              	.L149:
 2123 00e4 00000000 		.word	htim1
 2124 00e8 00000140 		.word	1073807360
 2125 00ec 00000000 		.word	.LC7
 2126              		.cfi_endproc
 2127              	.LFE158:
 2129              		.section	.text.MX_TIM2_Init,"ax",%progbits
 2130              		.align	1
 2131              		.syntax unified
 2132              		.thumb
 2133              		.thumb_func
 2134              		.fpu fpv5-sp-d16
 2136              	MX_TIM2_Init:
 2137              	.LFB159:
 930:Src/main.c    **** 
 2138              		.loc 1 930 0
 2139              		.cfi_startproc
 2140              		@ args = 0, pretend = 0, frame = 56
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 70


 2141              		@ frame_needed = 0, uses_anonymous_args = 0
 2142 0000 00B5     		push	{lr}
 2143              	.LCFI34:
 2144              		.cfi_def_cfa_offset 4
 2145              		.cfi_offset 14, -4
 2146 0002 8FB0     		sub	sp, sp, #60
 2147              	.LCFI35:
 2148              		.cfi_def_cfa_offset 64
 936:Src/main.c    ****   htim2.Init.Prescaler = 0;
 2149              		.loc 1 936 0
 2150 0004 2548     		ldr	r0, .L163
 2151 0006 4FF08043 		mov	r3, #1073741824
 2152 000a 0360     		str	r3, [r0]
 937:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2153              		.loc 1 937 0
 2154 000c 0023     		movs	r3, #0
 2155 000e 4360     		str	r3, [r0, #4]
 938:Src/main.c    ****   htim2.Init.Period = 0;
 2156              		.loc 1 938 0
 2157 0010 8360     		str	r3, [r0, #8]
 939:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2158              		.loc 1 939 0
 2159 0012 C360     		str	r3, [r0, #12]
 940:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2160              		.loc 1 940 0
 2161 0014 0361     		str	r3, [r0, #16]
 941:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 2162              		.loc 1 941 0
 2163 0016 8361     		str	r3, [r0, #24]
 942:Src/main.c    ****   {
 2164              		.loc 1 942 0
 2165 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2166              	.LVL108:
 2167 001c 28BB     		cbnz	r0, .L158
 947:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 2168              		.loc 1 947 0
 2169 001e 0EA9     		add	r1, sp, #56
 2170 0020 4FF48053 		mov	r3, #4096
 2171 0024 41F8103D 		str	r3, [r1, #-16]!
 948:Src/main.c    ****   {
 2172              		.loc 1 948 0
 2173 0028 1C48     		ldr	r0, .L163
 2174 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2175              	.LVL109:
 2176 002e 08BB     		cbnz	r0, .L159
 953:Src/main.c    ****   {
 2177              		.loc 1 953 0
 2178 0030 1A48     		ldr	r0, .L163
 2179 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2180              	.LVL110:
 2181 0036 10BB     		cbnz	r0, .L160
 958:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2182              		.loc 1 958 0
 2183 0038 0023     		movs	r3, #0
 2184 003a 0793     		str	r3, [sp, #28]
 959:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2185              		.loc 1 959 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 71


 2186 003c 0993     		str	r3, [sp, #36]
 960:Src/main.c    ****   {
 2187              		.loc 1 960 0
 2188 003e 07A9     		add	r1, sp, #28
 2189 0040 1648     		ldr	r0, .L163
 2190 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2191              	.LVL111:
 2192 0046 F8B9     		cbnz	r0, .L161
 965:Src/main.c    ****   sConfigOC.Pulse = 0;
 2193              		.loc 1 965 0
 2194 0048 6023     		movs	r3, #96
 2195 004a 0093     		str	r3, [sp]
 966:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2196              		.loc 1 966 0
 2197 004c 0022     		movs	r2, #0
 2198 004e 0192     		str	r2, [sp, #4]
 967:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2199              		.loc 1 967 0
 2200 0050 0292     		str	r2, [sp, #8]
 968:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2201              		.loc 1 968 0
 2202 0052 0492     		str	r2, [sp, #16]
 969:Src/main.c    ****   {
 2203              		.loc 1 969 0
 2204 0054 6946     		mov	r1, sp
 2205 0056 1148     		ldr	r0, .L163
 2206 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2207              	.LVL112:
 2208 005c C8B9     		cbnz	r0, .L162
 974:Src/main.c    **** 
 2209              		.loc 1 974 0
 2210 005e 0F48     		ldr	r0, .L163
 2211 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2212              	.LVL113:
 976:Src/main.c    **** 
 2213              		.loc 1 976 0
 2214 0064 0FB0     		add	sp, sp, #60
 2215              	.LCFI36:
 2216              		.cfi_remember_state
 2217              		.cfi_def_cfa_offset 4
 2218              		@ sp needed
 2219 0066 5DF804FB 		ldr	pc, [sp], #4
 2220              	.L158:
 2221              	.LCFI37:
 2222              		.cfi_restore_state
 944:Src/main.c    ****   }
 2223              		.loc 1 944 0
 2224 006a 4FF46C71 		mov	r1, #944
 2225 006e 0C48     		ldr	r0, .L163+4
 2226 0070 FFF7FEFF 		bl	_Error_Handler
 2227              	.LVL114:
 2228              	.L159:
 950:Src/main.c    ****   }
 2229              		.loc 1 950 0
 2230 0074 40F2B631 		movw	r1, #950
 2231 0078 0948     		ldr	r0, .L163+4
 2232 007a FFF7FEFF 		bl	_Error_Handler
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 72


 2233              	.LVL115:
 2234              	.L160:
 955:Src/main.c    ****   }
 2235              		.loc 1 955 0
 2236 007e 40F2BB31 		movw	r1, #955
 2237 0082 0748     		ldr	r0, .L163+4
 2238 0084 FFF7FEFF 		bl	_Error_Handler
 2239              	.LVL116:
 2240              	.L161:
 962:Src/main.c    ****   }
 2241              		.loc 1 962 0
 2242 0088 40F2C231 		movw	r1, #962
 2243 008c 0448     		ldr	r0, .L163+4
 2244 008e FFF7FEFF 		bl	_Error_Handler
 2245              	.LVL117:
 2246              	.L162:
 971:Src/main.c    ****   }
 2247              		.loc 1 971 0
 2248 0092 40F2CB31 		movw	r1, #971
 2249 0096 0248     		ldr	r0, .L163+4
 2250 0098 FFF7FEFF 		bl	_Error_Handler
 2251              	.LVL118:
 2252              	.L164:
 2253              		.align	2
 2254              	.L163:
 2255 009c 00000000 		.word	htim2
 2256 00a0 00000000 		.word	.LC7
 2257              		.cfi_endproc
 2258              	.LFE159:
 2260              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2261              		.align	1
 2262              		.syntax unified
 2263              		.thumb
 2264              		.thumb_func
 2265              		.fpu fpv5-sp-d16
 2267              	MX_TIM3_Init:
 2268              	.LFB160:
 980:Src/main.c    **** 
 2269              		.loc 1 980 0
 2270              		.cfi_startproc
 2271              		@ args = 0, pretend = 0, frame = 56
 2272              		@ frame_needed = 0, uses_anonymous_args = 0
 2273 0000 00B5     		push	{lr}
 2274              	.LCFI38:
 2275              		.cfi_def_cfa_offset 4
 2276              		.cfi_offset 14, -4
 2277 0002 8FB0     		sub	sp, sp, #60
 2278              	.LCFI39:
 2279              		.cfi_def_cfa_offset 64
 986:Src/main.c    ****   htim3.Init.Prescaler = 0;
 2280              		.loc 1 986 0
 2281 0004 2548     		ldr	r0, .L177
 2282 0006 264B     		ldr	r3, .L177+4
 2283 0008 0360     		str	r3, [r0]
 987:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2284              		.loc 1 987 0
 2285 000a 0023     		movs	r3, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 73


 2286 000c 4360     		str	r3, [r0, #4]
 988:Src/main.c    ****   htim3.Init.Period = 0;
 2287              		.loc 1 988 0
 2288 000e 8360     		str	r3, [r0, #8]
 989:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2289              		.loc 1 989 0
 2290 0010 C360     		str	r3, [r0, #12]
 990:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2291              		.loc 1 990 0
 2292 0012 0361     		str	r3, [r0, #16]
 991:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2293              		.loc 1 991 0
 2294 0014 8361     		str	r3, [r0, #24]
 992:Src/main.c    ****   {
 2295              		.loc 1 992 0
 2296 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2297              	.LVL119:
 2298 001a 28BB     		cbnz	r0, .L172
 997:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2299              		.loc 1 997 0
 2300 001c 0EA9     		add	r1, sp, #56
 2301 001e 4FF48053 		mov	r3, #4096
 2302 0022 41F8103D 		str	r3, [r1, #-16]!
 998:Src/main.c    ****   {
 2303              		.loc 1 998 0
 2304 0026 1D48     		ldr	r0, .L177
 2305 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2306              	.LVL120:
 2307 002c 08BB     		cbnz	r0, .L173
1003:Src/main.c    ****   {
 2308              		.loc 1 1003 0
 2309 002e 1B48     		ldr	r0, .L177
 2310 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2311              	.LVL121:
 2312 0034 10BB     		cbnz	r0, .L174
1008:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2313              		.loc 1 1008 0
 2314 0036 0023     		movs	r3, #0
 2315 0038 0793     		str	r3, [sp, #28]
1009:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2316              		.loc 1 1009 0
 2317 003a 0993     		str	r3, [sp, #36]
1010:Src/main.c    ****   {
 2318              		.loc 1 1010 0
 2319 003c 07A9     		add	r1, sp, #28
 2320 003e 1748     		ldr	r0, .L177
 2321 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2322              	.LVL122:
 2323 0044 F8B9     		cbnz	r0, .L175
1015:Src/main.c    ****   sConfigOC.Pulse = 0;
 2324              		.loc 1 1015 0
 2325 0046 6023     		movs	r3, #96
 2326 0048 0093     		str	r3, [sp]
1016:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2327              		.loc 1 1016 0
 2328 004a 0022     		movs	r2, #0
 2329 004c 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 74


1017:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2330              		.loc 1 1017 0
 2331 004e 0292     		str	r2, [sp, #8]
1018:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2332              		.loc 1 1018 0
 2333 0050 0492     		str	r2, [sp, #16]
1019:Src/main.c    ****   {
 2334              		.loc 1 1019 0
 2335 0052 6946     		mov	r1, sp
 2336 0054 1148     		ldr	r0, .L177
 2337 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2338              	.LVL123:
 2339 005a C8B9     		cbnz	r0, .L176
1024:Src/main.c    **** 
 2340              		.loc 1 1024 0
 2341 005c 0F48     		ldr	r0, .L177
 2342 005e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2343              	.LVL124:
1026:Src/main.c    **** 
 2344              		.loc 1 1026 0
 2345 0062 0FB0     		add	sp, sp, #60
 2346              	.LCFI40:
 2347              		.cfi_remember_state
 2348              		.cfi_def_cfa_offset 4
 2349              		@ sp needed
 2350 0064 5DF804FB 		ldr	pc, [sp], #4
 2351              	.L172:
 2352              	.LCFI41:
 2353              		.cfi_restore_state
 994:Src/main.c    ****   }
 2354              		.loc 1 994 0
 2355 0068 40F2E231 		movw	r1, #994
 2356 006c 0D48     		ldr	r0, .L177+8
 2357 006e FFF7FEFF 		bl	_Error_Handler
 2358              	.LVL125:
 2359              	.L173:
1000:Src/main.c    ****   }
 2360              		.loc 1 1000 0
 2361 0072 4FF47A71 		mov	r1, #1000
 2362 0076 0B48     		ldr	r0, .L177+8
 2363 0078 FFF7FEFF 		bl	_Error_Handler
 2364              	.LVL126:
 2365              	.L174:
1005:Src/main.c    ****   }
 2366              		.loc 1 1005 0
 2367 007c 40F2ED31 		movw	r1, #1005
 2368 0080 0848     		ldr	r0, .L177+8
 2369 0082 FFF7FEFF 		bl	_Error_Handler
 2370              	.LVL127:
 2371              	.L175:
1012:Src/main.c    ****   }
 2372              		.loc 1 1012 0
 2373 0086 4FF47D71 		mov	r1, #1012
 2374 008a 0648     		ldr	r0, .L177+8
 2375 008c FFF7FEFF 		bl	_Error_Handler
 2376              	.LVL128:
 2377              	.L176:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 75


1021:Src/main.c    ****   }
 2378              		.loc 1 1021 0
 2379 0090 40F2FD31 		movw	r1, #1021
 2380 0094 0348     		ldr	r0, .L177+8
 2381 0096 FFF7FEFF 		bl	_Error_Handler
 2382              	.LVL129:
 2383              	.L178:
 2384 009a 00BF     		.align	2
 2385              	.L177:
 2386 009c 00000000 		.word	htim3
 2387 00a0 00040040 		.word	1073742848
 2388 00a4 00000000 		.word	.LC7
 2389              		.cfi_endproc
 2390              	.LFE160:
 2392              		.section	.text.MX_TIM5_Init,"ax",%progbits
 2393              		.align	1
 2394              		.syntax unified
 2395              		.thumb
 2396              		.thumb_func
 2397              		.fpu fpv5-sp-d16
 2399              	MX_TIM5_Init:
 2400              	.LFB161:
1030:Src/main.c    **** 
 2401              		.loc 1 1030 0
 2402              		.cfi_startproc
 2403              		@ args = 0, pretend = 0, frame = 56
 2404              		@ frame_needed = 0, uses_anonymous_args = 0
 2405 0000 00B5     		push	{lr}
 2406              	.LCFI42:
 2407              		.cfi_def_cfa_offset 4
 2408              		.cfi_offset 14, -4
 2409 0002 8FB0     		sub	sp, sp, #60
 2410              	.LCFI43:
 2411              		.cfi_def_cfa_offset 64
1036:Src/main.c    ****   htim5.Init.Prescaler = 0;
 2412              		.loc 1 1036 0
 2413 0004 2548     		ldr	r0, .L191
 2414 0006 264B     		ldr	r3, .L191+4
 2415 0008 0360     		str	r3, [r0]
1037:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2416              		.loc 1 1037 0
 2417 000a 0023     		movs	r3, #0
 2418 000c 4360     		str	r3, [r0, #4]
1038:Src/main.c    ****   htim5.Init.Period = 0;
 2419              		.loc 1 1038 0
 2420 000e 8360     		str	r3, [r0, #8]
1039:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2421              		.loc 1 1039 0
 2422 0010 C360     		str	r3, [r0, #12]
1040:Src/main.c    ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2423              		.loc 1 1040 0
 2424 0012 0361     		str	r3, [r0, #16]
1041:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 2425              		.loc 1 1041 0
 2426 0014 8361     		str	r3, [r0, #24]
1042:Src/main.c    ****   {
 2427              		.loc 1 1042 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 76


 2428 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2429              	.LVL130:
 2430 001a 30BB     		cbnz	r0, .L186
1047:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 2431              		.loc 1 1047 0
 2432 001c 0EA9     		add	r1, sp, #56
 2433 001e 4FF48053 		mov	r3, #4096
 2434 0022 41F8103D 		str	r3, [r1, #-16]!
1048:Src/main.c    ****   {
 2435              		.loc 1 1048 0
 2436 0026 1D48     		ldr	r0, .L191
 2437 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2438              	.LVL131:
 2439 002c 10BB     		cbnz	r0, .L187
1053:Src/main.c    ****   {
 2440              		.loc 1 1053 0
 2441 002e 1B48     		ldr	r0, .L191
 2442 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2443              	.LVL132:
 2444 0034 18BB     		cbnz	r0, .L188
1058:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2445              		.loc 1 1058 0
 2446 0036 0023     		movs	r3, #0
 2447 0038 0793     		str	r3, [sp, #28]
1059:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 2448              		.loc 1 1059 0
 2449 003a 0993     		str	r3, [sp, #36]
1060:Src/main.c    ****   {
 2450              		.loc 1 1060 0
 2451 003c 07A9     		add	r1, sp, #28
 2452 003e 1748     		ldr	r0, .L191
 2453 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2454              	.LVL133:
 2455 0044 00BB     		cbnz	r0, .L189
1065:Src/main.c    ****   sConfigOC.Pulse = 0;
 2456              		.loc 1 1065 0
 2457 0046 6023     		movs	r3, #96
 2458 0048 0093     		str	r3, [sp]
1066:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2459              		.loc 1 1066 0
 2460 004a 0023     		movs	r3, #0
 2461 004c 0193     		str	r3, [sp, #4]
1067:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2462              		.loc 1 1067 0
 2463 004e 0293     		str	r3, [sp, #8]
1068:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2464              		.loc 1 1068 0
 2465 0050 0493     		str	r3, [sp, #16]
1069:Src/main.c    ****   {
 2466              		.loc 1 1069 0
 2467 0052 0C22     		movs	r2, #12
 2468 0054 6946     		mov	r1, sp
 2469 0056 1148     		ldr	r0, .L191
 2470 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2471              	.LVL134:
 2472 005c C8B9     		cbnz	r0, .L190
1074:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 77


 2473              		.loc 1 1074 0
 2474 005e 0F48     		ldr	r0, .L191
 2475 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2476              	.LVL135:
1076:Src/main.c    **** 
 2477              		.loc 1 1076 0
 2478 0064 0FB0     		add	sp, sp, #60
 2479              	.LCFI44:
 2480              		.cfi_remember_state
 2481              		.cfi_def_cfa_offset 4
 2482              		@ sp needed
 2483 0066 5DF804FB 		ldr	pc, [sp], #4
 2484              	.L186:
 2485              	.LCFI45:
 2486              		.cfi_restore_state
1044:Src/main.c    ****   }
 2487              		.loc 1 1044 0
 2488 006a 40F21441 		movw	r1, #1044
 2489 006e 0D48     		ldr	r0, .L191+8
 2490 0070 FFF7FEFF 		bl	_Error_Handler
 2491              	.LVL136:
 2492              	.L187:
1050:Src/main.c    ****   }
 2493              		.loc 1 1050 0
 2494 0074 40F21A41 		movw	r1, #1050
 2495 0078 0A48     		ldr	r0, .L191+8
 2496 007a FFF7FEFF 		bl	_Error_Handler
 2497              	.LVL137:
 2498              	.L188:
1055:Src/main.c    ****   }
 2499              		.loc 1 1055 0
 2500 007e 40F21F41 		movw	r1, #1055
 2501 0082 0848     		ldr	r0, .L191+8
 2502 0084 FFF7FEFF 		bl	_Error_Handler
 2503              	.LVL138:
 2504              	.L189:
1062:Src/main.c    ****   }
 2505              		.loc 1 1062 0
 2506 0088 40F22641 		movw	r1, #1062
 2507 008c 0548     		ldr	r0, .L191+8
 2508 008e FFF7FEFF 		bl	_Error_Handler
 2509              	.LVL139:
 2510              	.L190:
1071:Src/main.c    ****   }
 2511              		.loc 1 1071 0
 2512 0092 40F22F41 		movw	r1, #1071
 2513 0096 0348     		ldr	r0, .L191+8
 2514 0098 FFF7FEFF 		bl	_Error_Handler
 2515              	.LVL140:
 2516              	.L192:
 2517              		.align	2
 2518              	.L191:
 2519 009c 00000000 		.word	htim5
 2520 00a0 000C0040 		.word	1073744896
 2521 00a4 00000000 		.word	.LC7
 2522              		.cfi_endproc
 2523              	.LFE161:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 78


 2525              		.section	.text.MX_TIM8_Init,"ax",%progbits
 2526              		.align	1
 2527              		.syntax unified
 2528              		.thumb
 2529              		.thumb_func
 2530              		.fpu fpv5-sp-d16
 2532              	MX_TIM8_Init:
 2533              	.LFB163:
1105:Src/main.c    **** 
 2534              		.loc 1 1105 0
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 32
 2537              		@ frame_needed = 0, uses_anonymous_args = 0
 2538 0000 00B5     		push	{lr}
 2539              	.LCFI46:
 2540              		.cfi_def_cfa_offset 4
 2541              		.cfi_offset 14, -4
 2542 0002 89B0     		sub	sp, sp, #36
 2543              	.LCFI47:
 2544              		.cfi_def_cfa_offset 40
1110:Src/main.c    ****   htim8.Init.Prescaler = 0;
 2545              		.loc 1 1110 0
 2546 0004 1848     		ldr	r0, .L201
 2547 0006 194B     		ldr	r3, .L201+4
 2548 0008 0360     		str	r3, [r0]
1111:Src/main.c    ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 2549              		.loc 1 1111 0
 2550 000a 0023     		movs	r3, #0
 2551 000c 4360     		str	r3, [r0, #4]
1112:Src/main.c    ****   htim8.Init.Period = 0;
 2552              		.loc 1 1112 0
 2553 000e 8360     		str	r3, [r0, #8]
1113:Src/main.c    ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2554              		.loc 1 1113 0
 2555 0010 C360     		str	r3, [r0, #12]
1114:Src/main.c    ****   htim8.Init.RepetitionCounter = 0;
 2556              		.loc 1 1114 0
 2557 0012 0361     		str	r3, [r0, #16]
1115:Src/main.c    ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2558              		.loc 1 1115 0
 2559 0014 4361     		str	r3, [r0, #20]
1116:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 2560              		.loc 1 1116 0
 2561 0016 8361     		str	r3, [r0, #24]
1117:Src/main.c    ****   {
 2562              		.loc 1 1117 0
 2563 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2564              	.LVL141:
 2565 001c A0B9     		cbnz	r0, .L198
1122:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 2566              		.loc 1 1122 0
 2567 001e 08A9     		add	r1, sp, #32
 2568 0020 4FF48053 		mov	r3, #4096
 2569 0024 41F8103D 		str	r3, [r1, #-16]!
1123:Src/main.c    ****   {
 2570              		.loc 1 1123 0
 2571 0028 0F48     		ldr	r0, .L201
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 79


 2572 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2573              	.LVL142:
 2574 002e 80B9     		cbnz	r0, .L199
1128:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2575              		.loc 1 1128 0
 2576 0030 0023     		movs	r3, #0
 2577 0032 0193     		str	r3, [sp, #4]
1129:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2578              		.loc 1 1129 0
 2579 0034 0293     		str	r3, [sp, #8]
1130:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 2580              		.loc 1 1130 0
 2581 0036 0393     		str	r3, [sp, #12]
1131:Src/main.c    ****   {
 2582              		.loc 1 1131 0
 2583 0038 01A9     		add	r1, sp, #4
 2584 003a 0B48     		ldr	r0, .L201
 2585 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2586              	.LVL143:
 2587 0040 60B9     		cbnz	r0, .L200
1136:Src/main.c    **** 
 2588              		.loc 1 1136 0
 2589 0042 09B0     		add	sp, sp, #36
 2590              	.LCFI48:
 2591              		.cfi_remember_state
 2592              		.cfi_def_cfa_offset 4
 2593              		@ sp needed
 2594 0044 5DF804FB 		ldr	pc, [sp], #4
 2595              	.L198:
 2596              	.LCFI49:
 2597              		.cfi_restore_state
1119:Src/main.c    ****   }
 2598              		.loc 1 1119 0
 2599 0048 40F25F41 		movw	r1, #1119
 2600 004c 0848     		ldr	r0, .L201+8
 2601 004e FFF7FEFF 		bl	_Error_Handler
 2602              	.LVL144:
 2603              	.L199:
1125:Src/main.c    ****   }
 2604              		.loc 1 1125 0
 2605 0052 40F26541 		movw	r1, #1125
 2606 0056 0648     		ldr	r0, .L201+8
 2607 0058 FFF7FEFF 		bl	_Error_Handler
 2608              	.LVL145:
 2609              	.L200:
1133:Src/main.c    ****   }
 2610              		.loc 1 1133 0
 2611 005c 40F26D41 		movw	r1, #1133
 2612 0060 0348     		ldr	r0, .L201+8
 2613 0062 FFF7FEFF 		bl	_Error_Handler
 2614              	.LVL146:
 2615              	.L202:
 2616 0066 00BF     		.align	2
 2617              	.L201:
 2618 0068 00000000 		.word	htim8
 2619 006c 00040140 		.word	1073808384
 2620 0070 00000000 		.word	.LC7
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 80


 2621              		.cfi_endproc
 2622              	.LFE163:
 2624              		.section	.text.MX_TIM12_Init,"ax",%progbits
 2625              		.align	1
 2626              		.syntax unified
 2627              		.thumb
 2628              		.thumb_func
 2629              		.fpu fpv5-sp-d16
 2631              	MX_TIM12_Init:
 2632              	.LFB164:
1140:Src/main.c    **** 
 2633              		.loc 1 1140 0
 2634              		.cfi_startproc
 2635              		@ args = 0, pretend = 0, frame = 32
 2636              		@ frame_needed = 0, uses_anonymous_args = 0
 2637 0000 00B5     		push	{lr}
 2638              	.LCFI50:
 2639              		.cfi_def_cfa_offset 4
 2640              		.cfi_offset 14, -4
 2641 0002 89B0     		sub	sp, sp, #36
 2642              	.LCFI51:
 2643              		.cfi_def_cfa_offset 40
1144:Src/main.c    ****   htim12.Init.Prescaler = 0;
 2644              		.loc 1 1144 0
 2645 0004 1348     		ldr	r0, .L209
 2646 0006 144B     		ldr	r3, .L209+4
 2647 0008 0360     		str	r3, [r0]
1145:Src/main.c    ****   htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 2648              		.loc 1 1145 0
 2649 000a 0023     		movs	r3, #0
 2650 000c 4360     		str	r3, [r0, #4]
1146:Src/main.c    ****   htim12.Init.Period = 0;
 2651              		.loc 1 1146 0
 2652 000e 8360     		str	r3, [r0, #8]
1147:Src/main.c    ****   htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2653              		.loc 1 1147 0
 2654 0010 C360     		str	r3, [r0, #12]
1148:Src/main.c    ****   htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2655              		.loc 1 1148 0
 2656 0012 0361     		str	r3, [r0, #16]
1149:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 2657              		.loc 1 1149 0
 2658 0014 8361     		str	r3, [r0, #24]
1150:Src/main.c    ****   {
 2659              		.loc 1 1150 0
 2660 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2661              	.LVL147:
 2662 001a 80B9     		cbnz	r0, .L207
1155:Src/main.c    ****   sConfigOC.Pulse = 0;
 2663              		.loc 1 1155 0
 2664 001c 6023     		movs	r3, #96
 2665 001e 0193     		str	r3, [sp, #4]
1156:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2666              		.loc 1 1156 0
 2667 0020 0022     		movs	r2, #0
 2668 0022 0292     		str	r2, [sp, #8]
1157:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 81


 2669              		.loc 1 1157 0
 2670 0024 0392     		str	r2, [sp, #12]
1158:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2671              		.loc 1 1158 0
 2672 0026 0592     		str	r2, [sp, #20]
1159:Src/main.c    ****   {
 2673              		.loc 1 1159 0
 2674 0028 01A9     		add	r1, sp, #4
 2675 002a 0A48     		ldr	r0, .L209
 2676 002c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2677              	.LVL148:
 2678 0030 50B9     		cbnz	r0, .L208
1164:Src/main.c    **** 
 2679              		.loc 1 1164 0
 2680 0032 0848     		ldr	r0, .L209
 2681 0034 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2682              	.LVL149:
1166:Src/main.c    **** 
 2683              		.loc 1 1166 0
 2684 0038 09B0     		add	sp, sp, #36
 2685              	.LCFI52:
 2686              		.cfi_remember_state
 2687              		.cfi_def_cfa_offset 4
 2688              		@ sp needed
 2689 003a 5DF804FB 		ldr	pc, [sp], #4
 2690              	.L207:
 2691              	.LCFI53:
 2692              		.cfi_restore_state
1152:Src/main.c    ****   }
 2693              		.loc 1 1152 0
 2694 003e 4FF49061 		mov	r1, #1152
 2695 0042 0648     		ldr	r0, .L209+8
 2696 0044 FFF7FEFF 		bl	_Error_Handler
 2697              	.LVL150:
 2698              	.L208:
1161:Src/main.c    ****   }
 2699              		.loc 1 1161 0
 2700 0048 40F28941 		movw	r1, #1161
 2701 004c 0348     		ldr	r0, .L209+8
 2702 004e FFF7FEFF 		bl	_Error_Handler
 2703              	.LVL151:
 2704              	.L210:
 2705 0052 00BF     		.align	2
 2706              	.L209:
 2707 0054 00000000 		.word	htim12
 2708 0058 00180040 		.word	1073747968
 2709 005c 00000000 		.word	.LC7
 2710              		.cfi_endproc
 2711              	.LFE164:
 2713              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 2714              		.align	1
 2715              		.syntax unified
 2716              		.thumb
 2717              		.thumb_func
 2718              		.fpu fpv5-sp-d16
 2720              	MX_USART1_UART_Init:
 2721              	.LFB165:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 82


1170:Src/main.c    **** 
 2722              		.loc 1 1170 0
 2723              		.cfi_startproc
 2724              		@ args = 0, pretend = 0, frame = 0
 2725              		@ frame_needed = 0, uses_anonymous_args = 0
 2726 0000 08B5     		push	{r3, lr}
 2727              	.LCFI54:
 2728              		.cfi_def_cfa_offset 8
 2729              		.cfi_offset 3, -8
 2730              		.cfi_offset 14, -4
1172:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 2731              		.loc 1 1172 0
 2732 0002 0C48     		ldr	r0, .L215
 2733 0004 0C4B     		ldr	r3, .L215+4
 2734 0006 0360     		str	r3, [r0]
1173:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 2735              		.loc 1 1173 0
 2736 0008 4FF4E133 		mov	r3, #115200
 2737 000c 4360     		str	r3, [r0, #4]
1174:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 2738              		.loc 1 1174 0
 2739 000e 0023     		movs	r3, #0
 2740 0010 8360     		str	r3, [r0, #8]
1175:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 2741              		.loc 1 1175 0
 2742 0012 C360     		str	r3, [r0, #12]
1176:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 2743              		.loc 1 1176 0
 2744 0014 0361     		str	r3, [r0, #16]
1177:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2745              		.loc 1 1177 0
 2746 0016 0C22     		movs	r2, #12
 2747 0018 4261     		str	r2, [r0, #20]
1178:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 2748              		.loc 1 1178 0
 2749 001a 8361     		str	r3, [r0, #24]
1179:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2750              		.loc 1 1179 0
 2751 001c C361     		str	r3, [r0, #28]
1180:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2752              		.loc 1 1180 0
 2753 001e 0362     		str	r3, [r0, #32]
1181:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 2754              		.loc 1 1181 0
 2755 0020 4362     		str	r3, [r0, #36]
1182:Src/main.c    ****   {
 2756              		.loc 1 1182 0
 2757 0022 FFF7FEFF 		bl	HAL_UART_Init
 2758              	.LVL152:
 2759 0026 00B9     		cbnz	r0, .L214
 2760 0028 08BD     		pop	{r3, pc}
 2761              	.L214:
1184:Src/main.c    ****   }
 2762              		.loc 1 1184 0
 2763 002a 4FF49461 		mov	r1, #1184
 2764 002e 0348     		ldr	r0, .L215+8
 2765 0030 FFF7FEFF 		bl	_Error_Handler
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 83


 2766              	.LVL153:
 2767              	.L216:
 2768              		.align	2
 2769              	.L215:
 2770 0034 00000000 		.word	huart1
 2771 0038 00100140 		.word	1073811456
 2772 003c 00000000 		.word	.LC7
 2773              		.cfi_endproc
 2774              	.LFE165:
 2776              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 2777              		.align	1
 2778              		.syntax unified
 2779              		.thumb
 2780              		.thumb_func
 2781              		.fpu fpv5-sp-d16
 2783              	MX_USART6_UART_Init:
 2784              	.LFB166:
1191:Src/main.c    **** 
 2785              		.loc 1 1191 0
 2786              		.cfi_startproc
 2787              		@ args = 0, pretend = 0, frame = 0
 2788              		@ frame_needed = 0, uses_anonymous_args = 0
 2789 0000 08B5     		push	{r3, lr}
 2790              	.LCFI55:
 2791              		.cfi_def_cfa_offset 8
 2792              		.cfi_offset 3, -8
 2793              		.cfi_offset 14, -4
1193:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 2794              		.loc 1 1193 0
 2795 0002 0C48     		ldr	r0, .L221
 2796 0004 0C4B     		ldr	r3, .L221+4
 2797 0006 0360     		str	r3, [r0]
1194:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 2798              		.loc 1 1194 0
 2799 0008 4FF4E133 		mov	r3, #115200
 2800 000c 4360     		str	r3, [r0, #4]
1195:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 2801              		.loc 1 1195 0
 2802 000e 0023     		movs	r3, #0
 2803 0010 8360     		str	r3, [r0, #8]
1196:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 2804              		.loc 1 1196 0
 2805 0012 C360     		str	r3, [r0, #12]
1197:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 2806              		.loc 1 1197 0
 2807 0014 0361     		str	r3, [r0, #16]
1198:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2808              		.loc 1 1198 0
 2809 0016 0C22     		movs	r2, #12
 2810 0018 4261     		str	r2, [r0, #20]
1199:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 2811              		.loc 1 1199 0
 2812 001a 8361     		str	r3, [r0, #24]
1200:Src/main.c    ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2813              		.loc 1 1200 0
 2814 001c C361     		str	r3, [r0, #28]
1201:Src/main.c    ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 84


 2815              		.loc 1 1201 0
 2816 001e 0362     		str	r3, [r0, #32]
1202:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 2817              		.loc 1 1202 0
 2818 0020 4362     		str	r3, [r0, #36]
1203:Src/main.c    ****   {
 2819              		.loc 1 1203 0
 2820 0022 FFF7FEFF 		bl	HAL_UART_Init
 2821              	.LVL154:
 2822 0026 00B9     		cbnz	r0, .L220
 2823 0028 08BD     		pop	{r3, pc}
 2824              	.L220:
1205:Src/main.c    ****   }
 2825              		.loc 1 1205 0
 2826 002a 40F2B541 		movw	r1, #1205
 2827 002e 0348     		ldr	r0, .L221+8
 2828 0030 FFF7FEFF 		bl	_Error_Handler
 2829              	.LVL155:
 2830              	.L222:
 2831              		.align	2
 2832              	.L221:
 2833 0034 00000000 		.word	huart6
 2834 0038 00140140 		.word	1073812480
 2835 003c 00000000 		.word	.LC7
 2836              		.cfi_endproc
 2837              	.LFE166:
 2839              		.section	.text.MX_TIM7_Init,"ax",%progbits
 2840              		.align	1
 2841              		.syntax unified
 2842              		.thumb
 2843              		.thumb_func
 2844              		.fpu fpv5-sp-d16
 2846              	MX_TIM7_Init:
 2847              	.LFB162:
1080:Src/main.c    **** 
 2848              		.loc 1 1080 0
 2849              		.cfi_startproc
 2850              		@ args = 0, pretend = 0, frame = 16
 2851              		@ frame_needed = 0, uses_anonymous_args = 0
 2852 0000 00B5     		push	{lr}
 2853              	.LCFI56:
 2854              		.cfi_def_cfa_offset 4
 2855              		.cfi_offset 14, -4
 2856 0002 85B0     		sub	sp, sp, #20
 2857              	.LCFI57:
 2858              		.cfi_def_cfa_offset 24
1084:Src/main.c    ****   htim7.Init.Prescaler = 0;
 2859              		.loc 1 1084 0
 2860 0004 0F48     		ldr	r0, .L229
 2861 0006 104B     		ldr	r3, .L229+4
 2862 0008 0360     		str	r3, [r0]
1085:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 2863              		.loc 1 1085 0
 2864 000a 0023     		movs	r3, #0
 2865 000c 4360     		str	r3, [r0, #4]
1086:Src/main.c    ****   htim7.Init.Period = 0;
 2866              		.loc 1 1086 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 85


 2867 000e 8360     		str	r3, [r0, #8]
1087:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2868              		.loc 1 1087 0
 2869 0010 C360     		str	r3, [r0, #12]
1088:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 2870              		.loc 1 1088 0
 2871 0012 8361     		str	r3, [r0, #24]
1089:Src/main.c    ****   {
 2872              		.loc 1 1089 0
 2873 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2874              	.LVL156:
 2875 0018 50B9     		cbnz	r0, .L227
1094:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2876              		.loc 1 1094 0
 2877 001a 0023     		movs	r3, #0
 2878 001c 0193     		str	r3, [sp, #4]
1095:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 2879              		.loc 1 1095 0
 2880 001e 0393     		str	r3, [sp, #12]
1096:Src/main.c    ****   {
 2881              		.loc 1 1096 0
 2882 0020 01A9     		add	r1, sp, #4
 2883 0022 0848     		ldr	r0, .L229
 2884 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2885              	.LVL157:
 2886 0028 38B9     		cbnz	r0, .L228
1101:Src/main.c    **** 
 2887              		.loc 1 1101 0
 2888 002a 05B0     		add	sp, sp, #20
 2889              	.LCFI58:
 2890              		.cfi_remember_state
 2891              		.cfi_def_cfa_offset 4
 2892              		@ sp needed
 2893 002c 5DF804FB 		ldr	pc, [sp], #4
 2894              	.L227:
 2895              	.LCFI59:
 2896              		.cfi_restore_state
1091:Src/main.c    ****   }
 2897              		.loc 1 1091 0
 2898 0030 40F24341 		movw	r1, #1091
 2899 0034 0548     		ldr	r0, .L229+8
 2900 0036 FFF7FEFF 		bl	_Error_Handler
 2901              	.LVL158:
 2902              	.L228:
1098:Src/main.c    ****   }
 2903              		.loc 1 1098 0
 2904 003a 40F24A41 		movw	r1, #1098
 2905 003e 0348     		ldr	r0, .L229+8
 2906 0040 FFF7FEFF 		bl	_Error_Handler
 2907              	.LVL159:
 2908              	.L230:
 2909              		.align	2
 2910              	.L229:
 2911 0044 00000000 		.word	htim7
 2912 0048 00140040 		.word	1073746944
 2913 004c 00000000 		.word	.LC7
 2914              		.cfi_endproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 86


 2915              	.LFE162:
 2917              		.section	.text.SystemClock_Config,"ax",%progbits
 2918              		.align	1
 2919              		.global	SystemClock_Config
 2920              		.syntax unified
 2921              		.thumb
 2922              		.thumb_func
 2923              		.fpu fpv5-sp-d16
 2925              	SystemClock_Config:
 2926              	.LFB144:
 315:Src/main.c    **** 
 2927              		.loc 1 315 0
 2928              		.cfi_startproc
 2929              		@ args = 0, pretend = 0, frame = 208
 2930              		@ frame_needed = 0, uses_anonymous_args = 0
 2931 0000 00B5     		push	{lr}
 2932              	.LCFI60:
 2933              		.cfi_def_cfa_offset 4
 2934              		.cfi_offset 14, -4
 2935 0002 B5B0     		sub	sp, sp, #212
 2936              	.LCFI61:
 2937              		.cfi_def_cfa_offset 216
 2938              	.LBB13:
 323:Src/main.c    **** 
 2939              		.loc 1 323 0
 2940 0004 474B     		ldr	r3, .L241
 2941 0006 1A6C     		ldr	r2, [r3, #64]
 2942 0008 42F08052 		orr	r2, r2, #268435456
 2943 000c 1A64     		str	r2, [r3, #64]
 2944 000e 1B6C     		ldr	r3, [r3, #64]
 2945 0010 03F08053 		and	r3, r3, #268435456
 2946 0014 0093     		str	r3, [sp]
 2947 0016 009B     		ldr	r3, [sp]
 2948              	.LBE13:
 2949              	.LBB14:
 325:Src/main.c    **** 
 2950              		.loc 1 325 0
 2951 0018 434B     		ldr	r3, .L241+4
 2952 001a 1A68     		ldr	r2, [r3]
 2953 001c 42F44042 		orr	r2, r2, #49152
 2954 0020 1A60     		str	r2, [r3]
 2955 0022 1B68     		ldr	r3, [r3]
 2956 0024 03F44043 		and	r3, r3, #49152
 2957 0028 0193     		str	r3, [sp, #4]
 2958 002a 019B     		ldr	r3, [sp, #4]
 2959              	.LBE14:
 329:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2960              		.loc 1 329 0
 2961 002c 0923     		movs	r3, #9
 2962 002e 2893     		str	r3, [sp, #160]
 330:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 2963              		.loc 1 330 0
 2964 0030 4FF48033 		mov	r3, #65536
 2965 0034 2993     		str	r3, [sp, #164]
 331:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2966              		.loc 1 331 0
 2967 0036 0123     		movs	r3, #1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 87


 2968 0038 2D93     		str	r3, [sp, #180]
 332:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2969              		.loc 1 332 0
 2970 003a 0223     		movs	r3, #2
 2971 003c 2E93     		str	r3, [sp, #184]
 333:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 2972              		.loc 1 333 0
 2973 003e 4FF48002 		mov	r2, #4194304
 2974 0042 2F92     		str	r2, [sp, #188]
 334:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 2975              		.loc 1 334 0
 2976 0044 1922     		movs	r2, #25
 2977 0046 3092     		str	r2, [sp, #192]
 335:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2978              		.loc 1 335 0
 2979 0048 4FF4C872 		mov	r2, #400
 2980 004c 3192     		str	r2, [sp, #196]
 336:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 2981              		.loc 1 336 0
 2982 004e 3293     		str	r3, [sp, #200]
 337:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2983              		.loc 1 337 0
 2984 0050 0823     		movs	r3, #8
 2985 0052 3393     		str	r3, [sp, #204]
 338:Src/main.c    ****   {
 2986              		.loc 1 338 0
 2987 0054 28A8     		add	r0, sp, #160
 2988 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2989              	.LVL160:
 2990 005a 0028     		cmp	r0, #0
 2991 005c 4ED1     		bne	.L237
 345:Src/main.c    ****   {
 2992              		.loc 1 345 0
 2993 005e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 2994              	.LVL161:
 2995 0062 0028     		cmp	r0, #0
 2996 0064 4FD1     		bne	.L238
 352:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2997              		.loc 1 352 0
 2998 0066 0F23     		movs	r3, #15
 2999 0068 2393     		str	r3, [sp, #140]
 354:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3000              		.loc 1 354 0
 3001 006a 0223     		movs	r3, #2
 3002 006c 2493     		str	r3, [sp, #144]
 355:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 3003              		.loc 1 355 0
 3004 006e 0023     		movs	r3, #0
 3005 0070 2593     		str	r3, [sp, #148]
 356:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 3006              		.loc 1 356 0
 3007 0072 4FF4A053 		mov	r3, #5120
 3008 0076 2693     		str	r3, [sp, #152]
 357:Src/main.c    **** 
 3009              		.loc 1 357 0
 3010 0078 4FF48053 		mov	r3, #4096
 3011 007c 2793     		str	r3, [sp, #156]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 88


 359:Src/main.c    ****   {
 3012              		.loc 1 359 0
 3013 007e 0621     		movs	r1, #6
 3014 0080 23A8     		add	r0, sp, #140
 3015 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3016              	.LVL162:
 3017 0086 0028     		cmp	r0, #0
 3018 0088 42D1     		bne	.L239
 364:Src/main.c    ****                               |RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART1
 3019              		.loc 1 364 0
 3020 008a 284B     		ldr	r3, .L241+8
 3021 008c 0293     		str	r3, [sp, #8]
 369:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 3022              		.loc 1 369 0
 3023 008e 6423     		movs	r3, #100
 3024 0090 0393     		str	r3, [sp, #12]
 370:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 3025              		.loc 1 370 0
 3026 0092 0223     		movs	r3, #2
 3027 0094 0693     		str	r3, [sp, #24]
 371:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 3028              		.loc 1 371 0
 3029 0096 0493     		str	r3, [sp, #16]
 372:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 3030              		.loc 1 372 0
 3031 0098 0593     		str	r3, [sp, #20]
 373:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 3032              		.loc 1 373 0
 3033 009a C023     		movs	r3, #192
 3034 009c 0793     		str	r3, [sp, #28]
 374:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 3035              		.loc 1 374 0
 3036 009e 0423     		movs	r3, #4
 3037 00a0 0993     		str	r3, [sp, #36]
 375:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
 3038              		.loc 1 375 0
 3039 00a2 0893     		str	r3, [sp, #32]
 376:Src/main.c    ****   PeriphClkInitStruct.PLLI2SDivQ = 1;
 3040              		.loc 1 376 0
 3041 00a4 0123     		movs	r3, #1
 3042 00a6 0A93     		str	r3, [sp, #40]
 377:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 3043              		.loc 1 377 0
 3044 00a8 0B93     		str	r3, [sp, #44]
 378:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 3045              		.loc 1 378 0
 3046 00aa 0C93     		str	r3, [sp, #48]
 379:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 3047              		.loc 1 379 0
 3048 00ac 4FF40033 		mov	r3, #131072
 3049 00b0 0D93     		str	r3, [sp, #52]
 380:Src/main.c    ****   PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 3050              		.loc 1 380 0
 3051 00b2 4FF40073 		mov	r3, #512
 3052 00b6 0E93     		str	r3, [sp, #56]
 381:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 3053              		.loc 1 381 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 89


 3054 00b8 0023     		movs	r3, #0
 3055 00ba 1293     		str	r3, [sp, #72]
 382:Src/main.c    ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 3056              		.loc 1 382 0
 3057 00bc 1393     		str	r3, [sp, #76]
 383:Src/main.c    ****   PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 3058              		.loc 1 383 0
 3059 00be 1893     		str	r3, [sp, #96]
 384:Src/main.c    ****   PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 3060              		.loc 1 384 0
 3061 00c0 1B93     		str	r3, [sp, #108]
 385:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 3062              		.loc 1 385 0
 3063 00c2 1D93     		str	r3, [sp, #116]
 386:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 3064              		.loc 1 386 0
 3065 00c4 4FF00062 		mov	r2, #134217728
 3066 00c8 2192     		str	r2, [sp, #132]
 387:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 3067              		.loc 1 387 0
 3068 00ca 2293     		str	r3, [sp, #136]
 388:Src/main.c    ****   {
 3069              		.loc 1 388 0
 3070 00cc 02A8     		add	r0, sp, #8
 3071 00ce FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 3072              	.LVL163:
 3073 00d2 10BB     		cbnz	r0, .L240
 395:Src/main.c    **** 
 3074              		.loc 1 395 0
 3075 00d4 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3076              	.LVL164:
 3077 00d8 154B     		ldr	r3, .L241+12
 3078 00da A3FB0030 		umull	r3, r0, r3, r0
 3079 00de 8009     		lsrs	r0, r0, #6
 3080 00e0 FFF7FEFF 		bl	HAL_SYSTICK_Config
 3081              	.LVL165:
 399:Src/main.c    **** 
 3082              		.loc 1 399 0
 3083 00e4 0420     		movs	r0, #4
 3084 00e6 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 3085              	.LVL166:
 402:Src/main.c    **** }
 3086              		.loc 1 402 0
 3087 00ea 0022     		movs	r2, #0
 3088 00ec 0F21     		movs	r1, #15
 3089 00ee 4FF0FF30 		mov	r0, #-1
 3090 00f2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 3091              	.LVL167:
 403:Src/main.c    **** 
 3092              		.loc 1 403 0
 3093 00f6 35B0     		add	sp, sp, #212
 3094              	.LCFI62:
 3095              		.cfi_remember_state
 3096              		.cfi_def_cfa_offset 4
 3097              		@ sp needed
 3098 00f8 5DF804FB 		ldr	pc, [sp], #4
 3099              	.L237:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 90


 3100              	.LCFI63:
 3101              		.cfi_restore_state
 340:Src/main.c    ****   }
 3102              		.loc 1 340 0
 3103 00fc 4FF4AA71 		mov	r1, #340
 3104 0100 0C48     		ldr	r0, .L241+16
 3105 0102 FFF7FEFF 		bl	_Error_Handler
 3106              	.LVL168:
 3107              	.L238:
 347:Src/main.c    ****   }
 3108              		.loc 1 347 0
 3109 0106 40F25B11 		movw	r1, #347
 3110 010a 0A48     		ldr	r0, .L241+16
 3111 010c FFF7FEFF 		bl	_Error_Handler
 3112              	.LVL169:
 3113              	.L239:
 361:Src/main.c    ****   }
 3114              		.loc 1 361 0
 3115 0110 40F26911 		movw	r1, #361
 3116 0114 0748     		ldr	r0, .L241+16
 3117 0116 FFF7FEFF 		bl	_Error_Handler
 3118              	.LVL170:
 3119              	.L240:
 390:Src/main.c    ****   }
 3120              		.loc 1 390 0
 3121 011a 4FF4C371 		mov	r1, #390
 3122 011e 0548     		ldr	r0, .L241+16
 3123 0120 FFF7FEFF 		bl	_Error_Handler
 3124              	.LVL171:
 3125              	.L242:
 3126              		.align	2
 3127              	.L241:
 3128 0124 00380240 		.word	1073887232
 3129 0128 00700040 		.word	1073770496
 3130 012c 6848B101 		.word	28395624
 3131 0130 D34D6210 		.word	274877907
 3132 0134 00000000 		.word	.LC7
 3133              		.cfi_endproc
 3134              	.LFE144:
 3136              		.section	.text.main,"ax",%progbits
 3137              		.align	1
 3138              		.global	main
 3139              		.syntax unified
 3140              		.thumb
 3141              		.thumb_func
 3142              		.fpu fpv5-sp-d16
 3144              	main:
 3145              	.LFB143:
 203:Src/main.c    ****   /* USER CODE BEGIN 1 */
 3146              		.loc 1 203 0
 3147              		.cfi_startproc
 3148              		@ Volatile: function does not return.
 3149              		@ args = 0, pretend = 0, frame = 24
 3150              		@ frame_needed = 0, uses_anonymous_args = 0
 3151 0000 00B5     		push	{lr}
 3152              	.LCFI64:
 3153              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 91


 3154              		.cfi_offset 14, -4
 3155 0002 87B0     		sub	sp, sp, #28
 3156              	.LCFI65:
 3157              		.cfi_def_cfa_offset 32
 211:Src/main.c    **** 
 3158              		.loc 1 211 0
 3159 0004 FFF7FEFF 		bl	HAL_Init
 3160              	.LVL172:
 218:Src/main.c    **** 
 3161              		.loc 1 218 0
 3162 0008 FFF7FEFF 		bl	SystemClock_Config
 3163              	.LVL173:
 225:Src/main.c    ****   MX_ADC3_Init();
 3164              		.loc 1 225 0
 3165 000c FFF7FEFF 		bl	MX_GPIO_Init
 3166              	.LVL174:
 226:Src/main.c    ****   MX_CRC_Init();
 3167              		.loc 1 226 0
 3168 0010 FFF7FEFF 		bl	MX_ADC3_Init
 3169              	.LVL175:
 227:Src/main.c    ****   MX_DCMI_Init();
 3170              		.loc 1 227 0
 3171 0014 FFF7FEFF 		bl	MX_CRC_Init
 3172              	.LVL176:
 228:Src/main.c    ****   MX_DMA2D_Init();
 3173              		.loc 1 228 0
 3174 0018 FFF7FEFF 		bl	MX_DCMI_Init
 3175              	.LVL177:
 229:Src/main.c    ****   MX_FMC_Init();
 3176              		.loc 1 229 0
 3177 001c FFF7FEFF 		bl	MX_DMA2D_Init
 3178              	.LVL178:
 230:Src/main.c    ****   MX_I2C1_Init();
 3179              		.loc 1 230 0
 3180 0020 FFF7FEFF 		bl	MX_FMC_Init
 3181              	.LVL179:
 231:Src/main.c    ****   MX_I2C3_Init();
 3182              		.loc 1 231 0
 3183 0024 FFF7FEFF 		bl	MX_I2C1_Init
 3184              	.LVL180:
 232:Src/main.c    ****   MX_LTDC_Init();
 3185              		.loc 1 232 0
 3186 0028 FFF7FEFF 		bl	MX_I2C3_Init
 3187              	.LVL181:
 233:Src/main.c    ****   MX_QUADSPI_Init();
 3188              		.loc 1 233 0
 3189 002c FFF7FEFF 		bl	MX_LTDC_Init
 3190              	.LVL182:
 234:Src/main.c    ****   MX_RTC_Init();
 3191              		.loc 1 234 0
 3192 0030 FFF7FEFF 		bl	MX_QUADSPI_Init
 3193              	.LVL183:
 235:Src/main.c    ****   MX_SAI2_Init();
 3194              		.loc 1 235 0
 3195 0034 FFF7FEFF 		bl	MX_RTC_Init
 3196              	.LVL184:
 236:Src/main.c    ****   MX_SDMMC1_SD_Init();
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 92


 3197              		.loc 1 236 0
 3198 0038 FFF7FEFF 		bl	MX_SAI2_Init
 3199              	.LVL185:
 237:Src/main.c    ****   MX_SPDIFRX_Init();
 3200              		.loc 1 237 0
 3201 003c FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 3202              	.LVL186:
 238:Src/main.c    ****   MX_SPI2_Init();
 3203              		.loc 1 238 0
 3204 0040 FFF7FEFF 		bl	MX_SPDIFRX_Init
 3205              	.LVL187:
 239:Src/main.c    ****   MX_TIM1_Init();
 3206              		.loc 1 239 0
 3207 0044 FFF7FEFF 		bl	MX_SPI2_Init
 3208              	.LVL188:
 240:Src/main.c    ****   MX_TIM2_Init();
 3209              		.loc 1 240 0
 3210 0048 FFF7FEFF 		bl	MX_TIM1_Init
 3211              	.LVL189:
 241:Src/main.c    ****   MX_TIM3_Init();
 3212              		.loc 1 241 0
 3213 004c FFF7FEFF 		bl	MX_TIM2_Init
 3214              	.LVL190:
 242:Src/main.c    ****   MX_TIM5_Init();
 3215              		.loc 1 242 0
 3216 0050 FFF7FEFF 		bl	MX_TIM3_Init
 3217              	.LVL191:
 243:Src/main.c    ****   MX_TIM8_Init();
 3218              		.loc 1 243 0
 3219 0054 FFF7FEFF 		bl	MX_TIM5_Init
 3220              	.LVL192:
 244:Src/main.c    ****   MX_TIM12_Init();
 3221              		.loc 1 244 0
 3222 0058 FFF7FEFF 		bl	MX_TIM8_Init
 3223              	.LVL193:
 245:Src/main.c    ****   MX_USART1_UART_Init();
 3224              		.loc 1 245 0
 3225 005c FFF7FEFF 		bl	MX_TIM12_Init
 3226              	.LVL194:
 246:Src/main.c    ****   MX_USART6_UART_Init();
 3227              		.loc 1 246 0
 3228 0060 FFF7FEFF 		bl	MX_USART1_UART_Init
 3229              	.LVL195:
 247:Src/main.c    ****   MX_TIM7_Init();
 3230              		.loc 1 247 0
 3231 0064 FFF7FEFF 		bl	MX_USART6_UART_Init
 3232              	.LVL196:
 248:Src/main.c    ****   /* USER CODE BEGIN 2 */
 3233              		.loc 1 248 0
 3234 0068 FFF7FEFF 		bl	MX_TIM7_Init
 3235              	.LVL197:
 250:Src/main.c    **** 
 3236              		.loc 1 250 0
 3237 006c 1248     		ldr	r0, .L248
 3238 006e FFF7FEFF 		bl	debug_init
 3239              	.LVL198:
 252:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 93


 3240              		.loc 1 252 0
 3241 0072 1248     		ldr	r0, .L248+4
 3242 0074 FFF7FEFF 		bl	xprintf
 3243              	.LVL199:
 254:Src/main.c    **** 
 3244              		.loc 1 254 0
 3245 0078 1148     		ldr	r0, .L248+8
 3246 007a FFF7FEFF 		bl	puts
 3247              	.LVL200:
 257:Src/main.c    ****   draw_background();
 3248              		.loc 1 257 0
 3249 007e FFF7FEFF 		bl	lcd_start
 3250              	.LVL201:
 258:Src/main.c    ****   if(initialize_touchscreen() == -1) {
 3251              		.loc 1 258 0
 3252 0082 FFF7FEFF 		bl	draw_background
 3253              	.LVL202:
 259:Src/main.c    ****     xprintf("Error while initializing touchscreen!\n");
 3254              		.loc 1 259 0
 3255 0086 FFF7FEFF 		bl	initialize_touchscreen
 3256              	.LVL203:
 3257 008a B0F1FF3F 		cmp	r0, #-1
 3258 008e 0ED0     		beq	.L247
 3259              	.L244:
 279:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 3260              		.loc 1 279 0
 3261 0090 01AC     		add	r4, sp, #4
 3262 0092 0C4D     		ldr	r5, .L248+12
 3263 0094 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3264 0096 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3265 0098 2B68     		ldr	r3, [r5]
 3266 009a 2360     		str	r3, [r4]
 280:Src/main.c    **** 
 3267              		.loc 1 280 0
 3268 009c 0021     		movs	r1, #0
 3269 009e 01A8     		add	r0, sp, #4
 3270 00a0 FFF7FEFF 		bl	osThreadCreate
 3271              	.LVL204:
 3272 00a4 084B     		ldr	r3, .L248+16
 3273 00a6 1860     		str	r0, [r3]
 292:Src/main.c    **** 
 3274              		.loc 1 292 0
 3275 00a8 FFF7FEFF 		bl	osKernelStart
 3276              	.LVL205:
 3277              	.L245:
 3278 00ac FEE7     		b	.L245
 3279              	.L247:
 260:Src/main.c    ****   }
 3280              		.loc 1 260 0
 3281 00ae 0748     		ldr	r0, .L248+20
 3282 00b0 FFF7FEFF 		bl	xprintf
 3283              	.LVL206:
 3284 00b4 ECE7     		b	.L244
 3285              	.L249:
 3286 00b6 00BF     		.align	2
 3287              	.L248:
 3288 00b8 00000000 		.word	huart1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 94


 3289 00bc 00000000 		.word	.LC8
 3290 00c0 2C000000 		.word	.LC9
 3291 00c4 00000000 		.word	.LANCHOR0
 3292 00c8 00000000 		.word	defaultTaskHandle
 3293 00cc 3C000000 		.word	.LC10
 3294              		.cfi_endproc
 3295              	.LFE143:
 3297              		.comm	defaultTaskHandle,4,4
 3298              		.comm	hsdram1,52,4
 3299              		.comm	huart6,112,4
 3300              		.comm	huart1,112,4
 3301              		.comm	htim12,64,4
 3302              		.comm	htim8,64,4
 3303              		.comm	htim7,64,4
 3304              		.comm	htim5,64,4
 3305              		.comm	htim3,64,4
 3306              		.comm	htim2,64,4
 3307              		.comm	htim1,64,4
 3308              		.comm	hspi2,100,4
 3309              		.comm	hspdif,76,4
 3310              		.comm	hsd1,132,4
 3311              		.comm	hsai_BlockB2,132,4
 3312              		.comm	hsai_BlockA2,132,4
 3313              		.comm	hrtc,32,4
 3314              		.comm	hqspi,76,4
 3315              		.comm	hltdc,168,4
 3316              		.comm	hi2c3,76,4
 3317              		.comm	hi2c1,76,4
 3318              		.comm	hdma2d,64,4
 3319              		.comm	hdcmi,80,4
 3320              		.comm	hcrc,36,4
 3321              		.comm	hadc3,72,4
 3322              		.section	.rodata
 3323              		.align	2
 3324              		.set	.LANCHOR0,. + 0
 3325              	.LC11:
 3326 0000 00000000 		.word	.LC0
 3327 0004 00000000 		.word	StartDefaultTask
 3328 0008 0000     		.short	0
 3329 000a 0000     		.space	2
 3330 000c 00000000 		.word	0
 3331 0010 00100000 		.word	4096
 3332              		.section	.rodata.MX_ADC3_Init.str1.4,"aMS",%progbits,1
 3333              		.align	2
 3334              	.LC7:
 3335 0000 5372632F 		.ascii	"Src/main.c\000"
 3335      6D61696E 
 3335      2E6300
 3336              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 3337              		.align	2
 3338              	.LC2:
 3339 0000 77616974 		.ascii	"waiting for USB mass storage\012\000"
 3339      696E6720 
 3339      666F7220 
 3339      55534220 
 3339      6D617373 
 3340 001e 0000     		.space	2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 95


 3341              	.LC3:
 3342 0020 2E00     		.ascii	".\000"
 3343 0022 0000     		.space	2
 3344              	.LC4:
 3345 0024 53746172 		.ascii	"Starting player...\012\000"
 3345      74696E67 
 3345      20706C61 
 3345      7965722E 
 3345      2E2E0A00 
 3346              	.LC5:
 3347 0038 313A2F00 		.ascii	"1:/\000"
 3348              	.LC6:
 3349 003c 506C6179 		.ascii	"Player finished\012\000"
 3349      65722066 
 3349      696E6973 
 3349      6865640A 
 3349      00
 3350              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 3351              		.align	2
 3352              	.LC8:
 3353 0000 1B5B303B 		.ascii	"\033[0;32mSTM32F746 Discovery Project\033[0;39m\012"
 3353      33326D53 
 3353      544D3332 
 3353      46373436 
 3353      20446973 
 3354 002a 00       		.ascii	"\000"
 3355 002b 00       		.space	1
 3356              	.LC9:
 3357 002c 52656775 		.ascii	"Regular printf\000"
 3357      6C617220 
 3357      7072696E 
 3357      746600
 3358 003b 00       		.space	1
 3359              	.LC10:
 3360 003c 4572726F 		.ascii	"Error while initializing touchscreen!\012\000"
 3360      72207768 
 3360      696C6520 
 3360      696E6974 
 3360      69616C69 
 3361              		.section	.rodata.str1.4,"aMS",%progbits,1
 3362              		.align	2
 3363              	.LC0:
 3364 0000 64656661 		.ascii	"defaultTask\000"
 3364      756C7454 
 3364      61736B00 
 3365              		.text
 3366              	.Letext0:
 3367              		.file 2 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 3368              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 3369              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 3370              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 3371              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 3372              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 3373              		.file 8 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 3374              		.file 9 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 3375              		.file 10 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 3376              		.file 11 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 96


 3377              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3378              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 3379              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 3380              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 3381              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 3382              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 3383              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_crc.h"
 3384              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma2d.h"
 3385              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dcmi.h"
 3386              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_fmc.h"
 3387              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sdram.h"
 3388              		.file 23 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 3389              		.file 24 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_ltdc.h"
 3390              		.file 25 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_qspi.h"
 3391              		.file 26 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 3392              		.file 27 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sai.h"
 3393              		.file 28 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 3394              		.file 29 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 3395              		.file 30 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spdifrx.h"
 3396              		.file 31 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 3397              		.file 32 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 3398              		.file 33 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 3399              		.file 34 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 3400              		.file 35 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3401              		.file 36 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 3402              		.file 37 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 3403              		.file 38 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 3404              		.file 39 "Middlewares/Third_Party/FatFs/src/integer.h"
 3405              		.file 40 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdlib.h"
 3406              		.file 41 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 3407              		.file 42 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 3408              		.file 43 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 3409              		.file 44 "Middlewares/Third_Party/FatFs/src/ff.h"
 3410              		.file 45 "Middlewares/Third_Party/FatFs/src/diskio.h"
 3411              		.file 46 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 3412              		.file 47 "Inc/sd_diskio.h"
 3413              		.file 48 "Inc/usbh_diskio.h"
 3414              		.file 49 "Inc/fatfs.h"
 3415              		.file 50 "Inc/usb_host.h"
 3416              		.file 51 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\errno.h"
 3417              		.file 52 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\unistd.h"
 3418              		.file 53 "c:\\users\\student\\downloads\\aaaaa13\\utilities\\fonts\\fonts.h"
 3419              		.file 54 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/../Common/ts.h"
 3420              		.file 55 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/ft5336.h"
 3421              		.file 56 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_ts.h"
 3422              		.file 57 "Drivers/BSP/STM32746G-Discovery/../Components/wm8994/../Common/audio.h"
 3423              		.file 58 "Drivers/BSP/STM32746G-Discovery/../Components/wm8994/wm8994.h"
 3424              		.file 59 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_audio.h"
 3425              		.file 60 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 3426              		.file 61 "Inc/term_io.h"
 3427              		.file 62 "Inc/mp3_player.h"
 3428              		.file 63 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
 3429              		.file 64 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c_ex.h"
 3430              		.file 65 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 3431              		.file 66 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 3432              		.file 67 "Inc/dbgu.h"
 3433              		.file 68 "Inc/gui.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 97


 3434              		.file 69 "<built-in>"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 98


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:18     .text.MX_SDMMC1_SD_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:24     .text.MX_SDMMC1_SD_Init:00000000 MX_SDMMC1_SD_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:53     .text.MX_SDMMC1_SD_Init:00000018 $d
                            *COM*:00000084 hsd1
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:59     .text.MX_GPIO_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:65     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:474    .text.MX_GPIO_Init:00000270 $d
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:490    .text.StartDefaultTask:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:497    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:555    .text.StartDefaultTask:00000040 $d
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:565    .text.__io_putchar:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:572    .text.__io_putchar:00000000 __io_putchar
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:597    .text.__io_putchar:00000014 $d
                            *COM*:00000070 huart1
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:602    .text.inkey:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:609    .text.inkey:00000000 inkey
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:641    .text.inkey:0000001c $d
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:646    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:653    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:683    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:688    .text._Error_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:695    .text._Error_Handler:00000000 _Error_Handler
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:710    .text.MX_ADC3_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:716    .text.MX_ADC3_Init:00000000 MX_ADC3_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:803    .text.MX_ADC3_Init:00000060 $d
                            *COM*:00000048 hadc3
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:811    .text.MX_CRC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:817    .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:858    .text.MX_CRC_Init:00000028 $d
                            *COM*:00000024 hcrc
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:865    .text.MX_DCMI_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:871    .text.MX_DCMI_Init:00000000 MX_DCMI_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:923    .text.MX_DCMI_Init:00000034 $d
                            *COM*:00000050 hdcmi
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:930    .text.MX_DMA2D_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:936    .text.MX_DMA2D_Init:00000000 MX_DMA2D_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:992    .text.MX_DMA2D_Init:00000040 $d
                            *COM*:00000040 hdma2d
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:999    .text.MX_FMC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1005   .text.MX_FMC_Init:00000000 MX_FMC_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1089   .text.MX_FMC_Init:00000060 $d
                            *COM*:00000034 hsdram1
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1096   .text.MX_I2C1_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1102   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1174   .text.MX_I2C1_Init:00000058 $d
                            *COM*:0000004c hi2c1
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1182   .text.MX_I2C3_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1188   .text.MX_I2C3_Init:00000000 MX_I2C3_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1260   .text.MX_I2C3_Init:00000058 $d
                            *COM*:0000004c hi2c3
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1268   .text.MX_LTDC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1274   .text.MX_LTDC_Init:00000000 MX_LTDC_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1401   .text.MX_LTDC_Init:000000ac $d
                            *COM*:000000a8 hltdc
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1408   .text.MX_QUADSPI_Init:00000000 $t
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 99


C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1414   .text.MX_QUADSPI_Init:00000000 MX_QUADSPI_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1462   .text.MX_QUADSPI_Init:00000030 $d
                            *COM*:0000004c hqspi
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1469   .text.MX_RTC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1475   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1646   .text.MX_RTC_Init:000000f8 $d
                            *COM*:00000020 hrtc
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1653   .text.MX_SAI2_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1659   .text.MX_SAI2_Init:00000000 MX_SAI2_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1800   .text.MX_SAI2_Init:0000009c $d
                            *COM*:00000084 hsai_BlockA2
                            *COM*:00000084 hsai_BlockB2
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1810   .text.MX_SPDIFRX_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1816   .text.MX_SPDIFRX_Init:00000000 MX_SPDIFRX_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1866   .text.MX_SPDIFRX_Init:00000034 $d
                            *COM*:0000004c hspdif
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1872   .text.MX_SPI2_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1878   .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1939   .text.MX_SPI2_Init:00000048 $d
                            *COM*:00000064 hspi2
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1946   .text.MX_TIM1_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:1952   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2123   .text.MX_TIM1_Init:000000e4 $d
                            *COM*:00000040 htim1
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2130   .text.MX_TIM2_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2136   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2255   .text.MX_TIM2_Init:0000009c $d
                            *COM*:00000040 htim2
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2261   .text.MX_TIM3_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2267   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2386   .text.MX_TIM3_Init:0000009c $d
                            *COM*:00000040 htim3
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2393   .text.MX_TIM5_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2399   .text.MX_TIM5_Init:00000000 MX_TIM5_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2519   .text.MX_TIM5_Init:0000009c $d
                            *COM*:00000040 htim5
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2526   .text.MX_TIM8_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2532   .text.MX_TIM8_Init:00000000 MX_TIM8_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2618   .text.MX_TIM8_Init:00000068 $d
                            *COM*:00000040 htim8
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2625   .text.MX_TIM12_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2631   .text.MX_TIM12_Init:00000000 MX_TIM12_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2707   .text.MX_TIM12_Init:00000054 $d
                            *COM*:00000040 htim12
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2714   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2720   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2770   .text.MX_USART1_UART_Init:00000034 $d
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2777   .text.MX_USART6_UART_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2783   .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2833   .text.MX_USART6_UART_Init:00000034 $d
                            *COM*:00000070 huart6
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2840   .text.MX_TIM7_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2846   .text.MX_TIM7_Init:00000000 MX_TIM7_Init
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2911   .text.MX_TIM7_Init:00000044 $d
                            *COM*:00000040 htim7
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2918   .text.SystemClock_Config:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:2925   .text.SystemClock_Config:00000000 SystemClock_Config
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 100


C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:3128   .text.SystemClock_Config:00000124 $d
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:3137   .text.main:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:3144   .text.main:00000000 main
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:3288   .text.main:000000b8 $d
                            *COM*:00000004 defaultTaskHandle
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:3323   .rodata:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:3333   .rodata.MX_ADC3_Init.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:3337   .rodata.StartDefaultTask.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:3351   .rodata.main.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s:3362   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
MX_FATFS_Init
MX_USB_HOST_Init
vTaskDelay
xprintf
mp3_player_fsm
Appli_state
HAL_IncTick
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CRC_Init
HAL_DCMI_Init
HAL_DMA2D_Init
HAL_DMA2D_ConfigLayer
HAL_SDRAM_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_LTDC_Init
HAL_LTDC_ConfigLayer
HAL_QSPI_Init
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RTC_SetAlarm
HAL_RTCEx_SetTimeStamp
HAL_SAI_Init
HAL_SPDIFRX_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccD9nW7I.s 			page 101


HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
debug_init
puts
lcd_start
draw_background
initialize_touchscreen
osThreadCreate
osKernelStart
