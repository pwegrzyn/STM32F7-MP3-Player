ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	ADC_Init:
  25              	.LFB160:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @file    stm32f7xx_hal_adc.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC) peripheral:
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *           + IO operation functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *           + State and errors functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   @verbatim
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ==============================================================================
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                     ##### ADC Peripheral features #####
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   [..] 
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Interrupt generation at the end of conversion, end of injected conversion,  
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       and in case of analog watchdog or overrun events
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Single and continuous conversion modes.
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Scan mode for automatic conversion of channel 0 to channel x.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Data alignment with in-built data coherency.
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Channel-wise programmable sampling time.
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) External trigger option with configurable polarity for both regular and 
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       injected conversion.
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Dual/Triple mode (on devices with 2 ADCs or more).
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Configurable DMA data storage in Dual/Triple ADC mode. 
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Configurable delay between conversions in Dual/Triple interleaved mode.
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) ADC conversion type (refer to the datasheets).
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       slower speed.
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) ADC input range: VREF(minus) = VIN = VREF(plus).
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) DMA request generation during regular channel conversion.
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                      ##### How to use this driver #####
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ==============================================================================
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   [..]
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#)Initialize the ADC low level resources by implementing the HAL_ADC_MspInit():
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (##) Enable the ADC interface clock using __HAL_RCC_ADC_CLK_ENABLE()
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (##) ADC pins configuration
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****              (+++) Enable the clock for the ADC GPIOs using the following function:
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                    __HAL_RCC_GPIOx_CLK_ENABLE()  
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****              (+++) Configure these ADC pins in analog mode using HAL_GPIO_Init() 
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (##) In case of using interrupts (e.g. HAL_ADC_Start_IT())
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****              (+++) Configure the ADC interrupt priority using HAL_NVIC_SetPriority()
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****              (+++) Enable the ADC IRQ handler using HAL_NVIC_EnableIRQ()
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****              (+++) In ADC IRQ handler, call HAL_ADC_IRQHandler()
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (##) In case of using DMA to control data transfer (e.g. HAL_ADC_Start_DMA())
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****              (+++) Enable the DMAx interface clock using __HAL_RCC_DMAx_CLK_ENABLE()
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****              (+++) Configure and enable two DMA streams stream for managing data
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                  transfer from peripheral to memory (output stream)
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****              (+++) Associate the initialized DMA handle to the CRYP DMA handle
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                  using  __HAL_LINKDMA()
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****              (+++) Configure the priority and enable the NVIC for the transfer complete
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                  interrupt on the two DMA Streams. The output stream should have higher
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                  priority than the input stream.
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                        
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     *** Configuration of ADC, groups regular/injected, channels parameters ***
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ==============================================================================
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   [..]
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Configure the ADC parameters (resolution, data alignment, ...)
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       and regular group parameters (conversion trigger, sequencer, ...)
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       using function HAL_ADC_Init().
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Configure the channels for regular group parameters (channel number, 
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       channel rank into sequencer, ..., into regular group)
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       using function HAL_ADC_ConfigChannel().
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Optionally, configure the injected group parameters (conversion trigger, 
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       sequencer, ..., of injected group)
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       and the channels for injected group parameters (channel number, 
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       channel rank into sequencer, ..., into injected group)
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       using function HAL_ADCEx_InjectedConfigChannel().
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Optionally, configure the analog watchdog parameters (channels
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       monitored, thresholds, ...) using function HAL_ADC_AnalogWDGConfig().
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Optionally, for devices with several ADC instances: configure the 
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       multimode parameters using function HAL_ADCEx_MultiModeConfigChannel().
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                        *** Execution of ADC conversions ***
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ==============================================================================
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   [..]  
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) ADC driver can be used among three modes: polling, interruption,
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       transfer by DMA.    
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      *** Polling mode IO operation ***
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      =================================
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      [..]    
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start() 
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (+) Wait for end of conversion using HAL_ADC_PollForConversion(), at this stage
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****            user can specify the value of timeout according to his end application      
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (+) To read the ADC converted values, use the HAL_ADC_GetValue() function.
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop()
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      *** Interrupt mode IO operation ***    
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      ===================================
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      [..]    
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_IT() 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (+) Use HAL_ADC_IRQHandler() called under ADC_IRQHandler() Interrupt subroutine
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (+) At ADC end of conversion HAL_ADC_ConvCpltCallback() function is executed and user can 
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (+) In case of ADC Error, HAL_ADC_ErrorCallback() function is executed and user can 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_IT()     
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      *** DMA mode IO operation ***    
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      ==============================
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      [..]    
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_DMA(), at this stage the user specify the l
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****            of data to be transferred at each end of conversion 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (+) At The end of data transfer by HAL_ADC_ConvCpltCallback() function is executed and user 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (+) In case of transfer Error, HAL_ADC_ErrorCallback() function is executed and user can 
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_DMA()
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                     
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      *** ADC HAL driver macros list ***
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      ============================================= 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      [..]
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        Below the list of most used macros in ADC HAL driver.
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE : Enable the ADC peripheral
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE : Disable the ADC peripheral
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE_IT: Enable the ADC end of conversion interrupt
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE_IT: Disable the ADC end of conversion interrupt
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) __HAL_ADC_GET_IT_SOURCE: Check if the specified ADC interrupt source is enabled or disabl
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) __HAL_ADC_CLEAR_FLAG: Clear the ADC's pending flags
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) __HAL_ADC_GET_FLAG: Get the selected ADC's flag status
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) ADC_GET_RESOLUTION: Return resolution bits in CR1 register 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      [..] 
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (@) You can refer to the ADC HAL driver header file for more useful macros 
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       *** Deinitialization of ADC ***
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ==============================================================================
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   [..]
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Disable the ADC interface
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      (++) ADC clock can be hard reset and disabled at RCC top level.
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      (++) Hard reset of ADC peripherals
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****           using macro __HAL_RCC_ADC_FORCE_RESET(), __HAL_RCC_ADC_RELEASE_RESET().
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      (++) ADC clock disable using the equivalent macro/functions as configuration step.
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                (+++) Example:
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                    other device clock parameters configuration:
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                (+++) HAL_RCC_GetOscConfig(&RCC_OscInitStructure);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSIState = RCC_HSI_OFF; (if not used for system clock)
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) ADC pins configuration
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      (++) Disable the clock for the ADC GPIOs using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Optionally, in case of usage of ADC with interruptions:
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      (++) Disable the NVIC for ADC using function HAL_NVIC_DisableIRQ(ADCx_IRQn)
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   (#) Optionally, in case of usage of DMA:
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         (++) Deinitialize the DMA using function HAL_DMA_DeInit().
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         (++) Disable the NVIC for DMA using function HAL_NVIC_DisableIRQ(DMAx_Channelx_IRQn)   
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     @endverbatim
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ******************************************************************************
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @attention
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * are permitted provided that the following conditions are met:
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *      this list of conditions and the following disclaimer.
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *      this list of conditions and the following disclaimer in the documentation
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *      and/or other materials provided with the distribution.
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *      may be used to endorse or promote products derived from this software
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *      without specific prior written permission.
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ******************************************************************************
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */ 
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** #include "stm32f7xx_hal.h"
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /** @addtogroup STM32F7xx_HAL_Driver
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @{
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /** @defgroup ADC ADC
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief ADC driver modules
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @{
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */ 
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 5


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @{
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc);
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @}
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @{
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions 
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  *  @brief    Initialization and Configuration functions 
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  *
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** @verbatim    
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  ===============================================================================
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  ===============================================================================
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) De-initialize the ADC. 
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****          
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** @endverbatim
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @{
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         in the ADC_InitStruct and initializes the ADC MSP.
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *           
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         ClockPrescaler, Resolution, Data Alignment and number of conversion), however,
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the rest of the configuration parameters are specific to the regular
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         channels group (scan mode activation, continuous mode activation,
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         External trigger source and edge, DMA continuous request after the  
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         last transfer and End of conversion selection).
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *             
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval HAL status
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 6


 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check ADC handle */
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(hadc == NULL)
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     return HAL_ERROR;
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG(hadc->Init.ExternalTrigConv));
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_RESET)
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Initialize ADC error code */
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Init the low level hardware */
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* correctly completed.                                                     */
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC state */
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC parameters */
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC_Init(hadc);
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC error code to none */
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set the ADC state */
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   else
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 7


 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Release Lock */
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return function status */
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return tmp_hal_status;
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values. 
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval HAL status
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check ADC handle */
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(hadc == NULL)
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     return HAL_ERROR;
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Set ADC state */
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Disable ADC peripheral */
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* correctly completed.                                                     */
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* DeInit the low level hardware */
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC error code to none */
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC state */
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET;
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process unlocked */
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return function status */
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return tmp_hal_status;
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 8


 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval None
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   UNUSED(hadc);
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****             the HAL_ADC_MspInit could be implemented in the user file
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****    */ 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval None
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   UNUSED(hadc);
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****             the HAL_ADC_MspDeInit could be implemented in the user file
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****    */ 
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @}
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  *  @brief    IO operation functions 
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  *
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** @verbatim   
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  ===============================================================================
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****              ##### IO operation functions #####
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  ===============================================================================  
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Start conversion of regular channel.
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Stop conversion of regular channel.
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Start conversion of regular channel and enable interrupt.
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable interrupt.
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Start conversion of regular channel and enable DMA transfer.
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable DMA transfer.
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Handle ADC interrupt request. 
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** @endverbatim
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @{
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Enables ADC and starts conversion of the regular channels.
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 9


 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval HAL status
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __IO uint32_t counter = 0;
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process locked */
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_LOCK(hadc);
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Enable the ADC peripheral */
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   Tstab time the ADC's stabilization */
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {  
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Enable the Peripheral */
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     while(counter != 0)
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       counter--;
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC state                                                          */
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* update ADC state.                                                      */
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     else
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Reset ADC all error code fields */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 10


 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Process unlocked */
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Check if Multimode enabled */
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     else
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return function status */
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return HAL_OK;
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Disables ADC and stop conversion of regular channels.
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * 
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval HAL status.
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process locked */
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_LOCK(hadc);
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Disable ADC peripheral */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 11


 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC state */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process unlocked */
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return function status */
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return HAL_OK;
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Poll for regular conversion complete
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         conversion) are cleared by this function.
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         be performed on the complete sequence.
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.  
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval HAL status
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   uint32_t tickstart = 0;
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for      */
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* each conversion:                                                       */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* several ranks and polling for end of each conversion.                  */
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* For code simplicity sake, this particular case is generalized to       */
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* ADC configured in DMA mode and polling for end of each conversion.     */
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Update ADC state machine to error */
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Process unlocked */
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     return HAL_ERROR;
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Get tick */ 
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tickstart = HAL_GetTick();
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 12


 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check End of conversion flag */
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       if((Timeout == 0) || ((HAL_GetTick() - tickstart ) > Timeout))
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         /* Process unlocked */
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         return HAL_TIMEOUT;
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Clear regular group conversion flag */
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Update ADC state machine */
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Note: On STM32F7, there is no independent flag of end of sequence.       */
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /*       The test of scan sequence on going is done either with scan        */
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /*       sequence disabled or with end of conversion flag set to            */
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /*       of end of sequence.                                                */
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC state */
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     { 
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return ADC state */
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return HAL_OK;
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Poll for conversion event
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  EventType the ADC event type.
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *          This parameter can be one of the following values:
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watch Dog event.
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 13


 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event.
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.   
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval HAL status
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   uint32_t tickstart = 0;
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Get tick */
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tickstart = HAL_GetTick();
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check selected event flag */
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc,EventType)))
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Check for the Timeout */
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       if((Timeout == 0) || ((HAL_GetTick() - tickstart ) > Timeout))
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         /* Process unlocked */
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         return HAL_TIMEOUT;
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(EventType == ADC_AWD_EVENT)
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC state */
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Overrun event */
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   else
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC state */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC error code to overrun */
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Clear ADC overrun flag */
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return ADC state */
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return HAL_OK;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 14


 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Enables the interrupt and starts ADC conversion of regular channels.
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval HAL status.
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __IO uint32_t counter = 0;
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process locked */
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_LOCK(hadc);
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Enable the ADC peripheral */
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      Tstab time the ADC's stabilization */
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {  
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Enable the Peripheral */
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     while(counter != 0)
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       counter--;
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC state                                                          */
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* update ADC state.                                                      */
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 15


 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     else
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Reset ADC all error code fields */
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Process unlocked */
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Check if Multimode enabled */
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     else
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return function status */
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return HAL_OK;
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Disables the interrupt and stop ADC conversion of regular channels.
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * 
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval HAL status.
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 16


 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process locked */
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_LOCK(hadc);
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Disable ADC peripheral */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   	/* Disable ADC end of conversion interrupt for regular group */
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC state */
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process unlocked */
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return function status */
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return HAL_OK;
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval None
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   uint32_t tmp1 = 0, tmp2 = 0;
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC);
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC);
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(tmp1 && tmp2)
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Set ADC state */
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 17


 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Note: On STM32F7, there is no independent flag of end of sequence.   */
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /*       of end of sequence.                                            */
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Set ADC state */
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Conversion complete callback */ 
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Clear regular group conversion flag */
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC);
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC);                               
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(tmp1 && tmp2)
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Set ADC state */
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group injected  */
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* by external trigger, scan sequence on going or by automatic injected */
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* conversion from group regular (same conditions as group regular      */
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* interruption disabling above).                                       */
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL) ||
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)) &&
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (ADC_IS_SOFTWARE_START_REGULAR(hadc) &&
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE))))
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group injected */
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 18


 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Set ADC state */
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       { 
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Conversion complete callback */ 
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Clear injected group conversion flag */
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD);
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD);                          
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check Analog watchdog flag */
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(tmp1 && tmp2)
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Set ADC state */
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Level out of window callback */ 
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_OVR);
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR);
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check Overrun flag */
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(tmp1 && tmp2)
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Note: On STM32F7, ADC overrun can be set through other parameters    */
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /*       refer to description of parameter "EOCSelection" for more      */
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /*       details.                                                       */
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC error code to overrun */
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Clear ADC overrun flag */
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Error callback */ 
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     HAL_ADC_ErrorCallback(hadc);
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Clear the Overrun flag */
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 19


1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Enables ADC DMA request after last transfer (Single-ADC mode) and enables ADC periphera
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  pData The destination Buffer address.
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval HAL status
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __IO uint32_t counter = 0;
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process locked */
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_LOCK(hadc);
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Enable the ADC peripheral */
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      Tstab time the ADC's stabilization */
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {  
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Enable the Peripheral */
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     while(counter != 0)
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       counter--;
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC state                                                          */
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* update ADC state.                                                      */
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 20


1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     else
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Reset ADC all error code fields */
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Process unlocked */
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_UNLOCK(hadc);   
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set the DMA transfer complete callback */
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set the DMA half transfer complete callback */
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set the DMA error callback */
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* start (in case of SW start):                                           */
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Enable ADC overrun interrupt */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Enable ADC DMA mode */
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR2 |= ADC_CR2_DMA;
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Start the DMA channel */
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Check if Multimode enabled */
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     else
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 21


1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return function status */
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return HAL_OK;
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Disables ADC DMA (Single-ADC mode) and disables ADC peripheral    
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval HAL status
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process locked */
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_LOCK(hadc);
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Disable ADC peripheral */
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Disable the selected ADC DMA mode */
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR2 &= ~ADC_CR2_DMA;
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC state */
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process unlocked */
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return function status */
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return tmp_hal_status;
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Gets the converted value from data register of regular channel.
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 22


1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval Converted value
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {       
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return the selected ADC converted value */ 
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return hadc->Instance->DR;
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Regular conversion complete callback in non blocking mode 
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval None
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   UNUSED(hadc);
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****             the HAL_ADC_ConvCpltCallback could be implemented in the user file
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****    */
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Regular conversion half DMA transfer callback in non blocking mode 
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval None
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   UNUSED(hadc);
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****             the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****    */
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode 
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval None
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   UNUSED(hadc);
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****             the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****    */
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Error ADC callback.
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer 
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 23


1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         (HAL ADC handle paramater "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval None
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   UNUSED(hadc);
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****             the HAL_ADC_ErrorCallback could be implemented in the user file
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****    */
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @}
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  *  @brief   	Peripheral Control functions 
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  *
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** @verbatim   
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  ===============================================================================
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****              ##### Peripheral Control functions #####
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  ===============================================================================  
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Configure regular channels. 
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Configure injected channels.
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Configure multimode.
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Configure the analog watch dog.
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** @endverbatim
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @{
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /**
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         rank in the sequencer and its sample time.
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  sConfig ADC configuration structure. 
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval HAL status
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __IO uint32_t counter = 0;
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process locked */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 24


1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_LOCK(hadc);
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 			
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 	/* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 	if (sConfig->Channel > ADC_CHANNEL_9)
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 	{
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 		/* Clear the old sample time */
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 		hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 		if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 		{
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 			/* Set the new sample time */
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 			hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, ADC_CHANNEL_18);
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 		}
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 	  else
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 	  {	
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 		  /* Set the new sample time */
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 		  hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 	  }
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Clear the old sample time */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set the new sample time */
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* For Rank 1 to 6 */
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if (sConfig->Rank < 7)
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* For Rank 7 to 12 */
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   else if (sConfig->Rank < 13)
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* For Rank 13 to 16 */
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   else
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* if ADC1 Channel_18 is selected enable VBAT Channel */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 25


1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Enable the VBAT channel*/
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC->CCR |= ADC_CCR_VBATE;
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* if ADC1 Channel_18 or Channel_17 is selected enable TSVREFE Channel(Temperature sensor and VRE
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channe
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Enable the TSVREFE channel*/
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     ADC->CCR |= ADC_CCR_TSVREFE;
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Delay for temperature sensor stabilization time */
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Compute number of CPU cycles to wait for */
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000));
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       while(counter != 0)
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         counter--;
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process unlocked */
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return function status */
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return HAL_OK;
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @note   Analog watchdog thresholds can be modified while ADC conversion
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         is on going.
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  AnalogWDGConfig  pointer to an ADC_AnalogWDGConfTypeDef structure 
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         that contains the configuration information of ADC analog watchdog.
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval HAL status	  
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   uint32_t tmp = 0;
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */  
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(AnalogWDGConfig->WatchdogMode));
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 26


1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tmp = ADC_GET_RESOLUTION(hadc);
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->HighThreshold));
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->LowThreshold));
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process locked */
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_LOCK(hadc);
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   else
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR1 &=  ~(ADC_CR1_AWDSGL | ADC_CR1_JAWDEN | ADC_CR1_AWDEN);
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Set the analog watchdog enable mode */
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR1 |= AnalogWDGConfig->WatchdogMode;
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Set the high threshold */
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->HTR = AnalogWDGConfig->HighThreshold;
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Set the low threshold */
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->LTR = AnalogWDGConfig->LowThreshold;
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Clear the Analog watchdog channel select bits */
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR1 &= ~ADC_CR1_AWDCH;
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Set the Analog watchdog channel */
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR1 |= (uint32_t)((uint16_t)(AnalogWDGConfig->Channel));
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Process unlocked */
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return function status */
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return HAL_OK;
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @}
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 ADC Peripheral State functions
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  *  @brief   ADC Peripheral State functions 
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  *
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** @verbatim   
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  ===============================================================================
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****             ##### Peripheral State and errors functions #####
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****  ===============================================================================  
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 27


1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     [..]
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     This subsection provides functions allowing to
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Check the ADC state
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       (+) Check the ADC Error
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****          
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** @endverbatim
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @{
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  return the ADC state
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval HAL state
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return ADC state */
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return hadc->State;
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Return the ADC error code
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval ADC Error Code
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return hadc->ErrorCode;
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @}
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @}
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /* Private functions ---------------------------------------------------------*/
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @{
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         in the ADC_InitStruct without initializing the ADC MSP.       
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval None
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc)
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
  27              		.loc 1 1512 0
  28              		.cfi_startproc
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 28


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Set ADC parameters */
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Set the ADC clock prescaler */
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ADC->CCR &= ~(ADC_CCR_ADCPRE);
  33              		.loc 1 1515 0
  34 0000 494B     		ldr	r3, .L7
  35 0002 5A68     		ldr	r2, [r3, #4]
  36 0004 22F44032 		bic	r2, r2, #196608
  37 0008 5A60     		str	r2, [r3, #4]
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ADC->CCR |=  hadc->Init.ClockPrescaler;
  38              		.loc 1 1516 0
  39 000a 5A68     		ldr	r2, [r3, #4]
  40 000c 4168     		ldr	r1, [r0, #4]
  41 000e 0A43     		orrs	r2, r2, r1
  42 0010 5A60     		str	r2, [r3, #4]
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Set ADC scan mode */
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
  43              		.loc 1 1519 0
  44 0012 0268     		ldr	r2, [r0]
  45 0014 5368     		ldr	r3, [r2, #4]
  46 0016 23F48073 		bic	r3, r3, #256
  47 001a 5360     		str	r3, [r2, #4]
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
  48              		.loc 1 1520 0
  49 001c 0268     		ldr	r2, [r0]
  50 001e 5368     		ldr	r3, [r2, #4]
  51 0020 0169     		ldr	r1, [r0, #16]
  52 0022 43EA0123 		orr	r3, r3, r1, lsl #8
  53 0026 5360     		str	r3, [r2, #4]
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Set ADC resolution */
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_RES);
  54              		.loc 1 1523 0
  55 0028 0268     		ldr	r2, [r0]
  56 002a 5368     		ldr	r3, [r2, #4]
  57 002c 23F04073 		bic	r3, r3, #50331648
  58 0030 5360     		str	r3, [r2, #4]
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR1 |=  hadc->Init.Resolution;
  59              		.loc 1 1524 0
  60 0032 0268     		ldr	r2, [r0]
  61 0034 5368     		ldr	r3, [r2, #4]
  62 0036 8168     		ldr	r1, [r0, #8]
  63 0038 0B43     		orrs	r3, r3, r1
  64 003a 5360     		str	r3, [r2, #4]
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Set ADC data alignment */
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
  65              		.loc 1 1527 0
  66 003c 0268     		ldr	r2, [r0]
  67 003e 9368     		ldr	r3, [r2, #8]
  68 0040 23F40063 		bic	r3, r3, #2048
  69 0044 9360     		str	r3, [r2, #8]
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR2 |= hadc->Init.DataAlign;
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 29


  70              		.loc 1 1528 0
  71 0046 0268     		ldr	r2, [r0]
  72 0048 9368     		ldr	r3, [r2, #8]
  73 004a C168     		ldr	r1, [r0, #12]
  74 004c 0B43     		orrs	r3, r3, r1
  75 004e 9360     		str	r3, [r2, #8]
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Enable external trigger if trigger selection is different of software  */
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* start.                                                                 */
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Note: This configuration keeps the hardware feature of parameter       */
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /*       software start.                                                  */
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  76              		.loc 1 1535 0
  77 0050 826A     		ldr	r2, [r0, #40]
  78 0052 364B     		ldr	r3, .L7+4
  79 0054 9A42     		cmp	r2, r3
  80 0056 49D0     		beq	.L2
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Select external trigger to start conversion */
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
  81              		.loc 1 1538 0
  82 0058 0268     		ldr	r2, [r0]
  83 005a 9368     		ldr	r3, [r2, #8]
  84 005c 23F07063 		bic	r3, r3, #251658240
  85 0060 9360     		str	r3, [r2, #8]
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
  86              		.loc 1 1539 0
  87 0062 0268     		ldr	r2, [r0]
  88 0064 9368     		ldr	r3, [r2, #8]
  89 0066 816A     		ldr	r1, [r0, #40]
  90 0068 0B43     		orrs	r3, r3, r1
  91 006a 9360     		str	r3, [r2, #8]
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Select external trigger polarity */
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
  92              		.loc 1 1542 0
  93 006c 0268     		ldr	r2, [r0]
  94 006e 9368     		ldr	r3, [r2, #8]
  95 0070 23F04053 		bic	r3, r3, #805306368
  96 0074 9360     		str	r3, [r2, #8]
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
  97              		.loc 1 1543 0
  98 0076 0268     		ldr	r2, [r0]
  99 0078 9368     		ldr	r3, [r2, #8]
 100 007a C16A     		ldr	r1, [r0, #44]
 101 007c 0B43     		orrs	r3, r3, r1
 102 007e 9360     		str	r3, [r2, #8]
 103              	.L3:
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   else
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Reset the external trigger */
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 30


1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Enable or disable ADC continuous conversion mode */
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 104              		.loc 1 1553 0
 105 0080 0268     		ldr	r2, [r0]
 106 0082 9368     		ldr	r3, [r2, #8]
 107 0084 23F00203 		bic	r3, r3, #2
 108 0088 9360     		str	r3, [r2, #8]
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode);
 109              		.loc 1 1554 0
 110 008a 0268     		ldr	r2, [r0]
 111 008c 9368     		ldr	r3, [r2, #8]
 112 008e 8169     		ldr	r1, [r0, #24]
 113 0090 43EA4103 		orr	r3, r3, r1, lsl #1
 114 0094 9360     		str	r3, [r2, #8]
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if(hadc->Init.DiscontinuousConvMode != DISABLE)
 115              		.loc 1 1556 0
 116 0096 036A     		ldr	r3, [r0, #32]
 117 0098 002B     		cmp	r3, #0
 118 009a 32D1     		bne	.L6
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set the number of channels to be converted in discontinuous mode */
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   else
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 119              		.loc 1 1570 0
 120 009c 0268     		ldr	r2, [r0]
 121 009e 5368     		ldr	r3, [r2, #4]
 122 00a0 23F40063 		bic	r3, r3, #2048
 123 00a4 5360     		str	r3, [r2, #4]
 124              	.L5:
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Set ADC number of conversion */
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 125              		.loc 1 1574 0
 126 00a6 0268     		ldr	r2, [r0]
 127 00a8 D36A     		ldr	r3, [r2, #44]
 128 00aa 23F47003 		bic	r3, r3, #15728640
 129 00ae D362     		str	r3, [r2, #44]
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 130              		.loc 1 1575 0
 131 00b0 0168     		ldr	r1, [r0]
 132 00b2 CB6A     		ldr	r3, [r1, #44]
 133 00b4 C269     		ldr	r2, [r0, #28]
 134 00b6 013A     		subs	r2, r2, #1
 135 00b8 43EA0253 		orr	r3, r3, r2, lsl #20
 136 00bc CB62     		str	r3, [r1, #44]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 31


1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Enable or disable ADC DMA continuous request */
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 137              		.loc 1 1578 0
 138 00be 0268     		ldr	r2, [r0]
 139 00c0 9368     		ldr	r3, [r2, #8]
 140 00c2 23F40073 		bic	r3, r3, #512
 141 00c6 9360     		str	r3, [r2, #8]
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_DMAContReq(hadc->Init.DMAContinuousRequests);
 142              		.loc 1 1579 0
 143 00c8 0268     		ldr	r2, [r0]
 144 00ca 9368     		ldr	r3, [r2, #8]
 145 00cc 016B     		ldr	r1, [r0, #48]
 146 00ce 43EA4123 		orr	r3, r3, r1, lsl #9
 147 00d2 9360     		str	r3, [r2, #8]
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Enable or disable ADC end of conversion selection */
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 148              		.loc 1 1582 0
 149 00d4 0268     		ldr	r2, [r0]
 150 00d6 9368     		ldr	r3, [r2, #8]
 151 00d8 23F48063 		bic	r3, r3, #1024
 152 00dc 9360     		str	r3, [r2, #8]
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 153              		.loc 1 1583 0
 154 00de 0268     		ldr	r2, [r0]
 155 00e0 9368     		ldr	r3, [r2, #8]
 156 00e2 4169     		ldr	r1, [r0, #20]
 157 00e4 43EA8123 		orr	r3, r3, r1, lsl #10
 158 00e8 9360     		str	r3, [r2, #8]
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 159              		.loc 1 1584 0
 160 00ea 7047     		bx	lr
 161              	.L2:
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 162              		.loc 1 1548 0
 163 00ec 0268     		ldr	r2, [r0]
 164 00ee 9368     		ldr	r3, [r2, #8]
 165 00f0 23F07063 		bic	r3, r3, #251658240
 166 00f4 9360     		str	r3, [r2, #8]
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 167              		.loc 1 1549 0
 168 00f6 0268     		ldr	r2, [r0]
 169 00f8 9368     		ldr	r3, [r2, #8]
 170 00fa 23F04053 		bic	r3, r3, #805306368
 171 00fe 9360     		str	r3, [r2, #8]
 172 0100 BEE7     		b	.L3
 173              	.L6:
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 174              		.loc 1 1561 0
 175 0102 0268     		ldr	r2, [r0]
 176 0104 5368     		ldr	r3, [r2, #4]
 177 0106 43F40063 		orr	r3, r3, #2048
 178 010a 5360     		str	r3, [r2, #4]
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 179              		.loc 1 1564 0
 180 010c 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 32


 181 010e 5368     		ldr	r3, [r2, #4]
 182 0110 23F46043 		bic	r3, r3, #57344
 183 0114 5360     		str	r3, [r2, #4]
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 184              		.loc 1 1565 0
 185 0116 0168     		ldr	r1, [r0]
 186 0118 4B68     		ldr	r3, [r1, #4]
 187 011a 426A     		ldr	r2, [r0, #36]
 188 011c 013A     		subs	r2, r2, #1
 189 011e 43EA4233 		orr	r3, r3, r2, lsl #13
 190 0122 4B60     		str	r3, [r1, #4]
 191 0124 BFE7     		b	.L5
 192              	.L8:
 193 0126 00BF     		.align	2
 194              	.L7:
 195 0128 00230140 		.word	1073816320
 196 012c 0100000F 		.word	251658241
 197              		.cfi_endproc
 198              	.LFE160:
 200              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 201              		.align	1
 202              		.weak	HAL_ADC_MspInit
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 206              		.fpu fpv5-sp-d16
 208              	HAL_ADC_MspInit:
 209              	.LFB140:
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 210              		.loc 1 382 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215              	.LVL1:
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 216              		.loc 1 388 0
 217 0000 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE140:
 221              		.section	.text.HAL_ADC_Init,"ax",%progbits
 222              		.align	1
 223              		.global	HAL_ADC_Init
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv5-sp-d16
 229              	HAL_ADC_Init:
 230              	.LFB138:
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 231              		.loc 1 258 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              	.LVL2:
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 236              		.loc 1 262 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 33


 237 0000 20B3     		cbz	r0, .L14
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 238              		.loc 1 258 0
 239 0002 10B5     		push	{r4, lr}
 240              	.LCFI0:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 4, -8
 243              		.cfi_offset 14, -4
 244 0004 0446     		mov	r4, r0
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 245              		.loc 1 285 0
 246 0006 036C     		ldr	r3, [r0, #64]
 247 0008 43B1     		cbz	r3, .L20
 248              	.LVL3:
 249              	.L12:
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 250              		.loc 1 298 0
 251 000a 236C     		ldr	r3, [r4, #64]
 252 000c 13F0100F 		tst	r3, #16
 253 0010 0AD0     		beq	.L21
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 254              		.loc 1 318 0
 255 0012 0120     		movs	r0, #1
 256              	.L13:
 257              	.LVL4:
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 258              		.loc 1 322 0
 259 0014 0023     		movs	r3, #0
 260 0016 84F83C30 		strb	r3, [r4, #60]
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 261              		.loc 1 326 0
 262 001a 10BD     		pop	{r4, pc}
 263              	.LVL5:
 264              	.L20:
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 265              		.loc 1 288 0
 266 001c 4364     		str	r3, [r0, #68]
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Init the low level hardware */
 267              		.loc 1 291 0
 268 001e 80F83C30 		strb	r3, [r0, #60]
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 269              		.loc 1 293 0
 270 0022 FFF7FEFF 		bl	HAL_ADC_MspInit
 271              	.LVL6:
 272 0026 F0E7     		b	.L12
 273              	.L21:
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 274              		.loc 1 301 0
 275 0028 226C     		ldr	r2, [r4, #64]
 276 002a 094B     		ldr	r3, .L22
 277 002c 1340     		ands	r3, r3, r2
 278 002e 43F00203 		orr	r3, r3, #2
 279 0032 2364     		str	r3, [r4, #64]
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 280              		.loc 1 306 0
 281 0034 2046     		mov	r0, r4
 282 0036 FFF7FEFF 		bl	ADC_Init
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 34


 283              	.LVL7:
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 284              		.loc 1 309 0
 285 003a 0020     		movs	r0, #0
 286 003c 6064     		str	r0, [r4, #68]
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 287              		.loc 1 312 0
 288 003e 236C     		ldr	r3, [r4, #64]
 289 0040 23F00303 		bic	r3, r3, #3
 290 0044 43F00103 		orr	r3, r3, #1
 291 0048 2364     		str	r3, [r4, #64]
 292 004a E3E7     		b	.L13
 293              	.LVL8:
 294              	.L14:
 295              	.LCFI1:
 296              		.cfi_def_cfa_offset 0
 297              		.cfi_restore 4
 298              		.cfi_restore 14
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 299              		.loc 1 264 0
 300 004c 0120     		movs	r0, #1
 301              	.LVL9:
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 302              		.loc 1 326 0
 303 004e 7047     		bx	lr
 304              	.L23:
 305              		.align	2
 306              	.L22:
 307 0050 FDEEFFFF 		.word	-4355
 308              		.cfi_endproc
 309              	.LFE138:
 311              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 312              		.align	1
 313              		.weak	HAL_ADC_MspDeInit
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu fpv5-sp-d16
 319              	HAL_ADC_MspDeInit:
 320              	.LFB141:
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 321              		.loc 1 397 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 326              	.LVL10:
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 327              		.loc 1 403 0
 328 0000 7047     		bx	lr
 329              		.cfi_endproc
 330              	.LFE141:
 332              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 333              		.align	1
 334              		.global	HAL_ADC_DeInit
 335              		.syntax unified
 336              		.thumb
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 35


 337              		.thumb_func
 338              		.fpu fpv5-sp-d16
 340              	HAL_ADC_DeInit:
 341              	.LFB139:
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 342              		.loc 1 335 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              	.LVL11:
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 347              		.loc 1 339 0
 348 0000 C8B1     		cbz	r0, .L28
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 349              		.loc 1 335 0
 350 0002 10B5     		push	{r4, lr}
 351              	.LCFI2:
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 4, -8
 354              		.cfi_offset 14, -4
 355 0004 0446     		mov	r4, r0
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 356              		.loc 1 348 0
 357 0006 036C     		ldr	r3, [r0, #64]
 358 0008 43F00203 		orr	r3, r3, #2
 359 000c 0364     		str	r3, [r0, #64]
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 360              		.loc 1 352 0
 361 000e 0268     		ldr	r2, [r0]
 362 0010 9368     		ldr	r3, [r2, #8]
 363 0012 23F00103 		bic	r3, r3, #1
 364 0016 9360     		str	r3, [r2, #8]
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 365              		.loc 1 356 0
 366 0018 0368     		ldr	r3, [r0]
 367 001a 9B68     		ldr	r3, [r3, #8]
 368 001c 13F0010F 		tst	r3, #1
 369 0020 03D0     		beq	.L33
 370              	.LVL12:
 371              	.L27:
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 372              		.loc 1 369 0
 373 0022 0020     		movs	r0, #0
 374 0024 84F83C00 		strb	r0, [r4, #60]
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 375              		.loc 1 373 0
 376 0028 10BD     		pop	{r4, pc}
 377              	.LVL13:
 378              	.L33:
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 379              		.loc 1 359 0
 380 002a FFF7FEFF 		bl	HAL_ADC_MspDeInit
 381              	.LVL14:
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 382              		.loc 1 362 0
 383 002e 0023     		movs	r3, #0
 384 0030 6364     		str	r3, [r4, #68]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 36


 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 385              		.loc 1 365 0
 386 0032 2364     		str	r3, [r4, #64]
 387 0034 F5E7     		b	.L27
 388              	.LVL15:
 389              	.L28:
 390              	.LCFI3:
 391              		.cfi_def_cfa_offset 0
 392              		.cfi_restore 4
 393              		.cfi_restore 14
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 394              		.loc 1 341 0
 395 0036 0120     		movs	r0, #1
 396              	.LVL16:
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 397              		.loc 1 373 0
 398 0038 7047     		bx	lr
 399              		.cfi_endproc
 400              	.LFE139:
 402              		.section	.text.HAL_ADC_Start,"ax",%progbits
 403              		.align	1
 404              		.global	HAL_ADC_Start
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-sp-d16
 410              	HAL_ADC_Start:
 411              	.LFB142:
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __IO uint32_t counter = 0;
 412              		.loc 1 436 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 8
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417              	.LVL17:
 418 0000 82B0     		sub	sp, sp, #8
 419              	.LCFI4:
 420              		.cfi_def_cfa_offset 8
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 421              		.loc 1 437 0
 422 0002 0023     		movs	r3, #0
 423 0004 0193     		str	r3, [sp, #4]
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 424              		.loc 1 444 0
 425 0006 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 426 000a 012B     		cmp	r3, #1
 427 000c 61D0     		beq	.L43
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 428              		.loc 1 444 0 is_stmt 0 discriminator 2
 429 000e 0123     		movs	r3, #1
 430 0010 80F83C30 		strb	r3, [r0, #60]
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {  
 431              		.loc 1 449 0 is_stmt 1 discriminator 2
 432 0014 0368     		ldr	r3, [r0]
 433 0016 9A68     		ldr	r2, [r3, #8]
 434 0018 12F0010F 		tst	r2, #1
 435 001c 13D1     		bne	.L36
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 37


 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 436              		.loc 1 452 0
 437 001e 9A68     		ldr	r2, [r3, #8]
 438 0020 42F00102 		orr	r2, r2, #1
 439 0024 9A60     		str	r2, [r3, #8]
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     while(counter != 0)
 440              		.loc 1 456 0
 441 0026 2F4B     		ldr	r3, .L50
 442 0028 1B68     		ldr	r3, [r3]
 443 002a 2F4A     		ldr	r2, .L50+4
 444 002c A2FB0323 		umull	r2, r3, r2, r3
 445 0030 9B0C     		lsrs	r3, r3, #18
 446 0032 03EB4303 		add	r3, r3, r3, lsl #1
 447 0036 0193     		str	r3, [sp, #4]
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 448              		.loc 1 457 0
 449 0038 02E0     		b	.L37
 450              	.L38:
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 451              		.loc 1 459 0
 452 003a 019B     		ldr	r3, [sp, #4]
 453 003c 013B     		subs	r3, r3, #1
 454 003e 0193     		str	r3, [sp, #4]
 455              	.L37:
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 456              		.loc 1 457 0
 457 0040 019B     		ldr	r3, [sp, #4]
 458 0042 002B     		cmp	r3, #0
 459 0044 F9D1     		bne	.L38
 460              	.L36:
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 461              		.loc 1 464 0
 462 0046 0268     		ldr	r2, [r0]
 463 0048 9368     		ldr	r3, [r2, #8]
 464 004a 13F0010F 		tst	r3, #1
 465 004e 42D0     		beq	.L44
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 466              		.loc 1 469 0
 467 0050 016C     		ldr	r1, [r0, #64]
 468 0052 264B     		ldr	r3, .L50+8
 469 0054 0B40     		ands	r3, r3, r1
 470 0056 43F48073 		orr	r3, r3, #256
 471 005a 0364     		str	r3, [r0, #64]
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 472              		.loc 1 475 0
 473 005c 5368     		ldr	r3, [r2, #4]
 474 005e 13F4806F 		tst	r3, #1024
 475 0062 05D0     		beq	.L39
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 476              		.loc 1 477 0
 477 0064 036C     		ldr	r3, [r0, #64]
 478 0066 23F44053 		bic	r3, r3, #12288
 479 006a 43F48053 		orr	r3, r3, #4096
 480 006e 0364     		str	r3, [r0, #64]
 481              	.L39:
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 482              		.loc 1 481 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 38


 483 0070 036C     		ldr	r3, [r0, #64]
 484 0072 13F4805F 		tst	r3, #4096
 485 0076 19D0     		beq	.L40
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 486              		.loc 1 484 0
 487 0078 436C     		ldr	r3, [r0, #68]
 488 007a 23F00603 		bic	r3, r3, #6
 489 007e 4364     		str	r3, [r0, #68]
 490              	.L41:
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 491              		.loc 1 495 0
 492 0080 0023     		movs	r3, #0
 493 0082 80F83C30 		strb	r3, [r0, #60]
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 494              		.loc 1 499 0
 495 0086 6FF02203 		mvn	r3, #34
 496 008a 1360     		str	r3, [r2]
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 497              		.loc 1 502 0
 498 008c 184B     		ldr	r3, .L50+12
 499 008e 5B68     		ldr	r3, [r3, #4]
 500 0090 13F01F0F 		tst	r3, #31
 501 0094 0DD1     		bne	.L42
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 502              		.loc 1 505 0
 503 0096 0368     		ldr	r3, [r0]
 504 0098 9A68     		ldr	r2, [r3, #8]
 505 009a 12F0405F 		tst	r2, #805306368
 506 009e 1DD1     		bne	.L45
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 507              		.loc 1 508 0
 508 00a0 9A68     		ldr	r2, [r3, #8]
 509 00a2 42F08042 		orr	r2, r2, #1073741824
 510 00a6 9A60     		str	r2, [r3, #8]
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 511              		.loc 1 523 0
 512 00a8 0020     		movs	r0, #0
 513              	.LVL18:
 514 00aa 15E0     		b	.L35
 515              	.LVL19:
 516              	.L40:
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 517              		.loc 1 489 0
 518 00ac 0023     		movs	r3, #0
 519 00ae 4364     		str	r3, [r0, #68]
 520 00b0 E6E7     		b	.L41
 521              	.L42:
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 522              		.loc 1 514 0
 523 00b2 0368     		ldr	r3, [r0]
 524 00b4 0F4A     		ldr	r2, .L50+16
 525 00b6 9342     		cmp	r3, r2
 526 00b8 01D0     		beq	.L49
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 527              		.loc 1 523 0
 528 00ba 0020     		movs	r0, #0
 529              	.LVL20:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 39


 530 00bc 0CE0     		b	.L35
 531              	.LVL21:
 532              	.L49:
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 533              		.loc 1 514 0 discriminator 1
 534 00be 9A68     		ldr	r2, [r3, #8]
 535 00c0 12F0405F 		tst	r2, #805306368
 536 00c4 0CD1     		bne	.L47
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 537              		.loc 1 517 0
 538 00c6 9A68     		ldr	r2, [r3, #8]
 539 00c8 42F08042 		orr	r2, r2, #1073741824
 540 00cc 9A60     		str	r2, [r3, #8]
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 541              		.loc 1 523 0
 542 00ce 0020     		movs	r0, #0
 543              	.LVL22:
 544 00d0 02E0     		b	.L35
 545              	.LVL23:
 546              	.L43:
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 547              		.loc 1 444 0
 548 00d2 0220     		movs	r0, #2
 549              	.LVL24:
 550 00d4 00E0     		b	.L35
 551              	.LVL25:
 552              	.L44:
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 553              		.loc 1 523 0
 554 00d6 0020     		movs	r0, #0
 555              	.LVL26:
 556              	.L35:
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 557              		.loc 1 524 0
 558 00d8 02B0     		add	sp, sp, #8
 559              	.LCFI5:
 560              		.cfi_remember_state
 561              		.cfi_def_cfa_offset 0
 562              		@ sp needed
 563 00da 7047     		bx	lr
 564              	.LVL27:
 565              	.L45:
 566              	.LCFI6:
 567              		.cfi_restore_state
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 568              		.loc 1 523 0
 569 00dc 0020     		movs	r0, #0
 570              	.LVL28:
 571 00de FBE7     		b	.L35
 572              	.LVL29:
 573              	.L47:
 574 00e0 0020     		movs	r0, #0
 575              	.LVL30:
 576 00e2 F9E7     		b	.L35
 577              	.L51:
 578              		.align	2
 579              	.L50:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 40


 580 00e4 00000000 		.word	SystemCoreClock
 581 00e8 83DE1B43 		.word	1125899907
 582 00ec FEF8FFFF 		.word	-1794
 583 00f0 00230140 		.word	1073816320
 584 00f4 00200140 		.word	1073815552
 585              		.cfi_endproc
 586              	.LFE142:
 588              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 589              		.align	1
 590              		.global	HAL_ADC_Stop
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 594              		.fpu fpv5-sp-d16
 596              	HAL_ADC_Stop:
 597              	.LFB143:
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
 598              		.loc 1 537 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 603              	.LVL31:
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 604              		.loc 1 542 0
 605 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 606 0004 012B     		cmp	r3, #1
 607 0006 17D0     		beq	.L55
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 608              		.loc 1 542 0 is_stmt 0 discriminator 2
 609 0008 0123     		movs	r3, #1
 610 000a 80F83C30 		strb	r3, [r0, #60]
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 611              		.loc 1 546 0 is_stmt 1 discriminator 2
 612 000e 0268     		ldr	r2, [r0]
 613 0010 9368     		ldr	r3, [r2, #8]
 614 0012 23F00103 		bic	r3, r3, #1
 615 0016 9360     		str	r3, [r2, #8]
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 616              		.loc 1 549 0 discriminator 2
 617 0018 0368     		ldr	r3, [r0]
 618 001a 9B68     		ldr	r3, [r3, #8]
 619 001c 13F0010F 		tst	r3, #1
 620 0020 05D1     		bne	.L54
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 621              		.loc 1 552 0
 622 0022 026C     		ldr	r2, [r0, #64]
 623 0024 054B     		ldr	r3, .L56
 624 0026 1340     		ands	r3, r3, r2
 625 0028 43F00103 		orr	r3, r3, #1
 626 002c 0364     		str	r3, [r0, #64]
 627              	.L54:
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 628              		.loc 1 558 0
 629 002e 0023     		movs	r3, #0
 630 0030 80F83C30 		strb	r3, [r0, #60]
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 41


 631              		.loc 1 561 0
 632 0034 1846     		mov	r0, r3
 633              	.LVL32:
 634 0036 7047     		bx	lr
 635              	.LVL33:
 636              	.L55:
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 637              		.loc 1 542 0
 638 0038 0220     		movs	r0, #2
 639              	.LVL34:
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 640              		.loc 1 562 0
 641 003a 7047     		bx	lr
 642              	.L57:
 643              		.align	2
 644              	.L56:
 645 003c FEEEFFFF 		.word	-4354
 646              		.cfi_endproc
 647              	.LFE143:
 649              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 650              		.align	1
 651              		.global	HAL_ADC_PollForConversion
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 655              		.fpu fpv5-sp-d16
 657              	HAL_ADC_PollForConversion:
 658              	.LFB144:
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   uint32_t tickstart = 0;
 659              		.loc 1 580 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              	.LVL35:
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 664              		.loc 1 589 0
 665 0000 0368     		ldr	r3, [r0]
 666 0002 9A68     		ldr	r2, [r3, #8]
 667 0004 12F4806F 		tst	r2, #1024
 668 0008 03D0     		beq	.L59
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 669              		.loc 1 590 0 discriminator 1
 670 000a 9B68     		ldr	r3, [r3, #8]
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 671              		.loc 1 589 0 discriminator 1
 672 000c 13F4807F 		tst	r3, #256
 673 0010 1CD1     		bne	.L73
 674              	.L59:
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   uint32_t tickstart = 0;
 675              		.loc 1 580 0
 676 0012 70B5     		push	{r4, r5, r6, lr}
 677              	.LCFI7:
 678              		.cfi_def_cfa_offset 16
 679              		.cfi_offset 4, -16
 680              		.cfi_offset 5, -12
 681              		.cfi_offset 6, -8
 682              		.cfi_offset 14, -4
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 42


 683 0014 0D46     		mov	r5, r1
 684 0016 0446     		mov	r4, r0
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 685              		.loc 1 602 0
 686 0018 FFF7FEFF 		bl	HAL_GetTick
 687              	.LVL36:
 688 001c 0646     		mov	r6, r0
 689              	.LVL37:
 690              	.L62:
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 691              		.loc 1 605 0
 692 001e 2368     		ldr	r3, [r4]
 693 0020 1A68     		ldr	r2, [r3]
 694 0022 12F0020F 		tst	r2, #2
 695 0026 1AD1     		bne	.L74
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 696              		.loc 1 608 0
 697 0028 B5F1FF3F 		cmp	r5, #-1
 698 002c F7D0     		beq	.L62
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 699              		.loc 1 610 0
 700 002e 25B1     		cbz	r5, .L63
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 701              		.loc 1 610 0 is_stmt 0 discriminator 1
 702 0030 FFF7FEFF 		bl	HAL_GetTick
 703              	.LVL38:
 704 0034 801B     		subs	r0, r0, r6
 705 0036 A842     		cmp	r0, r5
 706 0038 F1D9     		bls	.L62
 707              	.L63:
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         
 708              		.loc 1 613 0 is_stmt 1
 709 003a 236C     		ldr	r3, [r4, #64]
 710 003c 43F00403 		orr	r3, r3, #4
 711 0040 2364     		str	r3, [r4, #64]
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         
 712              		.loc 1 616 0
 713 0042 0023     		movs	r3, #0
 714 0044 84F83C30 		strb	r3, [r4, #60]
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 715              		.loc 1 618 0
 716 0048 0320     		movs	r0, #3
 717 004a 2DE0     		b	.L60
 718              	.LVL39:
 719              	.L73:
 720              	.LCFI8:
 721              		.cfi_def_cfa_offset 0
 722              		.cfi_restore 4
 723              		.cfi_restore 5
 724              		.cfi_restore 6
 725              		.cfi_restore 14
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 726              		.loc 1 593 0
 727 004c 036C     		ldr	r3, [r0, #64]
 728 004e 43F02003 		orr	r3, r3, #32
 729 0052 0364     		str	r3, [r0, #64]
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 43


 730              		.loc 1 596 0
 731 0054 0023     		movs	r3, #0
 732 0056 80F83C30 		strb	r3, [r0, #60]
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 733              		.loc 1 598 0
 734 005a 0120     		movs	r0, #1
 735              	.LVL40:
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 736              		.loc 1 651 0
 737 005c 7047     		bx	lr
 738              	.LVL41:
 739              	.L74:
 740              	.LCFI9:
 741              		.cfi_def_cfa_offset 16
 742              		.cfi_offset 4, -16
 743              		.cfi_offset 5, -12
 744              		.cfi_offset 6, -8
 745              		.cfi_offset 14, -4
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 746              		.loc 1 624 0
 747 005e 6FF01202 		mvn	r2, #18
 748 0062 1A60     		str	r2, [r3]
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 749              		.loc 1 627 0
 750 0064 236C     		ldr	r3, [r4, #64]
 751 0066 43F40073 		orr	r3, r3, #512
 752 006a 2364     		str	r3, [r4, #64]
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 753              		.loc 1 635 0
 754 006c 2368     		ldr	r3, [r4]
 755 006e 9A68     		ldr	r2, [r3, #8]
 756 0070 12F0405F 		tst	r2, #805306368
 757 0074 17D1     		bne	.L66
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 758              		.loc 1 636 0 discriminator 1
 759 0076 A269     		ldr	r2, [r4, #24]
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 760              		.loc 1 635 0 discriminator 1
 761 0078 BAB9     		cbnz	r2, .L67
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 762              		.loc 1 637 0
 763 007a DA6A     		ldr	r2, [r3, #44]
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 764              		.loc 1 636 0
 765 007c 12F4700F 		tst	r2, #15728640
 766 0080 03D0     		beq	.L65
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 767              		.loc 1 638 0
 768 0082 9B68     		ldr	r3, [r3, #8]
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 769              		.loc 1 637 0
 770 0084 13F4806F 		tst	r3, #1024
 771 0088 11D1     		bne	.L68
 772              	.L65:
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 773              		.loc 1 641 0
 774 008a 236C     		ldr	r3, [r4, #64]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 44


 775 008c 23F48073 		bic	r3, r3, #256
 776 0090 2364     		str	r3, [r4, #64]
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     { 
 777              		.loc 1 643 0
 778 0092 236C     		ldr	r3, [r4, #64]
 779 0094 13F4805F 		tst	r3, #4096
 780 0098 0BD1     		bne	.L69
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 781              		.loc 1 645 0
 782 009a 236C     		ldr	r3, [r4, #64]
 783 009c 43F00103 		orr	r3, r3, #1
 784 00a0 2364     		str	r3, [r4, #64]
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 785              		.loc 1 650 0
 786 00a2 0020     		movs	r0, #0
 787 00a4 00E0     		b	.L60
 788              	.L66:
 789 00a6 0020     		movs	r0, #0
 790              	.L60:
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 791              		.loc 1 651 0
 792 00a8 70BD     		pop	{r4, r5, r6, pc}
 793              	.LVL42:
 794              	.L67:
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 795              		.loc 1 650 0
 796 00aa 0020     		movs	r0, #0
 797 00ac FCE7     		b	.L60
 798              	.L68:
 799 00ae 0020     		movs	r0, #0
 800 00b0 FAE7     		b	.L60
 801              	.L69:
 802 00b2 0020     		movs	r0, #0
 803 00b4 F8E7     		b	.L60
 804              		.cfi_endproc
 805              	.LFE144:
 807              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 808              		.align	1
 809              		.global	HAL_ADC_PollForEvent
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu fpv5-sp-d16
 815              	HAL_ADC_PollForEvent:
 816              	.LFB145:
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   uint32_t tickstart = 0;
 817              		.loc 1 665 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              	.LVL43:
 822 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 823              	.LCFI10:
 824              		.cfi_def_cfa_offset 24
 825              		.cfi_offset 3, -24
 826              		.cfi_offset 4, -20
 827              		.cfi_offset 5, -16
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 45


 828              		.cfi_offset 6, -12
 829              		.cfi_offset 7, -8
 830              		.cfi_offset 14, -4
 831 0002 0446     		mov	r4, r0
 832 0004 0D46     		mov	r5, r1
 833 0006 1646     		mov	r6, r2
 834              	.LVL44:
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 835              		.loc 1 673 0
 836 0008 FFF7FEFF 		bl	HAL_GetTick
 837              	.LVL45:
 838 000c 0746     		mov	r7, r0
 839              	.LVL46:
 840              	.L77:
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 841              		.loc 1 676 0
 842 000e 2368     		ldr	r3, [r4]
 843 0010 1A68     		ldr	r2, [r3]
 844 0012 35EA0202 		bics	r2, r5, r2
 845 0016 11D0     		beq	.L83
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 846              		.loc 1 679 0
 847 0018 B6F1FF3F 		cmp	r6, #-1
 848 001c F7D0     		beq	.L77
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 849              		.loc 1 681 0
 850 001e 26B1     		cbz	r6, .L78
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 851              		.loc 1 681 0 is_stmt 0 discriminator 1
 852 0020 FFF7FEFF 		bl	HAL_GetTick
 853              	.LVL47:
 854 0024 C01B     		subs	r0, r0, r7
 855 0026 B042     		cmp	r0, r6
 856 0028 F1D9     		bls	.L77
 857              	.L78:
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         
 858              		.loc 1 684 0 is_stmt 1
 859 002a 236C     		ldr	r3, [r4, #64]
 860 002c 43F00403 		orr	r3, r3, #4
 861 0030 2364     		str	r3, [r4, #64]
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         
 862              		.loc 1 687 0
 863 0032 0023     		movs	r3, #0
 864 0034 84F83C30 		strb	r3, [r4, #60]
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 865              		.loc 1 689 0
 866 0038 0320     		movs	r0, #3
 867 003a 0DE0     		b	.L79
 868              	.L83:
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 869              		.loc 1 695 0
 870 003c 012D     		cmp	r5, #1
 871 003e 0CD0     		beq	.L84
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Set ADC error code to overrun */
 872              		.loc 1 707 0
 873 0040 226C     		ldr	r2, [r4, #64]
 874 0042 42F48062 		orr	r2, r2, #1024
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 46


 875 0046 2264     		str	r2, [r4, #64]
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 876              		.loc 1 709 0
 877 0048 626C     		ldr	r2, [r4, #68]
 878 004a 42F00202 		orr	r2, r2, #2
 879 004e 6264     		str	r2, [r4, #68]
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 880              		.loc 1 712 0
 881 0050 6FF02002 		mvn	r2, #32
 882 0054 1A60     		str	r2, [r3]
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 883              		.loc 1 716 0
 884 0056 0020     		movs	r0, #0
 885              	.L79:
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 886              		.loc 1 717 0
 887 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 888              	.LVL48:
 889              	.L84:
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 890              		.loc 1 698 0
 891 005a 226C     		ldr	r2, [r4, #64]
 892 005c 42F48032 		orr	r2, r2, #65536
 893 0060 2264     		str	r2, [r4, #64]
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 894              		.loc 1 701 0
 895 0062 6FF00102 		mvn	r2, #1
 896 0066 1A60     		str	r2, [r3]
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 897              		.loc 1 716 0
 898 0068 0020     		movs	r0, #0
 899 006a F5E7     		b	.L79
 900              		.cfi_endproc
 901              	.LFE145:
 903              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 904              		.align	1
 905              		.global	HAL_ADC_Start_IT
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv5-sp-d16
 911              	HAL_ADC_Start_IT:
 912              	.LFB146:
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __IO uint32_t counter = 0;
 913              		.loc 1 727 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 8
 916              		@ frame_needed = 0, uses_anonymous_args = 0
 917              		@ link register save eliminated.
 918              	.LVL49:
 919 0000 82B0     		sub	sp, sp, #8
 920              	.LCFI11:
 921              		.cfi_def_cfa_offset 8
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 922              		.loc 1 728 0
 923 0002 0023     		movs	r3, #0
 924 0004 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 47


 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 925              		.loc 1 735 0
 926 0006 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 927 000a 012B     		cmp	r3, #1
 928 000c 66D0     		beq	.L94
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 929              		.loc 1 735 0 is_stmt 0 discriminator 2
 930 000e 0123     		movs	r3, #1
 931 0010 80F83C30 		strb	r3, [r0, #60]
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {  
 932              		.loc 1 740 0 is_stmt 1 discriminator 2
 933 0014 0368     		ldr	r3, [r0]
 934 0016 9A68     		ldr	r2, [r3, #8]
 935 0018 12F0010F 		tst	r2, #1
 936 001c 13D1     		bne	.L87
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 937              		.loc 1 743 0
 938 001e 9A68     		ldr	r2, [r3, #8]
 939 0020 42F00102 		orr	r2, r2, #1
 940 0024 9A60     		str	r2, [r3, #8]
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     while(counter != 0)
 941              		.loc 1 747 0
 942 0026 324B     		ldr	r3, .L101
 943 0028 1B68     		ldr	r3, [r3]
 944 002a 324A     		ldr	r2, .L101+4
 945 002c A2FB0323 		umull	r2, r3, r2, r3
 946 0030 9B0C     		lsrs	r3, r3, #18
 947 0032 03EB4303 		add	r3, r3, r3, lsl #1
 948 0036 0193     		str	r3, [sp, #4]
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 949              		.loc 1 748 0
 950 0038 02E0     		b	.L88
 951              	.L89:
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 952              		.loc 1 750 0
 953 003a 019B     		ldr	r3, [sp, #4]
 954 003c 013B     		subs	r3, r3, #1
 955 003e 0193     		str	r3, [sp, #4]
 956              	.L88:
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 957              		.loc 1 748 0
 958 0040 019B     		ldr	r3, [sp, #4]
 959 0042 002B     		cmp	r3, #0
 960 0044 F9D1     		bne	.L89
 961              	.L87:
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 962              		.loc 1 755 0
 963 0046 0268     		ldr	r2, [r0]
 964 0048 9368     		ldr	r3, [r2, #8]
 965 004a 13F0010F 		tst	r3, #1
 966 004e 47D0     		beq	.L95
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 967              		.loc 1 760 0
 968 0050 016C     		ldr	r1, [r0, #64]
 969 0052 294B     		ldr	r3, .L101+8
 970 0054 0B40     		ands	r3, r3, r1
 971 0056 43F48073 		orr	r3, r3, #256
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 48


 972 005a 0364     		str	r3, [r0, #64]
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 973              		.loc 1 766 0
 974 005c 5368     		ldr	r3, [r2, #4]
 975 005e 13F4806F 		tst	r3, #1024
 976 0062 05D0     		beq	.L90
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 977              		.loc 1 768 0
 978 0064 036C     		ldr	r3, [r0, #64]
 979 0066 23F44053 		bic	r3, r3, #12288
 980 006a 43F48053 		orr	r3, r3, #4096
 981 006e 0364     		str	r3, [r0, #64]
 982              	.L90:
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 983              		.loc 1 772 0
 984 0070 036C     		ldr	r3, [r0, #64]
 985 0072 13F4805F 		tst	r3, #4096
 986 0076 1ED0     		beq	.L91
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 987              		.loc 1 775 0
 988 0078 436C     		ldr	r3, [r0, #68]
 989 007a 23F00603 		bic	r3, r3, #6
 990 007e 4364     		str	r3, [r0, #68]
 991              	.L92:
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 992              		.loc 1 786 0
 993 0080 0023     		movs	r3, #0
 994 0082 80F83C30 		strb	r3, [r0, #60]
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 995              		.loc 1 790 0
 996 0086 6FF02203 		mvn	r3, #34
 997 008a 1360     		str	r3, [r2]
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 998              		.loc 1 793 0
 999 008c 0268     		ldr	r2, [r0]
 1000 008e 5168     		ldr	r1, [r2, #4]
 1001 0090 1A4B     		ldr	r3, .L101+12
 1002 0092 0B43     		orrs	r3, r3, r1
 1003 0094 5360     		str	r3, [r2, #4]
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 1004              		.loc 1 796 0
 1005 0096 1A4B     		ldr	r3, .L101+16
 1006 0098 5B68     		ldr	r3, [r3, #4]
 1007 009a 13F01F0F 		tst	r3, #31
 1008 009e 0DD1     		bne	.L93
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 1009              		.loc 1 799 0
 1010 00a0 0368     		ldr	r3, [r0]
 1011 00a2 9A68     		ldr	r2, [r3, #8]
 1012 00a4 12F0405F 		tst	r2, #805306368
 1013 00a8 1DD1     		bne	.L96
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 1014              		.loc 1 802 0
 1015 00aa 9A68     		ldr	r2, [r3, #8]
 1016 00ac 42F08042 		orr	r2, r2, #1073741824
 1017 00b0 9A60     		str	r2, [r3, #8]
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 49


 1018              		.loc 1 817 0
 1019 00b2 0020     		movs	r0, #0
 1020              	.LVL50:
 1021 00b4 15E0     		b	.L86
 1022              	.LVL51:
 1023              	.L91:
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 1024              		.loc 1 780 0
 1025 00b6 0023     		movs	r3, #0
 1026 00b8 4364     		str	r3, [r0, #68]
 1027 00ba E1E7     		b	.L92
 1028              	.L93:
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 1029              		.loc 1 808 0
 1030 00bc 0368     		ldr	r3, [r0]
 1031 00be 114A     		ldr	r2, .L101+20
 1032 00c0 9342     		cmp	r3, r2
 1033 00c2 01D0     		beq	.L100
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1034              		.loc 1 817 0
 1035 00c4 0020     		movs	r0, #0
 1036              	.LVL52:
 1037 00c6 0CE0     		b	.L86
 1038              	.LVL53:
 1039              	.L100:
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 1040              		.loc 1 808 0 discriminator 1
 1041 00c8 9A68     		ldr	r2, [r3, #8]
 1042 00ca 12F0405F 		tst	r2, #805306368
 1043 00ce 0CD1     		bne	.L98
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 1044              		.loc 1 811 0
 1045 00d0 9A68     		ldr	r2, [r3, #8]
 1046 00d2 42F08042 		orr	r2, r2, #1073741824
 1047 00d6 9A60     		str	r2, [r3, #8]
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1048              		.loc 1 817 0
 1049 00d8 0020     		movs	r0, #0
 1050              	.LVL54:
 1051 00da 02E0     		b	.L86
 1052              	.LVL55:
 1053              	.L94:
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1054              		.loc 1 735 0
 1055 00dc 0220     		movs	r0, #2
 1056              	.LVL56:
 1057 00de 00E0     		b	.L86
 1058              	.LVL57:
 1059              	.L95:
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1060              		.loc 1 817 0
 1061 00e0 0020     		movs	r0, #0
 1062              	.LVL58:
 1063              	.L86:
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1064              		.loc 1 818 0
 1065 00e2 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 50


 1066              	.LCFI12:
 1067              		.cfi_remember_state
 1068              		.cfi_def_cfa_offset 0
 1069              		@ sp needed
 1070 00e4 7047     		bx	lr
 1071              	.LVL59:
 1072              	.L96:
 1073              	.LCFI13:
 1074              		.cfi_restore_state
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1075              		.loc 1 817 0
 1076 00e6 0020     		movs	r0, #0
 1077              	.LVL60:
 1078 00e8 FBE7     		b	.L86
 1079              	.LVL61:
 1080              	.L98:
 1081 00ea 0020     		movs	r0, #0
 1082              	.LVL62:
 1083 00ec F9E7     		b	.L86
 1084              	.L102:
 1085 00ee 00BF     		.align	2
 1086              	.L101:
 1087 00f0 00000000 		.word	SystemCoreClock
 1088 00f4 83DE1B43 		.word	1125899907
 1089 00f8 FEF8FFFF 		.word	-1794
 1090 00fc 20000004 		.word	67108896
 1091 0100 00230140 		.word	1073816320
 1092 0104 00200140 		.word	1073815552
 1093              		.cfi_endproc
 1094              	.LFE146:
 1096              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 1097              		.align	1
 1098              		.global	HAL_ADC_Stop_IT
 1099              		.syntax unified
 1100              		.thumb
 1101              		.thumb_func
 1102              		.fpu fpv5-sp-d16
 1104              	HAL_ADC_Stop_IT:
 1105              	.LFB147:
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check the parameters */
 1106              		.loc 1 830 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 1110              		@ link register save eliminated.
 1111              	.LVL63:
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1112              		.loc 1 835 0
 1113 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1114 0004 012B     		cmp	r3, #1
 1115 0006 1BD0     		beq	.L106
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1116              		.loc 1 835 0 is_stmt 0 discriminator 2
 1117 0008 0123     		movs	r3, #1
 1118 000a 80F83C30 		strb	r3, [r0, #60]
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1119              		.loc 1 839 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 51


 1120 000e 0268     		ldr	r2, [r0]
 1121 0010 9368     		ldr	r3, [r2, #8]
 1122 0012 23F00103 		bic	r3, r3, #1
 1123 0016 9360     		str	r3, [r2, #8]
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 1124              		.loc 1 842 0 discriminator 2
 1125 0018 0368     		ldr	r3, [r0]
 1126 001a 9A68     		ldr	r2, [r3, #8]
 1127 001c 12F0010F 		tst	r2, #1
 1128 0020 09D1     		bne	.L105
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1129              		.loc 1 845 0
 1130 0022 5968     		ldr	r1, [r3, #4]
 1131 0024 074A     		ldr	r2, .L107
 1132 0026 0A40     		ands	r2, r2, r1
 1133 0028 5A60     		str	r2, [r3, #4]
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1134              		.loc 1 848 0
 1135 002a 026C     		ldr	r2, [r0, #64]
 1136 002c 064B     		ldr	r3, .L107+4
 1137 002e 1340     		ands	r3, r3, r2
 1138 0030 43F00103 		orr	r3, r3, #1
 1139 0034 0364     		str	r3, [r0, #64]
 1140              	.L105:
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1141              		.loc 1 854 0
 1142 0036 0023     		movs	r3, #0
 1143 0038 80F83C30 		strb	r3, [r0, #60]
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1144              		.loc 1 857 0
 1145 003c 1846     		mov	r0, r3
 1146              	.LVL64:
 1147 003e 7047     		bx	lr
 1148              	.LVL65:
 1149              	.L106:
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1150              		.loc 1 835 0
 1151 0040 0220     		movs	r0, #2
 1152              	.LVL66:
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1153              		.loc 1 858 0
 1154 0042 7047     		bx	lr
 1155              	.L108:
 1156              		.align	2
 1157              	.L107:
 1158 0044 DFFFFFFB 		.word	-67108897
 1159 0048 FEEEFFFF 		.word	-4354
 1160              		.cfi_endproc
 1161              	.LFE147:
 1163              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1164              		.align	1
 1165              		.global	HAL_ADC_Start_DMA
 1166              		.syntax unified
 1167              		.thumb
 1168              		.thumb_func
 1169              		.fpu fpv5-sp-d16
 1171              	HAL_ADC_Start_DMA:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 52


 1172              	.LFB149:
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __IO uint32_t counter = 0;
 1173              		.loc 1 1012 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 8
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177              	.LVL67:
 1178 0000 30B5     		push	{r4, r5, lr}
 1179              	.LCFI14:
 1180              		.cfi_def_cfa_offset 12
 1181              		.cfi_offset 4, -12
 1182              		.cfi_offset 5, -8
 1183              		.cfi_offset 14, -4
 1184 0002 83B0     		sub	sp, sp, #12
 1185              	.LCFI15:
 1186              		.cfi_def_cfa_offset 24
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1187              		.loc 1 1013 0
 1188 0004 0023     		movs	r3, #0
 1189 0006 0193     		str	r3, [sp, #4]
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1190              		.loc 1 1020 0
 1191 0008 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1192 000c 012B     		cmp	r3, #1
 1193 000e 7ED0     		beq	.L118
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1194              		.loc 1 1020 0 is_stmt 0 discriminator 2
 1195 0010 0123     		movs	r3, #1
 1196 0012 80F83C30 		strb	r3, [r0, #60]
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {  
 1197              		.loc 1 1025 0 is_stmt 1 discriminator 2
 1198 0016 0468     		ldr	r4, [r0]
 1199 0018 A368     		ldr	r3, [r4, #8]
 1200 001a 13F0010F 		tst	r3, #1
 1201 001e 13D1     		bne	.L111
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1202              		.loc 1 1028 0
 1203 0020 A368     		ldr	r3, [r4, #8]
 1204 0022 43F00103 		orr	r3, r3, #1
 1205 0026 A360     		str	r3, [r4, #8]
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     while(counter != 0)
 1206              		.loc 1 1032 0
 1207 0028 3D4B     		ldr	r3, .L125
 1208 002a 1C68     		ldr	r4, [r3]
 1209 002c 3D4B     		ldr	r3, .L125+4
 1210 002e A3FB0434 		umull	r3, r4, r3, r4
 1211 0032 A40C     		lsrs	r4, r4, #18
 1212 0034 04EB4404 		add	r4, r4, r4, lsl #1
 1213 0038 0194     		str	r4, [sp, #4]
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 1214              		.loc 1 1033 0
 1215 003a 02E0     		b	.L112
 1216              	.L113:
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 1217              		.loc 1 1035 0
 1218 003c 019C     		ldr	r4, [sp, #4]
 1219 003e 013C     		subs	r4, r4, #1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 53


 1220 0040 0194     		str	r4, [sp, #4]
 1221              	.L112:
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 1222              		.loc 1 1033 0
 1223 0042 019C     		ldr	r4, [sp, #4]
 1224 0044 002C     		cmp	r4, #0
 1225 0046 F9D1     		bne	.L113
 1226              	.L111:
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 1227              		.loc 1 1040 0
 1228 0048 0368     		ldr	r3, [r0]
 1229 004a 9C68     		ldr	r4, [r3, #8]
 1230 004c 14F0010F 		tst	r4, #1
 1231 0050 5FD0     		beq	.L119
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 1232              		.loc 1 1045 0
 1233 0052 056C     		ldr	r5, [r0, #64]
 1234 0054 344C     		ldr	r4, .L125+8
 1235 0056 2C40     		ands	r4, r4, r5
 1236 0058 44F48074 		orr	r4, r4, #256
 1237 005c 0464     		str	r4, [r0, #64]
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 1238              		.loc 1 1051 0
 1239 005e 5B68     		ldr	r3, [r3, #4]
 1240 0060 13F4806F 		tst	r3, #1024
 1241 0064 05D0     		beq	.L114
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 1242              		.loc 1 1053 0
 1243 0066 036C     		ldr	r3, [r0, #64]
 1244 0068 23F44053 		bic	r3, r3, #12288
 1245 006c 43F48053 		orr	r3, r3, #4096
 1246 0070 0364     		str	r3, [r0, #64]
 1247              	.L114:
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 1248              		.loc 1 1057 0
 1249 0072 036C     		ldr	r3, [r0, #64]
 1250 0074 13F4805F 		tst	r3, #4096
 1251 0078 36D0     		beq	.L115
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 1252              		.loc 1 1060 0
 1253 007a 436C     		ldr	r3, [r0, #68]
 1254 007c 23F00603 		bic	r3, r3, #6
 1255 0080 4364     		str	r3, [r0, #68]
 1256              	.L116:
 1257 0082 1346     		mov	r3, r2
 1258 0084 0446     		mov	r4, r0
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1259              		.loc 1 1071 0
 1260 0086 0022     		movs	r2, #0
 1261              	.LVL68:
 1262 0088 80F83C20 		strb	r2, [r0, #60]
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1263              		.loc 1 1074 0
 1264 008c 826B     		ldr	r2, [r0, #56]
 1265 008e 2748     		ldr	r0, .L125+12
 1266              	.LVL69:
 1267 0090 D063     		str	r0, [r2, #60]
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 54


1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1268              		.loc 1 1077 0
 1269 0092 A26B     		ldr	r2, [r4, #56]
 1270 0094 2648     		ldr	r0, .L125+16
 1271 0096 1064     		str	r0, [r2, #64]
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1272              		.loc 1 1080 0
 1273 0098 A26B     		ldr	r2, [r4, #56]
 1274 009a 2648     		ldr	r0, .L125+20
 1275 009c D064     		str	r0, [r2, #76]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1276              		.loc 1 1088 0
 1277 009e 2268     		ldr	r2, [r4]
 1278 00a0 6FF02200 		mvn	r0, #34
 1279 00a4 1060     		str	r0, [r2]
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1280              		.loc 1 1091 0
 1281 00a6 2568     		ldr	r5, [r4]
 1282 00a8 6868     		ldr	r0, [r5, #4]
 1283 00aa 40F08060 		orr	r0, r0, #67108864
 1284 00ae 6860     		str	r0, [r5, #4]
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1285              		.loc 1 1094 0
 1286 00b0 2568     		ldr	r5, [r4]
 1287 00b2 A868     		ldr	r0, [r5, #8]
 1288 00b4 40F48070 		orr	r0, r0, #256
 1289 00b8 A860     		str	r0, [r5, #8]
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1290              		.loc 1 1097 0
 1291 00ba 2068     		ldr	r0, [r4]
 1292 00bc 0A46     		mov	r2, r1
 1293 00be 00F14C01 		add	r1, r0, #76
 1294              	.LVL70:
 1295 00c2 A06B     		ldr	r0, [r4, #56]
 1296 00c4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1297              	.LVL71:
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 1298              		.loc 1 1100 0
 1299 00c8 1B4B     		ldr	r3, .L125+24
 1300 00ca 5B68     		ldr	r3, [r3, #4]
 1301 00cc 13F01F0F 		tst	r3, #31
 1302 00d0 0DD1     		bne	.L117
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 1303              		.loc 1 1103 0
 1304 00d2 2368     		ldr	r3, [r4]
 1305 00d4 9A68     		ldr	r2, [r3, #8]
 1306 00d6 12F0405F 		tst	r2, #805306368
 1307 00da 1DD1     		bne	.L120
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 1308              		.loc 1 1106 0
 1309 00dc 9A68     		ldr	r2, [r3, #8]
 1310 00de 42F08042 		orr	r2, r2, #1073741824
 1311 00e2 9A60     		str	r2, [r3, #8]
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1312              		.loc 1 1121 0
 1313 00e4 0020     		movs	r0, #0
 1314 00e6 15E0     		b	.L110
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 55


 1315              	.LVL72:
 1316              	.L115:
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 1317              		.loc 1 1065 0
 1318 00e8 0023     		movs	r3, #0
 1319 00ea 4364     		str	r3, [r0, #68]
 1320 00ec C9E7     		b	.L116
 1321              	.LVL73:
 1322              	.L117:
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 1323              		.loc 1 1112 0
 1324 00ee 2368     		ldr	r3, [r4]
 1325 00f0 124A     		ldr	r2, .L125+28
 1326 00f2 9342     		cmp	r3, r2
 1327 00f4 01D0     		beq	.L124
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1328              		.loc 1 1121 0
 1329 00f6 0020     		movs	r0, #0
 1330 00f8 0CE0     		b	.L110
 1331              	.L124:
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 1332              		.loc 1 1112 0 discriminator 1
 1333 00fa 9A68     		ldr	r2, [r3, #8]
 1334 00fc 12F0405F 		tst	r2, #805306368
 1335 0100 0CD1     		bne	.L122
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 1336              		.loc 1 1115 0
 1337 0102 9A68     		ldr	r2, [r3, #8]
 1338 0104 42F08042 		orr	r2, r2, #1073741824
 1339 0108 9A60     		str	r2, [r3, #8]
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1340              		.loc 1 1121 0
 1341 010a 0020     		movs	r0, #0
 1342 010c 02E0     		b	.L110
 1343              	.LVL74:
 1344              	.L118:
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1345              		.loc 1 1020 0
 1346 010e 0220     		movs	r0, #2
 1347              	.LVL75:
 1348 0110 00E0     		b	.L110
 1349              	.LVL76:
 1350              	.L119:
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1351              		.loc 1 1121 0
 1352 0112 0020     		movs	r0, #0
 1353              	.LVL77:
 1354              	.L110:
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1355              		.loc 1 1122 0
 1356 0114 03B0     		add	sp, sp, #12
 1357              	.LCFI16:
 1358              		.cfi_remember_state
 1359              		.cfi_def_cfa_offset 12
 1360              		@ sp needed
 1361 0116 30BD     		pop	{r4, r5, pc}
 1362              	.LVL78:
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 56


 1363              	.L120:
 1364              	.LCFI17:
 1365              		.cfi_restore_state
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1366              		.loc 1 1121 0
 1367 0118 0020     		movs	r0, #0
 1368 011a FBE7     		b	.L110
 1369              	.L122:
 1370 011c 0020     		movs	r0, #0
 1371 011e F9E7     		b	.L110
 1372              	.L126:
 1373              		.align	2
 1374              	.L125:
 1375 0120 00000000 		.word	SystemCoreClock
 1376 0124 83DE1B43 		.word	1125899907
 1377 0128 FEF8FFFF 		.word	-1794
 1378 012c 00000000 		.word	ADC_DMAConvCplt
 1379 0130 00000000 		.word	ADC_DMAHalfConvCplt
 1380 0134 00000000 		.word	ADC_DMAError
 1381 0138 00230140 		.word	1073816320
 1382 013c 00200140 		.word	1073815552
 1383              		.cfi_endproc
 1384              	.LFE149:
 1386              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 1387              		.align	1
 1388              		.global	HAL_ADC_Stop_DMA
 1389              		.syntax unified
 1390              		.thumb
 1391              		.thumb_func
 1392              		.fpu fpv5-sp-d16
 1394              	HAL_ADC_Stop_DMA:
 1395              	.LFB150:
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1396              		.loc 1 1131 0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400              	.LVL79:
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1401              		.loc 1 1138 0
 1402 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1403 0004 012B     		cmp	r3, #1
 1404 0006 26D0     		beq	.L130
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1405              		.loc 1 1131 0 discriminator 2
 1406 0008 10B5     		push	{r4, lr}
 1407              	.LCFI18:
 1408              		.cfi_def_cfa_offset 8
 1409              		.cfi_offset 4, -8
 1410              		.cfi_offset 14, -4
 1411 000a 0446     		mov	r4, r0
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1412              		.loc 1 1138 0 discriminator 2
 1413 000c 0123     		movs	r3, #1
 1414 000e 80F83C30 		strb	r3, [r0, #60]
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1415              		.loc 1 1142 0 discriminator 2
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 57


 1416 0012 0268     		ldr	r2, [r0]
 1417 0014 9368     		ldr	r3, [r2, #8]
 1418 0016 23F00103 		bic	r3, r3, #1
 1419 001a 9360     		str	r3, [r2, #8]
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 1420              		.loc 1 1145 0 discriminator 2
 1421 001c 0368     		ldr	r3, [r0]
 1422 001e 9A68     		ldr	r2, [r3, #8]
 1423 0020 12F0010F 		tst	r2, #1
 1424 0024 04D0     		beq	.L136
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1425              		.loc 1 1132 0
 1426 0026 0020     		movs	r0, #0
 1427              	.LVL80:
 1428              	.L129:
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1429              		.loc 1 1164 0
 1430 0028 0023     		movs	r3, #0
 1431 002a 84F83C30 		strb	r3, [r4, #60]
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1432              		.loc 1 1168 0
 1433 002e 10BD     		pop	{r4, pc}
 1434              	.LVL81:
 1435              	.L136:
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1436              		.loc 1 1148 0
 1437 0030 9A68     		ldr	r2, [r3, #8]
 1438 0032 22F48072 		bic	r2, r2, #256
 1439 0036 9A60     		str	r2, [r3, #8]
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1440              		.loc 1 1152 0
 1441 0038 806B     		ldr	r0, [r0, #56]
 1442              	.LVL82:
 1443 003a FFF7FEFF 		bl	HAL_DMA_Abort
 1444              	.LVL83:
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1445              		.loc 1 1155 0
 1446 003e 2268     		ldr	r2, [r4]
 1447 0040 5368     		ldr	r3, [r2, #4]
 1448 0042 23F08063 		bic	r3, r3, #67108864
 1449 0046 5360     		str	r3, [r2, #4]
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1450              		.loc 1 1158 0
 1451 0048 226C     		ldr	r2, [r4, #64]
 1452 004a 044B     		ldr	r3, .L137
 1453 004c 1340     		ands	r3, r3, r2
 1454 004e 43F00103 		orr	r3, r3, #1
 1455 0052 2364     		str	r3, [r4, #64]
 1456 0054 E8E7     		b	.L129
 1457              	.LVL84:
 1458              	.L130:
 1459              	.LCFI19:
 1460              		.cfi_def_cfa_offset 0
 1461              		.cfi_restore 4
 1462              		.cfi_restore 14
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 1463              		.loc 1 1138 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 58


 1464 0056 0220     		movs	r0, #2
 1465              	.LVL85:
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1466              		.loc 1 1168 0
 1467 0058 7047     		bx	lr
 1468              	.L138:
 1469 005a 00BF     		.align	2
 1470              	.L137:
 1471 005c FEEEFFFF 		.word	-4354
 1472              		.cfi_endproc
 1473              	.LFE150:
 1475              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1476              		.align	1
 1477              		.global	HAL_ADC_GetValue
 1478              		.syntax unified
 1479              		.thumb
 1480              		.thumb_func
 1481              		.fpu fpv5-sp-d16
 1483              	HAL_ADC_GetValue:
 1484              	.LFB151:
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return the selected ADC converted value */ 
 1485              		.loc 1 1177 0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 0
 1488              		@ frame_needed = 0, uses_anonymous_args = 0
 1489              		@ link register save eliminated.
 1490              	.LVL86:
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1491              		.loc 1 1179 0
 1492 0000 0368     		ldr	r3, [r0]
 1493 0002 D86C     		ldr	r0, [r3, #76]
 1494              	.LVL87:
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1495              		.loc 1 1180 0
 1496 0004 7047     		bx	lr
 1497              		.cfi_endproc
 1498              	.LFE151:
 1500              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1501              		.align	1
 1502              		.weak	HAL_ADC_ConvCpltCallback
 1503              		.syntax unified
 1504              		.thumb
 1505              		.thumb_func
 1506              		.fpu fpv5-sp-d16
 1508              	HAL_ADC_ConvCpltCallback:
 1509              	.LFB152:
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1510              		.loc 1 1189 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 1514              		@ link register save eliminated.
 1515              	.LVL88:
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1516              		.loc 1 1195 0
 1517 0000 7047     		bx	lr
 1518              		.cfi_endproc
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 59


 1519              	.LFE152:
 1521              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1522              		.align	1
 1523              		.syntax unified
 1524              		.thumb
 1525              		.thumb_func
 1526              		.fpu fpv5-sp-d16
 1528              	ADC_DMAConvCplt:
 1529              	.LFB161:
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval None
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)   
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
 1530              		.loc 1 1593 0
 1531              		.cfi_startproc
 1532              		@ args = 0, pretend = 0, frame = 0
 1533              		@ frame_needed = 0, uses_anonymous_args = 0
 1534              	.LVL89:
 1535 0000 08B5     		push	{r3, lr}
 1536              	.LCFI20:
 1537              		.cfi_def_cfa_offset 8
 1538              		.cfi_offset 3, -8
 1539              		.cfi_offset 14, -4
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1540              		.loc 1 1595 0
 1541 0002 836B     		ldr	r3, [r0, #56]
 1542              	.LVL90:
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 1543              		.loc 1 1598 0
 1544 0004 1A6C     		ldr	r2, [r3, #64]
 1545 0006 12F0500F 		tst	r2, #80
 1546 000a 03D0     		beq	.L147
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Update ADC state machine */
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Note: On STM32F7, there is no independent flag of end of sequence.   */
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /*       of end of sequence.                                            */
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 60


1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       /* Set ADC state */
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Conversion complete callback */
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   else
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     /* Call DMA error callback */
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
 1547              		.loc 1 1635 0
 1548 000c 9B6B     		ldr	r3, [r3, #56]
 1549              	.LVL91:
 1550 000e DB6C     		ldr	r3, [r3, #76]
 1551 0010 9847     		blx	r3
 1552              	.LVL92:
 1553              	.L141:
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1554              		.loc 1 1637 0
 1555 0012 08BD     		pop	{r3, pc}
 1556              	.LVL93:
 1557              	.L147:
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1558              		.loc 1 1601 0
 1559 0014 1A6C     		ldr	r2, [r3, #64]
 1560 0016 42F40072 		orr	r2, r2, #512
 1561 001a 1A64     		str	r2, [r3, #64]
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1562              		.loc 1 1609 0
 1563 001c 1A68     		ldr	r2, [r3]
 1564 001e 9168     		ldr	r1, [r2, #8]
 1565 0020 11F0405F 		tst	r1, #805306368
 1566 0024 19D1     		bne	.L143
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1567              		.loc 1 1610 0 discriminator 1
 1568 0026 9969     		ldr	r1, [r3, #24]
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1569              		.loc 1 1609 0 discriminator 1
 1570 0028 B9B9     		cbnz	r1, .L143
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1571              		.loc 1 1611 0
 1572 002a D16A     		ldr	r1, [r2, #44]
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1573              		.loc 1 1610 0
 1574 002c 11F4700F 		tst	r1, #15728640
 1575 0030 03D0     		beq	.L144
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 61


1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 1576              		.loc 1 1612 0
 1577 0032 9168     		ldr	r1, [r2, #8]
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1578              		.loc 1 1611 0
 1579 0034 11F4806F 		tst	r1, #1024
 1580 0038 0FD1     		bne	.L143
 1581              	.L144:
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 1582              		.loc 1 1618 0
 1583 003a 5168     		ldr	r1, [r2, #4]
 1584 003c 21F02001 		bic	r1, r1, #32
 1585 0040 5160     		str	r1, [r2, #4]
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 1586              		.loc 1 1621 0
 1587 0042 1A6C     		ldr	r2, [r3, #64]
 1588 0044 22F48072 		bic	r2, r2, #256
 1589 0048 1A64     		str	r2, [r3, #64]
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 1590              		.loc 1 1623 0
 1591 004a 1A6C     		ldr	r2, [r3, #64]
 1592 004c 12F4805F 		tst	r2, #4096
 1593 0050 03D1     		bne	.L143
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 1594              		.loc 1 1625 0
 1595 0052 1A6C     		ldr	r2, [r3, #64]
 1596 0054 42F00102 		orr	r2, r2, #1
 1597 0058 1A64     		str	r2, [r3, #64]
 1598              	.L143:
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 1599              		.loc 1 1630 0
 1600 005a 1846     		mov	r0, r3
 1601              	.LVL94:
 1602 005c FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1603              	.LVL95:
 1604 0060 D7E7     		b	.L141
 1605              		.cfi_endproc
 1606              	.LFE161:
 1608              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1609              		.align	1
 1610              		.weak	HAL_ADC_ConvHalfCpltCallback
 1611              		.syntax unified
 1612              		.thumb
 1613              		.thumb_func
 1614              		.fpu fpv5-sp-d16
 1616              	HAL_ADC_ConvHalfCpltCallback:
 1617              	.LFB153:
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1618              		.loc 1 1204 0
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 0
 1621              		@ frame_needed = 0, uses_anonymous_args = 0
 1622              		@ link register save eliminated.
 1623              	.LVL96:
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1624              		.loc 1 1210 0
 1625 0000 7047     		bx	lr
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 62


 1626              		.cfi_endproc
 1627              	.LFE153:
 1629              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1630              		.align	1
 1631              		.syntax unified
 1632              		.thumb
 1633              		.thumb_func
 1634              		.fpu fpv5-sp-d16
 1636              	ADC_DMAHalfConvCplt:
 1637              	.LFB162:
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval None
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
 1638              		.loc 1 1646 0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 0
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 1642              	.LVL97:
 1643 0000 08B5     		push	{r3, lr}
 1644              	.LCFI21:
 1645              		.cfi_def_cfa_offset 8
 1646              		.cfi_offset 3, -8
 1647              		.cfi_offset 14, -4
 1648              	.LVL98:
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Conversion complete callback */
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc); 
 1649              		.loc 1 1649 0
 1650 0002 806B     		ldr	r0, [r0, #56]
 1651              	.LVL99:
 1652 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1653              	.LVL100:
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1654              		.loc 1 1650 0
 1655 0008 08BD     		pop	{r3, pc}
 1656              		.cfi_endproc
 1657              	.LFE162:
 1659              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1660              		.align	1
 1661              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1662              		.syntax unified
 1663              		.thumb
 1664              		.thumb_func
 1665              		.fpu fpv5-sp-d16
 1667              	HAL_ADC_LevelOutOfWindowCallback:
 1668              	.LFB154:
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1669              		.loc 1 1219 0
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 0
 1672              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 63


 1673              		@ link register save eliminated.
 1674              	.LVL101:
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1675              		.loc 1 1225 0
 1676 0000 7047     		bx	lr
 1677              		.cfi_endproc
 1678              	.LFE154:
 1680              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1681              		.align	1
 1682              		.weak	HAL_ADC_ErrorCallback
 1683              		.syntax unified
 1684              		.thumb
 1685              		.thumb_func
 1686              		.fpu fpv5-sp-d16
 1688              	HAL_ADC_ErrorCallback:
 1689              	.LFB155:
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1690              		.loc 1 1240 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694              		@ link register save eliminated.
 1695              	.LVL102:
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1696              		.loc 1 1246 0
 1697 0000 7047     		bx	lr
 1698              		.cfi_endproc
 1699              	.LFE155:
 1701              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1702              		.align	1
 1703              		.global	HAL_ADC_IRQHandler
 1704              		.syntax unified
 1705              		.thumb
 1706              		.thumb_func
 1707              		.fpu fpv5-sp-d16
 1709              	HAL_ADC_IRQHandler:
 1710              	.LFB148:
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   uint32_t tmp1 = 0, tmp2 = 0;
 1711              		.loc 1 867 0
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 0
 1714              		@ frame_needed = 0, uses_anonymous_args = 0
 1715              	.LVL103:
 1716 0000 38B5     		push	{r3, r4, r5, lr}
 1717              	.LCFI22:
 1718              		.cfi_def_cfa_offset 16
 1719              		.cfi_offset 3, -16
 1720              		.cfi_offset 4, -12
 1721              		.cfi_offset 5, -8
 1722              		.cfi_offset 14, -4
 1723 0002 0446     		mov	r4, r0
 1724              	.LVL104:
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC);
 1725              		.loc 1 875 0
 1726 0004 0168     		ldr	r1, [r0]
 1727 0006 0A68     		ldr	r2, [r1]
 1728 0008 C2F34002 		ubfx	r2, r2, #1, #1
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 64


 1729              	.LVL105:
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
 1730              		.loc 1 876 0
 1731 000c 4B68     		ldr	r3, [r1, #4]
 1732 000e C3F34013 		ubfx	r3, r3, #5, #1
 1733              	.LVL106:
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 1734              		.loc 1 878 0
 1735 0012 1A42     		tst	r2, r3
 1736 0014 2CD0     		beq	.L154
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 1737              		.loc 1 881 0
 1738 0016 036C     		ldr	r3, [r0, #64]
 1739              	.LVL107:
 1740 0018 13F0100F 		tst	r3, #16
 1741 001c 03D1     		bne	.L155
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 1742              		.loc 1 884 0
 1743 001e 036C     		ldr	r3, [r0, #64]
 1744 0020 43F40073 		orr	r3, r3, #512
 1745 0024 0364     		str	r3, [r0, #64]
 1746              	.L155:
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1747              		.loc 1 893 0
 1748 0026 8B68     		ldr	r3, [r1, #8]
 1749 0028 13F0405F 		tst	r3, #805306368
 1750 002c 19D1     		bne	.L156
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1751              		.loc 1 894 0 discriminator 1
 1752 002e A369     		ldr	r3, [r4, #24]
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1753              		.loc 1 893 0 discriminator 1
 1754 0030 BBB9     		cbnz	r3, .L156
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1755              		.loc 1 895 0
 1756 0032 CB6A     		ldr	r3, [r1, #44]
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1757              		.loc 1 894 0
 1758 0034 13F4700F 		tst	r3, #15728640
 1759 0038 03D0     		beq	.L157
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 1760              		.loc 1 896 0
 1761 003a 8B68     		ldr	r3, [r1, #8]
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1762              		.loc 1 895 0
 1763 003c 13F4806F 		tst	r3, #1024
 1764 0040 0FD1     		bne	.L156
 1765              	.L157:
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 1766              		.loc 1 902 0
 1767 0042 4B68     		ldr	r3, [r1, #4]
 1768 0044 23F02003 		bic	r3, r3, #32
 1769 0048 4B60     		str	r3, [r1, #4]
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 1770              		.loc 1 905 0
 1771 004a 236C     		ldr	r3, [r4, #64]
 1772 004c 23F48073 		bic	r3, r3, #256
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 65


 1773 0050 2364     		str	r3, [r4, #64]
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 1774              		.loc 1 907 0
 1775 0052 236C     		ldr	r3, [r4, #64]
 1776 0054 13F4805F 		tst	r3, #4096
 1777 0058 03D1     		bne	.L156
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 1778              		.loc 1 909 0
 1779 005a 236C     		ldr	r3, [r4, #64]
 1780 005c 43F00103 		orr	r3, r3, #1
 1781 0060 2364     		str	r3, [r4, #64]
 1782              	.L156:
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1783              		.loc 1 914 0
 1784 0062 2046     		mov	r0, r4
 1785              	.LVL108:
 1786 0064 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1787              	.LVL109:
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 1788              		.loc 1 917 0
 1789 0068 2368     		ldr	r3, [r4]
 1790 006a 6FF01202 		mvn	r2, #18
 1791 006e 1A60     		str	r2, [r3]
 1792              	.L154:
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC);                               
 1793              		.loc 1 920 0
 1794 0070 2368     		ldr	r3, [r4]
 1795 0072 1968     		ldr	r1, [r3]
 1796 0074 C1F38001 		ubfx	r1, r1, #2, #1
 1797              	.LVL110:
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
 1798              		.loc 1 921 0
 1799 0078 5A68     		ldr	r2, [r3, #4]
 1800 007a C2F3C012 		ubfx	r2, r2, #7, #1
 1801              	.LVL111:
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 1802              		.loc 1 923 0
 1803 007e 1142     		tst	r1, r2
 1804 0080 34D0     		beq	.L158
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 1805              		.loc 1 926 0
 1806 0082 226C     		ldr	r2, [r4, #64]
 1807              	.LVL112:
 1808 0084 12F0100F 		tst	r2, #16
 1809 0088 03D1     		bne	.L159
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 1810              		.loc 1 929 0
 1811 008a 226C     		ldr	r2, [r4, #64]
 1812 008c 42F40052 		orr	r2, r2, #8192
 1813 0090 2264     		str	r2, [r4, #64]
 1814              	.L159:
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL) ||
 1815              		.loc 1 936 0
 1816 0092 9A68     		ldr	r2, [r3, #8]
 1817 0094 12F4401F 		tst	r2, #3145728
 1818 0098 21D1     		bne	.L160
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)) &&
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 66


 1819              		.loc 1 937 0 discriminator 1
 1820 009a 9A6B     		ldr	r2, [r3, #56]
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL) ||
 1821              		.loc 1 936 0 discriminator 1
 1822 009c 12F4401F 		tst	r2, #3145728
 1823 00a0 03D0     		beq	.L161
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1824              		.loc 1 938 0
 1825 00a2 9A68     		ldr	r2, [r3, #8]
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)) &&
 1826              		.loc 1 937 0
 1827 00a4 12F4806F 		tst	r2, #1024
 1828 00a8 19D1     		bne	.L160
 1829              	.L161:
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (ADC_IS_SOFTWARE_START_REGULAR(hadc) &&
 1830              		.loc 1 939 0
 1831 00aa 5A68     		ldr	r2, [r3, #4]
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1832              		.loc 1 938 0
 1833 00ac 12F4806F 		tst	r2, #1024
 1834 00b0 15D1     		bne	.L160
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE))))
 1835              		.loc 1 940 0
 1836 00b2 9A68     		ldr	r2, [r3, #8]
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (ADC_IS_SOFTWARE_START_REGULAR(hadc) &&
 1837              		.loc 1 939 0
 1838 00b4 12F0405F 		tst	r2, #805306368
 1839 00b8 11D1     		bne	.L160
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 1840              		.loc 1 941 0
 1841 00ba A269     		ldr	r2, [r4, #24]
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE))))
 1842              		.loc 1 940 0
 1843 00bc 7AB9     		cbnz	r2, .L160
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 1844              		.loc 1 944 0
 1845 00be 5A68     		ldr	r2, [r3, #4]
 1846 00c0 22F08002 		bic	r2, r2, #128
 1847 00c4 5A60     		str	r2, [r3, #4]
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1848              		.loc 1 947 0
 1849 00c6 236C     		ldr	r3, [r4, #64]
 1850 00c8 23F48053 		bic	r3, r3, #4096
 1851 00cc 2364     		str	r3, [r4, #64]
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       { 
 1852              		.loc 1 949 0
 1853 00ce 236C     		ldr	r3, [r4, #64]
 1854 00d0 13F4807F 		tst	r3, #256
 1855 00d4 03D1     		bne	.L160
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 1856              		.loc 1 951 0
 1857 00d6 236C     		ldr	r3, [r4, #64]
 1858 00d8 43F00103 		orr	r3, r3, #1
 1859 00dc 2364     		str	r3, [r4, #64]
 1860              	.L160:
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1861              		.loc 1 956 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 67


 1862 00de 2046     		mov	r0, r4
 1863 00e0 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1864              	.LVL113:
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 1865              		.loc 1 959 0
 1866 00e4 2368     		ldr	r3, [r4]
 1867 00e6 6FF00C02 		mvn	r2, #12
 1868 00ea 1A60     		str	r2, [r3]
 1869              	.L158:
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD);                          
 1870              		.loc 1 962 0
 1871 00ec 2268     		ldr	r2, [r4]
 1872 00ee 1168     		ldr	r1, [r2]
 1873              	.LVL114:
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check Analog watchdog flag */
 1874              		.loc 1 963 0
 1875 00f0 5368     		ldr	r3, [r2, #4]
 1876 00f2 C3F38013 		ubfx	r3, r3, #6, #1
 1877              	.LVL115:
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 1878              		.loc 1 965 0
 1879 00f6 1942     		tst	r1, r3
 1880 00f8 03D0     		beq	.L162
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 1881              		.loc 1 967 0
 1882 00fa 1368     		ldr	r3, [r2]
 1883              	.LVL116:
 1884 00fc 13F0010F 		tst	r3, #1
 1885 0100 09D1     		bne	.L165
 1886              	.LVL117:
 1887              	.L162:
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR);
 1888              		.loc 1 980 0
 1889 0102 2168     		ldr	r1, [r4]
 1890 0104 0A68     		ldr	r2, [r1]
 1891 0106 C2F34012 		ubfx	r2, r2, #5, #1
 1892              	.LVL118:
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Check Overrun flag */
 1893              		.loc 1 981 0
 1894 010a 4B68     		ldr	r3, [r1, #4]
 1895 010c C3F38063 		ubfx	r3, r3, #26, #1
 1896              	.LVL119:
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 1897              		.loc 1 983 0
 1898 0110 1A42     		tst	r2, r3
 1899 0112 0CD1     		bne	.L166
 1900              	.LVL120:
 1901              	.L153:
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1902              		.loc 1 1001 0
 1903 0114 38BD     		pop	{r3, r4, r5, pc}
 1904              	.LVL121:
 1905              	.L165:
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 1906              		.loc 1 970 0
 1907 0116 236C     		ldr	r3, [r4, #64]
 1908 0118 43F48033 		orr	r3, r3, #65536
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 68


 1909 011c 2364     		str	r3, [r4, #64]
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       
 1910              		.loc 1 973 0
 1911 011e 2046     		mov	r0, r4
 1912 0120 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1913              	.LVL122:
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     }
 1914              		.loc 1 976 0
 1915 0124 2368     		ldr	r3, [r4]
 1916 0126 6FF00102 		mvn	r2, #1
 1917 012a 1A60     		str	r2, [r3]
 1918 012c E9E7     		b	.L162
 1919              	.LVL123:
 1920              	.L166:
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1921              		.loc 1 990 0
 1922 012e 636C     		ldr	r3, [r4, #68]
 1923              	.LVL124:
 1924 0130 43F00203 		orr	r3, r3, #2
 1925 0134 6364     		str	r3, [r4, #68]
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1926              		.loc 1 993 0
 1927 0136 6FF02005 		mvn	r5, #32
 1928 013a 0D60     		str	r5, [r1]
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 1929              		.loc 1 996 0
 1930 013c 2046     		mov	r0, r4
 1931 013e FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1932              	.LVL125:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 1933              		.loc 1 999 0
 1934 0142 2368     		ldr	r3, [r4]
 1935 0144 1D60     		str	r5, [r3]
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 1936              		.loc 1 1001 0
 1937 0146 E5E7     		b	.L153
 1938              		.cfi_endproc
 1939              	.LFE148:
 1941              		.section	.text.ADC_DMAError,"ax",%progbits
 1942              		.align	1
 1943              		.syntax unified
 1944              		.thumb
 1945              		.thumb_func
 1946              		.fpu fpv5-sp-d16
 1948              	ADC_DMAError:
 1949              	.LFB163:
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** /**
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @brief  DMA error callback 
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   * @retval None
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   */
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** {
 1950              		.loc 1 1659 0
 1951              		.cfi_startproc
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 69


 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
 1954              	.LVL126:
 1955 0000 08B5     		push	{r3, lr}
 1956              	.LCFI23:
 1957              		.cfi_def_cfa_offset 8
 1958              		.cfi_offset 3, -8
 1959              		.cfi_offset 14, -4
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1960              		.loc 1 1660 0
 1961 0002 806B     		ldr	r0, [r0, #56]
 1962              	.LVL127:
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->State= HAL_ADC_STATE_ERROR_DMA;
 1963              		.loc 1 1661 0
 1964 0004 4023     		movs	r3, #64
 1965 0006 0364     		str	r3, [r0, #64]
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Set ADC error code to DMA error */
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 1966              		.loc 1 1663 0
 1967 0008 436C     		ldr	r3, [r0, #68]
 1968 000a 43F00403 		orr	r3, r3, #4
 1969 000e 4364     		str	r3, [r0, #68]
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc); 
 1970              		.loc 1 1664 0
 1971 0010 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1972              	.LVL128:
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 1973              		.loc 1 1665 0
 1974 0014 08BD     		pop	{r3, pc}
 1975              		.cfi_endproc
 1976              	.LFE163:
 1978              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1979              		.align	1
 1980              		.global	HAL_ADC_ConfigChannel
 1981              		.syntax unified
 1982              		.thumb
 1983              		.thumb_func
 1984              		.fpu fpv5-sp-d16
 1986              	HAL_ADC_ConfigChannel:
 1987              	.LFB156:
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   __IO uint32_t counter = 0;
 1988              		.loc 1 1278 0
 1989              		.cfi_startproc
 1990              		@ args = 0, pretend = 0, frame = 8
 1991              		@ frame_needed = 0, uses_anonymous_args = 0
 1992              		@ link register save eliminated.
 1993              	.LVL129:
 1994 0000 30B4     		push	{r4, r5}
 1995              	.LCFI24:
 1996              		.cfi_def_cfa_offset 8
 1997              		.cfi_offset 4, -8
 1998              		.cfi_offset 5, -4
 1999 0002 82B0     		sub	sp, sp, #8
 2000              	.LCFI25:
 2001              		.cfi_def_cfa_offset 16
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 2002              		.loc 1 1279 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 70


 2003 0004 0023     		movs	r3, #0
 2004 0006 0193     		str	r3, [sp, #4]
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 			
 2005              		.loc 1 1287 0
 2006 0008 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2007 000c 012B     		cmp	r3, #1
 2008 000e 00F0C080 		beq	.L181
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 			
 2009              		.loc 1 1287 0 is_stmt 0 discriminator 2
 2010 0012 0123     		movs	r3, #1
 2011 0014 80F83C30 		strb	r3, [r0, #60]
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 	{
 2012              		.loc 1 1290 0 is_stmt 1 discriminator 2
 2013 0018 0B68     		ldr	r3, [r1]
 2014 001a 092B     		cmp	r3, #9
 2015 001c 22D9     		bls	.L171
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 2016              		.loc 1 1293 0
 2017 001e 0568     		ldr	r5, [r0]
 2018 0020 EA68     		ldr	r2, [r5, #12]
 2019 0022 9BB2     		uxth	r3, r3
 2020 0024 03EB4303 		add	r3, r3, r3, lsl #1
 2021 0028 1E3B     		subs	r3, r3, #30
 2022 002a 0724     		movs	r4, #7
 2023 002c 04FA03F3 		lsl	r3, r4, r3
 2024 0030 22EA0303 		bic	r3, r2, r3
 2025 0034 EB60     		str	r3, [r5, #12]
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 		{
 2026              		.loc 1 1295 0
 2027 0036 0B68     		ldr	r3, [r1]
 2028 0038 574A     		ldr	r2, .L186
 2029 003a 9342     		cmp	r3, r2
 2030 003c 0BD0     		beq	.L183
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 	  }
 2031              		.loc 1 1303 0
 2032 003e 0568     		ldr	r5, [r0]
 2033 0040 EA68     		ldr	r2, [r5, #12]
 2034 0042 8C68     		ldr	r4, [r1, #8]
 2035 0044 9BB2     		uxth	r3, r3
 2036 0046 03EB4303 		add	r3, r3, r3, lsl #1
 2037 004a 1E3B     		subs	r3, r3, #30
 2038 004c 04FA03F3 		lsl	r3, r4, r3
 2039 0050 1343     		orrs	r3, r3, r2
 2040 0052 EB60     		str	r3, [r5, #12]
 2041 0054 1BE0     		b	.L173
 2042              	.L183:
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 		}
 2043              		.loc 1 1298 0
 2044 0056 0268     		ldr	r2, [r0]
 2045 0058 D368     		ldr	r3, [r2, #12]
 2046 005a 8C68     		ldr	r4, [r1, #8]
 2047 005c 43EA0463 		orr	r3, r3, r4, lsl #24
 2048 0060 D360     		str	r3, [r2, #12]
 2049 0062 14E0     		b	.L173
 2050              	.L171:
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 2051              		.loc 1 1309 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 71


 2052 0064 0568     		ldr	r5, [r0]
 2053 0066 2A69     		ldr	r2, [r5, #16]
 2054 0068 9BB2     		uxth	r3, r3
 2055 006a 03EB4303 		add	r3, r3, r3, lsl #1
 2056 006e 0724     		movs	r4, #7
 2057 0070 04FA03F3 		lsl	r3, r4, r3
 2058 0074 22EA0303 		bic	r3, r2, r3
 2059 0078 2B61     		str	r3, [r5, #16]
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 2060              		.loc 1 1312 0
 2061 007a 0568     		ldr	r5, [r0]
 2062 007c 2A69     		ldr	r2, [r5, #16]
 2063 007e 8C68     		ldr	r4, [r1, #8]
 2064 0080 0B88     		ldrh	r3, [r1]
 2065 0082 03EB4303 		add	r3, r3, r3, lsl #1
 2066 0086 04FA03F3 		lsl	r3, r4, r3
 2067 008a 1343     		orrs	r3, r3, r2
 2068 008c 2B61     		str	r3, [r5, #16]
 2069              	.L173:
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 2070              		.loc 1 1316 0
 2071 008e 4B68     		ldr	r3, [r1, #4]
 2072 0090 062B     		cmp	r3, #6
 2073 0092 24D8     		bhi	.L174
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 2074              		.loc 1 1319 0
 2075 0094 0568     		ldr	r5, [r0]
 2076 0096 6A6B     		ldr	r2, [r5, #52]
 2077 0098 03EB8303 		add	r3, r3, r3, lsl #2
 2078 009c 053B     		subs	r3, r3, #5
 2079 009e 1F24     		movs	r4, #31
 2080 00a0 04FA03F3 		lsl	r3, r4, r3
 2081 00a4 22EA0303 		bic	r3, r2, r3
 2082 00a8 6B63     		str	r3, [r5, #52]
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 2083              		.loc 1 1322 0
 2084 00aa 0568     		ldr	r5, [r0]
 2085 00ac 6A6B     		ldr	r2, [r5, #52]
 2086 00ae 4B68     		ldr	r3, [r1, #4]
 2087 00b0 03EB8303 		add	r3, r3, r3, lsl #2
 2088 00b4 053B     		subs	r3, r3, #5
 2089 00b6 0C88     		ldrh	r4, [r1]
 2090 00b8 04FA03F3 		lsl	r3, r4, r3
 2091 00bc 1343     		orrs	r3, r3, r2
 2092 00be 6B63     		str	r3, [r5, #52]
 2093              	.L175:
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 2094              		.loc 1 1344 0
 2095 00c0 0268     		ldr	r2, [r0]
 2096 00c2 364B     		ldr	r3, .L186+4
 2097 00c4 9A42     		cmp	r2, r3
 2098 00c6 3AD0     		beq	.L184
 2099              	.L177:
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 2100              		.loc 1 1351 0
 2101 00c8 0268     		ldr	r2, [r0]
 2102 00ca 344B     		ldr	r3, .L186+4
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 72


 2103 00cc 9A42     		cmp	r2, r3
 2104 00ce 3FD0     		beq	.L185
 2105              	.L178:
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 2106              		.loc 1 1369 0
 2107 00d0 0023     		movs	r3, #0
 2108 00d2 80F83C30 		strb	r3, [r0, #60]
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 2109              		.loc 1 1372 0
 2110 00d6 1846     		mov	r0, r3
 2111              	.LVL130:
 2112              	.L170:
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 2113              		.loc 1 1373 0
 2114 00d8 02B0     		add	sp, sp, #8
 2115              	.LCFI26:
 2116              		.cfi_remember_state
 2117              		.cfi_def_cfa_offset 8
 2118              		@ sp needed
 2119 00da 30BC     		pop	{r4, r5}
 2120              	.LCFI27:
 2121              		.cfi_restore 5
 2122              		.cfi_restore 4
 2123              		.cfi_def_cfa_offset 0
 2124 00dc 7047     		bx	lr
 2125              	.LVL131:
 2126              	.L174:
 2127              	.LCFI28:
 2128              		.cfi_restore_state
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 2129              		.loc 1 1325 0
 2130 00de 0C2B     		cmp	r3, #12
 2131 00e0 16D8     		bhi	.L176
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
 2132              		.loc 1 1328 0
 2133 00e2 0568     		ldr	r5, [r0]
 2134 00e4 2A6B     		ldr	r2, [r5, #48]
 2135 00e6 03EB8303 		add	r3, r3, r3, lsl #2
 2136 00ea 233B     		subs	r3, r3, #35
 2137 00ec 1F24     		movs	r4, #31
 2138 00ee 04FA03F3 		lsl	r3, r4, r3
 2139 00f2 22EA0303 		bic	r3, r2, r3
 2140 00f6 2B63     		str	r3, [r5, #48]
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 2141              		.loc 1 1331 0
 2142 00f8 0568     		ldr	r5, [r0]
 2143 00fa 2A6B     		ldr	r2, [r5, #48]
 2144 00fc 4B68     		ldr	r3, [r1, #4]
 2145 00fe 03EB8303 		add	r3, r3, r3, lsl #2
 2146 0102 233B     		subs	r3, r3, #35
 2147 0104 0C88     		ldrh	r4, [r1]
 2148 0106 04FA03F3 		lsl	r3, r4, r3
 2149 010a 1343     		orrs	r3, r3, r2
 2150 010c 2B63     		str	r3, [r5, #48]
 2151 010e D7E7     		b	.L175
 2152              	.L176:
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 73


 2153              		.loc 1 1337 0
 2154 0110 0568     		ldr	r5, [r0]
 2155 0112 EA6A     		ldr	r2, [r5, #44]
 2156 0114 03EB8303 		add	r3, r3, r3, lsl #2
 2157 0118 413B     		subs	r3, r3, #65
 2158 011a 1F24     		movs	r4, #31
 2159 011c 04FA03F3 		lsl	r3, r4, r3
 2160 0120 22EA0303 		bic	r3, r2, r3
 2161 0124 EB62     		str	r3, [r5, #44]
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 2162              		.loc 1 1340 0
 2163 0126 0568     		ldr	r5, [r0]
 2164 0128 EA6A     		ldr	r2, [r5, #44]
 2165 012a 4B68     		ldr	r3, [r1, #4]
 2166 012c 03EB8303 		add	r3, r3, r3, lsl #2
 2167 0130 413B     		subs	r3, r3, #65
 2168 0132 0C88     		ldrh	r4, [r1]
 2169 0134 04FA03F3 		lsl	r3, r4, r3
 2170 0138 1343     		orrs	r3, r3, r2
 2171 013a EB62     		str	r3, [r5, #44]
 2172 013c C0E7     		b	.L175
 2173              	.L184:
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 2174              		.loc 1 1344 0 discriminator 1
 2175 013e 0B68     		ldr	r3, [r1]
 2176 0140 122B     		cmp	r3, #18
 2177 0142 C1D1     		bne	.L177
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 2178              		.loc 1 1347 0
 2179 0144 164A     		ldr	r2, .L186+8
 2180 0146 5368     		ldr	r3, [r2, #4]
 2181 0148 43F48003 		orr	r3, r3, #4194304
 2182 014c 5360     		str	r3, [r2, #4]
 2183 014e BBE7     		b	.L177
 2184              	.L185:
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 2185              		.loc 1 1351 0 discriminator 1
 2186 0150 0B68     		ldr	r3, [r1]
 2187 0152 114A     		ldr	r2, .L186
 2188 0154 112B     		cmp	r3, #17
 2189 0156 18BF     		it	ne
 2190 0158 9342     		cmpne	r3, r2
 2191 015a B9D1     		bne	.L178
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 2192              		.loc 1 1354 0
 2193 015c 104A     		ldr	r2, .L186+8
 2194 015e 5368     		ldr	r3, [r2, #4]
 2195 0160 43F40003 		orr	r3, r3, #8388608
 2196 0164 5360     		str	r3, [r2, #4]
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****     {
 2197              		.loc 1 1356 0
 2198 0166 0A68     		ldr	r2, [r1]
 2199 0168 0B4B     		ldr	r3, .L186
 2200 016a 9A42     		cmp	r2, r3
 2201 016c B0D1     		bne	.L178
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       while(counter != 0)
 2202              		.loc 1 1360 0
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 74


 2203 016e 0D4B     		ldr	r3, .L186+12
 2204 0170 1B68     		ldr	r3, [r3]
 2205 0172 0D4A     		ldr	r2, .L186+16
 2206 0174 A2FB0323 		umull	r2, r3, r2, r3
 2207 0178 9B0C     		lsrs	r3, r3, #18
 2208 017a 03EB8303 		add	r3, r3, r3, lsl #2
 2209 017e 5A00     		lsls	r2, r3, #1
 2210 0180 0192     		str	r2, [sp, #4]
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 2211              		.loc 1 1361 0
 2212 0182 02E0     		b	.L179
 2213              	.L180:
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       }
 2214              		.loc 1 1363 0
 2215 0184 019B     		ldr	r3, [sp, #4]
 2216 0186 013B     		subs	r3, r3, #1
 2217 0188 0193     		str	r3, [sp, #4]
 2218              	.L179:
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****       {
 2219              		.loc 1 1361 0
 2220 018a 019B     		ldr	r3, [sp, #4]
 2221 018c 002B     		cmp	r3, #0
 2222 018e F9D1     		bne	.L180
 2223 0190 9EE7     		b	.L178
 2224              	.L181:
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 			
 2225              		.loc 1 1287 0
 2226 0192 0220     		movs	r0, #2
 2227              	.LVL132:
 2228 0194 A0E7     		b	.L170
 2229              	.L187:
 2230 0196 00BF     		.align	2
 2231              	.L186:
 2232 0198 12000010 		.word	268435474
 2233 019c 00200140 		.word	1073815552
 2234 01a0 00230140 		.word	1073816320
 2235 01a4 00000000 		.word	SystemCoreClock
 2236 01a8 83DE1B43 		.word	1125899907
 2237              		.cfi_endproc
 2238              	.LFE156:
 2240              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2241              		.align	1
 2242              		.global	HAL_ADC_AnalogWDGConfig
 2243              		.syntax unified
 2244              		.thumb
 2245              		.thumb_func
 2246              		.fpu fpv5-sp-d16
 2248              	HAL_ADC_AnalogWDGConfig:
 2249              	.LFB157:
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
 2250              		.loc 1 1392 0
 2251              		.cfi_startproc
 2252              		@ args = 0, pretend = 0, frame = 0
 2253              		@ frame_needed = 0, uses_anonymous_args = 0
 2254              		@ link register save eliminated.
 2255              	.LVL133:
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 75


 2256              		.loc 1 1409 0
 2257 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2258 0004 012B     		cmp	r3, #1
 2259 0006 32D0     		beq	.L192
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
 2260              		.loc 1 1392 0 discriminator 2
 2261 0008 10B4     		push	{r4}
 2262              	.LCFI29:
 2263              		.cfi_def_cfa_offset 4
 2264              		.cfi_offset 4, -4
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 2265              		.loc 1 1409 0 discriminator 2
 2266 000a 0123     		movs	r3, #1
 2267 000c 80F83C30 		strb	r3, [r0, #60]
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   {
 2268              		.loc 1 1411 0 discriminator 2
 2269 0010 0B69     		ldr	r3, [r1, #16]
 2270 0012 012B     		cmp	r3, #1
 2271 0014 25D0     		beq	.L197
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 2272              		.loc 1 1419 0
 2273 0016 0268     		ldr	r2, [r0]
 2274 0018 5368     		ldr	r3, [r2, #4]
 2275 001a 23F04003 		bic	r3, r3, #64
 2276 001e 5360     		str	r3, [r2, #4]
 2277              	.L191:
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 2278              		.loc 1 1423 0
 2279 0020 0268     		ldr	r2, [r0]
 2280 0022 5468     		ldr	r4, [r2, #4]
 2281 0024 134B     		ldr	r3, .L198
 2282 0026 2340     		ands	r3, r3, r4
 2283 0028 5360     		str	r3, [r2, #4]
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 2284              		.loc 1 1426 0
 2285 002a 0268     		ldr	r2, [r0]
 2286 002c 5368     		ldr	r3, [r2, #4]
 2287 002e 0C68     		ldr	r4, [r1]
 2288 0030 2343     		orrs	r3, r3, r4
 2289 0032 5360     		str	r3, [r2, #4]
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 2290              		.loc 1 1429 0
 2291 0034 0368     		ldr	r3, [r0]
 2292 0036 4A68     		ldr	r2, [r1, #4]
 2293 0038 5A62     		str	r2, [r3, #36]
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 2294              		.loc 1 1432 0
 2295 003a 0368     		ldr	r3, [r0]
 2296 003c 8A68     		ldr	r2, [r1, #8]
 2297 003e 9A62     		str	r2, [r3, #40]
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 2298              		.loc 1 1435 0
 2299 0040 0268     		ldr	r2, [r0]
 2300 0042 5368     		ldr	r3, [r2, #4]
 2301 0044 23F01F03 		bic	r3, r3, #31
 2302 0048 5360     		str	r3, [r2, #4]
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 76


 2303              		.loc 1 1438 0
 2304 004a 0268     		ldr	r2, [r0]
 2305 004c 5468     		ldr	r4, [r2, #4]
 2306 004e 8B89     		ldrh	r3, [r1, #12]
 2307 0050 2343     		orrs	r3, r3, r4
 2308 0052 5360     		str	r3, [r2, #4]
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 2309              		.loc 1 1441 0
 2310 0054 0023     		movs	r3, #0
 2311 0056 80F83C30 		strb	r3, [r0, #60]
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 2312              		.loc 1 1444 0
 2313 005a 1846     		mov	r0, r3
 2314              	.LVL134:
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 2315              		.loc 1 1445 0
 2316 005c 5DF8044B 		ldr	r4, [sp], #4
 2317              	.LCFI30:
 2318              		.cfi_remember_state
 2319              		.cfi_restore 4
 2320              		.cfi_def_cfa_offset 0
 2321 0060 7047     		bx	lr
 2322              	.LVL135:
 2323              	.L197:
 2324              	.LCFI31:
 2325              		.cfi_restore_state
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   }
 2326              		.loc 1 1414 0
 2327 0062 0268     		ldr	r2, [r0]
 2328 0064 5368     		ldr	r3, [r2, #4]
 2329 0066 43F04003 		orr	r3, r3, #64
 2330 006a 5360     		str	r3, [r2, #4]
 2331 006c D8E7     		b	.L191
 2332              	.L192:
 2333              	.LCFI32:
 2334              		.cfi_def_cfa_offset 0
 2335              		.cfi_restore 4
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   
 2336              		.loc 1 1409 0
 2337 006e 0220     		movs	r0, #2
 2338              	.LVL136:
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 2339              		.loc 1 1445 0
 2340 0070 7047     		bx	lr
 2341              	.L199:
 2342 0072 00BF     		.align	2
 2343              	.L198:
 2344 0074 FFFD3FFF 		.word	-12583425
 2345              		.cfi_endproc
 2346              	.LFE157:
 2348              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2349              		.align	1
 2350              		.global	HAL_ADC_GetState
 2351              		.syntax unified
 2352              		.thumb
 2353              		.thumb_func
 2354              		.fpu fpv5-sp-d16
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 77


 2356              	HAL_ADC_GetState:
 2357              	.LFB158:
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   /* Return ADC state */
 2358              		.loc 1 1474 0
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 0
 2361              		@ frame_needed = 0, uses_anonymous_args = 0
 2362              		@ link register save eliminated.
 2363              	.LVL137:
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 2364              		.loc 1 1476 0
 2365 0000 006C     		ldr	r0, [r0, #64]
 2366              	.LVL138:
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 2367              		.loc 1 1477 0
 2368 0002 7047     		bx	lr
 2369              		.cfi_endproc
 2370              	.LFE158:
 2372              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2373              		.align	1
 2374              		.global	HAL_ADC_GetError
 2375              		.syntax unified
 2376              		.thumb
 2377              		.thumb_func
 2378              		.fpu fpv5-sp-d16
 2380              	HAL_ADC_GetError:
 2381              	.LFB159:
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c ****   return hadc->ErrorCode;
 2382              		.loc 1 1486 0
 2383              		.cfi_startproc
 2384              		@ args = 0, pretend = 0, frame = 0
 2385              		@ frame_needed = 0, uses_anonymous_args = 0
 2386              		@ link register save eliminated.
 2387              	.LVL139:
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** }
 2388              		.loc 1 1487 0
 2389 0000 406C     		ldr	r0, [r0, #68]
 2390              	.LVL140:
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c **** 
 2391              		.loc 1 1488 0
 2392 0002 7047     		bx	lr
 2393              		.cfi_endproc
 2394              	.LFE159:
 2396              		.text
 2397              	.Letext0:
 2398              		.file 2 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\machine\\_default
 2399              		.file 3 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 2400              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 2401              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 2402              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 2403              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2404              		.file 8 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 2405              		.file 9 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 2406              		.file 10 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\
 2407              		.file 11 "c:\\program files (x86)\\gnu\\7_2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 2408              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2409              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 78


 2410              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 2411              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc_ex.h"
 2412              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 79


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_adc.c
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:18     .text.ADC_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:24     .text.ADC_Init:00000000 ADC_Init
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:195    .text.ADC_Init:00000128 $d
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:201    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:208    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:222    .text.HAL_ADC_Init:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:229    .text.HAL_ADC_Init:00000000 HAL_ADC_Init
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:307    .text.HAL_ADC_Init:00000050 $d
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:312    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:319    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:333    .text.HAL_ADC_DeInit:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:340    .text.HAL_ADC_DeInit:00000000 HAL_ADC_DeInit
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:403    .text.HAL_ADC_Start:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:410    .text.HAL_ADC_Start:00000000 HAL_ADC_Start
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:580    .text.HAL_ADC_Start:000000e4 $d
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:589    .text.HAL_ADC_Stop:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:596    .text.HAL_ADC_Stop:00000000 HAL_ADC_Stop
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:645    .text.HAL_ADC_Stop:0000003c $d
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:650    .text.HAL_ADC_PollForConversion:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:657    .text.HAL_ADC_PollForConversion:00000000 HAL_ADC_PollForConversion
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:808    .text.HAL_ADC_PollForEvent:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:815    .text.HAL_ADC_PollForEvent:00000000 HAL_ADC_PollForEvent
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:904    .text.HAL_ADC_Start_IT:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:911    .text.HAL_ADC_Start_IT:00000000 HAL_ADC_Start_IT
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1087   .text.HAL_ADC_Start_IT:000000f0 $d
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1097   .text.HAL_ADC_Stop_IT:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1104   .text.HAL_ADC_Stop_IT:00000000 HAL_ADC_Stop_IT
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1158   .text.HAL_ADC_Stop_IT:00000044 $d
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1164   .text.HAL_ADC_Start_DMA:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1171   .text.HAL_ADC_Start_DMA:00000000 HAL_ADC_Start_DMA
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1375   .text.HAL_ADC_Start_DMA:00000120 $d
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1528   .text.ADC_DMAConvCplt:00000000 ADC_DMAConvCplt
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1636   .text.ADC_DMAHalfConvCplt:00000000 ADC_DMAHalfConvCplt
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1948   .text.ADC_DMAError:00000000 ADC_DMAError
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1387   .text.HAL_ADC_Stop_DMA:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1394   .text.HAL_ADC_Stop_DMA:00000000 HAL_ADC_Stop_DMA
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1471   .text.HAL_ADC_Stop_DMA:0000005c $d
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1476   .text.HAL_ADC_GetValue:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1483   .text.HAL_ADC_GetValue:00000000 HAL_ADC_GetValue
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1501   .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1508   .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1522   .text.ADC_DMAConvCplt:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1609   .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1616   .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1630   .text.ADC_DMAHalfConvCplt:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1660   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1667   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 HAL_ADC_LevelOutOfWindowCallback
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1681   .text.HAL_ADC_ErrorCallback:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1688   .text.HAL_ADC_ErrorCallback:00000000 HAL_ADC_ErrorCallback
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1702   .text.HAL_ADC_IRQHandler:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1709   .text.HAL_ADC_IRQHandler:00000000 HAL_ADC_IRQHandler
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1942   .text.ADC_DMAError:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1979   .text.HAL_ADC_ConfigChannel:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:1986   .text.HAL_ADC_ConfigChannel:00000000 HAL_ADC_ConfigChannel
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:2232   .text.HAL_ADC_ConfigChannel:00000198 $d
ARM GAS  C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s 			page 80


C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:2241   .text.HAL_ADC_AnalogWDGConfig:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:2248   .text.HAL_ADC_AnalogWDGConfig:00000000 HAL_ADC_AnalogWDGConfig
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:2344   .text.HAL_ADC_AnalogWDGConfig:00000074 $d
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:2349   .text.HAL_ADC_GetState:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:2356   .text.HAL_ADC_GetState:00000000 HAL_ADC_GetState
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:2373   .text.HAL_ADC_GetError:00000000 $t
C:\Users\Patryk\AppData\Local\Temp\ccQtf09Z.s:2380   .text.HAL_ADC_GetError:00000000 HAL_ADC_GetError

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_ADCEx_InjectedConvCpltCallback
